|lab8
HEX0[0] <= triple_seg7:hex_display.HEX0[0]
HEX0[1] <= triple_seg7:hex_display.HEX0[1]
HEX0[2] <= triple_seg7:hex_display.HEX0[2]
HEX0[3] <= triple_seg7:hex_display.HEX0[3]
HEX0[4] <= triple_seg7:hex_display.HEX0[4]
HEX0[5] <= triple_seg7:hex_display.HEX0[5]
HEX0[6] <= triple_seg7:hex_display.HEX0[6]
HEX1[0] <= triple_seg7:hex_display.HEX1[0]
HEX1[1] <= triple_seg7:hex_display.HEX1[1]
HEX1[2] <= triple_seg7:hex_display.HEX1[2]
HEX1[3] <= triple_seg7:hex_display.HEX1[3]
HEX1[4] <= triple_seg7:hex_display.HEX1[4]
HEX1[5] <= triple_seg7:hex_display.HEX1[5]
HEX1[6] <= triple_seg7:hex_display.HEX1[6]
HEX2[0] <= triple_seg7:hex_display.HEX2[0]
HEX2[1] <= triple_seg7:hex_display.HEX2[1]
HEX2[2] <= triple_seg7:hex_display.HEX2[2]
HEX2[3] <= triple_seg7:hex_display.HEX2[3]
HEX2[4] <= triple_seg7:hex_display.HEX2[4]
HEX2[5] <= triple_seg7:hex_display.HEX2[5]
HEX2[6] <= triple_seg7:hex_display.HEX2[6]
HEX3[0] <= <VCC>
HEX3[1] <= <VCC>
HEX3[2] <= <VCC>
HEX3[3] <= <VCC>
HEX3[4] <= <VCC>
HEX3[5] <= <VCC>
HEX3[6] <= <VCC>
HEX4[0] <= <VCC>
HEX4[1] <= <VCC>
HEX4[2] <= <VCC>
HEX4[3] <= <VCC>
HEX4[4] <= <VCC>
HEX4[5] <= <VCC>
HEX4[6] <= <VCC>
HEX5[0] <= <VCC>
HEX5[1] <= <VCC>
HEX5[2] <= <VCC>
HEX5[3] <= <VCC>
HEX5[4] <= <VCC>
HEX5[5] <= <VCC>
HEX5[6] <= <VCC>
LEDR[0] <= <GND>
LEDR[1] <= <GND>
LEDR[2] <= <GND>
LEDR[3] <= <GND>
LEDR[4] <= <GND>
LEDR[5] <= <GND>
LEDR[6] <= <GND>
LEDR[7] <= <GND>
LEDR[8] <= <GND>
LEDR[9] <= <GND>
KEY[0] => direction:d.right
KEY[1] => direction:d.down
KEY[2] => direction:d.up
KEY[3] => direction:d.left
SW[0] => snakes_and_apples:snake.SW[0]
SW[1] => snakes_and_apples:snake.SW[1]
SW[2] => snakes_and_apples:snake.SW[2]
SW[3] => snakes_and_apples:snake.SW[3]
SW[4] => snakes_and_apples:snake.SW[4]
SW[5] => snakes_and_apples:snake.SW[5]
SW[6] => snakes_and_apples:snake.SW[6]
SW[7] => snakes_and_apples:snake.SW[7]
SW[8] => snakes_and_apples:snake.SW[8]
SW[9] => RST.IN2
GPIO_1[0] <= LEDDriver:Driver.GPIO_1[0]
GPIO_1[1] <= LEDDriver:Driver.GPIO_1[1]
GPIO_1[2] <= LEDDriver:Driver.GPIO_1[2]
GPIO_1[3] <= LEDDriver:Driver.GPIO_1[3]
GPIO_1[4] <= LEDDriver:Driver.GPIO_1[4]
GPIO_1[5] <= LEDDriver:Driver.GPIO_1[5]
GPIO_1[6] <= LEDDriver:Driver.GPIO_1[6]
GPIO_1[7] <= LEDDriver:Driver.GPIO_1[7]
GPIO_1[8] <= LEDDriver:Driver.GPIO_1[8]
GPIO_1[9] <= LEDDriver:Driver.GPIO_1[9]
GPIO_1[10] <= LEDDriver:Driver.GPIO_1[10]
GPIO_1[11] <= LEDDriver:Driver.GPIO_1[11]
GPIO_1[12] <= LEDDriver:Driver.GPIO_1[12]
GPIO_1[13] <= LEDDriver:Driver.GPIO_1[13]
GPIO_1[14] <= LEDDriver:Driver.GPIO_1[14]
GPIO_1[15] <= LEDDriver:Driver.GPIO_1[15]
GPIO_1[16] <= LEDDriver:Driver.GPIO_1[16]
GPIO_1[17] <= LEDDriver:Driver.GPIO_1[17]
GPIO_1[18] <= LEDDriver:Driver.GPIO_1[18]
GPIO_1[19] <= LEDDriver:Driver.GPIO_1[19]
GPIO_1[20] <= LEDDriver:Driver.GPIO_1[20]
GPIO_1[21] <= LEDDriver:Driver.GPIO_1[21]
GPIO_1[22] <= LEDDriver:Driver.GPIO_1[22]
GPIO_1[23] <= LEDDriver:Driver.GPIO_1[23]
GPIO_1[24] <= LEDDriver:Driver.GPIO_1[24]
GPIO_1[25] <= LEDDriver:Driver.GPIO_1[25]
GPIO_1[26] <= LEDDriver:Driver.GPIO_1[26]
GPIO_1[27] <= LEDDriver:Driver.GPIO_1[27]
GPIO_1[28] <= LEDDriver:Driver.GPIO_1[28]
GPIO_1[29] <= LEDDriver:Driver.GPIO_1[29]
GPIO_1[30] <= LEDDriver:Driver.GPIO_1[30]
GPIO_1[31] <= LEDDriver:Driver.GPIO_1[31]
GPIO_1[32] <= LEDDriver:Driver.GPIO_1[32]
GPIO_1[33] <= LEDDriver:Driver.GPIO_1[33]
GPIO_1[34] <= LEDDriver:Driver.GPIO_1[34]
GPIO_1[35] <= LEDDriver:Driver.GPIO_1[35]
CLOCK_50 => CLOCK_50.IN1


|lab8|clock_divider:divider
clock => divided_clocks[0]~reg0.CLK
clock => divided_clocks[1]~reg0.CLK
clock => divided_clocks[2]~reg0.CLK
clock => divided_clocks[3]~reg0.CLK
clock => divided_clocks[4]~reg0.CLK
clock => divided_clocks[5]~reg0.CLK
clock => divided_clocks[6]~reg0.CLK
clock => divided_clocks[7]~reg0.CLK
clock => divided_clocks[8]~reg0.CLK
clock => divided_clocks[9]~reg0.CLK
clock => divided_clocks[10]~reg0.CLK
clock => divided_clocks[11]~reg0.CLK
clock => divided_clocks[12]~reg0.CLK
clock => divided_clocks[13]~reg0.CLK
clock => divided_clocks[14]~reg0.CLK
clock => divided_clocks[15]~reg0.CLK
clock => divided_clocks[16]~reg0.CLK
clock => divided_clocks[17]~reg0.CLK
clock => divided_clocks[18]~reg0.CLK
clock => divided_clocks[19]~reg0.CLK
clock => divided_clocks[20]~reg0.CLK
clock => divided_clocks[21]~reg0.CLK
clock => divided_clocks[22]~reg0.CLK
clock => divided_clocks[23]~reg0.CLK
clock => divided_clocks[24]~reg0.CLK
clock => divided_clocks[25]~reg0.CLK
clock => divided_clocks[26]~reg0.CLK
clock => divided_clocks[27]~reg0.CLK
clock => divided_clocks[28]~reg0.CLK
clock => divided_clocks[29]~reg0.CLK
clock => divided_clocks[30]~reg0.CLK
clock => divided_clocks[31]~reg0.CLK
divided_clocks[0] <= divided_clocks[0]~reg0.DB_MAX_OUTPUT_PORT_TYPE
divided_clocks[1] <= divided_clocks[1]~reg0.DB_MAX_OUTPUT_PORT_TYPE
divided_clocks[2] <= divided_clocks[2]~reg0.DB_MAX_OUTPUT_PORT_TYPE
divided_clocks[3] <= divided_clocks[3]~reg0.DB_MAX_OUTPUT_PORT_TYPE
divided_clocks[4] <= divided_clocks[4]~reg0.DB_MAX_OUTPUT_PORT_TYPE
divided_clocks[5] <= divided_clocks[5]~reg0.DB_MAX_OUTPUT_PORT_TYPE
divided_clocks[6] <= divided_clocks[6]~reg0.DB_MAX_OUTPUT_PORT_TYPE
divided_clocks[7] <= divided_clocks[7]~reg0.DB_MAX_OUTPUT_PORT_TYPE
divided_clocks[8] <= divided_clocks[8]~reg0.DB_MAX_OUTPUT_PORT_TYPE
divided_clocks[9] <= divided_clocks[9]~reg0.DB_MAX_OUTPUT_PORT_TYPE
divided_clocks[10] <= divided_clocks[10]~reg0.DB_MAX_OUTPUT_PORT_TYPE
divided_clocks[11] <= divided_clocks[11]~reg0.DB_MAX_OUTPUT_PORT_TYPE
divided_clocks[12] <= divided_clocks[12]~reg0.DB_MAX_OUTPUT_PORT_TYPE
divided_clocks[13] <= divided_clocks[13]~reg0.DB_MAX_OUTPUT_PORT_TYPE
divided_clocks[14] <= divided_clocks[14]~reg0.DB_MAX_OUTPUT_PORT_TYPE
divided_clocks[15] <= divided_clocks[15]~reg0.DB_MAX_OUTPUT_PORT_TYPE
divided_clocks[16] <= divided_clocks[16]~reg0.DB_MAX_OUTPUT_PORT_TYPE
divided_clocks[17] <= divided_clocks[17]~reg0.DB_MAX_OUTPUT_PORT_TYPE
divided_clocks[18] <= divided_clocks[18]~reg0.DB_MAX_OUTPUT_PORT_TYPE
divided_clocks[19] <= divided_clocks[19]~reg0.DB_MAX_OUTPUT_PORT_TYPE
divided_clocks[20] <= divided_clocks[20]~reg0.DB_MAX_OUTPUT_PORT_TYPE
divided_clocks[21] <= divided_clocks[21]~reg0.DB_MAX_OUTPUT_PORT_TYPE
divided_clocks[22] <= divided_clocks[22]~reg0.DB_MAX_OUTPUT_PORT_TYPE
divided_clocks[23] <= divided_clocks[23]~reg0.DB_MAX_OUTPUT_PORT_TYPE
divided_clocks[24] <= divided_clocks[24]~reg0.DB_MAX_OUTPUT_PORT_TYPE
divided_clocks[25] <= divided_clocks[25]~reg0.DB_MAX_OUTPUT_PORT_TYPE
divided_clocks[26] <= divided_clocks[26]~reg0.DB_MAX_OUTPUT_PORT_TYPE
divided_clocks[27] <= divided_clocks[27]~reg0.DB_MAX_OUTPUT_PORT_TYPE
divided_clocks[28] <= divided_clocks[28]~reg0.DB_MAX_OUTPUT_PORT_TYPE
divided_clocks[29] <= divided_clocks[29]~reg0.DB_MAX_OUTPUT_PORT_TYPE
divided_clocks[30] <= divided_clocks[30]~reg0.DB_MAX_OUTPUT_PORT_TYPE
divided_clocks[31] <= divided_clocks[31]~reg0.DB_MAX_OUTPUT_PORT_TYPE


|lab8|LEDDriver:Driver
GPIO_1[0] <= Mux31.DB_MAX_OUTPUT_PORT_TYPE
GPIO_1[1] <= Mux30.DB_MAX_OUTPUT_PORT_TYPE
GPIO_1[2] <= Mux29.DB_MAX_OUTPUT_PORT_TYPE
GPIO_1[3] <= Mux28.DB_MAX_OUTPUT_PORT_TYPE
GPIO_1[4] <= Mux27.DB_MAX_OUTPUT_PORT_TYPE
GPIO_1[5] <= Mux26.DB_MAX_OUTPUT_PORT_TYPE
GPIO_1[6] <= Mux25.DB_MAX_OUTPUT_PORT_TYPE
GPIO_1[7] <= Mux24.DB_MAX_OUTPUT_PORT_TYPE
GPIO_1[8] <= Mux23.DB_MAX_OUTPUT_PORT_TYPE
GPIO_1[9] <= Mux22.DB_MAX_OUTPUT_PORT_TYPE
GPIO_1[10] <= Mux21.DB_MAX_OUTPUT_PORT_TYPE
GPIO_1[11] <= Mux20.DB_MAX_OUTPUT_PORT_TYPE
GPIO_1[12] <= Mux19.DB_MAX_OUTPUT_PORT_TYPE
GPIO_1[13] <= Mux18.DB_MAX_OUTPUT_PORT_TYPE
GPIO_1[14] <= Mux17.DB_MAX_OUTPUT_PORT_TYPE
GPIO_1[15] <= Mux16.DB_MAX_OUTPUT_PORT_TYPE
GPIO_1[16] <= Mux15.DB_MAX_OUTPUT_PORT_TYPE
GPIO_1[17] <= Mux14.DB_MAX_OUTPUT_PORT_TYPE
GPIO_1[18] <= Mux13.DB_MAX_OUTPUT_PORT_TYPE
GPIO_1[19] <= Mux12.DB_MAX_OUTPUT_PORT_TYPE
GPIO_1[20] <= Mux11.DB_MAX_OUTPUT_PORT_TYPE
GPIO_1[21] <= Mux10.DB_MAX_OUTPUT_PORT_TYPE
GPIO_1[22] <= Mux9.DB_MAX_OUTPUT_PORT_TYPE
GPIO_1[23] <= Mux8.DB_MAX_OUTPUT_PORT_TYPE
GPIO_1[24] <= Mux7.DB_MAX_OUTPUT_PORT_TYPE
GPIO_1[25] <= Mux6.DB_MAX_OUTPUT_PORT_TYPE
GPIO_1[26] <= Mux5.DB_MAX_OUTPUT_PORT_TYPE
GPIO_1[27] <= Mux4.DB_MAX_OUTPUT_PORT_TYPE
GPIO_1[28] <= Mux3.DB_MAX_OUTPUT_PORT_TYPE
GPIO_1[29] <= Mux2.DB_MAX_OUTPUT_PORT_TYPE
GPIO_1[30] <= Mux1.DB_MAX_OUTPUT_PORT_TYPE
GPIO_1[31] <= Mux0.DB_MAX_OUTPUT_PORT_TYPE
GPIO_1[32] <= Counter[0].DB_MAX_OUTPUT_PORT_TYPE
GPIO_1[33] <= Counter[1].DB_MAX_OUTPUT_PORT_TYPE
GPIO_1[34] <= Counter[2].DB_MAX_OUTPUT_PORT_TYPE
GPIO_1[35] <= Counter[3].DB_MAX_OUTPUT_PORT_TYPE
RedPixels[0][0] => Mux16.IN15
RedPixels[0][1] => Mux17.IN15
RedPixels[0][2] => Mux18.IN15
RedPixels[0][3] => Mux19.IN15
RedPixels[0][4] => Mux20.IN15
RedPixels[0][5] => Mux21.IN15
RedPixels[0][6] => Mux22.IN15
RedPixels[0][7] => Mux23.IN15
RedPixels[0][8] => Mux24.IN15
RedPixels[0][9] => Mux25.IN15
RedPixels[0][10] => Mux26.IN15
RedPixels[0][11] => Mux27.IN15
RedPixels[0][12] => Mux28.IN15
RedPixels[0][13] => Mux29.IN15
RedPixels[0][14] => Mux30.IN15
RedPixels[0][15] => Mux31.IN15
RedPixels[1][0] => Mux16.IN14
RedPixels[1][1] => Mux17.IN14
RedPixels[1][2] => Mux18.IN14
RedPixels[1][3] => Mux19.IN14
RedPixels[1][4] => Mux20.IN14
RedPixels[1][5] => Mux21.IN14
RedPixels[1][6] => Mux22.IN14
RedPixels[1][7] => Mux23.IN14
RedPixels[1][8] => Mux24.IN14
RedPixels[1][9] => Mux25.IN14
RedPixels[1][10] => Mux26.IN14
RedPixels[1][11] => Mux27.IN14
RedPixels[1][12] => Mux28.IN14
RedPixels[1][13] => Mux29.IN14
RedPixels[1][14] => Mux30.IN14
RedPixels[1][15] => Mux31.IN14
RedPixels[2][0] => Mux16.IN13
RedPixels[2][1] => Mux17.IN13
RedPixels[2][2] => Mux18.IN13
RedPixels[2][3] => Mux19.IN13
RedPixels[2][4] => Mux20.IN13
RedPixels[2][5] => Mux21.IN13
RedPixels[2][6] => Mux22.IN13
RedPixels[2][7] => Mux23.IN13
RedPixels[2][8] => Mux24.IN13
RedPixels[2][9] => Mux25.IN13
RedPixels[2][10] => Mux26.IN13
RedPixels[2][11] => Mux27.IN13
RedPixels[2][12] => Mux28.IN13
RedPixels[2][13] => Mux29.IN13
RedPixels[2][14] => Mux30.IN13
RedPixels[2][15] => Mux31.IN13
RedPixels[3][0] => Mux16.IN12
RedPixels[3][1] => Mux17.IN12
RedPixels[3][2] => Mux18.IN12
RedPixels[3][3] => Mux19.IN12
RedPixels[3][4] => Mux20.IN12
RedPixels[3][5] => Mux21.IN12
RedPixels[3][6] => Mux22.IN12
RedPixels[3][7] => Mux23.IN12
RedPixels[3][8] => Mux24.IN12
RedPixels[3][9] => Mux25.IN12
RedPixels[3][10] => Mux26.IN12
RedPixels[3][11] => Mux27.IN12
RedPixels[3][12] => Mux28.IN12
RedPixels[3][13] => Mux29.IN12
RedPixels[3][14] => Mux30.IN12
RedPixels[3][15] => Mux31.IN12
RedPixels[4][0] => Mux16.IN11
RedPixels[4][1] => Mux17.IN11
RedPixels[4][2] => Mux18.IN11
RedPixels[4][3] => Mux19.IN11
RedPixels[4][4] => Mux20.IN11
RedPixels[4][5] => Mux21.IN11
RedPixels[4][6] => Mux22.IN11
RedPixels[4][7] => Mux23.IN11
RedPixels[4][8] => Mux24.IN11
RedPixels[4][9] => Mux25.IN11
RedPixels[4][10] => Mux26.IN11
RedPixels[4][11] => Mux27.IN11
RedPixels[4][12] => Mux28.IN11
RedPixels[4][13] => Mux29.IN11
RedPixels[4][14] => Mux30.IN11
RedPixels[4][15] => Mux31.IN11
RedPixels[5][0] => Mux16.IN10
RedPixels[5][1] => Mux17.IN10
RedPixels[5][2] => Mux18.IN10
RedPixels[5][3] => Mux19.IN10
RedPixels[5][4] => Mux20.IN10
RedPixels[5][5] => Mux21.IN10
RedPixels[5][6] => Mux22.IN10
RedPixels[5][7] => Mux23.IN10
RedPixels[5][8] => Mux24.IN10
RedPixels[5][9] => Mux25.IN10
RedPixels[5][10] => Mux26.IN10
RedPixels[5][11] => Mux27.IN10
RedPixels[5][12] => Mux28.IN10
RedPixels[5][13] => Mux29.IN10
RedPixels[5][14] => Mux30.IN10
RedPixels[5][15] => Mux31.IN10
RedPixels[6][0] => Mux16.IN9
RedPixels[6][1] => Mux17.IN9
RedPixels[6][2] => Mux18.IN9
RedPixels[6][3] => Mux19.IN9
RedPixels[6][4] => Mux20.IN9
RedPixels[6][5] => Mux21.IN9
RedPixels[6][6] => Mux22.IN9
RedPixels[6][7] => Mux23.IN9
RedPixels[6][8] => Mux24.IN9
RedPixels[6][9] => Mux25.IN9
RedPixels[6][10] => Mux26.IN9
RedPixels[6][11] => Mux27.IN9
RedPixels[6][12] => Mux28.IN9
RedPixels[6][13] => Mux29.IN9
RedPixels[6][14] => Mux30.IN9
RedPixels[6][15] => Mux31.IN9
RedPixels[7][0] => Mux16.IN8
RedPixels[7][1] => Mux17.IN8
RedPixels[7][2] => Mux18.IN8
RedPixels[7][3] => Mux19.IN8
RedPixels[7][4] => Mux20.IN8
RedPixels[7][5] => Mux21.IN8
RedPixels[7][6] => Mux22.IN8
RedPixels[7][7] => Mux23.IN8
RedPixels[7][8] => Mux24.IN8
RedPixels[7][9] => Mux25.IN8
RedPixels[7][10] => Mux26.IN8
RedPixels[7][11] => Mux27.IN8
RedPixels[7][12] => Mux28.IN8
RedPixels[7][13] => Mux29.IN8
RedPixels[7][14] => Mux30.IN8
RedPixels[7][15] => Mux31.IN8
RedPixels[8][0] => Mux16.IN7
RedPixels[8][1] => Mux17.IN7
RedPixels[8][2] => Mux18.IN7
RedPixels[8][3] => Mux19.IN7
RedPixels[8][4] => Mux20.IN7
RedPixels[8][5] => Mux21.IN7
RedPixels[8][6] => Mux22.IN7
RedPixels[8][7] => Mux23.IN7
RedPixels[8][8] => Mux24.IN7
RedPixels[8][9] => Mux25.IN7
RedPixels[8][10] => Mux26.IN7
RedPixels[8][11] => Mux27.IN7
RedPixels[8][12] => Mux28.IN7
RedPixels[8][13] => Mux29.IN7
RedPixels[8][14] => Mux30.IN7
RedPixels[8][15] => Mux31.IN7
RedPixels[9][0] => Mux16.IN6
RedPixels[9][1] => Mux17.IN6
RedPixels[9][2] => Mux18.IN6
RedPixels[9][3] => Mux19.IN6
RedPixels[9][4] => Mux20.IN6
RedPixels[9][5] => Mux21.IN6
RedPixels[9][6] => Mux22.IN6
RedPixels[9][7] => Mux23.IN6
RedPixels[9][8] => Mux24.IN6
RedPixels[9][9] => Mux25.IN6
RedPixels[9][10] => Mux26.IN6
RedPixels[9][11] => Mux27.IN6
RedPixels[9][12] => Mux28.IN6
RedPixels[9][13] => Mux29.IN6
RedPixels[9][14] => Mux30.IN6
RedPixels[9][15] => Mux31.IN6
RedPixels[10][0] => Mux16.IN5
RedPixels[10][1] => Mux17.IN5
RedPixels[10][2] => Mux18.IN5
RedPixels[10][3] => Mux19.IN5
RedPixels[10][4] => Mux20.IN5
RedPixels[10][5] => Mux21.IN5
RedPixels[10][6] => Mux22.IN5
RedPixels[10][7] => Mux23.IN5
RedPixels[10][8] => Mux24.IN5
RedPixels[10][9] => Mux25.IN5
RedPixels[10][10] => Mux26.IN5
RedPixels[10][11] => Mux27.IN5
RedPixels[10][12] => Mux28.IN5
RedPixels[10][13] => Mux29.IN5
RedPixels[10][14] => Mux30.IN5
RedPixels[10][15] => Mux31.IN5
RedPixels[11][0] => Mux16.IN4
RedPixels[11][1] => Mux17.IN4
RedPixels[11][2] => Mux18.IN4
RedPixels[11][3] => Mux19.IN4
RedPixels[11][4] => Mux20.IN4
RedPixels[11][5] => Mux21.IN4
RedPixels[11][6] => Mux22.IN4
RedPixels[11][7] => Mux23.IN4
RedPixels[11][8] => Mux24.IN4
RedPixels[11][9] => Mux25.IN4
RedPixels[11][10] => Mux26.IN4
RedPixels[11][11] => Mux27.IN4
RedPixels[11][12] => Mux28.IN4
RedPixels[11][13] => Mux29.IN4
RedPixels[11][14] => Mux30.IN4
RedPixels[11][15] => Mux31.IN4
RedPixels[12][0] => Mux16.IN3
RedPixels[12][1] => Mux17.IN3
RedPixels[12][2] => Mux18.IN3
RedPixels[12][3] => Mux19.IN3
RedPixels[12][4] => Mux20.IN3
RedPixels[12][5] => Mux21.IN3
RedPixels[12][6] => Mux22.IN3
RedPixels[12][7] => Mux23.IN3
RedPixels[12][8] => Mux24.IN3
RedPixels[12][9] => Mux25.IN3
RedPixels[12][10] => Mux26.IN3
RedPixels[12][11] => Mux27.IN3
RedPixels[12][12] => Mux28.IN3
RedPixels[12][13] => Mux29.IN3
RedPixels[12][14] => Mux30.IN3
RedPixels[12][15] => Mux31.IN3
RedPixels[13][0] => Mux16.IN2
RedPixels[13][1] => Mux17.IN2
RedPixels[13][2] => Mux18.IN2
RedPixels[13][3] => Mux19.IN2
RedPixels[13][4] => Mux20.IN2
RedPixels[13][5] => Mux21.IN2
RedPixels[13][6] => Mux22.IN2
RedPixels[13][7] => Mux23.IN2
RedPixels[13][8] => Mux24.IN2
RedPixels[13][9] => Mux25.IN2
RedPixels[13][10] => Mux26.IN2
RedPixels[13][11] => Mux27.IN2
RedPixels[13][12] => Mux28.IN2
RedPixels[13][13] => Mux29.IN2
RedPixels[13][14] => Mux30.IN2
RedPixels[13][15] => Mux31.IN2
RedPixels[14][0] => Mux16.IN1
RedPixels[14][1] => Mux17.IN1
RedPixels[14][2] => Mux18.IN1
RedPixels[14][3] => Mux19.IN1
RedPixels[14][4] => Mux20.IN1
RedPixels[14][5] => Mux21.IN1
RedPixels[14][6] => Mux22.IN1
RedPixels[14][7] => Mux23.IN1
RedPixels[14][8] => Mux24.IN1
RedPixels[14][9] => Mux25.IN1
RedPixels[14][10] => Mux26.IN1
RedPixels[14][11] => Mux27.IN1
RedPixels[14][12] => Mux28.IN1
RedPixels[14][13] => Mux29.IN1
RedPixels[14][14] => Mux30.IN1
RedPixels[14][15] => Mux31.IN1
RedPixels[15][0] => Mux16.IN0
RedPixels[15][1] => Mux17.IN0
RedPixels[15][2] => Mux18.IN0
RedPixels[15][3] => Mux19.IN0
RedPixels[15][4] => Mux20.IN0
RedPixels[15][5] => Mux21.IN0
RedPixels[15][6] => Mux22.IN0
RedPixels[15][7] => Mux23.IN0
RedPixels[15][8] => Mux24.IN0
RedPixels[15][9] => Mux25.IN0
RedPixels[15][10] => Mux26.IN0
RedPixels[15][11] => Mux27.IN0
RedPixels[15][12] => Mux28.IN0
RedPixels[15][13] => Mux29.IN0
RedPixels[15][14] => Mux30.IN0
RedPixels[15][15] => Mux31.IN0
GrnPixels[0][0] => Mux0.IN15
GrnPixels[0][1] => Mux1.IN15
GrnPixels[0][2] => Mux2.IN15
GrnPixels[0][3] => Mux3.IN15
GrnPixels[0][4] => Mux4.IN15
GrnPixels[0][5] => Mux5.IN15
GrnPixels[0][6] => Mux6.IN15
GrnPixels[0][7] => Mux7.IN15
GrnPixels[0][8] => Mux8.IN15
GrnPixels[0][9] => Mux9.IN15
GrnPixels[0][10] => Mux10.IN15
GrnPixels[0][11] => Mux11.IN15
GrnPixels[0][12] => Mux12.IN15
GrnPixels[0][13] => Mux13.IN15
GrnPixels[0][14] => Mux14.IN15
GrnPixels[0][15] => Mux15.IN15
GrnPixels[1][0] => Mux0.IN14
GrnPixels[1][1] => Mux1.IN14
GrnPixels[1][2] => Mux2.IN14
GrnPixels[1][3] => Mux3.IN14
GrnPixels[1][4] => Mux4.IN14
GrnPixels[1][5] => Mux5.IN14
GrnPixels[1][6] => Mux6.IN14
GrnPixels[1][7] => Mux7.IN14
GrnPixels[1][8] => Mux8.IN14
GrnPixels[1][9] => Mux9.IN14
GrnPixels[1][10] => Mux10.IN14
GrnPixels[1][11] => Mux11.IN14
GrnPixels[1][12] => Mux12.IN14
GrnPixels[1][13] => Mux13.IN14
GrnPixels[1][14] => Mux14.IN14
GrnPixels[1][15] => Mux15.IN14
GrnPixels[2][0] => Mux0.IN13
GrnPixels[2][1] => Mux1.IN13
GrnPixels[2][2] => Mux2.IN13
GrnPixels[2][3] => Mux3.IN13
GrnPixels[2][4] => Mux4.IN13
GrnPixels[2][5] => Mux5.IN13
GrnPixels[2][6] => Mux6.IN13
GrnPixels[2][7] => Mux7.IN13
GrnPixels[2][8] => Mux8.IN13
GrnPixels[2][9] => Mux9.IN13
GrnPixels[2][10] => Mux10.IN13
GrnPixels[2][11] => Mux11.IN13
GrnPixels[2][12] => Mux12.IN13
GrnPixels[2][13] => Mux13.IN13
GrnPixels[2][14] => Mux14.IN13
GrnPixels[2][15] => Mux15.IN13
GrnPixels[3][0] => Mux0.IN12
GrnPixels[3][1] => Mux1.IN12
GrnPixels[3][2] => Mux2.IN12
GrnPixels[3][3] => Mux3.IN12
GrnPixels[3][4] => Mux4.IN12
GrnPixels[3][5] => Mux5.IN12
GrnPixels[3][6] => Mux6.IN12
GrnPixels[3][7] => Mux7.IN12
GrnPixels[3][8] => Mux8.IN12
GrnPixels[3][9] => Mux9.IN12
GrnPixels[3][10] => Mux10.IN12
GrnPixels[3][11] => Mux11.IN12
GrnPixels[3][12] => Mux12.IN12
GrnPixels[3][13] => Mux13.IN12
GrnPixels[3][14] => Mux14.IN12
GrnPixels[3][15] => Mux15.IN12
GrnPixels[4][0] => Mux0.IN11
GrnPixels[4][1] => Mux1.IN11
GrnPixels[4][2] => Mux2.IN11
GrnPixels[4][3] => Mux3.IN11
GrnPixels[4][4] => Mux4.IN11
GrnPixels[4][5] => Mux5.IN11
GrnPixels[4][6] => Mux6.IN11
GrnPixels[4][7] => Mux7.IN11
GrnPixels[4][8] => Mux8.IN11
GrnPixels[4][9] => Mux9.IN11
GrnPixels[4][10] => Mux10.IN11
GrnPixels[4][11] => Mux11.IN11
GrnPixels[4][12] => Mux12.IN11
GrnPixels[4][13] => Mux13.IN11
GrnPixels[4][14] => Mux14.IN11
GrnPixels[4][15] => Mux15.IN11
GrnPixels[5][0] => Mux0.IN10
GrnPixels[5][1] => Mux1.IN10
GrnPixels[5][2] => Mux2.IN10
GrnPixels[5][3] => Mux3.IN10
GrnPixels[5][4] => Mux4.IN10
GrnPixels[5][5] => Mux5.IN10
GrnPixels[5][6] => Mux6.IN10
GrnPixels[5][7] => Mux7.IN10
GrnPixels[5][8] => Mux8.IN10
GrnPixels[5][9] => Mux9.IN10
GrnPixels[5][10] => Mux10.IN10
GrnPixels[5][11] => Mux11.IN10
GrnPixels[5][12] => Mux12.IN10
GrnPixels[5][13] => Mux13.IN10
GrnPixels[5][14] => Mux14.IN10
GrnPixels[5][15] => Mux15.IN10
GrnPixels[6][0] => Mux0.IN9
GrnPixels[6][1] => Mux1.IN9
GrnPixels[6][2] => Mux2.IN9
GrnPixels[6][3] => Mux3.IN9
GrnPixels[6][4] => Mux4.IN9
GrnPixels[6][5] => Mux5.IN9
GrnPixels[6][6] => Mux6.IN9
GrnPixels[6][7] => Mux7.IN9
GrnPixels[6][8] => Mux8.IN9
GrnPixels[6][9] => Mux9.IN9
GrnPixels[6][10] => Mux10.IN9
GrnPixels[6][11] => Mux11.IN9
GrnPixels[6][12] => Mux12.IN9
GrnPixels[6][13] => Mux13.IN9
GrnPixels[6][14] => Mux14.IN9
GrnPixels[6][15] => Mux15.IN9
GrnPixels[7][0] => Mux0.IN8
GrnPixels[7][1] => Mux1.IN8
GrnPixels[7][2] => Mux2.IN8
GrnPixels[7][3] => Mux3.IN8
GrnPixels[7][4] => Mux4.IN8
GrnPixels[7][5] => Mux5.IN8
GrnPixels[7][6] => Mux6.IN8
GrnPixels[7][7] => Mux7.IN8
GrnPixels[7][8] => Mux8.IN8
GrnPixels[7][9] => Mux9.IN8
GrnPixels[7][10] => Mux10.IN8
GrnPixels[7][11] => Mux11.IN8
GrnPixels[7][12] => Mux12.IN8
GrnPixels[7][13] => Mux13.IN8
GrnPixels[7][14] => Mux14.IN8
GrnPixels[7][15] => Mux15.IN8
GrnPixels[8][0] => Mux0.IN7
GrnPixels[8][1] => Mux1.IN7
GrnPixels[8][2] => Mux2.IN7
GrnPixels[8][3] => Mux3.IN7
GrnPixels[8][4] => Mux4.IN7
GrnPixels[8][5] => Mux5.IN7
GrnPixels[8][6] => Mux6.IN7
GrnPixels[8][7] => Mux7.IN7
GrnPixels[8][8] => Mux8.IN7
GrnPixels[8][9] => Mux9.IN7
GrnPixels[8][10] => Mux10.IN7
GrnPixels[8][11] => Mux11.IN7
GrnPixels[8][12] => Mux12.IN7
GrnPixels[8][13] => Mux13.IN7
GrnPixels[8][14] => Mux14.IN7
GrnPixels[8][15] => Mux15.IN7
GrnPixels[9][0] => Mux0.IN6
GrnPixels[9][1] => Mux1.IN6
GrnPixels[9][2] => Mux2.IN6
GrnPixels[9][3] => Mux3.IN6
GrnPixels[9][4] => Mux4.IN6
GrnPixels[9][5] => Mux5.IN6
GrnPixels[9][6] => Mux6.IN6
GrnPixels[9][7] => Mux7.IN6
GrnPixels[9][8] => Mux8.IN6
GrnPixels[9][9] => Mux9.IN6
GrnPixels[9][10] => Mux10.IN6
GrnPixels[9][11] => Mux11.IN6
GrnPixels[9][12] => Mux12.IN6
GrnPixels[9][13] => Mux13.IN6
GrnPixels[9][14] => Mux14.IN6
GrnPixels[9][15] => Mux15.IN6
GrnPixels[10][0] => Mux0.IN5
GrnPixels[10][1] => Mux1.IN5
GrnPixels[10][2] => Mux2.IN5
GrnPixels[10][3] => Mux3.IN5
GrnPixels[10][4] => Mux4.IN5
GrnPixels[10][5] => Mux5.IN5
GrnPixels[10][6] => Mux6.IN5
GrnPixels[10][7] => Mux7.IN5
GrnPixels[10][8] => Mux8.IN5
GrnPixels[10][9] => Mux9.IN5
GrnPixels[10][10] => Mux10.IN5
GrnPixels[10][11] => Mux11.IN5
GrnPixels[10][12] => Mux12.IN5
GrnPixels[10][13] => Mux13.IN5
GrnPixels[10][14] => Mux14.IN5
GrnPixels[10][15] => Mux15.IN5
GrnPixels[11][0] => Mux0.IN4
GrnPixels[11][1] => Mux1.IN4
GrnPixels[11][2] => Mux2.IN4
GrnPixels[11][3] => Mux3.IN4
GrnPixels[11][4] => Mux4.IN4
GrnPixels[11][5] => Mux5.IN4
GrnPixels[11][6] => Mux6.IN4
GrnPixels[11][7] => Mux7.IN4
GrnPixels[11][8] => Mux8.IN4
GrnPixels[11][9] => Mux9.IN4
GrnPixels[11][10] => Mux10.IN4
GrnPixels[11][11] => Mux11.IN4
GrnPixels[11][12] => Mux12.IN4
GrnPixels[11][13] => Mux13.IN4
GrnPixels[11][14] => Mux14.IN4
GrnPixels[11][15] => Mux15.IN4
GrnPixels[12][0] => Mux0.IN3
GrnPixels[12][1] => Mux1.IN3
GrnPixels[12][2] => Mux2.IN3
GrnPixels[12][3] => Mux3.IN3
GrnPixels[12][4] => Mux4.IN3
GrnPixels[12][5] => Mux5.IN3
GrnPixels[12][6] => Mux6.IN3
GrnPixels[12][7] => Mux7.IN3
GrnPixels[12][8] => Mux8.IN3
GrnPixels[12][9] => Mux9.IN3
GrnPixels[12][10] => Mux10.IN3
GrnPixels[12][11] => Mux11.IN3
GrnPixels[12][12] => Mux12.IN3
GrnPixels[12][13] => Mux13.IN3
GrnPixels[12][14] => Mux14.IN3
GrnPixels[12][15] => Mux15.IN3
GrnPixels[13][0] => Mux0.IN2
GrnPixels[13][1] => Mux1.IN2
GrnPixels[13][2] => Mux2.IN2
GrnPixels[13][3] => Mux3.IN2
GrnPixels[13][4] => Mux4.IN2
GrnPixels[13][5] => Mux5.IN2
GrnPixels[13][6] => Mux6.IN2
GrnPixels[13][7] => Mux7.IN2
GrnPixels[13][8] => Mux8.IN2
GrnPixels[13][9] => Mux9.IN2
GrnPixels[13][10] => Mux10.IN2
GrnPixels[13][11] => Mux11.IN2
GrnPixels[13][12] => Mux12.IN2
GrnPixels[13][13] => Mux13.IN2
GrnPixels[13][14] => Mux14.IN2
GrnPixels[13][15] => Mux15.IN2
GrnPixels[14][0] => Mux0.IN1
GrnPixels[14][1] => Mux1.IN1
GrnPixels[14][2] => Mux2.IN1
GrnPixels[14][3] => Mux3.IN1
GrnPixels[14][4] => Mux4.IN1
GrnPixels[14][5] => Mux5.IN1
GrnPixels[14][6] => Mux6.IN1
GrnPixels[14][7] => Mux7.IN1
GrnPixels[14][8] => Mux8.IN1
GrnPixels[14][9] => Mux9.IN1
GrnPixels[14][10] => Mux10.IN1
GrnPixels[14][11] => Mux11.IN1
GrnPixels[14][12] => Mux12.IN1
GrnPixels[14][13] => Mux13.IN1
GrnPixels[14][14] => Mux14.IN1
GrnPixels[14][15] => Mux15.IN1
GrnPixels[15][0] => Mux0.IN0
GrnPixels[15][1] => Mux1.IN0
GrnPixels[15][2] => Mux2.IN0
GrnPixels[15][3] => Mux3.IN0
GrnPixels[15][4] => Mux4.IN0
GrnPixels[15][5] => Mux5.IN0
GrnPixels[15][6] => Mux6.IN0
GrnPixels[15][7] => Mux7.IN0
GrnPixels[15][8] => Mux8.IN0
GrnPixels[15][9] => Mux9.IN0
GrnPixels[15][10] => Mux10.IN0
GrnPixels[15][11] => Mux11.IN0
GrnPixels[15][12] => Mux12.IN0
GrnPixels[15][13] => Mux13.IN0
GrnPixels[15][14] => Mux14.IN0
GrnPixels[15][15] => Mux15.IN0
EnableCount => Counter.OUTPUTSELECT
EnableCount => Counter.OUTPUTSELECT
EnableCount => Counter.OUTPUTSELECT
EnableCount => Counter.OUTPUTSELECT
CLK => Counter[0].CLK
CLK => Counter[1].CLK
CLK => Counter[2].CLK
CLK => Counter[3].CLK
RST => Counter.OUTPUTSELECT
RST => Counter.OUTPUTSELECT
RST => Counter.OUTPUTSELECT
RST => Counter.OUTPUTSELECT


|lab8|direction:d
dir[0] <= dir.DB_MAX_OUTPUT_PORT_TYPE
dir[1] <= dir.DB_MAX_OUTPUT_PORT_TYPE
left => always0.IN0
left => always0.IN0
up => always0.IN0
up => always0.IN0
right => always0.IN1
right => always0.IN1
down => always0.IN1
down => always0.IN1
clk => state_r~1.DATAIN
reset => state_r.OUTPUTSELECT
reset => state_r.OUTPUTSELECT
reset => state_r.OUTPUTSELECT
reset => state_r.OUTPUTSELECT


|lab8|edge_detector:det
clk => dff_r.CLK
reset => dff_r.OUTPUTSELECT
i => dff_r.DATAA
i => o.IN1
o <= o.DB_MAX_OUTPUT_PORT_TYPE


|lab8|snakes_and_apples:snake
GrnPixels[0][0] <= grid_light:tail.green_light_on
GrnPixels[0][1] <= grid_light:horizontal_bars[1].top_row.green_light_on
GrnPixels[0][2] <= grid_light:horizontal_bars[2].top_row.green_light_on
GrnPixels[0][3] <= grid_light:horizontal_bars[3].top_row.green_light_on
GrnPixels[0][4] <= grid_light:horizontal_bars[4].top_row.green_light_on
GrnPixels[0][5] <= grid_light:horizontal_bars[5].top_row.green_light_on
GrnPixels[0][6] <= grid_light:horizontal_bars[6].top_row.green_light_on
GrnPixels[0][7] <= grid_light:horizontal_bars[7].top_row.green_light_on
GrnPixels[0][8] <= grid_light:horizontal_bars[8].top_row.green_light_on
GrnPixels[0][9] <= grid_light:horizontal_bars[9].top_row.green_light_on
GrnPixels[0][10] <= grid_light:horizontal_bars[10].top_row.green_light_on
GrnPixels[0][11] <= grid_light:horizontal_bars[11].top_row.green_light_on
GrnPixels[0][12] <= grid_light:horizontal_bars[12].top_row.green_light_on
GrnPixels[0][13] <= grid_light:horizontal_bars[13].top_row.green_light_on
GrnPixels[0][14] <= grid_light:horizontal_bars[14].top_row.green_light_on
GrnPixels[0][15] <= grid_light:top_right.green_light_on
GrnPixels[1][0] <= grid_light:thorax.green_light_on
GrnPixels[1][1] <= grid_light:center_grid_row[1].center_grid_col[1].light.green_light_on
GrnPixels[1][2] <= grid_light:center_grid_row[1].center_grid_col[2].light.green_light_on
GrnPixels[1][3] <= grid_light:center_grid_row[1].center_grid_col[3].light.green_light_on
GrnPixels[1][4] <= grid_light:center_grid_row[1].center_grid_col[4].light.green_light_on
GrnPixels[1][5] <= grid_light:center_grid_row[1].center_grid_col[5].light.green_light_on
GrnPixels[1][6] <= grid_light:center_grid_row[1].center_grid_col[6].light.green_light_on
GrnPixels[1][7] <= grid_light:center_grid_row[1].center_grid_col[7].light.green_light_on
GrnPixels[1][8] <= grid_light:center_grid_row[1].center_grid_col[8].light.green_light_on
GrnPixels[1][9] <= grid_light:center_grid_row[1].center_grid_col[9].light.green_light_on
GrnPixels[1][10] <= grid_light:center_grid_row[1].center_grid_col[10].light.green_light_on
GrnPixels[1][11] <= grid_light:center_grid_row[1].center_grid_col[11].light.green_light_on
GrnPixels[1][12] <= grid_light:center_grid_row[1].center_grid_col[12].light.green_light_on
GrnPixels[1][13] <= grid_light:center_grid_row[1].center_grid_col[13].light.green_light_on
GrnPixels[1][14] <= grid_light:center_grid_row[1].center_grid_col[14].light.green_light_on
GrnPixels[1][15] <= grid_light:vertical_bars[1].right_col.green_light_on
GrnPixels[2][0] <= grid_light:head.green_light_on
GrnPixels[2][1] <= grid_light:center_grid_row[2].center_grid_col[1].light.green_light_on
GrnPixels[2][2] <= grid_light:center_grid_row[2].center_grid_col[2].light.green_light_on
GrnPixels[2][3] <= grid_light:center_grid_row[2].center_grid_col[3].light.green_light_on
GrnPixels[2][4] <= grid_light:center_grid_row[2].center_grid_col[4].light.green_light_on
GrnPixels[2][5] <= grid_light:center_grid_row[2].center_grid_col[5].light.green_light_on
GrnPixels[2][6] <= grid_light:center_grid_row[2].center_grid_col[6].light.green_light_on
GrnPixels[2][7] <= grid_light:center_grid_row[2].center_grid_col[7].light.green_light_on
GrnPixels[2][8] <= grid_light:center_grid_row[2].center_grid_col[8].light.green_light_on
GrnPixels[2][9] <= grid_light:center_grid_row[2].center_grid_col[9].light.green_light_on
GrnPixels[2][10] <= grid_light:center_grid_row[2].center_grid_col[10].light.green_light_on
GrnPixels[2][11] <= grid_light:center_grid_row[2].center_grid_col[11].light.green_light_on
GrnPixels[2][12] <= grid_light:center_grid_row[2].center_grid_col[12].light.green_light_on
GrnPixels[2][13] <= grid_light:center_grid_row[2].center_grid_col[13].light.green_light_on
GrnPixels[2][14] <= grid_light:center_grid_row[2].center_grid_col[14].light.green_light_on
GrnPixels[2][15] <= grid_light:vertical_bars[2].right_col.green_light_on
GrnPixels[3][0] <= grid_light:vertical_bars[3].left_col.green_light_on
GrnPixels[3][1] <= grid_light:center_grid_row[3].center_grid_col[1].light.green_light_on
GrnPixels[3][2] <= grid_light:center_grid_row[3].center_grid_col[2].light.green_light_on
GrnPixels[3][3] <= grid_light:center_grid_row[3].center_grid_col[3].light.green_light_on
GrnPixels[3][4] <= grid_light:center_grid_row[3].center_grid_col[4].light.green_light_on
GrnPixels[3][5] <= grid_light:center_grid_row[3].center_grid_col[5].light.green_light_on
GrnPixels[3][6] <= grid_light:center_grid_row[3].center_grid_col[6].light.green_light_on
GrnPixels[3][7] <= grid_light:center_grid_row[3].center_grid_col[7].light.green_light_on
GrnPixels[3][8] <= grid_light:center_grid_row[3].center_grid_col[8].light.green_light_on
GrnPixels[3][9] <= grid_light:center_grid_row[3].center_grid_col[9].light.green_light_on
GrnPixels[3][10] <= grid_light:center_grid_row[3].center_grid_col[10].light.green_light_on
GrnPixels[3][11] <= grid_light:center_grid_row[3].center_grid_col[11].light.green_light_on
GrnPixels[3][12] <= grid_light:center_grid_row[3].center_grid_col[12].light.green_light_on
GrnPixels[3][13] <= grid_light:center_grid_row[3].center_grid_col[13].light.green_light_on
GrnPixels[3][14] <= grid_light:center_grid_row[3].center_grid_col[14].light.green_light_on
GrnPixels[3][15] <= grid_light:vertical_bars[3].right_col.green_light_on
GrnPixels[4][0] <= grid_light:vertical_bars[4].left_col.green_light_on
GrnPixels[4][1] <= grid_light:center_grid_row[4].center_grid_col[1].light.green_light_on
GrnPixels[4][2] <= grid_light:center_grid_row[4].center_grid_col[2].light.green_light_on
GrnPixels[4][3] <= grid_light:center_grid_row[4].center_grid_col[3].light.green_light_on
GrnPixels[4][4] <= grid_light:center_grid_row[4].center_grid_col[4].light.green_light_on
GrnPixels[4][5] <= grid_light:center_grid_row[4].center_grid_col[5].light.green_light_on
GrnPixels[4][6] <= grid_light:center_grid_row[4].center_grid_col[6].light.green_light_on
GrnPixels[4][7] <= grid_light:center_grid_row[4].center_grid_col[7].light.green_light_on
GrnPixels[4][8] <= grid_light:center_grid_row[4].center_grid_col[8].light.green_light_on
GrnPixels[4][9] <= grid_light:center_grid_row[4].center_grid_col[9].light.green_light_on
GrnPixels[4][10] <= grid_light:center_grid_row[4].center_grid_col[10].light.green_light_on
GrnPixels[4][11] <= grid_light:center_grid_row[4].center_grid_col[11].light.green_light_on
GrnPixels[4][12] <= grid_light:center_grid_row[4].center_grid_col[12].light.green_light_on
GrnPixels[4][13] <= grid_light:center_grid_row[4].center_grid_col[13].light.green_light_on
GrnPixels[4][14] <= grid_light:center_grid_row[4].center_grid_col[14].light.green_light_on
GrnPixels[4][15] <= grid_light:vertical_bars[4].right_col.green_light_on
GrnPixels[5][0] <= grid_light:vertical_bars[5].left_col.green_light_on
GrnPixels[5][1] <= grid_light:center_grid_row[5].center_grid_col[1].light.green_light_on
GrnPixels[5][2] <= grid_light:center_grid_row[5].center_grid_col[2].light.green_light_on
GrnPixels[5][3] <= grid_light:center_grid_row[5].center_grid_col[3].light.green_light_on
GrnPixels[5][4] <= grid_light:center_grid_row[5].center_grid_col[4].light.green_light_on
GrnPixels[5][5] <= grid_light:center_grid_row[5].center_grid_col[5].light.green_light_on
GrnPixels[5][6] <= grid_light:center_grid_row[5].center_grid_col[6].light.green_light_on
GrnPixels[5][7] <= grid_light:center_grid_row[5].center_grid_col[7].light.green_light_on
GrnPixels[5][8] <= grid_light:center_grid_row[5].center_grid_col[8].light.green_light_on
GrnPixels[5][9] <= grid_light:center_grid_row[5].center_grid_col[9].light.green_light_on
GrnPixels[5][10] <= grid_light:center_grid_row[5].center_grid_col[10].light.green_light_on
GrnPixels[5][11] <= grid_light:center_grid_row[5].center_grid_col[11].light.green_light_on
GrnPixels[5][12] <= grid_light:center_grid_row[5].center_grid_col[12].light.green_light_on
GrnPixels[5][13] <= grid_light:center_grid_row[5].center_grid_col[13].light.green_light_on
GrnPixels[5][14] <= grid_light:center_grid_row[5].center_grid_col[14].light.green_light_on
GrnPixels[5][15] <= grid_light:vertical_bars[5].right_col.green_light_on
GrnPixels[6][0] <= grid_light:vertical_bars[6].left_col.green_light_on
GrnPixels[6][1] <= grid_light:center_grid_row[6].center_grid_col[1].light.green_light_on
GrnPixels[6][2] <= grid_light:center_grid_row[6].center_grid_col[2].light.green_light_on
GrnPixels[6][3] <= grid_light:center_grid_row[6].center_grid_col[3].light.green_light_on
GrnPixels[6][4] <= grid_light:center_grid_row[6].center_grid_col[4].light.green_light_on
GrnPixels[6][5] <= grid_light:center_grid_row[6].center_grid_col[5].light.green_light_on
GrnPixels[6][6] <= grid_light:center_grid_row[6].center_grid_col[6].light.green_light_on
GrnPixels[6][7] <= grid_light:center_grid_row[6].center_grid_col[7].light.green_light_on
GrnPixels[6][8] <= grid_light:center_grid_row[6].center_grid_col[8].light.green_light_on
GrnPixels[6][9] <= grid_light:center_grid_row[6].center_grid_col[9].light.green_light_on
GrnPixels[6][10] <= grid_light:center_grid_row[6].center_grid_col[10].light.green_light_on
GrnPixels[6][11] <= grid_light:center_grid_row[6].center_grid_col[11].light.green_light_on
GrnPixels[6][12] <= grid_light:center_grid_row[6].center_grid_col[12].light.green_light_on
GrnPixels[6][13] <= grid_light:center_grid_row[6].center_grid_col[13].light.green_light_on
GrnPixels[6][14] <= grid_light:center_grid_row[6].center_grid_col[14].light.green_light_on
GrnPixels[6][15] <= grid_light:vertical_bars[6].right_col.green_light_on
GrnPixels[7][0] <= grid_light:vertical_bars[7].left_col.green_light_on
GrnPixels[7][1] <= grid_light:center_grid_row[7].center_grid_col[1].light.green_light_on
GrnPixels[7][2] <= grid_light:center_grid_row[7].center_grid_col[2].light.green_light_on
GrnPixels[7][3] <= grid_light:center_grid_row[7].center_grid_col[3].light.green_light_on
GrnPixels[7][4] <= grid_light:center_grid_row[7].center_grid_col[4].light.green_light_on
GrnPixels[7][5] <= grid_light:center_grid_row[7].center_grid_col[5].light.green_light_on
GrnPixels[7][6] <= grid_light:center_grid_row[7].center_grid_col[6].light.green_light_on
GrnPixels[7][7] <= grid_light:center_grid_row[7].center_grid_col[7].light.green_light_on
GrnPixels[7][8] <= grid_light:center_grid_row[7].center_grid_col[8].light.green_light_on
GrnPixels[7][9] <= grid_light:center_grid_row[7].center_grid_col[9].light.green_light_on
GrnPixels[7][10] <= grid_light:center_grid_row[7].center_grid_col[10].light.green_light_on
GrnPixels[7][11] <= grid_light:center_grid_row[7].center_grid_col[11].light.green_light_on
GrnPixels[7][12] <= grid_light:center_grid_row[7].center_grid_col[12].light.green_light_on
GrnPixels[7][13] <= grid_light:center_grid_row[7].center_grid_col[13].light.green_light_on
GrnPixels[7][14] <= grid_light:center_grid_row[7].center_grid_col[14].light.green_light_on
GrnPixels[7][15] <= grid_light:vertical_bars[7].right_col.green_light_on
GrnPixels[8][0] <= grid_light:vertical_bars[8].left_col.green_light_on
GrnPixels[8][1] <= grid_light:center_grid_row[8].center_grid_col[1].light.green_light_on
GrnPixels[8][2] <= grid_light:center_grid_row[8].center_grid_col[2].light.green_light_on
GrnPixels[8][3] <= grid_light:center_grid_row[8].center_grid_col[3].light.green_light_on
GrnPixels[8][4] <= grid_light:center_grid_row[8].center_grid_col[4].light.green_light_on
GrnPixels[8][5] <= grid_light:center_grid_row[8].center_grid_col[5].light.green_light_on
GrnPixels[8][6] <= grid_light:center_grid_row[8].center_grid_col[6].light.green_light_on
GrnPixels[8][7] <= grid_light:center_grid_row[8].center_grid_col[7].light.green_light_on
GrnPixels[8][8] <= grid_light:center_grid_row[8].center_grid_col[8].light.green_light_on
GrnPixels[8][9] <= grid_light:center_grid_row[8].center_grid_col[9].light.green_light_on
GrnPixels[8][10] <= grid_light:center_grid_row[8].center_grid_col[10].light.green_light_on
GrnPixels[8][11] <= grid_light:center_grid_row[8].center_grid_col[11].light.green_light_on
GrnPixels[8][12] <= grid_light:center_grid_row[8].center_grid_col[12].light.green_light_on
GrnPixels[8][13] <= grid_light:center_grid_row[8].center_grid_col[13].light.green_light_on
GrnPixels[8][14] <= grid_light:center_grid_row[8].center_grid_col[14].light.green_light_on
GrnPixels[8][15] <= grid_light:vertical_bars[8].right_col.green_light_on
GrnPixels[9][0] <= grid_light:vertical_bars[9].left_col.green_light_on
GrnPixels[9][1] <= grid_light:center_grid_row[9].center_grid_col[1].light.green_light_on
GrnPixels[9][2] <= grid_light:center_grid_row[9].center_grid_col[2].light.green_light_on
GrnPixels[9][3] <= grid_light:center_grid_row[9].center_grid_col[3].light.green_light_on
GrnPixels[9][4] <= grid_light:center_grid_row[9].center_grid_col[4].light.green_light_on
GrnPixels[9][5] <= grid_light:center_grid_row[9].center_grid_col[5].light.green_light_on
GrnPixels[9][6] <= grid_light:center_grid_row[9].center_grid_col[6].light.green_light_on
GrnPixels[9][7] <= grid_light:center_grid_row[9].center_grid_col[7].light.green_light_on
GrnPixels[9][8] <= grid_light:center_grid_row[9].center_grid_col[8].light.green_light_on
GrnPixels[9][9] <= grid_light:center_grid_row[9].center_grid_col[9].light.green_light_on
GrnPixels[9][10] <= grid_light:center_grid_row[9].center_grid_col[10].light.green_light_on
GrnPixels[9][11] <= grid_light:center_grid_row[9].center_grid_col[11].light.green_light_on
GrnPixels[9][12] <= grid_light:center_grid_row[9].center_grid_col[12].light.green_light_on
GrnPixels[9][13] <= grid_light:center_grid_row[9].center_grid_col[13].light.green_light_on
GrnPixels[9][14] <= grid_light:center_grid_row[9].center_grid_col[14].light.green_light_on
GrnPixels[9][15] <= grid_light:vertical_bars[9].right_col.green_light_on
GrnPixels[10][0] <= grid_light:vertical_bars[10].left_col.green_light_on
GrnPixels[10][1] <= grid_light:center_grid_row[10].center_grid_col[1].light.green_light_on
GrnPixels[10][2] <= grid_light:center_grid_row[10].center_grid_col[2].light.green_light_on
GrnPixels[10][3] <= grid_light:center_grid_row[10].center_grid_col[3].light.green_light_on
GrnPixels[10][4] <= grid_light:center_grid_row[10].center_grid_col[4].light.green_light_on
GrnPixels[10][5] <= grid_light:center_grid_row[10].center_grid_col[5].light.green_light_on
GrnPixels[10][6] <= grid_light:center_grid_row[10].center_grid_col[6].light.green_light_on
GrnPixels[10][7] <= grid_light:center_grid_row[10].center_grid_col[7].light.green_light_on
GrnPixels[10][8] <= grid_light:center_grid_row[10].center_grid_col[8].light.green_light_on
GrnPixels[10][9] <= grid_light:center_grid_row[10].center_grid_col[9].light.green_light_on
GrnPixels[10][10] <= grid_light:center_grid_row[10].center_grid_col[10].light.green_light_on
GrnPixels[10][11] <= grid_light:center_grid_row[10].center_grid_col[11].light.green_light_on
GrnPixels[10][12] <= grid_light:center_grid_row[10].center_grid_col[12].light.green_light_on
GrnPixels[10][13] <= grid_light:center_grid_row[10].center_grid_col[13].light.green_light_on
GrnPixels[10][14] <= grid_light:center_grid_row[10].center_grid_col[14].light.green_light_on
GrnPixels[10][15] <= grid_light:vertical_bars[10].right_col.green_light_on
GrnPixels[11][0] <= grid_light:vertical_bars[11].left_col.green_light_on
GrnPixels[11][1] <= grid_light:center_grid_row[11].center_grid_col[1].light.green_light_on
GrnPixels[11][2] <= grid_light:center_grid_row[11].center_grid_col[2].light.green_light_on
GrnPixels[11][3] <= grid_light:center_grid_row[11].center_grid_col[3].light.green_light_on
GrnPixels[11][4] <= grid_light:center_grid_row[11].center_grid_col[4].light.green_light_on
GrnPixels[11][5] <= grid_light:center_grid_row[11].center_grid_col[5].light.green_light_on
GrnPixels[11][6] <= grid_light:center_grid_row[11].center_grid_col[6].light.green_light_on
GrnPixels[11][7] <= grid_light:center_grid_row[11].center_grid_col[7].light.green_light_on
GrnPixels[11][8] <= grid_light:center_grid_row[11].center_grid_col[8].light.green_light_on
GrnPixels[11][9] <= grid_light:center_grid_row[11].center_grid_col[9].light.green_light_on
GrnPixels[11][10] <= grid_light:center_grid_row[11].center_grid_col[10].light.green_light_on
GrnPixels[11][11] <= grid_light:center_grid_row[11].center_grid_col[11].light.green_light_on
GrnPixels[11][12] <= grid_light:center_grid_row[11].center_grid_col[12].light.green_light_on
GrnPixels[11][13] <= grid_light:center_grid_row[11].center_grid_col[13].light.green_light_on
GrnPixels[11][14] <= grid_light:center_grid_row[11].center_grid_col[14].light.green_light_on
GrnPixels[11][15] <= grid_light:vertical_bars[11].right_col.green_light_on
GrnPixels[12][0] <= grid_light:vertical_bars[12].left_col.green_light_on
GrnPixels[12][1] <= grid_light:center_grid_row[12].center_grid_col[1].light.green_light_on
GrnPixels[12][2] <= grid_light:center_grid_row[12].center_grid_col[2].light.green_light_on
GrnPixels[12][3] <= grid_light:center_grid_row[12].center_grid_col[3].light.green_light_on
GrnPixels[12][4] <= grid_light:center_grid_row[12].center_grid_col[4].light.green_light_on
GrnPixels[12][5] <= grid_light:center_grid_row[12].center_grid_col[5].light.green_light_on
GrnPixels[12][6] <= grid_light:center_grid_row[12].center_grid_col[6].light.green_light_on
GrnPixels[12][7] <= grid_light:center_grid_row[12].center_grid_col[7].light.green_light_on
GrnPixels[12][8] <= grid_light:center_grid_row[12].center_grid_col[8].light.green_light_on
GrnPixels[12][9] <= grid_light:center_grid_row[12].center_grid_col[9].light.green_light_on
GrnPixels[12][10] <= grid_light:center_grid_row[12].center_grid_col[10].light.green_light_on
GrnPixels[12][11] <= grid_light:center_grid_row[12].center_grid_col[11].light.green_light_on
GrnPixels[12][12] <= grid_light:center_grid_row[12].center_grid_col[12].light.green_light_on
GrnPixels[12][13] <= grid_light:center_grid_row[12].center_grid_col[13].light.green_light_on
GrnPixels[12][14] <= grid_light:center_grid_row[12].center_grid_col[14].light.green_light_on
GrnPixels[12][15] <= grid_light:vertical_bars[12].right_col.green_light_on
GrnPixels[13][0] <= grid_light:vertical_bars[13].left_col.green_light_on
GrnPixels[13][1] <= grid_light:center_grid_row[13].center_grid_col[1].light.green_light_on
GrnPixels[13][2] <= grid_light:center_grid_row[13].center_grid_col[2].light.green_light_on
GrnPixels[13][3] <= grid_light:center_grid_row[13].center_grid_col[3].light.green_light_on
GrnPixels[13][4] <= grid_light:center_grid_row[13].center_grid_col[4].light.green_light_on
GrnPixels[13][5] <= grid_light:center_grid_row[13].center_grid_col[5].light.green_light_on
GrnPixels[13][6] <= grid_light:center_grid_row[13].center_grid_col[6].light.green_light_on
GrnPixels[13][7] <= grid_light:center_grid_row[13].center_grid_col[7].light.green_light_on
GrnPixels[13][8] <= grid_light:center_grid_row[13].center_grid_col[8].light.green_light_on
GrnPixels[13][9] <= grid_light:center_grid_row[13].center_grid_col[9].light.green_light_on
GrnPixels[13][10] <= grid_light:center_grid_row[13].center_grid_col[10].light.green_light_on
GrnPixels[13][11] <= grid_light:center_grid_row[13].center_grid_col[11].light.green_light_on
GrnPixels[13][12] <= grid_light:center_grid_row[13].center_grid_col[12].light.green_light_on
GrnPixels[13][13] <= grid_light:center_grid_row[13].center_grid_col[13].light.green_light_on
GrnPixels[13][14] <= grid_light:center_grid_row[13].center_grid_col[14].light.green_light_on
GrnPixels[13][15] <= grid_light:vertical_bars[13].right_col.green_light_on
GrnPixels[14][0] <= grid_light:vertical_bars[14].left_col.green_light_on
GrnPixels[14][1] <= grid_light:center_grid_row[14].center_grid_col[1].light.green_light_on
GrnPixels[14][2] <= grid_light:center_grid_row[14].center_grid_col[2].light.green_light_on
GrnPixels[14][3] <= grid_light:center_grid_row[14].center_grid_col[3].light.green_light_on
GrnPixels[14][4] <= grid_light:center_grid_row[14].center_grid_col[4].light.green_light_on
GrnPixels[14][5] <= grid_light:center_grid_row[14].center_grid_col[5].light.green_light_on
GrnPixels[14][6] <= grid_light:center_grid_row[14].center_grid_col[6].light.green_light_on
GrnPixels[14][7] <= grid_light:center_grid_row[14].center_grid_col[7].light.green_light_on
GrnPixels[14][8] <= grid_light:center_grid_row[14].center_grid_col[8].light.green_light_on
GrnPixels[14][9] <= grid_light:center_grid_row[14].center_grid_col[9].light.green_light_on
GrnPixels[14][10] <= grid_light:center_grid_row[14].center_grid_col[10].light.green_light_on
GrnPixels[14][11] <= grid_light:center_grid_row[14].center_grid_col[11].light.green_light_on
GrnPixels[14][12] <= grid_light:center_grid_row[14].center_grid_col[12].light.green_light_on
GrnPixels[14][13] <= grid_light:center_grid_row[14].center_grid_col[13].light.green_light_on
GrnPixels[14][14] <= grid_light:center_grid_row[14].center_grid_col[14].light.green_light_on
GrnPixels[14][15] <= grid_light:vertical_bars[14].right_col.green_light_on
GrnPixels[15][0] <= grid_light:bot_left.green_light_on
GrnPixels[15][1] <= grid_light:horizontal_bars[1].bot_row.green_light_on
GrnPixels[15][2] <= grid_light:horizontal_bars[2].bot_row.green_light_on
GrnPixels[15][3] <= grid_light:horizontal_bars[3].bot_row.green_light_on
GrnPixels[15][4] <= grid_light:horizontal_bars[4].bot_row.green_light_on
GrnPixels[15][5] <= grid_light:horizontal_bars[5].bot_row.green_light_on
GrnPixels[15][6] <= grid_light:horizontal_bars[6].bot_row.green_light_on
GrnPixels[15][7] <= grid_light:horizontal_bars[7].bot_row.green_light_on
GrnPixels[15][8] <= grid_light:horizontal_bars[8].bot_row.green_light_on
GrnPixels[15][9] <= grid_light:horizontal_bars[9].bot_row.green_light_on
GrnPixels[15][10] <= grid_light:horizontal_bars[10].bot_row.green_light_on
GrnPixels[15][11] <= grid_light:horizontal_bars[11].bot_row.green_light_on
GrnPixels[15][12] <= grid_light:horizontal_bars[12].bot_row.green_light_on
GrnPixels[15][13] <= grid_light:horizontal_bars[13].bot_row.green_light_on
GrnPixels[15][14] <= grid_light:horizontal_bars[14].bot_row.green_light_on
GrnPixels[15][15] <= grid_light:bot_right.green_light_on
eating <= Equal0.DB_MAX_OUTPUT_PORT_TYPE
game_over <= game_over~reg0.DB_MAX_OUTPUT_PORT_TYPE
snake_len[0] <= length:len.snake_length[0]
snake_len[1] <= length:len.snake_length[1]
snake_len[2] <= length:len.snake_length[2]
snake_len[3] <= length:len.snake_length[3]
snake_len[4] <= length:len.snake_length[4]
snake_len[5] <= length:len.snake_length[5]
snake_len[6] <= length:len.snake_length[6]
snake_len[7] <= length:len.snake_length[7]
RedPixels[0][0] => RedPixels[0][0].IN1
RedPixels[0][1] => RedPixels[0][1].IN1
RedPixels[0][2] => RedPixels[0][2].IN1
RedPixels[0][3] => RedPixels[0][3].IN1
RedPixels[0][4] => RedPixels[0][4].IN1
RedPixels[0][5] => RedPixels[0][5].IN1
RedPixels[0][6] => RedPixels[0][6].IN1
RedPixels[0][7] => RedPixels[0][7].IN1
RedPixels[0][8] => RedPixels[0][8].IN1
RedPixels[0][9] => RedPixels[0][9].IN1
RedPixels[0][10] => RedPixels[0][10].IN1
RedPixels[0][11] => RedPixels[0][11].IN1
RedPixels[0][12] => RedPixels[0][12].IN1
RedPixels[0][13] => RedPixels[0][13].IN1
RedPixels[0][14] => RedPixels[0][14].IN1
RedPixels[0][15] => RedPixels[0][15].IN1
RedPixels[1][0] => RedPixels[1][0].IN1
RedPixels[1][1] => RedPixels[1][1].IN1
RedPixels[1][2] => RedPixels[1][2].IN1
RedPixels[1][3] => RedPixels[1][3].IN1
RedPixels[1][4] => RedPixels[1][4].IN1
RedPixels[1][5] => RedPixels[1][5].IN1
RedPixels[1][6] => RedPixels[1][6].IN1
RedPixels[1][7] => RedPixels[1][7].IN1
RedPixels[1][8] => RedPixels[1][8].IN1
RedPixels[1][9] => RedPixels[1][9].IN1
RedPixels[1][10] => RedPixels[1][10].IN1
RedPixels[1][11] => RedPixels[1][11].IN1
RedPixels[1][12] => RedPixels[1][12].IN1
RedPixels[1][13] => RedPixels[1][13].IN1
RedPixels[1][14] => RedPixels[1][14].IN1
RedPixels[1][15] => RedPixels[1][15].IN1
RedPixels[2][0] => RedPixels[2][0].IN1
RedPixels[2][1] => RedPixels[2][1].IN1
RedPixels[2][2] => RedPixels[2][2].IN1
RedPixels[2][3] => RedPixels[2][3].IN1
RedPixels[2][4] => RedPixels[2][4].IN1
RedPixels[2][5] => RedPixels[2][5].IN1
RedPixels[2][6] => RedPixels[2][6].IN1
RedPixels[2][7] => RedPixels[2][7].IN1
RedPixels[2][8] => RedPixels[2][8].IN1
RedPixels[2][9] => RedPixels[2][9].IN1
RedPixels[2][10] => RedPixels[2][10].IN1
RedPixels[2][11] => RedPixels[2][11].IN1
RedPixels[2][12] => RedPixels[2][12].IN1
RedPixels[2][13] => RedPixels[2][13].IN1
RedPixels[2][14] => RedPixels[2][14].IN1
RedPixels[2][15] => RedPixels[2][15].IN1
RedPixels[3][0] => RedPixels[3][0].IN1
RedPixels[3][1] => RedPixels[3][1].IN1
RedPixels[3][2] => RedPixels[3][2].IN1
RedPixels[3][3] => RedPixels[3][3].IN1
RedPixels[3][4] => RedPixels[3][4].IN1
RedPixels[3][5] => RedPixels[3][5].IN1
RedPixels[3][6] => RedPixels[3][6].IN1
RedPixels[3][7] => RedPixels[3][7].IN1
RedPixels[3][8] => RedPixels[3][8].IN1
RedPixels[3][9] => RedPixels[3][9].IN1
RedPixels[3][10] => RedPixels[3][10].IN1
RedPixels[3][11] => RedPixels[3][11].IN1
RedPixels[3][12] => RedPixels[3][12].IN1
RedPixels[3][13] => RedPixels[3][13].IN1
RedPixels[3][14] => RedPixels[3][14].IN1
RedPixels[3][15] => RedPixels[3][15].IN1
RedPixels[4][0] => RedPixels[4][0].IN1
RedPixels[4][1] => RedPixels[4][1].IN1
RedPixels[4][2] => RedPixels[4][2].IN1
RedPixels[4][3] => RedPixels[4][3].IN1
RedPixels[4][4] => RedPixels[4][4].IN1
RedPixels[4][5] => RedPixels[4][5].IN1
RedPixels[4][6] => RedPixels[4][6].IN1
RedPixels[4][7] => RedPixels[4][7].IN1
RedPixels[4][8] => RedPixels[4][8].IN1
RedPixels[4][9] => RedPixels[4][9].IN1
RedPixels[4][10] => RedPixels[4][10].IN1
RedPixels[4][11] => RedPixels[4][11].IN1
RedPixels[4][12] => RedPixels[4][12].IN1
RedPixels[4][13] => RedPixels[4][13].IN1
RedPixels[4][14] => RedPixels[4][14].IN1
RedPixels[4][15] => RedPixels[4][15].IN1
RedPixels[5][0] => RedPixels[5][0].IN1
RedPixels[5][1] => RedPixels[5][1].IN1
RedPixels[5][2] => RedPixels[5][2].IN1
RedPixels[5][3] => RedPixels[5][3].IN1
RedPixels[5][4] => RedPixels[5][4].IN1
RedPixels[5][5] => RedPixels[5][5].IN1
RedPixels[5][6] => RedPixels[5][6].IN1
RedPixels[5][7] => RedPixels[5][7].IN1
RedPixels[5][8] => RedPixels[5][8].IN1
RedPixels[5][9] => RedPixels[5][9].IN1
RedPixels[5][10] => RedPixels[5][10].IN1
RedPixels[5][11] => RedPixels[5][11].IN1
RedPixels[5][12] => RedPixels[5][12].IN1
RedPixels[5][13] => RedPixels[5][13].IN1
RedPixels[5][14] => RedPixels[5][14].IN1
RedPixels[5][15] => RedPixels[5][15].IN1
RedPixels[6][0] => RedPixels[6][0].IN1
RedPixels[6][1] => RedPixels[6][1].IN1
RedPixels[6][2] => RedPixels[6][2].IN1
RedPixels[6][3] => RedPixels[6][3].IN1
RedPixels[6][4] => RedPixels[6][4].IN1
RedPixels[6][5] => RedPixels[6][5].IN1
RedPixels[6][6] => RedPixels[6][6].IN1
RedPixels[6][7] => RedPixels[6][7].IN1
RedPixels[6][8] => RedPixels[6][8].IN1
RedPixels[6][9] => RedPixels[6][9].IN1
RedPixels[6][10] => RedPixels[6][10].IN1
RedPixels[6][11] => RedPixels[6][11].IN1
RedPixels[6][12] => RedPixels[6][12].IN1
RedPixels[6][13] => RedPixels[6][13].IN1
RedPixels[6][14] => RedPixels[6][14].IN1
RedPixels[6][15] => RedPixels[6][15].IN1
RedPixels[7][0] => RedPixels[7][0].IN1
RedPixels[7][1] => RedPixels[7][1].IN1
RedPixels[7][2] => RedPixels[7][2].IN1
RedPixels[7][3] => RedPixels[7][3].IN1
RedPixels[7][4] => RedPixels[7][4].IN1
RedPixels[7][5] => RedPixels[7][5].IN1
RedPixels[7][6] => RedPixels[7][6].IN1
RedPixels[7][7] => RedPixels[7][7].IN1
RedPixels[7][8] => RedPixels[7][8].IN1
RedPixels[7][9] => RedPixels[7][9].IN1
RedPixels[7][10] => RedPixels[7][10].IN1
RedPixels[7][11] => RedPixels[7][11].IN1
RedPixels[7][12] => RedPixels[7][12].IN1
RedPixels[7][13] => RedPixels[7][13].IN1
RedPixels[7][14] => RedPixels[7][14].IN1
RedPixels[7][15] => RedPixels[7][15].IN1
RedPixels[8][0] => RedPixels[8][0].IN1
RedPixels[8][1] => RedPixels[8][1].IN1
RedPixels[8][2] => RedPixels[8][2].IN1
RedPixels[8][3] => RedPixels[8][3].IN1
RedPixels[8][4] => RedPixels[8][4].IN1
RedPixels[8][5] => RedPixels[8][5].IN1
RedPixels[8][6] => RedPixels[8][6].IN1
RedPixels[8][7] => RedPixels[8][7].IN1
RedPixels[8][8] => RedPixels[8][8].IN1
RedPixels[8][9] => RedPixels[8][9].IN1
RedPixels[8][10] => RedPixels[8][10].IN1
RedPixels[8][11] => RedPixels[8][11].IN1
RedPixels[8][12] => RedPixels[8][12].IN1
RedPixels[8][13] => RedPixels[8][13].IN1
RedPixels[8][14] => RedPixels[8][14].IN1
RedPixels[8][15] => RedPixels[8][15].IN1
RedPixels[9][0] => RedPixels[9][0].IN1
RedPixels[9][1] => RedPixels[9][1].IN1
RedPixels[9][2] => RedPixels[9][2].IN1
RedPixels[9][3] => RedPixels[9][3].IN1
RedPixels[9][4] => RedPixels[9][4].IN1
RedPixels[9][5] => RedPixels[9][5].IN1
RedPixels[9][6] => RedPixels[9][6].IN1
RedPixels[9][7] => RedPixels[9][7].IN1
RedPixels[9][8] => RedPixels[9][8].IN1
RedPixels[9][9] => RedPixels[9][9].IN1
RedPixels[9][10] => RedPixels[9][10].IN1
RedPixels[9][11] => RedPixels[9][11].IN1
RedPixels[9][12] => RedPixels[9][12].IN1
RedPixels[9][13] => RedPixels[9][13].IN1
RedPixels[9][14] => RedPixels[9][14].IN1
RedPixels[9][15] => RedPixels[9][15].IN1
RedPixels[10][0] => RedPixels[10][0].IN1
RedPixels[10][1] => RedPixels[10][1].IN1
RedPixels[10][2] => RedPixels[10][2].IN1
RedPixels[10][3] => RedPixels[10][3].IN1
RedPixels[10][4] => RedPixels[10][4].IN1
RedPixels[10][5] => RedPixels[10][5].IN1
RedPixels[10][6] => RedPixels[10][6].IN1
RedPixels[10][7] => RedPixels[10][7].IN1
RedPixels[10][8] => RedPixels[10][8].IN1
RedPixels[10][9] => RedPixels[10][9].IN1
RedPixels[10][10] => RedPixels[10][10].IN1
RedPixels[10][11] => RedPixels[10][11].IN1
RedPixels[10][12] => RedPixels[10][12].IN1
RedPixels[10][13] => RedPixels[10][13].IN1
RedPixels[10][14] => RedPixels[10][14].IN1
RedPixels[10][15] => RedPixels[10][15].IN1
RedPixels[11][0] => RedPixels[11][0].IN1
RedPixels[11][1] => RedPixels[11][1].IN1
RedPixels[11][2] => RedPixels[11][2].IN1
RedPixels[11][3] => RedPixels[11][3].IN1
RedPixels[11][4] => RedPixels[11][4].IN1
RedPixels[11][5] => RedPixels[11][5].IN1
RedPixels[11][6] => RedPixels[11][6].IN1
RedPixels[11][7] => RedPixels[11][7].IN1
RedPixels[11][8] => RedPixels[11][8].IN1
RedPixels[11][9] => RedPixels[11][9].IN1
RedPixels[11][10] => RedPixels[11][10].IN1
RedPixels[11][11] => RedPixels[11][11].IN1
RedPixels[11][12] => RedPixels[11][12].IN1
RedPixels[11][13] => RedPixels[11][13].IN1
RedPixels[11][14] => RedPixels[11][14].IN1
RedPixels[11][15] => RedPixels[11][15].IN1
RedPixels[12][0] => RedPixels[12][0].IN1
RedPixels[12][1] => RedPixels[12][1].IN1
RedPixels[12][2] => RedPixels[12][2].IN1
RedPixels[12][3] => RedPixels[12][3].IN1
RedPixels[12][4] => RedPixels[12][4].IN1
RedPixels[12][5] => RedPixels[12][5].IN1
RedPixels[12][6] => RedPixels[12][6].IN1
RedPixels[12][7] => RedPixels[12][7].IN1
RedPixels[12][8] => RedPixels[12][8].IN1
RedPixels[12][9] => RedPixels[12][9].IN1
RedPixels[12][10] => RedPixels[12][10].IN1
RedPixels[12][11] => RedPixels[12][11].IN1
RedPixels[12][12] => RedPixels[12][12].IN1
RedPixels[12][13] => RedPixels[12][13].IN1
RedPixels[12][14] => RedPixels[12][14].IN1
RedPixels[12][15] => RedPixels[12][15].IN1
RedPixels[13][0] => RedPixels[13][0].IN1
RedPixels[13][1] => RedPixels[13][1].IN1
RedPixels[13][2] => RedPixels[13][2].IN1
RedPixels[13][3] => RedPixels[13][3].IN1
RedPixels[13][4] => RedPixels[13][4].IN1
RedPixels[13][5] => RedPixels[13][5].IN1
RedPixels[13][6] => RedPixels[13][6].IN1
RedPixels[13][7] => RedPixels[13][7].IN1
RedPixels[13][8] => RedPixels[13][8].IN1
RedPixels[13][9] => RedPixels[13][9].IN1
RedPixels[13][10] => RedPixels[13][10].IN1
RedPixels[13][11] => RedPixels[13][11].IN1
RedPixels[13][12] => RedPixels[13][12].IN1
RedPixels[13][13] => RedPixels[13][13].IN1
RedPixels[13][14] => RedPixels[13][14].IN1
RedPixels[13][15] => RedPixels[13][15].IN1
RedPixels[14][0] => RedPixels[14][0].IN1
RedPixels[14][1] => RedPixels[14][1].IN1
RedPixels[14][2] => RedPixels[14][2].IN1
RedPixels[14][3] => RedPixels[14][3].IN1
RedPixels[14][4] => RedPixels[14][4].IN1
RedPixels[14][5] => RedPixels[14][5].IN1
RedPixels[14][6] => RedPixels[14][6].IN1
RedPixels[14][7] => RedPixels[14][7].IN1
RedPixels[14][8] => RedPixels[14][8].IN1
RedPixels[14][9] => RedPixels[14][9].IN1
RedPixels[14][10] => RedPixels[14][10].IN1
RedPixels[14][11] => RedPixels[14][11].IN1
RedPixels[14][12] => RedPixels[14][12].IN1
RedPixels[14][13] => RedPixels[14][13].IN1
RedPixels[14][14] => RedPixels[14][14].IN1
RedPixels[14][15] => RedPixels[14][15].IN1
RedPixels[15][0] => RedPixels[15][0].IN1
RedPixels[15][1] => RedPixels[15][1].IN1
RedPixels[15][2] => RedPixels[15][2].IN1
RedPixels[15][3] => RedPixels[15][3].IN1
RedPixels[15][4] => RedPixels[15][4].IN1
RedPixels[15][5] => RedPixels[15][5].IN1
RedPixels[15][6] => RedPixels[15][6].IN1
RedPixels[15][7] => RedPixels[15][7].IN1
RedPixels[15][8] => RedPixels[15][8].IN1
RedPixels[15][9] => RedPixels[15][9].IN1
RedPixels[15][10] => RedPixels[15][10].IN1
RedPixels[15][11] => RedPixels[15][11].IN1
RedPixels[15][12] => RedPixels[15][12].IN1
RedPixels[15][13] => RedPixels[15][13].IN1
RedPixels[15][14] => RedPixels[15][14].IN1
RedPixels[15][15] => RedPixels[15][15].IN1
dir[0] => dir[0].IN256
dir[1] => dir[1].IN256
SW[0] => ~NO_FANOUT~
SW[1] => ~NO_FANOUT~
SW[2] => ~NO_FANOUT~
SW[3] => ~NO_FANOUT~
SW[4] => ~NO_FANOUT~
SW[5] => ~NO_FANOUT~
SW[6] => ~NO_FANOUT~
SW[7] => ~NO_FANOUT~
SW[8] => ~NO_FANOUT~
SW[9] => ~NO_FANOUT~
clk => length:len.clk
clk => grid_light:tail.clk
clk => grid_light:thorax.clk
clk => grid_light:head.clk
clk => grid_light:top_right.clk
clk => grid_light:bot_right.clk
clk => grid_light:bot_left.clk
clk => grid_light:vertical_bars[1].right_col.clk
clk => grid_light:vertical_bars[2].right_col.clk
clk => grid_light:vertical_bars[3].left_col.clk
clk => grid_light:vertical_bars[3].right_col.clk
clk => grid_light:vertical_bars[4].left_col.clk
clk => grid_light:vertical_bars[4].right_col.clk
clk => grid_light:vertical_bars[5].left_col.clk
clk => grid_light:vertical_bars[5].right_col.clk
clk => grid_light:vertical_bars[6].left_col.clk
clk => grid_light:vertical_bars[6].right_col.clk
clk => grid_light:vertical_bars[7].left_col.clk
clk => grid_light:vertical_bars[7].right_col.clk
clk => grid_light:vertical_bars[8].left_col.clk
clk => grid_light:vertical_bars[8].right_col.clk
clk => grid_light:vertical_bars[9].left_col.clk
clk => grid_light:vertical_bars[9].right_col.clk
clk => grid_light:vertical_bars[10].left_col.clk
clk => grid_light:vertical_bars[10].right_col.clk
clk => grid_light:vertical_bars[11].left_col.clk
clk => grid_light:vertical_bars[11].right_col.clk
clk => grid_light:vertical_bars[12].left_col.clk
clk => grid_light:vertical_bars[12].right_col.clk
clk => grid_light:vertical_bars[13].left_col.clk
clk => grid_light:vertical_bars[13].right_col.clk
clk => grid_light:vertical_bars[14].left_col.clk
clk => grid_light:vertical_bars[14].right_col.clk
clk => grid_light:horizontal_bars[1].top_row.clk
clk => grid_light:horizontal_bars[1].bot_row.clk
clk => grid_light:horizontal_bars[2].top_row.clk
clk => grid_light:horizontal_bars[2].bot_row.clk
clk => grid_light:horizontal_bars[3].top_row.clk
clk => grid_light:horizontal_bars[3].bot_row.clk
clk => grid_light:horizontal_bars[4].top_row.clk
clk => grid_light:horizontal_bars[4].bot_row.clk
clk => grid_light:horizontal_bars[5].top_row.clk
clk => grid_light:horizontal_bars[5].bot_row.clk
clk => grid_light:horizontal_bars[6].top_row.clk
clk => grid_light:horizontal_bars[6].bot_row.clk
clk => grid_light:horizontal_bars[7].top_row.clk
clk => grid_light:horizontal_bars[7].bot_row.clk
clk => grid_light:horizontal_bars[8].top_row.clk
clk => grid_light:horizontal_bars[8].bot_row.clk
clk => grid_light:horizontal_bars[9].top_row.clk
clk => grid_light:horizontal_bars[9].bot_row.clk
clk => grid_light:horizontal_bars[10].top_row.clk
clk => grid_light:horizontal_bars[10].bot_row.clk
clk => grid_light:horizontal_bars[11].top_row.clk
clk => grid_light:horizontal_bars[11].bot_row.clk
clk => grid_light:horizontal_bars[12].top_row.clk
clk => grid_light:horizontal_bars[12].bot_row.clk
clk => grid_light:horizontal_bars[13].top_row.clk
clk => grid_light:horizontal_bars[13].bot_row.clk
clk => grid_light:horizontal_bars[14].top_row.clk
clk => grid_light:horizontal_bars[14].bot_row.clk
clk => grid_light:center_grid_row[1].center_grid_col[1].light.clk
clk => grid_light:center_grid_row[1].center_grid_col[2].light.clk
clk => grid_light:center_grid_row[1].center_grid_col[3].light.clk
clk => grid_light:center_grid_row[1].center_grid_col[4].light.clk
clk => grid_light:center_grid_row[1].center_grid_col[5].light.clk
clk => grid_light:center_grid_row[1].center_grid_col[6].light.clk
clk => grid_light:center_grid_row[1].center_grid_col[7].light.clk
clk => grid_light:center_grid_row[1].center_grid_col[8].light.clk
clk => grid_light:center_grid_row[1].center_grid_col[9].light.clk
clk => grid_light:center_grid_row[1].center_grid_col[10].light.clk
clk => grid_light:center_grid_row[1].center_grid_col[11].light.clk
clk => grid_light:center_grid_row[1].center_grid_col[12].light.clk
clk => grid_light:center_grid_row[1].center_grid_col[13].light.clk
clk => grid_light:center_grid_row[1].center_grid_col[14].light.clk
clk => grid_light:center_grid_row[2].center_grid_col[1].light.clk
clk => grid_light:center_grid_row[2].center_grid_col[2].light.clk
clk => grid_light:center_grid_row[2].center_grid_col[3].light.clk
clk => grid_light:center_grid_row[2].center_grid_col[4].light.clk
clk => grid_light:center_grid_row[2].center_grid_col[5].light.clk
clk => grid_light:center_grid_row[2].center_grid_col[6].light.clk
clk => grid_light:center_grid_row[2].center_grid_col[7].light.clk
clk => grid_light:center_grid_row[2].center_grid_col[8].light.clk
clk => grid_light:center_grid_row[2].center_grid_col[9].light.clk
clk => grid_light:center_grid_row[2].center_grid_col[10].light.clk
clk => grid_light:center_grid_row[2].center_grid_col[11].light.clk
clk => grid_light:center_grid_row[2].center_grid_col[12].light.clk
clk => grid_light:center_grid_row[2].center_grid_col[13].light.clk
clk => grid_light:center_grid_row[2].center_grid_col[14].light.clk
clk => grid_light:center_grid_row[3].center_grid_col[1].light.clk
clk => grid_light:center_grid_row[3].center_grid_col[2].light.clk
clk => grid_light:center_grid_row[3].center_grid_col[3].light.clk
clk => grid_light:center_grid_row[3].center_grid_col[4].light.clk
clk => grid_light:center_grid_row[3].center_grid_col[5].light.clk
clk => grid_light:center_grid_row[3].center_grid_col[6].light.clk
clk => grid_light:center_grid_row[3].center_grid_col[7].light.clk
clk => grid_light:center_grid_row[3].center_grid_col[8].light.clk
clk => grid_light:center_grid_row[3].center_grid_col[9].light.clk
clk => grid_light:center_grid_row[3].center_grid_col[10].light.clk
clk => grid_light:center_grid_row[3].center_grid_col[11].light.clk
clk => grid_light:center_grid_row[3].center_grid_col[12].light.clk
clk => grid_light:center_grid_row[3].center_grid_col[13].light.clk
clk => grid_light:center_grid_row[3].center_grid_col[14].light.clk
clk => grid_light:center_grid_row[4].center_grid_col[1].light.clk
clk => grid_light:center_grid_row[4].center_grid_col[2].light.clk
clk => grid_light:center_grid_row[4].center_grid_col[3].light.clk
clk => grid_light:center_grid_row[4].center_grid_col[4].light.clk
clk => grid_light:center_grid_row[4].center_grid_col[5].light.clk
clk => grid_light:center_grid_row[4].center_grid_col[6].light.clk
clk => grid_light:center_grid_row[4].center_grid_col[7].light.clk
clk => grid_light:center_grid_row[4].center_grid_col[8].light.clk
clk => grid_light:center_grid_row[4].center_grid_col[9].light.clk
clk => grid_light:center_grid_row[4].center_grid_col[10].light.clk
clk => grid_light:center_grid_row[4].center_grid_col[11].light.clk
clk => grid_light:center_grid_row[4].center_grid_col[12].light.clk
clk => grid_light:center_grid_row[4].center_grid_col[13].light.clk
clk => grid_light:center_grid_row[4].center_grid_col[14].light.clk
clk => grid_light:center_grid_row[5].center_grid_col[1].light.clk
clk => grid_light:center_grid_row[5].center_grid_col[2].light.clk
clk => grid_light:center_grid_row[5].center_grid_col[3].light.clk
clk => grid_light:center_grid_row[5].center_grid_col[4].light.clk
clk => grid_light:center_grid_row[5].center_grid_col[5].light.clk
clk => grid_light:center_grid_row[5].center_grid_col[6].light.clk
clk => grid_light:center_grid_row[5].center_grid_col[7].light.clk
clk => grid_light:center_grid_row[5].center_grid_col[8].light.clk
clk => grid_light:center_grid_row[5].center_grid_col[9].light.clk
clk => grid_light:center_grid_row[5].center_grid_col[10].light.clk
clk => grid_light:center_grid_row[5].center_grid_col[11].light.clk
clk => grid_light:center_grid_row[5].center_grid_col[12].light.clk
clk => grid_light:center_grid_row[5].center_grid_col[13].light.clk
clk => grid_light:center_grid_row[5].center_grid_col[14].light.clk
clk => grid_light:center_grid_row[6].center_grid_col[1].light.clk
clk => grid_light:center_grid_row[6].center_grid_col[2].light.clk
clk => grid_light:center_grid_row[6].center_grid_col[3].light.clk
clk => grid_light:center_grid_row[6].center_grid_col[4].light.clk
clk => grid_light:center_grid_row[6].center_grid_col[5].light.clk
clk => grid_light:center_grid_row[6].center_grid_col[6].light.clk
clk => grid_light:center_grid_row[6].center_grid_col[7].light.clk
clk => grid_light:center_grid_row[6].center_grid_col[8].light.clk
clk => grid_light:center_grid_row[6].center_grid_col[9].light.clk
clk => grid_light:center_grid_row[6].center_grid_col[10].light.clk
clk => grid_light:center_grid_row[6].center_grid_col[11].light.clk
clk => grid_light:center_grid_row[6].center_grid_col[12].light.clk
clk => grid_light:center_grid_row[6].center_grid_col[13].light.clk
clk => grid_light:center_grid_row[6].center_grid_col[14].light.clk
clk => grid_light:center_grid_row[7].center_grid_col[1].light.clk
clk => grid_light:center_grid_row[7].center_grid_col[2].light.clk
clk => grid_light:center_grid_row[7].center_grid_col[3].light.clk
clk => grid_light:center_grid_row[7].center_grid_col[4].light.clk
clk => grid_light:center_grid_row[7].center_grid_col[5].light.clk
clk => grid_light:center_grid_row[7].center_grid_col[6].light.clk
clk => grid_light:center_grid_row[7].center_grid_col[7].light.clk
clk => grid_light:center_grid_row[7].center_grid_col[8].light.clk
clk => grid_light:center_grid_row[7].center_grid_col[9].light.clk
clk => grid_light:center_grid_row[7].center_grid_col[10].light.clk
clk => grid_light:center_grid_row[7].center_grid_col[11].light.clk
clk => grid_light:center_grid_row[7].center_grid_col[12].light.clk
clk => grid_light:center_grid_row[7].center_grid_col[13].light.clk
clk => grid_light:center_grid_row[7].center_grid_col[14].light.clk
clk => grid_light:center_grid_row[8].center_grid_col[1].light.clk
clk => grid_light:center_grid_row[8].center_grid_col[2].light.clk
clk => grid_light:center_grid_row[8].center_grid_col[3].light.clk
clk => grid_light:center_grid_row[8].center_grid_col[4].light.clk
clk => grid_light:center_grid_row[8].center_grid_col[5].light.clk
clk => grid_light:center_grid_row[8].center_grid_col[6].light.clk
clk => grid_light:center_grid_row[8].center_grid_col[7].light.clk
clk => grid_light:center_grid_row[8].center_grid_col[8].light.clk
clk => grid_light:center_grid_row[8].center_grid_col[9].light.clk
clk => grid_light:center_grid_row[8].center_grid_col[10].light.clk
clk => grid_light:center_grid_row[8].center_grid_col[11].light.clk
clk => grid_light:center_grid_row[8].center_grid_col[12].light.clk
clk => grid_light:center_grid_row[8].center_grid_col[13].light.clk
clk => grid_light:center_grid_row[8].center_grid_col[14].light.clk
clk => grid_light:center_grid_row[9].center_grid_col[1].light.clk
clk => grid_light:center_grid_row[9].center_grid_col[2].light.clk
clk => grid_light:center_grid_row[9].center_grid_col[3].light.clk
clk => grid_light:center_grid_row[9].center_grid_col[4].light.clk
clk => grid_light:center_grid_row[9].center_grid_col[5].light.clk
clk => grid_light:center_grid_row[9].center_grid_col[6].light.clk
clk => grid_light:center_grid_row[9].center_grid_col[7].light.clk
clk => grid_light:center_grid_row[9].center_grid_col[8].light.clk
clk => grid_light:center_grid_row[9].center_grid_col[9].light.clk
clk => grid_light:center_grid_row[9].center_grid_col[10].light.clk
clk => grid_light:center_grid_row[9].center_grid_col[11].light.clk
clk => grid_light:center_grid_row[9].center_grid_col[12].light.clk
clk => grid_light:center_grid_row[9].center_grid_col[13].light.clk
clk => grid_light:center_grid_row[9].center_grid_col[14].light.clk
clk => grid_light:center_grid_row[10].center_grid_col[1].light.clk
clk => grid_light:center_grid_row[10].center_grid_col[2].light.clk
clk => grid_light:center_grid_row[10].center_grid_col[3].light.clk
clk => grid_light:center_grid_row[10].center_grid_col[4].light.clk
clk => grid_light:center_grid_row[10].center_grid_col[5].light.clk
clk => grid_light:center_grid_row[10].center_grid_col[6].light.clk
clk => grid_light:center_grid_row[10].center_grid_col[7].light.clk
clk => grid_light:center_grid_row[10].center_grid_col[8].light.clk
clk => grid_light:center_grid_row[10].center_grid_col[9].light.clk
clk => grid_light:center_grid_row[10].center_grid_col[10].light.clk
clk => grid_light:center_grid_row[10].center_grid_col[11].light.clk
clk => grid_light:center_grid_row[10].center_grid_col[12].light.clk
clk => grid_light:center_grid_row[10].center_grid_col[13].light.clk
clk => grid_light:center_grid_row[10].center_grid_col[14].light.clk
clk => grid_light:center_grid_row[11].center_grid_col[1].light.clk
clk => grid_light:center_grid_row[11].center_grid_col[2].light.clk
clk => grid_light:center_grid_row[11].center_grid_col[3].light.clk
clk => grid_light:center_grid_row[11].center_grid_col[4].light.clk
clk => grid_light:center_grid_row[11].center_grid_col[5].light.clk
clk => grid_light:center_grid_row[11].center_grid_col[6].light.clk
clk => grid_light:center_grid_row[11].center_grid_col[7].light.clk
clk => grid_light:center_grid_row[11].center_grid_col[8].light.clk
clk => grid_light:center_grid_row[11].center_grid_col[9].light.clk
clk => grid_light:center_grid_row[11].center_grid_col[10].light.clk
clk => grid_light:center_grid_row[11].center_grid_col[11].light.clk
clk => grid_light:center_grid_row[11].center_grid_col[12].light.clk
clk => grid_light:center_grid_row[11].center_grid_col[13].light.clk
clk => grid_light:center_grid_row[11].center_grid_col[14].light.clk
clk => grid_light:center_grid_row[12].center_grid_col[1].light.clk
clk => grid_light:center_grid_row[12].center_grid_col[2].light.clk
clk => grid_light:center_grid_row[12].center_grid_col[3].light.clk
clk => grid_light:center_grid_row[12].center_grid_col[4].light.clk
clk => grid_light:center_grid_row[12].center_grid_col[5].light.clk
clk => grid_light:center_grid_row[12].center_grid_col[6].light.clk
clk => grid_light:center_grid_row[12].center_grid_col[7].light.clk
clk => grid_light:center_grid_row[12].center_grid_col[8].light.clk
clk => grid_light:center_grid_row[12].center_grid_col[9].light.clk
clk => grid_light:center_grid_row[12].center_grid_col[10].light.clk
clk => grid_light:center_grid_row[12].center_grid_col[11].light.clk
clk => grid_light:center_grid_row[12].center_grid_col[12].light.clk
clk => grid_light:center_grid_row[12].center_grid_col[13].light.clk
clk => grid_light:center_grid_row[12].center_grid_col[14].light.clk
clk => grid_light:center_grid_row[13].center_grid_col[1].light.clk
clk => grid_light:center_grid_row[13].center_grid_col[2].light.clk
clk => grid_light:center_grid_row[13].center_grid_col[3].light.clk
clk => grid_light:center_grid_row[13].center_grid_col[4].light.clk
clk => grid_light:center_grid_row[13].center_grid_col[5].light.clk
clk => grid_light:center_grid_row[13].center_grid_col[6].light.clk
clk => grid_light:center_grid_row[13].center_grid_col[7].light.clk
clk => grid_light:center_grid_row[13].center_grid_col[8].light.clk
clk => grid_light:center_grid_row[13].center_grid_col[9].light.clk
clk => grid_light:center_grid_row[13].center_grid_col[10].light.clk
clk => grid_light:center_grid_row[13].center_grid_col[11].light.clk
clk => grid_light:center_grid_row[13].center_grid_col[12].light.clk
clk => grid_light:center_grid_row[13].center_grid_col[13].light.clk
clk => grid_light:center_grid_row[13].center_grid_col[14].light.clk
clk => grid_light:center_grid_row[14].center_grid_col[1].light.clk
clk => grid_light:center_grid_row[14].center_grid_col[2].light.clk
clk => grid_light:center_grid_row[14].center_grid_col[3].light.clk
clk => grid_light:center_grid_row[14].center_grid_col[4].light.clk
clk => grid_light:center_grid_row[14].center_grid_col[5].light.clk
clk => grid_light:center_grid_row[14].center_grid_col[6].light.clk
clk => grid_light:center_grid_row[14].center_grid_col[7].light.clk
clk => grid_light:center_grid_row[14].center_grid_col[8].light.clk
clk => grid_light:center_grid_row[14].center_grid_col[9].light.clk
clk => grid_light:center_grid_row[14].center_grid_col[10].light.clk
clk => grid_light:center_grid_row[14].center_grid_col[11].light.clk
clk => grid_light:center_grid_row[14].center_grid_col[12].light.clk
clk => grid_light:center_grid_row[14].center_grid_col[13].light.clk
clk => grid_light:center_grid_row[14].center_grid_col[14].light.clk
clk => game_over~reg0.CLK
slow_edge => length:len.slow_edge
slow_edge => grid_light:tail.slow_edge
slow_edge => grid_light:thorax.slow_edge
slow_edge => grid_light:head.slow_edge
slow_edge => grid_light:top_right.slow_edge
slow_edge => grid_light:bot_right.slow_edge
slow_edge => grid_light:bot_left.slow_edge
slow_edge => grid_light:vertical_bars[1].right_col.slow_edge
slow_edge => grid_light:vertical_bars[2].right_col.slow_edge
slow_edge => grid_light:vertical_bars[3].left_col.slow_edge
slow_edge => grid_light:vertical_bars[3].right_col.slow_edge
slow_edge => grid_light:vertical_bars[4].left_col.slow_edge
slow_edge => grid_light:vertical_bars[4].right_col.slow_edge
slow_edge => grid_light:vertical_bars[5].left_col.slow_edge
slow_edge => grid_light:vertical_bars[5].right_col.slow_edge
slow_edge => grid_light:vertical_bars[6].left_col.slow_edge
slow_edge => grid_light:vertical_bars[6].right_col.slow_edge
slow_edge => grid_light:vertical_bars[7].left_col.slow_edge
slow_edge => grid_light:vertical_bars[7].right_col.slow_edge
slow_edge => grid_light:vertical_bars[8].left_col.slow_edge
slow_edge => grid_light:vertical_bars[8].right_col.slow_edge
slow_edge => grid_light:vertical_bars[9].left_col.slow_edge
slow_edge => grid_light:vertical_bars[9].right_col.slow_edge
slow_edge => grid_light:vertical_bars[10].left_col.slow_edge
slow_edge => grid_light:vertical_bars[10].right_col.slow_edge
slow_edge => grid_light:vertical_bars[11].left_col.slow_edge
slow_edge => grid_light:vertical_bars[11].right_col.slow_edge
slow_edge => grid_light:vertical_bars[12].left_col.slow_edge
slow_edge => grid_light:vertical_bars[12].right_col.slow_edge
slow_edge => grid_light:vertical_bars[13].left_col.slow_edge
slow_edge => grid_light:vertical_bars[13].right_col.slow_edge
slow_edge => grid_light:vertical_bars[14].left_col.slow_edge
slow_edge => grid_light:vertical_bars[14].right_col.slow_edge
slow_edge => grid_light:horizontal_bars[1].top_row.slow_edge
slow_edge => grid_light:horizontal_bars[1].bot_row.slow_edge
slow_edge => grid_light:horizontal_bars[2].top_row.slow_edge
slow_edge => grid_light:horizontal_bars[2].bot_row.slow_edge
slow_edge => grid_light:horizontal_bars[3].top_row.slow_edge
slow_edge => grid_light:horizontal_bars[3].bot_row.slow_edge
slow_edge => grid_light:horizontal_bars[4].top_row.slow_edge
slow_edge => grid_light:horizontal_bars[4].bot_row.slow_edge
slow_edge => grid_light:horizontal_bars[5].top_row.slow_edge
slow_edge => grid_light:horizontal_bars[5].bot_row.slow_edge
slow_edge => grid_light:horizontal_bars[6].top_row.slow_edge
slow_edge => grid_light:horizontal_bars[6].bot_row.slow_edge
slow_edge => grid_light:horizontal_bars[7].top_row.slow_edge
slow_edge => grid_light:horizontal_bars[7].bot_row.slow_edge
slow_edge => grid_light:horizontal_bars[8].top_row.slow_edge
slow_edge => grid_light:horizontal_bars[8].bot_row.slow_edge
slow_edge => grid_light:horizontal_bars[9].top_row.slow_edge
slow_edge => grid_light:horizontal_bars[9].bot_row.slow_edge
slow_edge => grid_light:horizontal_bars[10].top_row.slow_edge
slow_edge => grid_light:horizontal_bars[10].bot_row.slow_edge
slow_edge => grid_light:horizontal_bars[11].top_row.slow_edge
slow_edge => grid_light:horizontal_bars[11].bot_row.slow_edge
slow_edge => grid_light:horizontal_bars[12].top_row.slow_edge
slow_edge => grid_light:horizontal_bars[12].bot_row.slow_edge
slow_edge => grid_light:horizontal_bars[13].top_row.slow_edge
slow_edge => grid_light:horizontal_bars[13].bot_row.slow_edge
slow_edge => grid_light:horizontal_bars[14].top_row.slow_edge
slow_edge => grid_light:horizontal_bars[14].bot_row.slow_edge
slow_edge => grid_light:center_grid_row[1].center_grid_col[1].light.slow_edge
slow_edge => grid_light:center_grid_row[1].center_grid_col[2].light.slow_edge
slow_edge => grid_light:center_grid_row[1].center_grid_col[3].light.slow_edge
slow_edge => grid_light:center_grid_row[1].center_grid_col[4].light.slow_edge
slow_edge => grid_light:center_grid_row[1].center_grid_col[5].light.slow_edge
slow_edge => grid_light:center_grid_row[1].center_grid_col[6].light.slow_edge
slow_edge => grid_light:center_grid_row[1].center_grid_col[7].light.slow_edge
slow_edge => grid_light:center_grid_row[1].center_grid_col[8].light.slow_edge
slow_edge => grid_light:center_grid_row[1].center_grid_col[9].light.slow_edge
slow_edge => grid_light:center_grid_row[1].center_grid_col[10].light.slow_edge
slow_edge => grid_light:center_grid_row[1].center_grid_col[11].light.slow_edge
slow_edge => grid_light:center_grid_row[1].center_grid_col[12].light.slow_edge
slow_edge => grid_light:center_grid_row[1].center_grid_col[13].light.slow_edge
slow_edge => grid_light:center_grid_row[1].center_grid_col[14].light.slow_edge
slow_edge => grid_light:center_grid_row[2].center_grid_col[1].light.slow_edge
slow_edge => grid_light:center_grid_row[2].center_grid_col[2].light.slow_edge
slow_edge => grid_light:center_grid_row[2].center_grid_col[3].light.slow_edge
slow_edge => grid_light:center_grid_row[2].center_grid_col[4].light.slow_edge
slow_edge => grid_light:center_grid_row[2].center_grid_col[5].light.slow_edge
slow_edge => grid_light:center_grid_row[2].center_grid_col[6].light.slow_edge
slow_edge => grid_light:center_grid_row[2].center_grid_col[7].light.slow_edge
slow_edge => grid_light:center_grid_row[2].center_grid_col[8].light.slow_edge
slow_edge => grid_light:center_grid_row[2].center_grid_col[9].light.slow_edge
slow_edge => grid_light:center_grid_row[2].center_grid_col[10].light.slow_edge
slow_edge => grid_light:center_grid_row[2].center_grid_col[11].light.slow_edge
slow_edge => grid_light:center_grid_row[2].center_grid_col[12].light.slow_edge
slow_edge => grid_light:center_grid_row[2].center_grid_col[13].light.slow_edge
slow_edge => grid_light:center_grid_row[2].center_grid_col[14].light.slow_edge
slow_edge => grid_light:center_grid_row[3].center_grid_col[1].light.slow_edge
slow_edge => grid_light:center_grid_row[3].center_grid_col[2].light.slow_edge
slow_edge => grid_light:center_grid_row[3].center_grid_col[3].light.slow_edge
slow_edge => grid_light:center_grid_row[3].center_grid_col[4].light.slow_edge
slow_edge => grid_light:center_grid_row[3].center_grid_col[5].light.slow_edge
slow_edge => grid_light:center_grid_row[3].center_grid_col[6].light.slow_edge
slow_edge => grid_light:center_grid_row[3].center_grid_col[7].light.slow_edge
slow_edge => grid_light:center_grid_row[3].center_grid_col[8].light.slow_edge
slow_edge => grid_light:center_grid_row[3].center_grid_col[9].light.slow_edge
slow_edge => grid_light:center_grid_row[3].center_grid_col[10].light.slow_edge
slow_edge => grid_light:center_grid_row[3].center_grid_col[11].light.slow_edge
slow_edge => grid_light:center_grid_row[3].center_grid_col[12].light.slow_edge
slow_edge => grid_light:center_grid_row[3].center_grid_col[13].light.slow_edge
slow_edge => grid_light:center_grid_row[3].center_grid_col[14].light.slow_edge
slow_edge => grid_light:center_grid_row[4].center_grid_col[1].light.slow_edge
slow_edge => grid_light:center_grid_row[4].center_grid_col[2].light.slow_edge
slow_edge => grid_light:center_grid_row[4].center_grid_col[3].light.slow_edge
slow_edge => grid_light:center_grid_row[4].center_grid_col[4].light.slow_edge
slow_edge => grid_light:center_grid_row[4].center_grid_col[5].light.slow_edge
slow_edge => grid_light:center_grid_row[4].center_grid_col[6].light.slow_edge
slow_edge => grid_light:center_grid_row[4].center_grid_col[7].light.slow_edge
slow_edge => grid_light:center_grid_row[4].center_grid_col[8].light.slow_edge
slow_edge => grid_light:center_grid_row[4].center_grid_col[9].light.slow_edge
slow_edge => grid_light:center_grid_row[4].center_grid_col[10].light.slow_edge
slow_edge => grid_light:center_grid_row[4].center_grid_col[11].light.slow_edge
slow_edge => grid_light:center_grid_row[4].center_grid_col[12].light.slow_edge
slow_edge => grid_light:center_grid_row[4].center_grid_col[13].light.slow_edge
slow_edge => grid_light:center_grid_row[4].center_grid_col[14].light.slow_edge
slow_edge => grid_light:center_grid_row[5].center_grid_col[1].light.slow_edge
slow_edge => grid_light:center_grid_row[5].center_grid_col[2].light.slow_edge
slow_edge => grid_light:center_grid_row[5].center_grid_col[3].light.slow_edge
slow_edge => grid_light:center_grid_row[5].center_grid_col[4].light.slow_edge
slow_edge => grid_light:center_grid_row[5].center_grid_col[5].light.slow_edge
slow_edge => grid_light:center_grid_row[5].center_grid_col[6].light.slow_edge
slow_edge => grid_light:center_grid_row[5].center_grid_col[7].light.slow_edge
slow_edge => grid_light:center_grid_row[5].center_grid_col[8].light.slow_edge
slow_edge => grid_light:center_grid_row[5].center_grid_col[9].light.slow_edge
slow_edge => grid_light:center_grid_row[5].center_grid_col[10].light.slow_edge
slow_edge => grid_light:center_grid_row[5].center_grid_col[11].light.slow_edge
slow_edge => grid_light:center_grid_row[5].center_grid_col[12].light.slow_edge
slow_edge => grid_light:center_grid_row[5].center_grid_col[13].light.slow_edge
slow_edge => grid_light:center_grid_row[5].center_grid_col[14].light.slow_edge
slow_edge => grid_light:center_grid_row[6].center_grid_col[1].light.slow_edge
slow_edge => grid_light:center_grid_row[6].center_grid_col[2].light.slow_edge
slow_edge => grid_light:center_grid_row[6].center_grid_col[3].light.slow_edge
slow_edge => grid_light:center_grid_row[6].center_grid_col[4].light.slow_edge
slow_edge => grid_light:center_grid_row[6].center_grid_col[5].light.slow_edge
slow_edge => grid_light:center_grid_row[6].center_grid_col[6].light.slow_edge
slow_edge => grid_light:center_grid_row[6].center_grid_col[7].light.slow_edge
slow_edge => grid_light:center_grid_row[6].center_grid_col[8].light.slow_edge
slow_edge => grid_light:center_grid_row[6].center_grid_col[9].light.slow_edge
slow_edge => grid_light:center_grid_row[6].center_grid_col[10].light.slow_edge
slow_edge => grid_light:center_grid_row[6].center_grid_col[11].light.slow_edge
slow_edge => grid_light:center_grid_row[6].center_grid_col[12].light.slow_edge
slow_edge => grid_light:center_grid_row[6].center_grid_col[13].light.slow_edge
slow_edge => grid_light:center_grid_row[6].center_grid_col[14].light.slow_edge
slow_edge => grid_light:center_grid_row[7].center_grid_col[1].light.slow_edge
slow_edge => grid_light:center_grid_row[7].center_grid_col[2].light.slow_edge
slow_edge => grid_light:center_grid_row[7].center_grid_col[3].light.slow_edge
slow_edge => grid_light:center_grid_row[7].center_grid_col[4].light.slow_edge
slow_edge => grid_light:center_grid_row[7].center_grid_col[5].light.slow_edge
slow_edge => grid_light:center_grid_row[7].center_grid_col[6].light.slow_edge
slow_edge => grid_light:center_grid_row[7].center_grid_col[7].light.slow_edge
slow_edge => grid_light:center_grid_row[7].center_grid_col[8].light.slow_edge
slow_edge => grid_light:center_grid_row[7].center_grid_col[9].light.slow_edge
slow_edge => grid_light:center_grid_row[7].center_grid_col[10].light.slow_edge
slow_edge => grid_light:center_grid_row[7].center_grid_col[11].light.slow_edge
slow_edge => grid_light:center_grid_row[7].center_grid_col[12].light.slow_edge
slow_edge => grid_light:center_grid_row[7].center_grid_col[13].light.slow_edge
slow_edge => grid_light:center_grid_row[7].center_grid_col[14].light.slow_edge
slow_edge => grid_light:center_grid_row[8].center_grid_col[1].light.slow_edge
slow_edge => grid_light:center_grid_row[8].center_grid_col[2].light.slow_edge
slow_edge => grid_light:center_grid_row[8].center_grid_col[3].light.slow_edge
slow_edge => grid_light:center_grid_row[8].center_grid_col[4].light.slow_edge
slow_edge => grid_light:center_grid_row[8].center_grid_col[5].light.slow_edge
slow_edge => grid_light:center_grid_row[8].center_grid_col[6].light.slow_edge
slow_edge => grid_light:center_grid_row[8].center_grid_col[7].light.slow_edge
slow_edge => grid_light:center_grid_row[8].center_grid_col[8].light.slow_edge
slow_edge => grid_light:center_grid_row[8].center_grid_col[9].light.slow_edge
slow_edge => grid_light:center_grid_row[8].center_grid_col[10].light.slow_edge
slow_edge => grid_light:center_grid_row[8].center_grid_col[11].light.slow_edge
slow_edge => grid_light:center_grid_row[8].center_grid_col[12].light.slow_edge
slow_edge => grid_light:center_grid_row[8].center_grid_col[13].light.slow_edge
slow_edge => grid_light:center_grid_row[8].center_grid_col[14].light.slow_edge
slow_edge => grid_light:center_grid_row[9].center_grid_col[1].light.slow_edge
slow_edge => grid_light:center_grid_row[9].center_grid_col[2].light.slow_edge
slow_edge => grid_light:center_grid_row[9].center_grid_col[3].light.slow_edge
slow_edge => grid_light:center_grid_row[9].center_grid_col[4].light.slow_edge
slow_edge => grid_light:center_grid_row[9].center_grid_col[5].light.slow_edge
slow_edge => grid_light:center_grid_row[9].center_grid_col[6].light.slow_edge
slow_edge => grid_light:center_grid_row[9].center_grid_col[7].light.slow_edge
slow_edge => grid_light:center_grid_row[9].center_grid_col[8].light.slow_edge
slow_edge => grid_light:center_grid_row[9].center_grid_col[9].light.slow_edge
slow_edge => grid_light:center_grid_row[9].center_grid_col[10].light.slow_edge
slow_edge => grid_light:center_grid_row[9].center_grid_col[11].light.slow_edge
slow_edge => grid_light:center_grid_row[9].center_grid_col[12].light.slow_edge
slow_edge => grid_light:center_grid_row[9].center_grid_col[13].light.slow_edge
slow_edge => grid_light:center_grid_row[9].center_grid_col[14].light.slow_edge
slow_edge => grid_light:center_grid_row[10].center_grid_col[1].light.slow_edge
slow_edge => grid_light:center_grid_row[10].center_grid_col[2].light.slow_edge
slow_edge => grid_light:center_grid_row[10].center_grid_col[3].light.slow_edge
slow_edge => grid_light:center_grid_row[10].center_grid_col[4].light.slow_edge
slow_edge => grid_light:center_grid_row[10].center_grid_col[5].light.slow_edge
slow_edge => grid_light:center_grid_row[10].center_grid_col[6].light.slow_edge
slow_edge => grid_light:center_grid_row[10].center_grid_col[7].light.slow_edge
slow_edge => grid_light:center_grid_row[10].center_grid_col[8].light.slow_edge
slow_edge => grid_light:center_grid_row[10].center_grid_col[9].light.slow_edge
slow_edge => grid_light:center_grid_row[10].center_grid_col[10].light.slow_edge
slow_edge => grid_light:center_grid_row[10].center_grid_col[11].light.slow_edge
slow_edge => grid_light:center_grid_row[10].center_grid_col[12].light.slow_edge
slow_edge => grid_light:center_grid_row[10].center_grid_col[13].light.slow_edge
slow_edge => grid_light:center_grid_row[10].center_grid_col[14].light.slow_edge
slow_edge => grid_light:center_grid_row[11].center_grid_col[1].light.slow_edge
slow_edge => grid_light:center_grid_row[11].center_grid_col[2].light.slow_edge
slow_edge => grid_light:center_grid_row[11].center_grid_col[3].light.slow_edge
slow_edge => grid_light:center_grid_row[11].center_grid_col[4].light.slow_edge
slow_edge => grid_light:center_grid_row[11].center_grid_col[5].light.slow_edge
slow_edge => grid_light:center_grid_row[11].center_grid_col[6].light.slow_edge
slow_edge => grid_light:center_grid_row[11].center_grid_col[7].light.slow_edge
slow_edge => grid_light:center_grid_row[11].center_grid_col[8].light.slow_edge
slow_edge => grid_light:center_grid_row[11].center_grid_col[9].light.slow_edge
slow_edge => grid_light:center_grid_row[11].center_grid_col[10].light.slow_edge
slow_edge => grid_light:center_grid_row[11].center_grid_col[11].light.slow_edge
slow_edge => grid_light:center_grid_row[11].center_grid_col[12].light.slow_edge
slow_edge => grid_light:center_grid_row[11].center_grid_col[13].light.slow_edge
slow_edge => grid_light:center_grid_row[11].center_grid_col[14].light.slow_edge
slow_edge => grid_light:center_grid_row[12].center_grid_col[1].light.slow_edge
slow_edge => grid_light:center_grid_row[12].center_grid_col[2].light.slow_edge
slow_edge => grid_light:center_grid_row[12].center_grid_col[3].light.slow_edge
slow_edge => grid_light:center_grid_row[12].center_grid_col[4].light.slow_edge
slow_edge => grid_light:center_grid_row[12].center_grid_col[5].light.slow_edge
slow_edge => grid_light:center_grid_row[12].center_grid_col[6].light.slow_edge
slow_edge => grid_light:center_grid_row[12].center_grid_col[7].light.slow_edge
slow_edge => grid_light:center_grid_row[12].center_grid_col[8].light.slow_edge
slow_edge => grid_light:center_grid_row[12].center_grid_col[9].light.slow_edge
slow_edge => grid_light:center_grid_row[12].center_grid_col[10].light.slow_edge
slow_edge => grid_light:center_grid_row[12].center_grid_col[11].light.slow_edge
slow_edge => grid_light:center_grid_row[12].center_grid_col[12].light.slow_edge
slow_edge => grid_light:center_grid_row[12].center_grid_col[13].light.slow_edge
slow_edge => grid_light:center_grid_row[12].center_grid_col[14].light.slow_edge
slow_edge => grid_light:center_grid_row[13].center_grid_col[1].light.slow_edge
slow_edge => grid_light:center_grid_row[13].center_grid_col[2].light.slow_edge
slow_edge => grid_light:center_grid_row[13].center_grid_col[3].light.slow_edge
slow_edge => grid_light:center_grid_row[13].center_grid_col[4].light.slow_edge
slow_edge => grid_light:center_grid_row[13].center_grid_col[5].light.slow_edge
slow_edge => grid_light:center_grid_row[13].center_grid_col[6].light.slow_edge
slow_edge => grid_light:center_grid_row[13].center_grid_col[7].light.slow_edge
slow_edge => grid_light:center_grid_row[13].center_grid_col[8].light.slow_edge
slow_edge => grid_light:center_grid_row[13].center_grid_col[9].light.slow_edge
slow_edge => grid_light:center_grid_row[13].center_grid_col[10].light.slow_edge
slow_edge => grid_light:center_grid_row[13].center_grid_col[11].light.slow_edge
slow_edge => grid_light:center_grid_row[13].center_grid_col[12].light.slow_edge
slow_edge => grid_light:center_grid_row[13].center_grid_col[13].light.slow_edge
slow_edge => grid_light:center_grid_row[13].center_grid_col[14].light.slow_edge
slow_edge => grid_light:center_grid_row[14].center_grid_col[1].light.slow_edge
slow_edge => grid_light:center_grid_row[14].center_grid_col[2].light.slow_edge
slow_edge => grid_light:center_grid_row[14].center_grid_col[3].light.slow_edge
slow_edge => grid_light:center_grid_row[14].center_grid_col[4].light.slow_edge
slow_edge => grid_light:center_grid_row[14].center_grid_col[5].light.slow_edge
slow_edge => grid_light:center_grid_row[14].center_grid_col[6].light.slow_edge
slow_edge => grid_light:center_grid_row[14].center_grid_col[7].light.slow_edge
slow_edge => grid_light:center_grid_row[14].center_grid_col[8].light.slow_edge
slow_edge => grid_light:center_grid_row[14].center_grid_col[9].light.slow_edge
slow_edge => grid_light:center_grid_row[14].center_grid_col[10].light.slow_edge
slow_edge => grid_light:center_grid_row[14].center_grid_col[11].light.slow_edge
slow_edge => grid_light:center_grid_row[14].center_grid_col[12].light.slow_edge
slow_edge => grid_light:center_grid_row[14].center_grid_col[13].light.slow_edge
slow_edge => grid_light:center_grid_row[14].center_grid_col[14].light.slow_edge
slow_edge => game_over.OUTPUTSELECT
reset => length:len.reset
reset => grid_light:tail.reset
reset => grid_light:thorax.reset
reset => grid_light:head.reset
reset => grid_light:top_right.reset
reset => grid_light:bot_right.reset
reset => grid_light:bot_left.reset
reset => grid_light:vertical_bars[1].right_col.reset
reset => grid_light:vertical_bars[2].right_col.reset
reset => grid_light:vertical_bars[3].left_col.reset
reset => grid_light:vertical_bars[3].right_col.reset
reset => grid_light:vertical_bars[4].left_col.reset
reset => grid_light:vertical_bars[4].right_col.reset
reset => grid_light:vertical_bars[5].left_col.reset
reset => grid_light:vertical_bars[5].right_col.reset
reset => grid_light:vertical_bars[6].left_col.reset
reset => grid_light:vertical_bars[6].right_col.reset
reset => grid_light:vertical_bars[7].left_col.reset
reset => grid_light:vertical_bars[7].right_col.reset
reset => grid_light:vertical_bars[8].left_col.reset
reset => grid_light:vertical_bars[8].right_col.reset
reset => grid_light:vertical_bars[9].left_col.reset
reset => grid_light:vertical_bars[9].right_col.reset
reset => grid_light:vertical_bars[10].left_col.reset
reset => grid_light:vertical_bars[10].right_col.reset
reset => grid_light:vertical_bars[11].left_col.reset
reset => grid_light:vertical_bars[11].right_col.reset
reset => grid_light:vertical_bars[12].left_col.reset
reset => grid_light:vertical_bars[12].right_col.reset
reset => grid_light:vertical_bars[13].left_col.reset
reset => grid_light:vertical_bars[13].right_col.reset
reset => grid_light:vertical_bars[14].left_col.reset
reset => grid_light:vertical_bars[14].right_col.reset
reset => grid_light:horizontal_bars[1].top_row.reset
reset => grid_light:horizontal_bars[1].bot_row.reset
reset => grid_light:horizontal_bars[2].top_row.reset
reset => grid_light:horizontal_bars[2].bot_row.reset
reset => grid_light:horizontal_bars[3].top_row.reset
reset => grid_light:horizontal_bars[3].bot_row.reset
reset => grid_light:horizontal_bars[4].top_row.reset
reset => grid_light:horizontal_bars[4].bot_row.reset
reset => grid_light:horizontal_bars[5].top_row.reset
reset => grid_light:horizontal_bars[5].bot_row.reset
reset => grid_light:horizontal_bars[6].top_row.reset
reset => grid_light:horizontal_bars[6].bot_row.reset
reset => grid_light:horizontal_bars[7].top_row.reset
reset => grid_light:horizontal_bars[7].bot_row.reset
reset => grid_light:horizontal_bars[8].top_row.reset
reset => grid_light:horizontal_bars[8].bot_row.reset
reset => grid_light:horizontal_bars[9].top_row.reset
reset => grid_light:horizontal_bars[9].bot_row.reset
reset => grid_light:horizontal_bars[10].top_row.reset
reset => grid_light:horizontal_bars[10].bot_row.reset
reset => grid_light:horizontal_bars[11].top_row.reset
reset => grid_light:horizontal_bars[11].bot_row.reset
reset => grid_light:horizontal_bars[12].top_row.reset
reset => grid_light:horizontal_bars[12].bot_row.reset
reset => grid_light:horizontal_bars[13].top_row.reset
reset => grid_light:horizontal_bars[13].bot_row.reset
reset => grid_light:horizontal_bars[14].top_row.reset
reset => grid_light:horizontal_bars[14].bot_row.reset
reset => grid_light:center_grid_row[1].center_grid_col[1].light.reset
reset => grid_light:center_grid_row[1].center_grid_col[2].light.reset
reset => grid_light:center_grid_row[1].center_grid_col[3].light.reset
reset => grid_light:center_grid_row[1].center_grid_col[4].light.reset
reset => grid_light:center_grid_row[1].center_grid_col[5].light.reset
reset => grid_light:center_grid_row[1].center_grid_col[6].light.reset
reset => grid_light:center_grid_row[1].center_grid_col[7].light.reset
reset => grid_light:center_grid_row[1].center_grid_col[8].light.reset
reset => grid_light:center_grid_row[1].center_grid_col[9].light.reset
reset => grid_light:center_grid_row[1].center_grid_col[10].light.reset
reset => grid_light:center_grid_row[1].center_grid_col[11].light.reset
reset => grid_light:center_grid_row[1].center_grid_col[12].light.reset
reset => grid_light:center_grid_row[1].center_grid_col[13].light.reset
reset => grid_light:center_grid_row[1].center_grid_col[14].light.reset
reset => grid_light:center_grid_row[2].center_grid_col[1].light.reset
reset => grid_light:center_grid_row[2].center_grid_col[2].light.reset
reset => grid_light:center_grid_row[2].center_grid_col[3].light.reset
reset => grid_light:center_grid_row[2].center_grid_col[4].light.reset
reset => grid_light:center_grid_row[2].center_grid_col[5].light.reset
reset => grid_light:center_grid_row[2].center_grid_col[6].light.reset
reset => grid_light:center_grid_row[2].center_grid_col[7].light.reset
reset => grid_light:center_grid_row[2].center_grid_col[8].light.reset
reset => grid_light:center_grid_row[2].center_grid_col[9].light.reset
reset => grid_light:center_grid_row[2].center_grid_col[10].light.reset
reset => grid_light:center_grid_row[2].center_grid_col[11].light.reset
reset => grid_light:center_grid_row[2].center_grid_col[12].light.reset
reset => grid_light:center_grid_row[2].center_grid_col[13].light.reset
reset => grid_light:center_grid_row[2].center_grid_col[14].light.reset
reset => grid_light:center_grid_row[3].center_grid_col[1].light.reset
reset => grid_light:center_grid_row[3].center_grid_col[2].light.reset
reset => grid_light:center_grid_row[3].center_grid_col[3].light.reset
reset => grid_light:center_grid_row[3].center_grid_col[4].light.reset
reset => grid_light:center_grid_row[3].center_grid_col[5].light.reset
reset => grid_light:center_grid_row[3].center_grid_col[6].light.reset
reset => grid_light:center_grid_row[3].center_grid_col[7].light.reset
reset => grid_light:center_grid_row[3].center_grid_col[8].light.reset
reset => grid_light:center_grid_row[3].center_grid_col[9].light.reset
reset => grid_light:center_grid_row[3].center_grid_col[10].light.reset
reset => grid_light:center_grid_row[3].center_grid_col[11].light.reset
reset => grid_light:center_grid_row[3].center_grid_col[12].light.reset
reset => grid_light:center_grid_row[3].center_grid_col[13].light.reset
reset => grid_light:center_grid_row[3].center_grid_col[14].light.reset
reset => grid_light:center_grid_row[4].center_grid_col[1].light.reset
reset => grid_light:center_grid_row[4].center_grid_col[2].light.reset
reset => grid_light:center_grid_row[4].center_grid_col[3].light.reset
reset => grid_light:center_grid_row[4].center_grid_col[4].light.reset
reset => grid_light:center_grid_row[4].center_grid_col[5].light.reset
reset => grid_light:center_grid_row[4].center_grid_col[6].light.reset
reset => grid_light:center_grid_row[4].center_grid_col[7].light.reset
reset => grid_light:center_grid_row[4].center_grid_col[8].light.reset
reset => grid_light:center_grid_row[4].center_grid_col[9].light.reset
reset => grid_light:center_grid_row[4].center_grid_col[10].light.reset
reset => grid_light:center_grid_row[4].center_grid_col[11].light.reset
reset => grid_light:center_grid_row[4].center_grid_col[12].light.reset
reset => grid_light:center_grid_row[4].center_grid_col[13].light.reset
reset => grid_light:center_grid_row[4].center_grid_col[14].light.reset
reset => grid_light:center_grid_row[5].center_grid_col[1].light.reset
reset => grid_light:center_grid_row[5].center_grid_col[2].light.reset
reset => grid_light:center_grid_row[5].center_grid_col[3].light.reset
reset => grid_light:center_grid_row[5].center_grid_col[4].light.reset
reset => grid_light:center_grid_row[5].center_grid_col[5].light.reset
reset => grid_light:center_grid_row[5].center_grid_col[6].light.reset
reset => grid_light:center_grid_row[5].center_grid_col[7].light.reset
reset => grid_light:center_grid_row[5].center_grid_col[8].light.reset
reset => grid_light:center_grid_row[5].center_grid_col[9].light.reset
reset => grid_light:center_grid_row[5].center_grid_col[10].light.reset
reset => grid_light:center_grid_row[5].center_grid_col[11].light.reset
reset => grid_light:center_grid_row[5].center_grid_col[12].light.reset
reset => grid_light:center_grid_row[5].center_grid_col[13].light.reset
reset => grid_light:center_grid_row[5].center_grid_col[14].light.reset
reset => grid_light:center_grid_row[6].center_grid_col[1].light.reset
reset => grid_light:center_grid_row[6].center_grid_col[2].light.reset
reset => grid_light:center_grid_row[6].center_grid_col[3].light.reset
reset => grid_light:center_grid_row[6].center_grid_col[4].light.reset
reset => grid_light:center_grid_row[6].center_grid_col[5].light.reset
reset => grid_light:center_grid_row[6].center_grid_col[6].light.reset
reset => grid_light:center_grid_row[6].center_grid_col[7].light.reset
reset => grid_light:center_grid_row[6].center_grid_col[8].light.reset
reset => grid_light:center_grid_row[6].center_grid_col[9].light.reset
reset => grid_light:center_grid_row[6].center_grid_col[10].light.reset
reset => grid_light:center_grid_row[6].center_grid_col[11].light.reset
reset => grid_light:center_grid_row[6].center_grid_col[12].light.reset
reset => grid_light:center_grid_row[6].center_grid_col[13].light.reset
reset => grid_light:center_grid_row[6].center_grid_col[14].light.reset
reset => grid_light:center_grid_row[7].center_grid_col[1].light.reset
reset => grid_light:center_grid_row[7].center_grid_col[2].light.reset
reset => grid_light:center_grid_row[7].center_grid_col[3].light.reset
reset => grid_light:center_grid_row[7].center_grid_col[4].light.reset
reset => grid_light:center_grid_row[7].center_grid_col[5].light.reset
reset => grid_light:center_grid_row[7].center_grid_col[6].light.reset
reset => grid_light:center_grid_row[7].center_grid_col[7].light.reset
reset => grid_light:center_grid_row[7].center_grid_col[8].light.reset
reset => grid_light:center_grid_row[7].center_grid_col[9].light.reset
reset => grid_light:center_grid_row[7].center_grid_col[10].light.reset
reset => grid_light:center_grid_row[7].center_grid_col[11].light.reset
reset => grid_light:center_grid_row[7].center_grid_col[12].light.reset
reset => grid_light:center_grid_row[7].center_grid_col[13].light.reset
reset => grid_light:center_grid_row[7].center_grid_col[14].light.reset
reset => grid_light:center_grid_row[8].center_grid_col[1].light.reset
reset => grid_light:center_grid_row[8].center_grid_col[2].light.reset
reset => grid_light:center_grid_row[8].center_grid_col[3].light.reset
reset => grid_light:center_grid_row[8].center_grid_col[4].light.reset
reset => grid_light:center_grid_row[8].center_grid_col[5].light.reset
reset => grid_light:center_grid_row[8].center_grid_col[6].light.reset
reset => grid_light:center_grid_row[8].center_grid_col[7].light.reset
reset => grid_light:center_grid_row[8].center_grid_col[8].light.reset
reset => grid_light:center_grid_row[8].center_grid_col[9].light.reset
reset => grid_light:center_grid_row[8].center_grid_col[10].light.reset
reset => grid_light:center_grid_row[8].center_grid_col[11].light.reset
reset => grid_light:center_grid_row[8].center_grid_col[12].light.reset
reset => grid_light:center_grid_row[8].center_grid_col[13].light.reset
reset => grid_light:center_grid_row[8].center_grid_col[14].light.reset
reset => grid_light:center_grid_row[9].center_grid_col[1].light.reset
reset => grid_light:center_grid_row[9].center_grid_col[2].light.reset
reset => grid_light:center_grid_row[9].center_grid_col[3].light.reset
reset => grid_light:center_grid_row[9].center_grid_col[4].light.reset
reset => grid_light:center_grid_row[9].center_grid_col[5].light.reset
reset => grid_light:center_grid_row[9].center_grid_col[6].light.reset
reset => grid_light:center_grid_row[9].center_grid_col[7].light.reset
reset => grid_light:center_grid_row[9].center_grid_col[8].light.reset
reset => grid_light:center_grid_row[9].center_grid_col[9].light.reset
reset => grid_light:center_grid_row[9].center_grid_col[10].light.reset
reset => grid_light:center_grid_row[9].center_grid_col[11].light.reset
reset => grid_light:center_grid_row[9].center_grid_col[12].light.reset
reset => grid_light:center_grid_row[9].center_grid_col[13].light.reset
reset => grid_light:center_grid_row[9].center_grid_col[14].light.reset
reset => grid_light:center_grid_row[10].center_grid_col[1].light.reset
reset => grid_light:center_grid_row[10].center_grid_col[2].light.reset
reset => grid_light:center_grid_row[10].center_grid_col[3].light.reset
reset => grid_light:center_grid_row[10].center_grid_col[4].light.reset
reset => grid_light:center_grid_row[10].center_grid_col[5].light.reset
reset => grid_light:center_grid_row[10].center_grid_col[6].light.reset
reset => grid_light:center_grid_row[10].center_grid_col[7].light.reset
reset => grid_light:center_grid_row[10].center_grid_col[8].light.reset
reset => grid_light:center_grid_row[10].center_grid_col[9].light.reset
reset => grid_light:center_grid_row[10].center_grid_col[10].light.reset
reset => grid_light:center_grid_row[10].center_grid_col[11].light.reset
reset => grid_light:center_grid_row[10].center_grid_col[12].light.reset
reset => grid_light:center_grid_row[10].center_grid_col[13].light.reset
reset => grid_light:center_grid_row[10].center_grid_col[14].light.reset
reset => grid_light:center_grid_row[11].center_grid_col[1].light.reset
reset => grid_light:center_grid_row[11].center_grid_col[2].light.reset
reset => grid_light:center_grid_row[11].center_grid_col[3].light.reset
reset => grid_light:center_grid_row[11].center_grid_col[4].light.reset
reset => grid_light:center_grid_row[11].center_grid_col[5].light.reset
reset => grid_light:center_grid_row[11].center_grid_col[6].light.reset
reset => grid_light:center_grid_row[11].center_grid_col[7].light.reset
reset => grid_light:center_grid_row[11].center_grid_col[8].light.reset
reset => grid_light:center_grid_row[11].center_grid_col[9].light.reset
reset => grid_light:center_grid_row[11].center_grid_col[10].light.reset
reset => grid_light:center_grid_row[11].center_grid_col[11].light.reset
reset => grid_light:center_grid_row[11].center_grid_col[12].light.reset
reset => grid_light:center_grid_row[11].center_grid_col[13].light.reset
reset => grid_light:center_grid_row[11].center_grid_col[14].light.reset
reset => grid_light:center_grid_row[12].center_grid_col[1].light.reset
reset => grid_light:center_grid_row[12].center_grid_col[2].light.reset
reset => grid_light:center_grid_row[12].center_grid_col[3].light.reset
reset => grid_light:center_grid_row[12].center_grid_col[4].light.reset
reset => grid_light:center_grid_row[12].center_grid_col[5].light.reset
reset => grid_light:center_grid_row[12].center_grid_col[6].light.reset
reset => grid_light:center_grid_row[12].center_grid_col[7].light.reset
reset => grid_light:center_grid_row[12].center_grid_col[8].light.reset
reset => grid_light:center_grid_row[12].center_grid_col[9].light.reset
reset => grid_light:center_grid_row[12].center_grid_col[10].light.reset
reset => grid_light:center_grid_row[12].center_grid_col[11].light.reset
reset => grid_light:center_grid_row[12].center_grid_col[12].light.reset
reset => grid_light:center_grid_row[12].center_grid_col[13].light.reset
reset => grid_light:center_grid_row[12].center_grid_col[14].light.reset
reset => grid_light:center_grid_row[13].center_grid_col[1].light.reset
reset => grid_light:center_grid_row[13].center_grid_col[2].light.reset
reset => grid_light:center_grid_row[13].center_grid_col[3].light.reset
reset => grid_light:center_grid_row[13].center_grid_col[4].light.reset
reset => grid_light:center_grid_row[13].center_grid_col[5].light.reset
reset => grid_light:center_grid_row[13].center_grid_col[6].light.reset
reset => grid_light:center_grid_row[13].center_grid_col[7].light.reset
reset => grid_light:center_grid_row[13].center_grid_col[8].light.reset
reset => grid_light:center_grid_row[13].center_grid_col[9].light.reset
reset => grid_light:center_grid_row[13].center_grid_col[10].light.reset
reset => grid_light:center_grid_row[13].center_grid_col[11].light.reset
reset => grid_light:center_grid_row[13].center_grid_col[12].light.reset
reset => grid_light:center_grid_row[13].center_grid_col[13].light.reset
reset => grid_light:center_grid_row[13].center_grid_col[14].light.reset
reset => grid_light:center_grid_row[14].center_grid_col[1].light.reset
reset => grid_light:center_grid_row[14].center_grid_col[2].light.reset
reset => grid_light:center_grid_row[14].center_grid_col[3].light.reset
reset => grid_light:center_grid_row[14].center_grid_col[4].light.reset
reset => grid_light:center_grid_row[14].center_grid_col[5].light.reset
reset => grid_light:center_grid_row[14].center_grid_col[6].light.reset
reset => grid_light:center_grid_row[14].center_grid_col[7].light.reset
reset => grid_light:center_grid_row[14].center_grid_col[8].light.reset
reset => grid_light:center_grid_row[14].center_grid_col[9].light.reset
reset => grid_light:center_grid_row[14].center_grid_col[10].light.reset
reset => grid_light:center_grid_row[14].center_grid_col[11].light.reset
reset => grid_light:center_grid_row[14].center_grid_col[12].light.reset
reset => grid_light:center_grid_row[14].center_grid_col[13].light.reset
reset => grid_light:center_grid_row[14].center_grid_col[14].light.reset
reset => game_over.OUTPUTSELECT


|lab8|snakes_and_apples:snake|length:len
snake_length[0] <= snake_length[0]~reg0.DB_MAX_OUTPUT_PORT_TYPE
snake_length[1] <= snake_length[1]~reg0.DB_MAX_OUTPUT_PORT_TYPE
snake_length[2] <= snake_length[2]~reg0.DB_MAX_OUTPUT_PORT_TYPE
snake_length[3] <= snake_length[3]~reg0.DB_MAX_OUTPUT_PORT_TYPE
snake_length[4] <= snake_length[4]~reg0.DB_MAX_OUTPUT_PORT_TYPE
snake_length[5] <= snake_length[5]~reg0.DB_MAX_OUTPUT_PORT_TYPE
snake_length[6] <= snake_length[6]~reg0.DB_MAX_OUTPUT_PORT_TYPE
snake_length[7] <= snake_length[7]~reg0.DB_MAX_OUTPUT_PORT_TYPE
inc => snake_length.OUTPUTSELECT
inc => snake_length.OUTPUTSELECT
inc => snake_length.OUTPUTSELECT
inc => snake_length.OUTPUTSELECT
inc => snake_length.OUTPUTSELECT
inc => snake_length.OUTPUTSELECT
inc => snake_length.OUTPUTSELECT
inc => snake_length.OUTPUTSELECT
clk => snake_length[0]~reg0.CLK
clk => snake_length[1]~reg0.CLK
clk => snake_length[2]~reg0.CLK
clk => snake_length[3]~reg0.CLK
clk => snake_length[4]~reg0.CLK
clk => snake_length[5]~reg0.CLK
clk => snake_length[6]~reg0.CLK
clk => snake_length[7]~reg0.CLK
slow_edge => snake_length.OUTPUTSELECT
slow_edge => snake_length.OUTPUTSELECT
slow_edge => snake_length.OUTPUTSELECT
slow_edge => snake_length.OUTPUTSELECT
slow_edge => snake_length.OUTPUTSELECT
slow_edge => snake_length.OUTPUTSELECT
slow_edge => snake_length.OUTPUTSELECT
slow_edge => snake_length.OUTPUTSELECT
reset => snake_length.OUTPUTSELECT
reset => snake_length.OUTPUTSELECT
reset => snake_length.OUTPUTSELECT
reset => snake_length.OUTPUTSELECT
reset => snake_length.OUTPUTSELECT
reset => snake_length.OUTPUTSELECT
reset => snake_length.OUTPUTSELECT
reset => snake_length.OUTPUTSELECT


|lab8|snakes_and_apples:snake|grid_light:tail
green_light_on <= green_light_on.DB_MAX_OUTPUT_PORT_TYPE
head <= head.DB_MAX_OUTPUT_PORT_TYPE
game_over_out <= state_n.DB_MAX_OUTPUT_PORT_TYPE
eating => counter256:counter.inc
eating => always0.IN1
game_over_in => state_n.e_off.OUTPUTSELECT
game_over_in => state_n.e_countdown.OUTPUTSELECT
game_over_in => state_n.e_head.OUTPUTSELECT
game_over_in => state_n.OUTPUTSELECT
left => state_n.OUTPUTSELECT
left => state_n.OUTPUTSELECT
left => state_n.OUTPUTSELECT
left => state_n.OUTPUTSELECT
up => state_n.OUTPUTSELECT
up => state_n.OUTPUTSELECT
up => state_n.OUTPUTSELECT
up => state_n.OUTPUTSELECT
right => state_n.OUTPUTSELECT
right => state_n.OUTPUTSELECT
right => state_n.OUTPUTSELECT
right => state_n.OUTPUTSELECT
down => state_n.OUTPUTSELECT
down => state_n.OUTPUTSELECT
down => state_n.OUTPUTSELECT
down => state_n.OUTPUTSELECT
length[0] => counter256:counter.start_val[0]
length[1] => counter256:counter.start_val[1]
length[2] => counter256:counter.start_val[2]
length[3] => counter256:counter.start_val[3]
length[4] => counter256:counter.start_val[4]
length[5] => counter256:counter.start_val[5]
length[6] => counter256:counter.start_val[6]
length[7] => counter256:counter.start_val[7]
dir[0] => Mux0.IN5
dir[0] => Mux1.IN5
dir[0] => Mux2.IN5
dir[0] => Mux3.IN5
dir[1] => Mux0.IN4
dir[1] => Mux1.IN4
dir[1] => Mux2.IN4
dir[1] => Mux3.IN4
clk => counter256:counter.clk
clk => state_r~1.DATAIN
slow_edge => counter256:counter.slow_edge
slow_edge => state_r.OUTPUTSELECT
slow_edge => state_r.OUTPUTSELECT
slow_edge => state_r.OUTPUTSELECT
slow_edge => state_r.OUTPUTSELECT
reset => counter256:counter.reset
reset => state_r.OUTPUTSELECT
reset => state_r.OUTPUTSELECT
reset => state_r.OUTPUTSELECT
reset => state_r.OUTPUTSELECT
light_type[0] => counter256:counter.init_val[0]
light_type[0] => Equal1.IN1
light_type[0] => Equal2.IN1
light_type[1] => counter256:counter.init_val[1]
light_type[1] => Equal1.IN0
light_type[1] => Equal2.IN0


|lab8|snakes_and_apples:snake|grid_light:tail|counter256:counter
count[0] <= count[0]~reg0.DB_MAX_OUTPUT_PORT_TYPE
count[1] <= count[1]~reg0.DB_MAX_OUTPUT_PORT_TYPE
count[2] <= count[2]~reg0.DB_MAX_OUTPUT_PORT_TYPE
count[3] <= count[3]~reg0.DB_MAX_OUTPUT_PORT_TYPE
count[4] <= count[4]~reg0.DB_MAX_OUTPUT_PORT_TYPE
count[5] <= count[5]~reg0.DB_MAX_OUTPUT_PORT_TYPE
count[6] <= count[6]~reg0.DB_MAX_OUTPUT_PORT_TYPE
count[7] <= count[7]~reg0.DB_MAX_OUTPUT_PORT_TYPE
start_val[0] => Add0.IN16
start_val[0] => count.DATAB
start_val[1] => Add0.IN15
start_val[1] => count.DATAB
start_val[2] => Add0.IN14
start_val[2] => count.DATAB
start_val[3] => Add0.IN13
start_val[3] => count.DATAB
start_val[4] => Add0.IN12
start_val[4] => count.DATAB
start_val[5] => Add0.IN11
start_val[5] => count.DATAB
start_val[6] => Add0.IN10
start_val[6] => count.DATAB
start_val[7] => Add0.IN9
start_val[7] => count.DATAB
inc => count.OUTPUTSELECT
inc => count.OUTPUTSELECT
inc => count.OUTPUTSELECT
inc => count.OUTPUTSELECT
inc => count.OUTPUTSELECT
inc => count.OUTPUTSELECT
inc => count.OUTPUTSELECT
inc => count.OUTPUTSELECT
inc => always0.IN0
enable => always0.IN1
enable => count.OUTPUTSELECT
enable => count.OUTPUTSELECT
enable => count.OUTPUTSELECT
enable => count.OUTPUTSELECT
enable => count.OUTPUTSELECT
enable => count.OUTPUTSELECT
enable => count.OUTPUTSELECT
enable => count.OUTPUTSELECT
clk => count[0]~reg0.CLK
clk => count[1]~reg0.CLK
clk => count[2]~reg0.CLK
clk => count[3]~reg0.CLK
clk => count[4]~reg0.CLK
clk => count[5]~reg0.CLK
clk => count[6]~reg0.CLK
clk => count[7]~reg0.CLK
slow_edge => count.OUTPUTSELECT
slow_edge => count.OUTPUTSELECT
slow_edge => count.OUTPUTSELECT
slow_edge => count.OUTPUTSELECT
slow_edge => count.OUTPUTSELECT
slow_edge => count.OUTPUTSELECT
slow_edge => count.OUTPUTSELECT
slow_edge => count.OUTPUTSELECT
reset => count.OUTPUTSELECT
reset => count.OUTPUTSELECT
reset => count.OUTPUTSELECT
reset => count.OUTPUTSELECT
reset => count.OUTPUTSELECT
reset => count.OUTPUTSELECT
reset => count.OUTPUTSELECT
reset => count.OUTPUTSELECT
init_val[0] => count.DATAB
init_val[1] => count.DATAB


|lab8|snakes_and_apples:snake|grid_light:thorax
green_light_on <= green_light_on.DB_MAX_OUTPUT_PORT_TYPE
head <= head.DB_MAX_OUTPUT_PORT_TYPE
game_over_out <= state_n.DB_MAX_OUTPUT_PORT_TYPE
eating => counter256:counter.inc
eating => always0.IN1
game_over_in => state_n.e_off.OUTPUTSELECT
game_over_in => state_n.e_countdown.OUTPUTSELECT
game_over_in => state_n.e_head.OUTPUTSELECT
game_over_in => state_n.OUTPUTSELECT
left => state_n.OUTPUTSELECT
left => state_n.OUTPUTSELECT
left => state_n.OUTPUTSELECT
left => state_n.OUTPUTSELECT
up => state_n.OUTPUTSELECT
up => state_n.OUTPUTSELECT
up => state_n.OUTPUTSELECT
up => state_n.OUTPUTSELECT
right => state_n.OUTPUTSELECT
right => state_n.OUTPUTSELECT
right => state_n.OUTPUTSELECT
right => state_n.OUTPUTSELECT
down => state_n.OUTPUTSELECT
down => state_n.OUTPUTSELECT
down => state_n.OUTPUTSELECT
down => state_n.OUTPUTSELECT
length[0] => counter256:counter.start_val[0]
length[1] => counter256:counter.start_val[1]
length[2] => counter256:counter.start_val[2]
length[3] => counter256:counter.start_val[3]
length[4] => counter256:counter.start_val[4]
length[5] => counter256:counter.start_val[5]
length[6] => counter256:counter.start_val[6]
length[7] => counter256:counter.start_val[7]
dir[0] => Mux0.IN5
dir[0] => Mux1.IN5
dir[0] => Mux2.IN5
dir[0] => Mux3.IN5
dir[1] => Mux0.IN4
dir[1] => Mux1.IN4
dir[1] => Mux2.IN4
dir[1] => Mux3.IN4
clk => counter256:counter.clk
clk => state_r~1.DATAIN
slow_edge => counter256:counter.slow_edge
slow_edge => state_r.OUTPUTSELECT
slow_edge => state_r.OUTPUTSELECT
slow_edge => state_r.OUTPUTSELECT
slow_edge => state_r.OUTPUTSELECT
reset => counter256:counter.reset
reset => state_r.OUTPUTSELECT
reset => state_r.OUTPUTSELECT
reset => state_r.OUTPUTSELECT
reset => state_r.OUTPUTSELECT
light_type[0] => counter256:counter.init_val[0]
light_type[0] => Equal1.IN1
light_type[0] => Equal2.IN1
light_type[1] => counter256:counter.init_val[1]
light_type[1] => Equal1.IN0
light_type[1] => Equal2.IN0


|lab8|snakes_and_apples:snake|grid_light:thorax|counter256:counter
count[0] <= count[0]~reg0.DB_MAX_OUTPUT_PORT_TYPE
count[1] <= count[1]~reg0.DB_MAX_OUTPUT_PORT_TYPE
count[2] <= count[2]~reg0.DB_MAX_OUTPUT_PORT_TYPE
count[3] <= count[3]~reg0.DB_MAX_OUTPUT_PORT_TYPE
count[4] <= count[4]~reg0.DB_MAX_OUTPUT_PORT_TYPE
count[5] <= count[5]~reg0.DB_MAX_OUTPUT_PORT_TYPE
count[6] <= count[6]~reg0.DB_MAX_OUTPUT_PORT_TYPE
count[7] <= count[7]~reg0.DB_MAX_OUTPUT_PORT_TYPE
start_val[0] => Add0.IN16
start_val[0] => count.DATAB
start_val[1] => Add0.IN15
start_val[1] => count.DATAB
start_val[2] => Add0.IN14
start_val[2] => count.DATAB
start_val[3] => Add0.IN13
start_val[3] => count.DATAB
start_val[4] => Add0.IN12
start_val[4] => count.DATAB
start_val[5] => Add0.IN11
start_val[5] => count.DATAB
start_val[6] => Add0.IN10
start_val[6] => count.DATAB
start_val[7] => Add0.IN9
start_val[7] => count.DATAB
inc => count.OUTPUTSELECT
inc => count.OUTPUTSELECT
inc => count.OUTPUTSELECT
inc => count.OUTPUTSELECT
inc => count.OUTPUTSELECT
inc => count.OUTPUTSELECT
inc => count.OUTPUTSELECT
inc => count.OUTPUTSELECT
inc => always0.IN0
enable => always0.IN1
enable => count.OUTPUTSELECT
enable => count.OUTPUTSELECT
enable => count.OUTPUTSELECT
enable => count.OUTPUTSELECT
enable => count.OUTPUTSELECT
enable => count.OUTPUTSELECT
enable => count.OUTPUTSELECT
enable => count.OUTPUTSELECT
clk => count[0]~reg0.CLK
clk => count[1]~reg0.CLK
clk => count[2]~reg0.CLK
clk => count[3]~reg0.CLK
clk => count[4]~reg0.CLK
clk => count[5]~reg0.CLK
clk => count[6]~reg0.CLK
clk => count[7]~reg0.CLK
slow_edge => count.OUTPUTSELECT
slow_edge => count.OUTPUTSELECT
slow_edge => count.OUTPUTSELECT
slow_edge => count.OUTPUTSELECT
slow_edge => count.OUTPUTSELECT
slow_edge => count.OUTPUTSELECT
slow_edge => count.OUTPUTSELECT
slow_edge => count.OUTPUTSELECT
reset => count.OUTPUTSELECT
reset => count.OUTPUTSELECT
reset => count.OUTPUTSELECT
reset => count.OUTPUTSELECT
reset => count.OUTPUTSELECT
reset => count.OUTPUTSELECT
reset => count.OUTPUTSELECT
reset => count.OUTPUTSELECT
init_val[0] => count.DATAB
init_val[1] => count.DATAB


|lab8|snakes_and_apples:snake|grid_light:head
green_light_on <= green_light_on.DB_MAX_OUTPUT_PORT_TYPE
head <= head.DB_MAX_OUTPUT_PORT_TYPE
game_over_out <= state_n.DB_MAX_OUTPUT_PORT_TYPE
eating => counter256:counter.inc
eating => always0.IN1
game_over_in => state_n.e_off.OUTPUTSELECT
game_over_in => state_n.e_countdown.OUTPUTSELECT
game_over_in => state_n.e_head.OUTPUTSELECT
game_over_in => state_n.OUTPUTSELECT
left => state_n.OUTPUTSELECT
left => state_n.OUTPUTSELECT
left => state_n.OUTPUTSELECT
left => state_n.OUTPUTSELECT
up => state_n.OUTPUTSELECT
up => state_n.OUTPUTSELECT
up => state_n.OUTPUTSELECT
up => state_n.OUTPUTSELECT
right => state_n.OUTPUTSELECT
right => state_n.OUTPUTSELECT
right => state_n.OUTPUTSELECT
right => state_n.OUTPUTSELECT
down => state_n.OUTPUTSELECT
down => state_n.OUTPUTSELECT
down => state_n.OUTPUTSELECT
down => state_n.OUTPUTSELECT
length[0] => counter256:counter.start_val[0]
length[1] => counter256:counter.start_val[1]
length[2] => counter256:counter.start_val[2]
length[3] => counter256:counter.start_val[3]
length[4] => counter256:counter.start_val[4]
length[5] => counter256:counter.start_val[5]
length[6] => counter256:counter.start_val[6]
length[7] => counter256:counter.start_val[7]
dir[0] => Mux0.IN5
dir[0] => Mux1.IN5
dir[0] => Mux2.IN5
dir[0] => Mux3.IN5
dir[1] => Mux0.IN4
dir[1] => Mux1.IN4
dir[1] => Mux2.IN4
dir[1] => Mux3.IN4
clk => counter256:counter.clk
clk => state_r~1.DATAIN
slow_edge => counter256:counter.slow_edge
slow_edge => state_r.OUTPUTSELECT
slow_edge => state_r.OUTPUTSELECT
slow_edge => state_r.OUTPUTSELECT
slow_edge => state_r.OUTPUTSELECT
reset => counter256:counter.reset
reset => state_r.OUTPUTSELECT
reset => state_r.OUTPUTSELECT
reset => state_r.OUTPUTSELECT
reset => state_r.OUTPUTSELECT
light_type[0] => counter256:counter.init_val[0]
light_type[0] => Equal1.IN1
light_type[0] => Equal2.IN1
light_type[1] => counter256:counter.init_val[1]
light_type[1] => Equal1.IN0
light_type[1] => Equal2.IN0


|lab8|snakes_and_apples:snake|grid_light:head|counter256:counter
count[0] <= count[0]~reg0.DB_MAX_OUTPUT_PORT_TYPE
count[1] <= count[1]~reg0.DB_MAX_OUTPUT_PORT_TYPE
count[2] <= count[2]~reg0.DB_MAX_OUTPUT_PORT_TYPE
count[3] <= count[3]~reg0.DB_MAX_OUTPUT_PORT_TYPE
count[4] <= count[4]~reg0.DB_MAX_OUTPUT_PORT_TYPE
count[5] <= count[5]~reg0.DB_MAX_OUTPUT_PORT_TYPE
count[6] <= count[6]~reg0.DB_MAX_OUTPUT_PORT_TYPE
count[7] <= count[7]~reg0.DB_MAX_OUTPUT_PORT_TYPE
start_val[0] => Add0.IN16
start_val[0] => count.DATAB
start_val[1] => Add0.IN15
start_val[1] => count.DATAB
start_val[2] => Add0.IN14
start_val[2] => count.DATAB
start_val[3] => Add0.IN13
start_val[3] => count.DATAB
start_val[4] => Add0.IN12
start_val[4] => count.DATAB
start_val[5] => Add0.IN11
start_val[5] => count.DATAB
start_val[6] => Add0.IN10
start_val[6] => count.DATAB
start_val[7] => Add0.IN9
start_val[7] => count.DATAB
inc => count.OUTPUTSELECT
inc => count.OUTPUTSELECT
inc => count.OUTPUTSELECT
inc => count.OUTPUTSELECT
inc => count.OUTPUTSELECT
inc => count.OUTPUTSELECT
inc => count.OUTPUTSELECT
inc => count.OUTPUTSELECT
inc => always0.IN0
enable => always0.IN1
enable => count.OUTPUTSELECT
enable => count.OUTPUTSELECT
enable => count.OUTPUTSELECT
enable => count.OUTPUTSELECT
enable => count.OUTPUTSELECT
enable => count.OUTPUTSELECT
enable => count.OUTPUTSELECT
enable => count.OUTPUTSELECT
clk => count[0]~reg0.CLK
clk => count[1]~reg0.CLK
clk => count[2]~reg0.CLK
clk => count[3]~reg0.CLK
clk => count[4]~reg0.CLK
clk => count[5]~reg0.CLK
clk => count[6]~reg0.CLK
clk => count[7]~reg0.CLK
slow_edge => count.OUTPUTSELECT
slow_edge => count.OUTPUTSELECT
slow_edge => count.OUTPUTSELECT
slow_edge => count.OUTPUTSELECT
slow_edge => count.OUTPUTSELECT
slow_edge => count.OUTPUTSELECT
slow_edge => count.OUTPUTSELECT
slow_edge => count.OUTPUTSELECT
reset => count.OUTPUTSELECT
reset => count.OUTPUTSELECT
reset => count.OUTPUTSELECT
reset => count.OUTPUTSELECT
reset => count.OUTPUTSELECT
reset => count.OUTPUTSELECT
reset => count.OUTPUTSELECT
reset => count.OUTPUTSELECT
init_val[0] => count.DATAB
init_val[1] => count.DATAB


|lab8|snakes_and_apples:snake|grid_light:top_right
green_light_on <= green_light_on.DB_MAX_OUTPUT_PORT_TYPE
head <= head.DB_MAX_OUTPUT_PORT_TYPE
game_over_out <= state_n.DB_MAX_OUTPUT_PORT_TYPE
eating => counter256:counter.inc
eating => always0.IN1
game_over_in => state_n.e_off.OUTPUTSELECT
game_over_in => state_n.e_countdown.OUTPUTSELECT
game_over_in => state_n.e_head.OUTPUTSELECT
game_over_in => state_n.OUTPUTSELECT
left => state_n.OUTPUTSELECT
left => state_n.OUTPUTSELECT
left => state_n.OUTPUTSELECT
left => state_n.OUTPUTSELECT
up => state_n.OUTPUTSELECT
up => state_n.OUTPUTSELECT
up => state_n.OUTPUTSELECT
up => state_n.OUTPUTSELECT
right => state_n.OUTPUTSELECT
right => state_n.OUTPUTSELECT
right => state_n.OUTPUTSELECT
right => state_n.OUTPUTSELECT
down => state_n.OUTPUTSELECT
down => state_n.OUTPUTSELECT
down => state_n.OUTPUTSELECT
down => state_n.OUTPUTSELECT
length[0] => counter256:counter.start_val[0]
length[1] => counter256:counter.start_val[1]
length[2] => counter256:counter.start_val[2]
length[3] => counter256:counter.start_val[3]
length[4] => counter256:counter.start_val[4]
length[5] => counter256:counter.start_val[5]
length[6] => counter256:counter.start_val[6]
length[7] => counter256:counter.start_val[7]
dir[0] => Mux0.IN5
dir[0] => Mux1.IN5
dir[0] => Mux2.IN5
dir[0] => Mux3.IN5
dir[1] => Mux0.IN4
dir[1] => Mux1.IN4
dir[1] => Mux2.IN4
dir[1] => Mux3.IN4
clk => counter256:counter.clk
clk => state_r~1.DATAIN
slow_edge => counter256:counter.slow_edge
slow_edge => state_r.OUTPUTSELECT
slow_edge => state_r.OUTPUTSELECT
slow_edge => state_r.OUTPUTSELECT
slow_edge => state_r.OUTPUTSELECT
reset => counter256:counter.reset
reset => state_r.OUTPUTSELECT
reset => state_r.OUTPUTSELECT
reset => state_r.OUTPUTSELECT
reset => state_r.OUTPUTSELECT
light_type[0] => counter256:counter.init_val[0]
light_type[0] => Equal1.IN1
light_type[0] => Equal2.IN1
light_type[1] => counter256:counter.init_val[1]
light_type[1] => Equal1.IN0
light_type[1] => Equal2.IN0


|lab8|snakes_and_apples:snake|grid_light:top_right|counter256:counter
count[0] <= count[0]~reg0.DB_MAX_OUTPUT_PORT_TYPE
count[1] <= count[1]~reg0.DB_MAX_OUTPUT_PORT_TYPE
count[2] <= count[2]~reg0.DB_MAX_OUTPUT_PORT_TYPE
count[3] <= count[3]~reg0.DB_MAX_OUTPUT_PORT_TYPE
count[4] <= count[4]~reg0.DB_MAX_OUTPUT_PORT_TYPE
count[5] <= count[5]~reg0.DB_MAX_OUTPUT_PORT_TYPE
count[6] <= count[6]~reg0.DB_MAX_OUTPUT_PORT_TYPE
count[7] <= count[7]~reg0.DB_MAX_OUTPUT_PORT_TYPE
start_val[0] => Add0.IN16
start_val[0] => count.DATAB
start_val[1] => Add0.IN15
start_val[1] => count.DATAB
start_val[2] => Add0.IN14
start_val[2] => count.DATAB
start_val[3] => Add0.IN13
start_val[3] => count.DATAB
start_val[4] => Add0.IN12
start_val[4] => count.DATAB
start_val[5] => Add0.IN11
start_val[5] => count.DATAB
start_val[6] => Add0.IN10
start_val[6] => count.DATAB
start_val[7] => Add0.IN9
start_val[7] => count.DATAB
inc => count.OUTPUTSELECT
inc => count.OUTPUTSELECT
inc => count.OUTPUTSELECT
inc => count.OUTPUTSELECT
inc => count.OUTPUTSELECT
inc => count.OUTPUTSELECT
inc => count.OUTPUTSELECT
inc => count.OUTPUTSELECT
inc => always0.IN0
enable => always0.IN1
enable => count.OUTPUTSELECT
enable => count.OUTPUTSELECT
enable => count.OUTPUTSELECT
enable => count.OUTPUTSELECT
enable => count.OUTPUTSELECT
enable => count.OUTPUTSELECT
enable => count.OUTPUTSELECT
enable => count.OUTPUTSELECT
clk => count[0]~reg0.CLK
clk => count[1]~reg0.CLK
clk => count[2]~reg0.CLK
clk => count[3]~reg0.CLK
clk => count[4]~reg0.CLK
clk => count[5]~reg0.CLK
clk => count[6]~reg0.CLK
clk => count[7]~reg0.CLK
slow_edge => count.OUTPUTSELECT
slow_edge => count.OUTPUTSELECT
slow_edge => count.OUTPUTSELECT
slow_edge => count.OUTPUTSELECT
slow_edge => count.OUTPUTSELECT
slow_edge => count.OUTPUTSELECT
slow_edge => count.OUTPUTSELECT
slow_edge => count.OUTPUTSELECT
reset => count.OUTPUTSELECT
reset => count.OUTPUTSELECT
reset => count.OUTPUTSELECT
reset => count.OUTPUTSELECT
reset => count.OUTPUTSELECT
reset => count.OUTPUTSELECT
reset => count.OUTPUTSELECT
reset => count.OUTPUTSELECT
init_val[0] => count.DATAB
init_val[1] => count.DATAB


|lab8|snakes_and_apples:snake|grid_light:bot_right
green_light_on <= green_light_on.DB_MAX_OUTPUT_PORT_TYPE
head <= head.DB_MAX_OUTPUT_PORT_TYPE
game_over_out <= state_n.DB_MAX_OUTPUT_PORT_TYPE
eating => counter256:counter.inc
eating => always0.IN1
game_over_in => state_n.e_off.OUTPUTSELECT
game_over_in => state_n.e_countdown.OUTPUTSELECT
game_over_in => state_n.e_head.OUTPUTSELECT
game_over_in => state_n.OUTPUTSELECT
left => state_n.OUTPUTSELECT
left => state_n.OUTPUTSELECT
left => state_n.OUTPUTSELECT
left => state_n.OUTPUTSELECT
up => state_n.OUTPUTSELECT
up => state_n.OUTPUTSELECT
up => state_n.OUTPUTSELECT
up => state_n.OUTPUTSELECT
right => state_n.OUTPUTSELECT
right => state_n.OUTPUTSELECT
right => state_n.OUTPUTSELECT
right => state_n.OUTPUTSELECT
down => state_n.OUTPUTSELECT
down => state_n.OUTPUTSELECT
down => state_n.OUTPUTSELECT
down => state_n.OUTPUTSELECT
length[0] => counter256:counter.start_val[0]
length[1] => counter256:counter.start_val[1]
length[2] => counter256:counter.start_val[2]
length[3] => counter256:counter.start_val[3]
length[4] => counter256:counter.start_val[4]
length[5] => counter256:counter.start_val[5]
length[6] => counter256:counter.start_val[6]
length[7] => counter256:counter.start_val[7]
dir[0] => Mux0.IN5
dir[0] => Mux1.IN5
dir[0] => Mux2.IN5
dir[0] => Mux3.IN5
dir[1] => Mux0.IN4
dir[1] => Mux1.IN4
dir[1] => Mux2.IN4
dir[1] => Mux3.IN4
clk => counter256:counter.clk
clk => state_r~1.DATAIN
slow_edge => counter256:counter.slow_edge
slow_edge => state_r.OUTPUTSELECT
slow_edge => state_r.OUTPUTSELECT
slow_edge => state_r.OUTPUTSELECT
slow_edge => state_r.OUTPUTSELECT
reset => counter256:counter.reset
reset => state_r.OUTPUTSELECT
reset => state_r.OUTPUTSELECT
reset => state_r.OUTPUTSELECT
reset => state_r.OUTPUTSELECT
light_type[0] => counter256:counter.init_val[0]
light_type[0] => Equal1.IN1
light_type[0] => Equal2.IN1
light_type[1] => counter256:counter.init_val[1]
light_type[1] => Equal1.IN0
light_type[1] => Equal2.IN0


|lab8|snakes_and_apples:snake|grid_light:bot_right|counter256:counter
count[0] <= count[0]~reg0.DB_MAX_OUTPUT_PORT_TYPE
count[1] <= count[1]~reg0.DB_MAX_OUTPUT_PORT_TYPE
count[2] <= count[2]~reg0.DB_MAX_OUTPUT_PORT_TYPE
count[3] <= count[3]~reg0.DB_MAX_OUTPUT_PORT_TYPE
count[4] <= count[4]~reg0.DB_MAX_OUTPUT_PORT_TYPE
count[5] <= count[5]~reg0.DB_MAX_OUTPUT_PORT_TYPE
count[6] <= count[6]~reg0.DB_MAX_OUTPUT_PORT_TYPE
count[7] <= count[7]~reg0.DB_MAX_OUTPUT_PORT_TYPE
start_val[0] => Add0.IN16
start_val[0] => count.DATAB
start_val[1] => Add0.IN15
start_val[1] => count.DATAB
start_val[2] => Add0.IN14
start_val[2] => count.DATAB
start_val[3] => Add0.IN13
start_val[3] => count.DATAB
start_val[4] => Add0.IN12
start_val[4] => count.DATAB
start_val[5] => Add0.IN11
start_val[5] => count.DATAB
start_val[6] => Add0.IN10
start_val[6] => count.DATAB
start_val[7] => Add0.IN9
start_val[7] => count.DATAB
inc => count.OUTPUTSELECT
inc => count.OUTPUTSELECT
inc => count.OUTPUTSELECT
inc => count.OUTPUTSELECT
inc => count.OUTPUTSELECT
inc => count.OUTPUTSELECT
inc => count.OUTPUTSELECT
inc => count.OUTPUTSELECT
inc => always0.IN0
enable => always0.IN1
enable => count.OUTPUTSELECT
enable => count.OUTPUTSELECT
enable => count.OUTPUTSELECT
enable => count.OUTPUTSELECT
enable => count.OUTPUTSELECT
enable => count.OUTPUTSELECT
enable => count.OUTPUTSELECT
enable => count.OUTPUTSELECT
clk => count[0]~reg0.CLK
clk => count[1]~reg0.CLK
clk => count[2]~reg0.CLK
clk => count[3]~reg0.CLK
clk => count[4]~reg0.CLK
clk => count[5]~reg0.CLK
clk => count[6]~reg0.CLK
clk => count[7]~reg0.CLK
slow_edge => count.OUTPUTSELECT
slow_edge => count.OUTPUTSELECT
slow_edge => count.OUTPUTSELECT
slow_edge => count.OUTPUTSELECT
slow_edge => count.OUTPUTSELECT
slow_edge => count.OUTPUTSELECT
slow_edge => count.OUTPUTSELECT
slow_edge => count.OUTPUTSELECT
reset => count.OUTPUTSELECT
reset => count.OUTPUTSELECT
reset => count.OUTPUTSELECT
reset => count.OUTPUTSELECT
reset => count.OUTPUTSELECT
reset => count.OUTPUTSELECT
reset => count.OUTPUTSELECT
reset => count.OUTPUTSELECT
init_val[0] => count.DATAB
init_val[1] => count.DATAB


|lab8|snakes_and_apples:snake|grid_light:bot_left
green_light_on <= green_light_on.DB_MAX_OUTPUT_PORT_TYPE
head <= head.DB_MAX_OUTPUT_PORT_TYPE
game_over_out <= state_n.DB_MAX_OUTPUT_PORT_TYPE
eating => counter256:counter.inc
eating => always0.IN1
game_over_in => state_n.e_off.OUTPUTSELECT
game_over_in => state_n.e_countdown.OUTPUTSELECT
game_over_in => state_n.e_head.OUTPUTSELECT
game_over_in => state_n.OUTPUTSELECT
left => state_n.OUTPUTSELECT
left => state_n.OUTPUTSELECT
left => state_n.OUTPUTSELECT
left => state_n.OUTPUTSELECT
up => state_n.OUTPUTSELECT
up => state_n.OUTPUTSELECT
up => state_n.OUTPUTSELECT
up => state_n.OUTPUTSELECT
right => state_n.OUTPUTSELECT
right => state_n.OUTPUTSELECT
right => state_n.OUTPUTSELECT
right => state_n.OUTPUTSELECT
down => state_n.OUTPUTSELECT
down => state_n.OUTPUTSELECT
down => state_n.OUTPUTSELECT
down => state_n.OUTPUTSELECT
length[0] => counter256:counter.start_val[0]
length[1] => counter256:counter.start_val[1]
length[2] => counter256:counter.start_val[2]
length[3] => counter256:counter.start_val[3]
length[4] => counter256:counter.start_val[4]
length[5] => counter256:counter.start_val[5]
length[6] => counter256:counter.start_val[6]
length[7] => counter256:counter.start_val[7]
dir[0] => Mux0.IN5
dir[0] => Mux1.IN5
dir[0] => Mux2.IN5
dir[0] => Mux3.IN5
dir[1] => Mux0.IN4
dir[1] => Mux1.IN4
dir[1] => Mux2.IN4
dir[1] => Mux3.IN4
clk => counter256:counter.clk
clk => state_r~1.DATAIN
slow_edge => counter256:counter.slow_edge
slow_edge => state_r.OUTPUTSELECT
slow_edge => state_r.OUTPUTSELECT
slow_edge => state_r.OUTPUTSELECT
slow_edge => state_r.OUTPUTSELECT
reset => counter256:counter.reset
reset => state_r.OUTPUTSELECT
reset => state_r.OUTPUTSELECT
reset => state_r.OUTPUTSELECT
reset => state_r.OUTPUTSELECT
light_type[0] => counter256:counter.init_val[0]
light_type[0] => Equal1.IN1
light_type[0] => Equal2.IN1
light_type[1] => counter256:counter.init_val[1]
light_type[1] => Equal1.IN0
light_type[1] => Equal2.IN0


|lab8|snakes_and_apples:snake|grid_light:bot_left|counter256:counter
count[0] <= count[0]~reg0.DB_MAX_OUTPUT_PORT_TYPE
count[1] <= count[1]~reg0.DB_MAX_OUTPUT_PORT_TYPE
count[2] <= count[2]~reg0.DB_MAX_OUTPUT_PORT_TYPE
count[3] <= count[3]~reg0.DB_MAX_OUTPUT_PORT_TYPE
count[4] <= count[4]~reg0.DB_MAX_OUTPUT_PORT_TYPE
count[5] <= count[5]~reg0.DB_MAX_OUTPUT_PORT_TYPE
count[6] <= count[6]~reg0.DB_MAX_OUTPUT_PORT_TYPE
count[7] <= count[7]~reg0.DB_MAX_OUTPUT_PORT_TYPE
start_val[0] => Add0.IN16
start_val[0] => count.DATAB
start_val[1] => Add0.IN15
start_val[1] => count.DATAB
start_val[2] => Add0.IN14
start_val[2] => count.DATAB
start_val[3] => Add0.IN13
start_val[3] => count.DATAB
start_val[4] => Add0.IN12
start_val[4] => count.DATAB
start_val[5] => Add0.IN11
start_val[5] => count.DATAB
start_val[6] => Add0.IN10
start_val[6] => count.DATAB
start_val[7] => Add0.IN9
start_val[7] => count.DATAB
inc => count.OUTPUTSELECT
inc => count.OUTPUTSELECT
inc => count.OUTPUTSELECT
inc => count.OUTPUTSELECT
inc => count.OUTPUTSELECT
inc => count.OUTPUTSELECT
inc => count.OUTPUTSELECT
inc => count.OUTPUTSELECT
inc => always0.IN0
enable => always0.IN1
enable => count.OUTPUTSELECT
enable => count.OUTPUTSELECT
enable => count.OUTPUTSELECT
enable => count.OUTPUTSELECT
enable => count.OUTPUTSELECT
enable => count.OUTPUTSELECT
enable => count.OUTPUTSELECT
enable => count.OUTPUTSELECT
clk => count[0]~reg0.CLK
clk => count[1]~reg0.CLK
clk => count[2]~reg0.CLK
clk => count[3]~reg0.CLK
clk => count[4]~reg0.CLK
clk => count[5]~reg0.CLK
clk => count[6]~reg0.CLK
clk => count[7]~reg0.CLK
slow_edge => count.OUTPUTSELECT
slow_edge => count.OUTPUTSELECT
slow_edge => count.OUTPUTSELECT
slow_edge => count.OUTPUTSELECT
slow_edge => count.OUTPUTSELECT
slow_edge => count.OUTPUTSELECT
slow_edge => count.OUTPUTSELECT
slow_edge => count.OUTPUTSELECT
reset => count.OUTPUTSELECT
reset => count.OUTPUTSELECT
reset => count.OUTPUTSELECT
reset => count.OUTPUTSELECT
reset => count.OUTPUTSELECT
reset => count.OUTPUTSELECT
reset => count.OUTPUTSELECT
reset => count.OUTPUTSELECT
init_val[0] => count.DATAB
init_val[1] => count.DATAB


|lab8|snakes_and_apples:snake|grid_light:vertical_bars[1].right_col
green_light_on <= green_light_on.DB_MAX_OUTPUT_PORT_TYPE
head <= head.DB_MAX_OUTPUT_PORT_TYPE
game_over_out <= state_n.DB_MAX_OUTPUT_PORT_TYPE
eating => counter256:counter.inc
eating => always0.IN1
game_over_in => state_n.e_off.OUTPUTSELECT
game_over_in => state_n.e_countdown.OUTPUTSELECT
game_over_in => state_n.e_head.OUTPUTSELECT
game_over_in => state_n.OUTPUTSELECT
left => state_n.OUTPUTSELECT
left => state_n.OUTPUTSELECT
left => state_n.OUTPUTSELECT
left => state_n.OUTPUTSELECT
up => state_n.OUTPUTSELECT
up => state_n.OUTPUTSELECT
up => state_n.OUTPUTSELECT
up => state_n.OUTPUTSELECT
right => state_n.OUTPUTSELECT
right => state_n.OUTPUTSELECT
right => state_n.OUTPUTSELECT
right => state_n.OUTPUTSELECT
down => state_n.OUTPUTSELECT
down => state_n.OUTPUTSELECT
down => state_n.OUTPUTSELECT
down => state_n.OUTPUTSELECT
length[0] => counter256:counter.start_val[0]
length[1] => counter256:counter.start_val[1]
length[2] => counter256:counter.start_val[2]
length[3] => counter256:counter.start_val[3]
length[4] => counter256:counter.start_val[4]
length[5] => counter256:counter.start_val[5]
length[6] => counter256:counter.start_val[6]
length[7] => counter256:counter.start_val[7]
dir[0] => Mux0.IN5
dir[0] => Mux1.IN5
dir[0] => Mux2.IN5
dir[0] => Mux3.IN5
dir[1] => Mux0.IN4
dir[1] => Mux1.IN4
dir[1] => Mux2.IN4
dir[1] => Mux3.IN4
clk => counter256:counter.clk
clk => state_r~1.DATAIN
slow_edge => counter256:counter.slow_edge
slow_edge => state_r.OUTPUTSELECT
slow_edge => state_r.OUTPUTSELECT
slow_edge => state_r.OUTPUTSELECT
slow_edge => state_r.OUTPUTSELECT
reset => counter256:counter.reset
reset => state_r.OUTPUTSELECT
reset => state_r.OUTPUTSELECT
reset => state_r.OUTPUTSELECT
reset => state_r.OUTPUTSELECT
light_type[0] => counter256:counter.init_val[0]
light_type[0] => Equal1.IN1
light_type[0] => Equal2.IN1
light_type[1] => counter256:counter.init_val[1]
light_type[1] => Equal1.IN0
light_type[1] => Equal2.IN0


|lab8|snakes_and_apples:snake|grid_light:vertical_bars[1].right_col|counter256:counter
count[0] <= count[0]~reg0.DB_MAX_OUTPUT_PORT_TYPE
count[1] <= count[1]~reg0.DB_MAX_OUTPUT_PORT_TYPE
count[2] <= count[2]~reg0.DB_MAX_OUTPUT_PORT_TYPE
count[3] <= count[3]~reg0.DB_MAX_OUTPUT_PORT_TYPE
count[4] <= count[4]~reg0.DB_MAX_OUTPUT_PORT_TYPE
count[5] <= count[5]~reg0.DB_MAX_OUTPUT_PORT_TYPE
count[6] <= count[6]~reg0.DB_MAX_OUTPUT_PORT_TYPE
count[7] <= count[7]~reg0.DB_MAX_OUTPUT_PORT_TYPE
start_val[0] => Add0.IN16
start_val[0] => count.DATAB
start_val[1] => Add0.IN15
start_val[1] => count.DATAB
start_val[2] => Add0.IN14
start_val[2] => count.DATAB
start_val[3] => Add0.IN13
start_val[3] => count.DATAB
start_val[4] => Add0.IN12
start_val[4] => count.DATAB
start_val[5] => Add0.IN11
start_val[5] => count.DATAB
start_val[6] => Add0.IN10
start_val[6] => count.DATAB
start_val[7] => Add0.IN9
start_val[7] => count.DATAB
inc => count.OUTPUTSELECT
inc => count.OUTPUTSELECT
inc => count.OUTPUTSELECT
inc => count.OUTPUTSELECT
inc => count.OUTPUTSELECT
inc => count.OUTPUTSELECT
inc => count.OUTPUTSELECT
inc => count.OUTPUTSELECT
inc => always0.IN0
enable => always0.IN1
enable => count.OUTPUTSELECT
enable => count.OUTPUTSELECT
enable => count.OUTPUTSELECT
enable => count.OUTPUTSELECT
enable => count.OUTPUTSELECT
enable => count.OUTPUTSELECT
enable => count.OUTPUTSELECT
enable => count.OUTPUTSELECT
clk => count[0]~reg0.CLK
clk => count[1]~reg0.CLK
clk => count[2]~reg0.CLK
clk => count[3]~reg0.CLK
clk => count[4]~reg0.CLK
clk => count[5]~reg0.CLK
clk => count[6]~reg0.CLK
clk => count[7]~reg0.CLK
slow_edge => count.OUTPUTSELECT
slow_edge => count.OUTPUTSELECT
slow_edge => count.OUTPUTSELECT
slow_edge => count.OUTPUTSELECT
slow_edge => count.OUTPUTSELECT
slow_edge => count.OUTPUTSELECT
slow_edge => count.OUTPUTSELECT
slow_edge => count.OUTPUTSELECT
reset => count.OUTPUTSELECT
reset => count.OUTPUTSELECT
reset => count.OUTPUTSELECT
reset => count.OUTPUTSELECT
reset => count.OUTPUTSELECT
reset => count.OUTPUTSELECT
reset => count.OUTPUTSELECT
reset => count.OUTPUTSELECT
init_val[0] => count.DATAB
init_val[1] => count.DATAB


|lab8|snakes_and_apples:snake|grid_light:vertical_bars[2].right_col
green_light_on <= green_light_on.DB_MAX_OUTPUT_PORT_TYPE
head <= head.DB_MAX_OUTPUT_PORT_TYPE
game_over_out <= state_n.DB_MAX_OUTPUT_PORT_TYPE
eating => counter256:counter.inc
eating => always0.IN1
game_over_in => state_n.e_off.OUTPUTSELECT
game_over_in => state_n.e_countdown.OUTPUTSELECT
game_over_in => state_n.e_head.OUTPUTSELECT
game_over_in => state_n.OUTPUTSELECT
left => state_n.OUTPUTSELECT
left => state_n.OUTPUTSELECT
left => state_n.OUTPUTSELECT
left => state_n.OUTPUTSELECT
up => state_n.OUTPUTSELECT
up => state_n.OUTPUTSELECT
up => state_n.OUTPUTSELECT
up => state_n.OUTPUTSELECT
right => state_n.OUTPUTSELECT
right => state_n.OUTPUTSELECT
right => state_n.OUTPUTSELECT
right => state_n.OUTPUTSELECT
down => state_n.OUTPUTSELECT
down => state_n.OUTPUTSELECT
down => state_n.OUTPUTSELECT
down => state_n.OUTPUTSELECT
length[0] => counter256:counter.start_val[0]
length[1] => counter256:counter.start_val[1]
length[2] => counter256:counter.start_val[2]
length[3] => counter256:counter.start_val[3]
length[4] => counter256:counter.start_val[4]
length[5] => counter256:counter.start_val[5]
length[6] => counter256:counter.start_val[6]
length[7] => counter256:counter.start_val[7]
dir[0] => Mux0.IN5
dir[0] => Mux1.IN5
dir[0] => Mux2.IN5
dir[0] => Mux3.IN5
dir[1] => Mux0.IN4
dir[1] => Mux1.IN4
dir[1] => Mux2.IN4
dir[1] => Mux3.IN4
clk => counter256:counter.clk
clk => state_r~1.DATAIN
slow_edge => counter256:counter.slow_edge
slow_edge => state_r.OUTPUTSELECT
slow_edge => state_r.OUTPUTSELECT
slow_edge => state_r.OUTPUTSELECT
slow_edge => state_r.OUTPUTSELECT
reset => counter256:counter.reset
reset => state_r.OUTPUTSELECT
reset => state_r.OUTPUTSELECT
reset => state_r.OUTPUTSELECT
reset => state_r.OUTPUTSELECT
light_type[0] => counter256:counter.init_val[0]
light_type[0] => Equal1.IN1
light_type[0] => Equal2.IN1
light_type[1] => counter256:counter.init_val[1]
light_type[1] => Equal1.IN0
light_type[1] => Equal2.IN0


|lab8|snakes_and_apples:snake|grid_light:vertical_bars[2].right_col|counter256:counter
count[0] <= count[0]~reg0.DB_MAX_OUTPUT_PORT_TYPE
count[1] <= count[1]~reg0.DB_MAX_OUTPUT_PORT_TYPE
count[2] <= count[2]~reg0.DB_MAX_OUTPUT_PORT_TYPE
count[3] <= count[3]~reg0.DB_MAX_OUTPUT_PORT_TYPE
count[4] <= count[4]~reg0.DB_MAX_OUTPUT_PORT_TYPE
count[5] <= count[5]~reg0.DB_MAX_OUTPUT_PORT_TYPE
count[6] <= count[6]~reg0.DB_MAX_OUTPUT_PORT_TYPE
count[7] <= count[7]~reg0.DB_MAX_OUTPUT_PORT_TYPE
start_val[0] => Add0.IN16
start_val[0] => count.DATAB
start_val[1] => Add0.IN15
start_val[1] => count.DATAB
start_val[2] => Add0.IN14
start_val[2] => count.DATAB
start_val[3] => Add0.IN13
start_val[3] => count.DATAB
start_val[4] => Add0.IN12
start_val[4] => count.DATAB
start_val[5] => Add0.IN11
start_val[5] => count.DATAB
start_val[6] => Add0.IN10
start_val[6] => count.DATAB
start_val[7] => Add0.IN9
start_val[7] => count.DATAB
inc => count.OUTPUTSELECT
inc => count.OUTPUTSELECT
inc => count.OUTPUTSELECT
inc => count.OUTPUTSELECT
inc => count.OUTPUTSELECT
inc => count.OUTPUTSELECT
inc => count.OUTPUTSELECT
inc => count.OUTPUTSELECT
inc => always0.IN0
enable => always0.IN1
enable => count.OUTPUTSELECT
enable => count.OUTPUTSELECT
enable => count.OUTPUTSELECT
enable => count.OUTPUTSELECT
enable => count.OUTPUTSELECT
enable => count.OUTPUTSELECT
enable => count.OUTPUTSELECT
enable => count.OUTPUTSELECT
clk => count[0]~reg0.CLK
clk => count[1]~reg0.CLK
clk => count[2]~reg0.CLK
clk => count[3]~reg0.CLK
clk => count[4]~reg0.CLK
clk => count[5]~reg0.CLK
clk => count[6]~reg0.CLK
clk => count[7]~reg0.CLK
slow_edge => count.OUTPUTSELECT
slow_edge => count.OUTPUTSELECT
slow_edge => count.OUTPUTSELECT
slow_edge => count.OUTPUTSELECT
slow_edge => count.OUTPUTSELECT
slow_edge => count.OUTPUTSELECT
slow_edge => count.OUTPUTSELECT
slow_edge => count.OUTPUTSELECT
reset => count.OUTPUTSELECT
reset => count.OUTPUTSELECT
reset => count.OUTPUTSELECT
reset => count.OUTPUTSELECT
reset => count.OUTPUTSELECT
reset => count.OUTPUTSELECT
reset => count.OUTPUTSELECT
reset => count.OUTPUTSELECT
init_val[0] => count.DATAB
init_val[1] => count.DATAB


|lab8|snakes_and_apples:snake|grid_light:vertical_bars[3].left_col
green_light_on <= green_light_on.DB_MAX_OUTPUT_PORT_TYPE
head <= head.DB_MAX_OUTPUT_PORT_TYPE
game_over_out <= state_n.DB_MAX_OUTPUT_PORT_TYPE
eating => counter256:counter.inc
eating => always0.IN1
game_over_in => state_n.e_off.OUTPUTSELECT
game_over_in => state_n.e_countdown.OUTPUTSELECT
game_over_in => state_n.e_head.OUTPUTSELECT
game_over_in => state_n.OUTPUTSELECT
left => state_n.OUTPUTSELECT
left => state_n.OUTPUTSELECT
left => state_n.OUTPUTSELECT
left => state_n.OUTPUTSELECT
up => state_n.OUTPUTSELECT
up => state_n.OUTPUTSELECT
up => state_n.OUTPUTSELECT
up => state_n.OUTPUTSELECT
right => state_n.OUTPUTSELECT
right => state_n.OUTPUTSELECT
right => state_n.OUTPUTSELECT
right => state_n.OUTPUTSELECT
down => state_n.OUTPUTSELECT
down => state_n.OUTPUTSELECT
down => state_n.OUTPUTSELECT
down => state_n.OUTPUTSELECT
length[0] => counter256:counter.start_val[0]
length[1] => counter256:counter.start_val[1]
length[2] => counter256:counter.start_val[2]
length[3] => counter256:counter.start_val[3]
length[4] => counter256:counter.start_val[4]
length[5] => counter256:counter.start_val[5]
length[6] => counter256:counter.start_val[6]
length[7] => counter256:counter.start_val[7]
dir[0] => Mux0.IN5
dir[0] => Mux1.IN5
dir[0] => Mux2.IN5
dir[0] => Mux3.IN5
dir[1] => Mux0.IN4
dir[1] => Mux1.IN4
dir[1] => Mux2.IN4
dir[1] => Mux3.IN4
clk => counter256:counter.clk
clk => state_r~1.DATAIN
slow_edge => counter256:counter.slow_edge
slow_edge => state_r.OUTPUTSELECT
slow_edge => state_r.OUTPUTSELECT
slow_edge => state_r.OUTPUTSELECT
slow_edge => state_r.OUTPUTSELECT
reset => counter256:counter.reset
reset => state_r.OUTPUTSELECT
reset => state_r.OUTPUTSELECT
reset => state_r.OUTPUTSELECT
reset => state_r.OUTPUTSELECT
light_type[0] => counter256:counter.init_val[0]
light_type[0] => Equal1.IN1
light_type[0] => Equal2.IN1
light_type[1] => counter256:counter.init_val[1]
light_type[1] => Equal1.IN0
light_type[1] => Equal2.IN0


|lab8|snakes_and_apples:snake|grid_light:vertical_bars[3].left_col|counter256:counter
count[0] <= count[0]~reg0.DB_MAX_OUTPUT_PORT_TYPE
count[1] <= count[1]~reg0.DB_MAX_OUTPUT_PORT_TYPE
count[2] <= count[2]~reg0.DB_MAX_OUTPUT_PORT_TYPE
count[3] <= count[3]~reg0.DB_MAX_OUTPUT_PORT_TYPE
count[4] <= count[4]~reg0.DB_MAX_OUTPUT_PORT_TYPE
count[5] <= count[5]~reg0.DB_MAX_OUTPUT_PORT_TYPE
count[6] <= count[6]~reg0.DB_MAX_OUTPUT_PORT_TYPE
count[7] <= count[7]~reg0.DB_MAX_OUTPUT_PORT_TYPE
start_val[0] => Add0.IN16
start_val[0] => count.DATAB
start_val[1] => Add0.IN15
start_val[1] => count.DATAB
start_val[2] => Add0.IN14
start_val[2] => count.DATAB
start_val[3] => Add0.IN13
start_val[3] => count.DATAB
start_val[4] => Add0.IN12
start_val[4] => count.DATAB
start_val[5] => Add0.IN11
start_val[5] => count.DATAB
start_val[6] => Add0.IN10
start_val[6] => count.DATAB
start_val[7] => Add0.IN9
start_val[7] => count.DATAB
inc => count.OUTPUTSELECT
inc => count.OUTPUTSELECT
inc => count.OUTPUTSELECT
inc => count.OUTPUTSELECT
inc => count.OUTPUTSELECT
inc => count.OUTPUTSELECT
inc => count.OUTPUTSELECT
inc => count.OUTPUTSELECT
inc => always0.IN0
enable => always0.IN1
enable => count.OUTPUTSELECT
enable => count.OUTPUTSELECT
enable => count.OUTPUTSELECT
enable => count.OUTPUTSELECT
enable => count.OUTPUTSELECT
enable => count.OUTPUTSELECT
enable => count.OUTPUTSELECT
enable => count.OUTPUTSELECT
clk => count[0]~reg0.CLK
clk => count[1]~reg0.CLK
clk => count[2]~reg0.CLK
clk => count[3]~reg0.CLK
clk => count[4]~reg0.CLK
clk => count[5]~reg0.CLK
clk => count[6]~reg0.CLK
clk => count[7]~reg0.CLK
slow_edge => count.OUTPUTSELECT
slow_edge => count.OUTPUTSELECT
slow_edge => count.OUTPUTSELECT
slow_edge => count.OUTPUTSELECT
slow_edge => count.OUTPUTSELECT
slow_edge => count.OUTPUTSELECT
slow_edge => count.OUTPUTSELECT
slow_edge => count.OUTPUTSELECT
reset => count.OUTPUTSELECT
reset => count.OUTPUTSELECT
reset => count.OUTPUTSELECT
reset => count.OUTPUTSELECT
reset => count.OUTPUTSELECT
reset => count.OUTPUTSELECT
reset => count.OUTPUTSELECT
reset => count.OUTPUTSELECT
init_val[0] => count.DATAB
init_val[1] => count.DATAB


|lab8|snakes_and_apples:snake|grid_light:vertical_bars[3].right_col
green_light_on <= green_light_on.DB_MAX_OUTPUT_PORT_TYPE
head <= head.DB_MAX_OUTPUT_PORT_TYPE
game_over_out <= state_n.DB_MAX_OUTPUT_PORT_TYPE
eating => counter256:counter.inc
eating => always0.IN1
game_over_in => state_n.e_off.OUTPUTSELECT
game_over_in => state_n.e_countdown.OUTPUTSELECT
game_over_in => state_n.e_head.OUTPUTSELECT
game_over_in => state_n.OUTPUTSELECT
left => state_n.OUTPUTSELECT
left => state_n.OUTPUTSELECT
left => state_n.OUTPUTSELECT
left => state_n.OUTPUTSELECT
up => state_n.OUTPUTSELECT
up => state_n.OUTPUTSELECT
up => state_n.OUTPUTSELECT
up => state_n.OUTPUTSELECT
right => state_n.OUTPUTSELECT
right => state_n.OUTPUTSELECT
right => state_n.OUTPUTSELECT
right => state_n.OUTPUTSELECT
down => state_n.OUTPUTSELECT
down => state_n.OUTPUTSELECT
down => state_n.OUTPUTSELECT
down => state_n.OUTPUTSELECT
length[0] => counter256:counter.start_val[0]
length[1] => counter256:counter.start_val[1]
length[2] => counter256:counter.start_val[2]
length[3] => counter256:counter.start_val[3]
length[4] => counter256:counter.start_val[4]
length[5] => counter256:counter.start_val[5]
length[6] => counter256:counter.start_val[6]
length[7] => counter256:counter.start_val[7]
dir[0] => Mux0.IN5
dir[0] => Mux1.IN5
dir[0] => Mux2.IN5
dir[0] => Mux3.IN5
dir[1] => Mux0.IN4
dir[1] => Mux1.IN4
dir[1] => Mux2.IN4
dir[1] => Mux3.IN4
clk => counter256:counter.clk
clk => state_r~1.DATAIN
slow_edge => counter256:counter.slow_edge
slow_edge => state_r.OUTPUTSELECT
slow_edge => state_r.OUTPUTSELECT
slow_edge => state_r.OUTPUTSELECT
slow_edge => state_r.OUTPUTSELECT
reset => counter256:counter.reset
reset => state_r.OUTPUTSELECT
reset => state_r.OUTPUTSELECT
reset => state_r.OUTPUTSELECT
reset => state_r.OUTPUTSELECT
light_type[0] => counter256:counter.init_val[0]
light_type[0] => Equal1.IN1
light_type[0] => Equal2.IN1
light_type[1] => counter256:counter.init_val[1]
light_type[1] => Equal1.IN0
light_type[1] => Equal2.IN0


|lab8|snakes_and_apples:snake|grid_light:vertical_bars[3].right_col|counter256:counter
count[0] <= count[0]~reg0.DB_MAX_OUTPUT_PORT_TYPE
count[1] <= count[1]~reg0.DB_MAX_OUTPUT_PORT_TYPE
count[2] <= count[2]~reg0.DB_MAX_OUTPUT_PORT_TYPE
count[3] <= count[3]~reg0.DB_MAX_OUTPUT_PORT_TYPE
count[4] <= count[4]~reg0.DB_MAX_OUTPUT_PORT_TYPE
count[5] <= count[5]~reg0.DB_MAX_OUTPUT_PORT_TYPE
count[6] <= count[6]~reg0.DB_MAX_OUTPUT_PORT_TYPE
count[7] <= count[7]~reg0.DB_MAX_OUTPUT_PORT_TYPE
start_val[0] => Add0.IN16
start_val[0] => count.DATAB
start_val[1] => Add0.IN15
start_val[1] => count.DATAB
start_val[2] => Add0.IN14
start_val[2] => count.DATAB
start_val[3] => Add0.IN13
start_val[3] => count.DATAB
start_val[4] => Add0.IN12
start_val[4] => count.DATAB
start_val[5] => Add0.IN11
start_val[5] => count.DATAB
start_val[6] => Add0.IN10
start_val[6] => count.DATAB
start_val[7] => Add0.IN9
start_val[7] => count.DATAB
inc => count.OUTPUTSELECT
inc => count.OUTPUTSELECT
inc => count.OUTPUTSELECT
inc => count.OUTPUTSELECT
inc => count.OUTPUTSELECT
inc => count.OUTPUTSELECT
inc => count.OUTPUTSELECT
inc => count.OUTPUTSELECT
inc => always0.IN0
enable => always0.IN1
enable => count.OUTPUTSELECT
enable => count.OUTPUTSELECT
enable => count.OUTPUTSELECT
enable => count.OUTPUTSELECT
enable => count.OUTPUTSELECT
enable => count.OUTPUTSELECT
enable => count.OUTPUTSELECT
enable => count.OUTPUTSELECT
clk => count[0]~reg0.CLK
clk => count[1]~reg0.CLK
clk => count[2]~reg0.CLK
clk => count[3]~reg0.CLK
clk => count[4]~reg0.CLK
clk => count[5]~reg0.CLK
clk => count[6]~reg0.CLK
clk => count[7]~reg0.CLK
slow_edge => count.OUTPUTSELECT
slow_edge => count.OUTPUTSELECT
slow_edge => count.OUTPUTSELECT
slow_edge => count.OUTPUTSELECT
slow_edge => count.OUTPUTSELECT
slow_edge => count.OUTPUTSELECT
slow_edge => count.OUTPUTSELECT
slow_edge => count.OUTPUTSELECT
reset => count.OUTPUTSELECT
reset => count.OUTPUTSELECT
reset => count.OUTPUTSELECT
reset => count.OUTPUTSELECT
reset => count.OUTPUTSELECT
reset => count.OUTPUTSELECT
reset => count.OUTPUTSELECT
reset => count.OUTPUTSELECT
init_val[0] => count.DATAB
init_val[1] => count.DATAB


|lab8|snakes_and_apples:snake|grid_light:vertical_bars[4].left_col
green_light_on <= green_light_on.DB_MAX_OUTPUT_PORT_TYPE
head <= head.DB_MAX_OUTPUT_PORT_TYPE
game_over_out <= state_n.DB_MAX_OUTPUT_PORT_TYPE
eating => counter256:counter.inc
eating => always0.IN1
game_over_in => state_n.e_off.OUTPUTSELECT
game_over_in => state_n.e_countdown.OUTPUTSELECT
game_over_in => state_n.e_head.OUTPUTSELECT
game_over_in => state_n.OUTPUTSELECT
left => state_n.OUTPUTSELECT
left => state_n.OUTPUTSELECT
left => state_n.OUTPUTSELECT
left => state_n.OUTPUTSELECT
up => state_n.OUTPUTSELECT
up => state_n.OUTPUTSELECT
up => state_n.OUTPUTSELECT
up => state_n.OUTPUTSELECT
right => state_n.OUTPUTSELECT
right => state_n.OUTPUTSELECT
right => state_n.OUTPUTSELECT
right => state_n.OUTPUTSELECT
down => state_n.OUTPUTSELECT
down => state_n.OUTPUTSELECT
down => state_n.OUTPUTSELECT
down => state_n.OUTPUTSELECT
length[0] => counter256:counter.start_val[0]
length[1] => counter256:counter.start_val[1]
length[2] => counter256:counter.start_val[2]
length[3] => counter256:counter.start_val[3]
length[4] => counter256:counter.start_val[4]
length[5] => counter256:counter.start_val[5]
length[6] => counter256:counter.start_val[6]
length[7] => counter256:counter.start_val[7]
dir[0] => Mux0.IN5
dir[0] => Mux1.IN5
dir[0] => Mux2.IN5
dir[0] => Mux3.IN5
dir[1] => Mux0.IN4
dir[1] => Mux1.IN4
dir[1] => Mux2.IN4
dir[1] => Mux3.IN4
clk => counter256:counter.clk
clk => state_r~1.DATAIN
slow_edge => counter256:counter.slow_edge
slow_edge => state_r.OUTPUTSELECT
slow_edge => state_r.OUTPUTSELECT
slow_edge => state_r.OUTPUTSELECT
slow_edge => state_r.OUTPUTSELECT
reset => counter256:counter.reset
reset => state_r.OUTPUTSELECT
reset => state_r.OUTPUTSELECT
reset => state_r.OUTPUTSELECT
reset => state_r.OUTPUTSELECT
light_type[0] => counter256:counter.init_val[0]
light_type[0] => Equal1.IN1
light_type[0] => Equal2.IN1
light_type[1] => counter256:counter.init_val[1]
light_type[1] => Equal1.IN0
light_type[1] => Equal2.IN0


|lab8|snakes_and_apples:snake|grid_light:vertical_bars[4].left_col|counter256:counter
count[0] <= count[0]~reg0.DB_MAX_OUTPUT_PORT_TYPE
count[1] <= count[1]~reg0.DB_MAX_OUTPUT_PORT_TYPE
count[2] <= count[2]~reg0.DB_MAX_OUTPUT_PORT_TYPE
count[3] <= count[3]~reg0.DB_MAX_OUTPUT_PORT_TYPE
count[4] <= count[4]~reg0.DB_MAX_OUTPUT_PORT_TYPE
count[5] <= count[5]~reg0.DB_MAX_OUTPUT_PORT_TYPE
count[6] <= count[6]~reg0.DB_MAX_OUTPUT_PORT_TYPE
count[7] <= count[7]~reg0.DB_MAX_OUTPUT_PORT_TYPE
start_val[0] => Add0.IN16
start_val[0] => count.DATAB
start_val[1] => Add0.IN15
start_val[1] => count.DATAB
start_val[2] => Add0.IN14
start_val[2] => count.DATAB
start_val[3] => Add0.IN13
start_val[3] => count.DATAB
start_val[4] => Add0.IN12
start_val[4] => count.DATAB
start_val[5] => Add0.IN11
start_val[5] => count.DATAB
start_val[6] => Add0.IN10
start_val[6] => count.DATAB
start_val[7] => Add0.IN9
start_val[7] => count.DATAB
inc => count.OUTPUTSELECT
inc => count.OUTPUTSELECT
inc => count.OUTPUTSELECT
inc => count.OUTPUTSELECT
inc => count.OUTPUTSELECT
inc => count.OUTPUTSELECT
inc => count.OUTPUTSELECT
inc => count.OUTPUTSELECT
inc => always0.IN0
enable => always0.IN1
enable => count.OUTPUTSELECT
enable => count.OUTPUTSELECT
enable => count.OUTPUTSELECT
enable => count.OUTPUTSELECT
enable => count.OUTPUTSELECT
enable => count.OUTPUTSELECT
enable => count.OUTPUTSELECT
enable => count.OUTPUTSELECT
clk => count[0]~reg0.CLK
clk => count[1]~reg0.CLK
clk => count[2]~reg0.CLK
clk => count[3]~reg0.CLK
clk => count[4]~reg0.CLK
clk => count[5]~reg0.CLK
clk => count[6]~reg0.CLK
clk => count[7]~reg0.CLK
slow_edge => count.OUTPUTSELECT
slow_edge => count.OUTPUTSELECT
slow_edge => count.OUTPUTSELECT
slow_edge => count.OUTPUTSELECT
slow_edge => count.OUTPUTSELECT
slow_edge => count.OUTPUTSELECT
slow_edge => count.OUTPUTSELECT
slow_edge => count.OUTPUTSELECT
reset => count.OUTPUTSELECT
reset => count.OUTPUTSELECT
reset => count.OUTPUTSELECT
reset => count.OUTPUTSELECT
reset => count.OUTPUTSELECT
reset => count.OUTPUTSELECT
reset => count.OUTPUTSELECT
reset => count.OUTPUTSELECT
init_val[0] => count.DATAB
init_val[1] => count.DATAB


|lab8|snakes_and_apples:snake|grid_light:vertical_bars[4].right_col
green_light_on <= green_light_on.DB_MAX_OUTPUT_PORT_TYPE
head <= head.DB_MAX_OUTPUT_PORT_TYPE
game_over_out <= state_n.DB_MAX_OUTPUT_PORT_TYPE
eating => counter256:counter.inc
eating => always0.IN1
game_over_in => state_n.e_off.OUTPUTSELECT
game_over_in => state_n.e_countdown.OUTPUTSELECT
game_over_in => state_n.e_head.OUTPUTSELECT
game_over_in => state_n.OUTPUTSELECT
left => state_n.OUTPUTSELECT
left => state_n.OUTPUTSELECT
left => state_n.OUTPUTSELECT
left => state_n.OUTPUTSELECT
up => state_n.OUTPUTSELECT
up => state_n.OUTPUTSELECT
up => state_n.OUTPUTSELECT
up => state_n.OUTPUTSELECT
right => state_n.OUTPUTSELECT
right => state_n.OUTPUTSELECT
right => state_n.OUTPUTSELECT
right => state_n.OUTPUTSELECT
down => state_n.OUTPUTSELECT
down => state_n.OUTPUTSELECT
down => state_n.OUTPUTSELECT
down => state_n.OUTPUTSELECT
length[0] => counter256:counter.start_val[0]
length[1] => counter256:counter.start_val[1]
length[2] => counter256:counter.start_val[2]
length[3] => counter256:counter.start_val[3]
length[4] => counter256:counter.start_val[4]
length[5] => counter256:counter.start_val[5]
length[6] => counter256:counter.start_val[6]
length[7] => counter256:counter.start_val[7]
dir[0] => Mux0.IN5
dir[0] => Mux1.IN5
dir[0] => Mux2.IN5
dir[0] => Mux3.IN5
dir[1] => Mux0.IN4
dir[1] => Mux1.IN4
dir[1] => Mux2.IN4
dir[1] => Mux3.IN4
clk => counter256:counter.clk
clk => state_r~1.DATAIN
slow_edge => counter256:counter.slow_edge
slow_edge => state_r.OUTPUTSELECT
slow_edge => state_r.OUTPUTSELECT
slow_edge => state_r.OUTPUTSELECT
slow_edge => state_r.OUTPUTSELECT
reset => counter256:counter.reset
reset => state_r.OUTPUTSELECT
reset => state_r.OUTPUTSELECT
reset => state_r.OUTPUTSELECT
reset => state_r.OUTPUTSELECT
light_type[0] => counter256:counter.init_val[0]
light_type[0] => Equal1.IN1
light_type[0] => Equal2.IN1
light_type[1] => counter256:counter.init_val[1]
light_type[1] => Equal1.IN0
light_type[1] => Equal2.IN0


|lab8|snakes_and_apples:snake|grid_light:vertical_bars[4].right_col|counter256:counter
count[0] <= count[0]~reg0.DB_MAX_OUTPUT_PORT_TYPE
count[1] <= count[1]~reg0.DB_MAX_OUTPUT_PORT_TYPE
count[2] <= count[2]~reg0.DB_MAX_OUTPUT_PORT_TYPE
count[3] <= count[3]~reg0.DB_MAX_OUTPUT_PORT_TYPE
count[4] <= count[4]~reg0.DB_MAX_OUTPUT_PORT_TYPE
count[5] <= count[5]~reg0.DB_MAX_OUTPUT_PORT_TYPE
count[6] <= count[6]~reg0.DB_MAX_OUTPUT_PORT_TYPE
count[7] <= count[7]~reg0.DB_MAX_OUTPUT_PORT_TYPE
start_val[0] => Add0.IN16
start_val[0] => count.DATAB
start_val[1] => Add0.IN15
start_val[1] => count.DATAB
start_val[2] => Add0.IN14
start_val[2] => count.DATAB
start_val[3] => Add0.IN13
start_val[3] => count.DATAB
start_val[4] => Add0.IN12
start_val[4] => count.DATAB
start_val[5] => Add0.IN11
start_val[5] => count.DATAB
start_val[6] => Add0.IN10
start_val[6] => count.DATAB
start_val[7] => Add0.IN9
start_val[7] => count.DATAB
inc => count.OUTPUTSELECT
inc => count.OUTPUTSELECT
inc => count.OUTPUTSELECT
inc => count.OUTPUTSELECT
inc => count.OUTPUTSELECT
inc => count.OUTPUTSELECT
inc => count.OUTPUTSELECT
inc => count.OUTPUTSELECT
inc => always0.IN0
enable => always0.IN1
enable => count.OUTPUTSELECT
enable => count.OUTPUTSELECT
enable => count.OUTPUTSELECT
enable => count.OUTPUTSELECT
enable => count.OUTPUTSELECT
enable => count.OUTPUTSELECT
enable => count.OUTPUTSELECT
enable => count.OUTPUTSELECT
clk => count[0]~reg0.CLK
clk => count[1]~reg0.CLK
clk => count[2]~reg0.CLK
clk => count[3]~reg0.CLK
clk => count[4]~reg0.CLK
clk => count[5]~reg0.CLK
clk => count[6]~reg0.CLK
clk => count[7]~reg0.CLK
slow_edge => count.OUTPUTSELECT
slow_edge => count.OUTPUTSELECT
slow_edge => count.OUTPUTSELECT
slow_edge => count.OUTPUTSELECT
slow_edge => count.OUTPUTSELECT
slow_edge => count.OUTPUTSELECT
slow_edge => count.OUTPUTSELECT
slow_edge => count.OUTPUTSELECT
reset => count.OUTPUTSELECT
reset => count.OUTPUTSELECT
reset => count.OUTPUTSELECT
reset => count.OUTPUTSELECT
reset => count.OUTPUTSELECT
reset => count.OUTPUTSELECT
reset => count.OUTPUTSELECT
reset => count.OUTPUTSELECT
init_val[0] => count.DATAB
init_val[1] => count.DATAB


|lab8|snakes_and_apples:snake|grid_light:vertical_bars[5].left_col
green_light_on <= green_light_on.DB_MAX_OUTPUT_PORT_TYPE
head <= head.DB_MAX_OUTPUT_PORT_TYPE
game_over_out <= state_n.DB_MAX_OUTPUT_PORT_TYPE
eating => counter256:counter.inc
eating => always0.IN1
game_over_in => state_n.e_off.OUTPUTSELECT
game_over_in => state_n.e_countdown.OUTPUTSELECT
game_over_in => state_n.e_head.OUTPUTSELECT
game_over_in => state_n.OUTPUTSELECT
left => state_n.OUTPUTSELECT
left => state_n.OUTPUTSELECT
left => state_n.OUTPUTSELECT
left => state_n.OUTPUTSELECT
up => state_n.OUTPUTSELECT
up => state_n.OUTPUTSELECT
up => state_n.OUTPUTSELECT
up => state_n.OUTPUTSELECT
right => state_n.OUTPUTSELECT
right => state_n.OUTPUTSELECT
right => state_n.OUTPUTSELECT
right => state_n.OUTPUTSELECT
down => state_n.OUTPUTSELECT
down => state_n.OUTPUTSELECT
down => state_n.OUTPUTSELECT
down => state_n.OUTPUTSELECT
length[0] => counter256:counter.start_val[0]
length[1] => counter256:counter.start_val[1]
length[2] => counter256:counter.start_val[2]
length[3] => counter256:counter.start_val[3]
length[4] => counter256:counter.start_val[4]
length[5] => counter256:counter.start_val[5]
length[6] => counter256:counter.start_val[6]
length[7] => counter256:counter.start_val[7]
dir[0] => Mux0.IN5
dir[0] => Mux1.IN5
dir[0] => Mux2.IN5
dir[0] => Mux3.IN5
dir[1] => Mux0.IN4
dir[1] => Mux1.IN4
dir[1] => Mux2.IN4
dir[1] => Mux3.IN4
clk => counter256:counter.clk
clk => state_r~1.DATAIN
slow_edge => counter256:counter.slow_edge
slow_edge => state_r.OUTPUTSELECT
slow_edge => state_r.OUTPUTSELECT
slow_edge => state_r.OUTPUTSELECT
slow_edge => state_r.OUTPUTSELECT
reset => counter256:counter.reset
reset => state_r.OUTPUTSELECT
reset => state_r.OUTPUTSELECT
reset => state_r.OUTPUTSELECT
reset => state_r.OUTPUTSELECT
light_type[0] => counter256:counter.init_val[0]
light_type[0] => Equal1.IN1
light_type[0] => Equal2.IN1
light_type[1] => counter256:counter.init_val[1]
light_type[1] => Equal1.IN0
light_type[1] => Equal2.IN0


|lab8|snakes_and_apples:snake|grid_light:vertical_bars[5].left_col|counter256:counter
count[0] <= count[0]~reg0.DB_MAX_OUTPUT_PORT_TYPE
count[1] <= count[1]~reg0.DB_MAX_OUTPUT_PORT_TYPE
count[2] <= count[2]~reg0.DB_MAX_OUTPUT_PORT_TYPE
count[3] <= count[3]~reg0.DB_MAX_OUTPUT_PORT_TYPE
count[4] <= count[4]~reg0.DB_MAX_OUTPUT_PORT_TYPE
count[5] <= count[5]~reg0.DB_MAX_OUTPUT_PORT_TYPE
count[6] <= count[6]~reg0.DB_MAX_OUTPUT_PORT_TYPE
count[7] <= count[7]~reg0.DB_MAX_OUTPUT_PORT_TYPE
start_val[0] => Add0.IN16
start_val[0] => count.DATAB
start_val[1] => Add0.IN15
start_val[1] => count.DATAB
start_val[2] => Add0.IN14
start_val[2] => count.DATAB
start_val[3] => Add0.IN13
start_val[3] => count.DATAB
start_val[4] => Add0.IN12
start_val[4] => count.DATAB
start_val[5] => Add0.IN11
start_val[5] => count.DATAB
start_val[6] => Add0.IN10
start_val[6] => count.DATAB
start_val[7] => Add0.IN9
start_val[7] => count.DATAB
inc => count.OUTPUTSELECT
inc => count.OUTPUTSELECT
inc => count.OUTPUTSELECT
inc => count.OUTPUTSELECT
inc => count.OUTPUTSELECT
inc => count.OUTPUTSELECT
inc => count.OUTPUTSELECT
inc => count.OUTPUTSELECT
inc => always0.IN0
enable => always0.IN1
enable => count.OUTPUTSELECT
enable => count.OUTPUTSELECT
enable => count.OUTPUTSELECT
enable => count.OUTPUTSELECT
enable => count.OUTPUTSELECT
enable => count.OUTPUTSELECT
enable => count.OUTPUTSELECT
enable => count.OUTPUTSELECT
clk => count[0]~reg0.CLK
clk => count[1]~reg0.CLK
clk => count[2]~reg0.CLK
clk => count[3]~reg0.CLK
clk => count[4]~reg0.CLK
clk => count[5]~reg0.CLK
clk => count[6]~reg0.CLK
clk => count[7]~reg0.CLK
slow_edge => count.OUTPUTSELECT
slow_edge => count.OUTPUTSELECT
slow_edge => count.OUTPUTSELECT
slow_edge => count.OUTPUTSELECT
slow_edge => count.OUTPUTSELECT
slow_edge => count.OUTPUTSELECT
slow_edge => count.OUTPUTSELECT
slow_edge => count.OUTPUTSELECT
reset => count.OUTPUTSELECT
reset => count.OUTPUTSELECT
reset => count.OUTPUTSELECT
reset => count.OUTPUTSELECT
reset => count.OUTPUTSELECT
reset => count.OUTPUTSELECT
reset => count.OUTPUTSELECT
reset => count.OUTPUTSELECT
init_val[0] => count.DATAB
init_val[1] => count.DATAB


|lab8|snakes_and_apples:snake|grid_light:vertical_bars[5].right_col
green_light_on <= green_light_on.DB_MAX_OUTPUT_PORT_TYPE
head <= head.DB_MAX_OUTPUT_PORT_TYPE
game_over_out <= state_n.DB_MAX_OUTPUT_PORT_TYPE
eating => counter256:counter.inc
eating => always0.IN1
game_over_in => state_n.e_off.OUTPUTSELECT
game_over_in => state_n.e_countdown.OUTPUTSELECT
game_over_in => state_n.e_head.OUTPUTSELECT
game_over_in => state_n.OUTPUTSELECT
left => state_n.OUTPUTSELECT
left => state_n.OUTPUTSELECT
left => state_n.OUTPUTSELECT
left => state_n.OUTPUTSELECT
up => state_n.OUTPUTSELECT
up => state_n.OUTPUTSELECT
up => state_n.OUTPUTSELECT
up => state_n.OUTPUTSELECT
right => state_n.OUTPUTSELECT
right => state_n.OUTPUTSELECT
right => state_n.OUTPUTSELECT
right => state_n.OUTPUTSELECT
down => state_n.OUTPUTSELECT
down => state_n.OUTPUTSELECT
down => state_n.OUTPUTSELECT
down => state_n.OUTPUTSELECT
length[0] => counter256:counter.start_val[0]
length[1] => counter256:counter.start_val[1]
length[2] => counter256:counter.start_val[2]
length[3] => counter256:counter.start_val[3]
length[4] => counter256:counter.start_val[4]
length[5] => counter256:counter.start_val[5]
length[6] => counter256:counter.start_val[6]
length[7] => counter256:counter.start_val[7]
dir[0] => Mux0.IN5
dir[0] => Mux1.IN5
dir[0] => Mux2.IN5
dir[0] => Mux3.IN5
dir[1] => Mux0.IN4
dir[1] => Mux1.IN4
dir[1] => Mux2.IN4
dir[1] => Mux3.IN4
clk => counter256:counter.clk
clk => state_r~1.DATAIN
slow_edge => counter256:counter.slow_edge
slow_edge => state_r.OUTPUTSELECT
slow_edge => state_r.OUTPUTSELECT
slow_edge => state_r.OUTPUTSELECT
slow_edge => state_r.OUTPUTSELECT
reset => counter256:counter.reset
reset => state_r.OUTPUTSELECT
reset => state_r.OUTPUTSELECT
reset => state_r.OUTPUTSELECT
reset => state_r.OUTPUTSELECT
light_type[0] => counter256:counter.init_val[0]
light_type[0] => Equal1.IN1
light_type[0] => Equal2.IN1
light_type[1] => counter256:counter.init_val[1]
light_type[1] => Equal1.IN0
light_type[1] => Equal2.IN0


|lab8|snakes_and_apples:snake|grid_light:vertical_bars[5].right_col|counter256:counter
count[0] <= count[0]~reg0.DB_MAX_OUTPUT_PORT_TYPE
count[1] <= count[1]~reg0.DB_MAX_OUTPUT_PORT_TYPE
count[2] <= count[2]~reg0.DB_MAX_OUTPUT_PORT_TYPE
count[3] <= count[3]~reg0.DB_MAX_OUTPUT_PORT_TYPE
count[4] <= count[4]~reg0.DB_MAX_OUTPUT_PORT_TYPE
count[5] <= count[5]~reg0.DB_MAX_OUTPUT_PORT_TYPE
count[6] <= count[6]~reg0.DB_MAX_OUTPUT_PORT_TYPE
count[7] <= count[7]~reg0.DB_MAX_OUTPUT_PORT_TYPE
start_val[0] => Add0.IN16
start_val[0] => count.DATAB
start_val[1] => Add0.IN15
start_val[1] => count.DATAB
start_val[2] => Add0.IN14
start_val[2] => count.DATAB
start_val[3] => Add0.IN13
start_val[3] => count.DATAB
start_val[4] => Add0.IN12
start_val[4] => count.DATAB
start_val[5] => Add0.IN11
start_val[5] => count.DATAB
start_val[6] => Add0.IN10
start_val[6] => count.DATAB
start_val[7] => Add0.IN9
start_val[7] => count.DATAB
inc => count.OUTPUTSELECT
inc => count.OUTPUTSELECT
inc => count.OUTPUTSELECT
inc => count.OUTPUTSELECT
inc => count.OUTPUTSELECT
inc => count.OUTPUTSELECT
inc => count.OUTPUTSELECT
inc => count.OUTPUTSELECT
inc => always0.IN0
enable => always0.IN1
enable => count.OUTPUTSELECT
enable => count.OUTPUTSELECT
enable => count.OUTPUTSELECT
enable => count.OUTPUTSELECT
enable => count.OUTPUTSELECT
enable => count.OUTPUTSELECT
enable => count.OUTPUTSELECT
enable => count.OUTPUTSELECT
clk => count[0]~reg0.CLK
clk => count[1]~reg0.CLK
clk => count[2]~reg0.CLK
clk => count[3]~reg0.CLK
clk => count[4]~reg0.CLK
clk => count[5]~reg0.CLK
clk => count[6]~reg0.CLK
clk => count[7]~reg0.CLK
slow_edge => count.OUTPUTSELECT
slow_edge => count.OUTPUTSELECT
slow_edge => count.OUTPUTSELECT
slow_edge => count.OUTPUTSELECT
slow_edge => count.OUTPUTSELECT
slow_edge => count.OUTPUTSELECT
slow_edge => count.OUTPUTSELECT
slow_edge => count.OUTPUTSELECT
reset => count.OUTPUTSELECT
reset => count.OUTPUTSELECT
reset => count.OUTPUTSELECT
reset => count.OUTPUTSELECT
reset => count.OUTPUTSELECT
reset => count.OUTPUTSELECT
reset => count.OUTPUTSELECT
reset => count.OUTPUTSELECT
init_val[0] => count.DATAB
init_val[1] => count.DATAB


|lab8|snakes_and_apples:snake|grid_light:vertical_bars[6].left_col
green_light_on <= green_light_on.DB_MAX_OUTPUT_PORT_TYPE
head <= head.DB_MAX_OUTPUT_PORT_TYPE
game_over_out <= state_n.DB_MAX_OUTPUT_PORT_TYPE
eating => counter256:counter.inc
eating => always0.IN1
game_over_in => state_n.e_off.OUTPUTSELECT
game_over_in => state_n.e_countdown.OUTPUTSELECT
game_over_in => state_n.e_head.OUTPUTSELECT
game_over_in => state_n.OUTPUTSELECT
left => state_n.OUTPUTSELECT
left => state_n.OUTPUTSELECT
left => state_n.OUTPUTSELECT
left => state_n.OUTPUTSELECT
up => state_n.OUTPUTSELECT
up => state_n.OUTPUTSELECT
up => state_n.OUTPUTSELECT
up => state_n.OUTPUTSELECT
right => state_n.OUTPUTSELECT
right => state_n.OUTPUTSELECT
right => state_n.OUTPUTSELECT
right => state_n.OUTPUTSELECT
down => state_n.OUTPUTSELECT
down => state_n.OUTPUTSELECT
down => state_n.OUTPUTSELECT
down => state_n.OUTPUTSELECT
length[0] => counter256:counter.start_val[0]
length[1] => counter256:counter.start_val[1]
length[2] => counter256:counter.start_val[2]
length[3] => counter256:counter.start_val[3]
length[4] => counter256:counter.start_val[4]
length[5] => counter256:counter.start_val[5]
length[6] => counter256:counter.start_val[6]
length[7] => counter256:counter.start_val[7]
dir[0] => Mux0.IN5
dir[0] => Mux1.IN5
dir[0] => Mux2.IN5
dir[0] => Mux3.IN5
dir[1] => Mux0.IN4
dir[1] => Mux1.IN4
dir[1] => Mux2.IN4
dir[1] => Mux3.IN4
clk => counter256:counter.clk
clk => state_r~1.DATAIN
slow_edge => counter256:counter.slow_edge
slow_edge => state_r.OUTPUTSELECT
slow_edge => state_r.OUTPUTSELECT
slow_edge => state_r.OUTPUTSELECT
slow_edge => state_r.OUTPUTSELECT
reset => counter256:counter.reset
reset => state_r.OUTPUTSELECT
reset => state_r.OUTPUTSELECT
reset => state_r.OUTPUTSELECT
reset => state_r.OUTPUTSELECT
light_type[0] => counter256:counter.init_val[0]
light_type[0] => Equal1.IN1
light_type[0] => Equal2.IN1
light_type[1] => counter256:counter.init_val[1]
light_type[1] => Equal1.IN0
light_type[1] => Equal2.IN0


|lab8|snakes_and_apples:snake|grid_light:vertical_bars[6].left_col|counter256:counter
count[0] <= count[0]~reg0.DB_MAX_OUTPUT_PORT_TYPE
count[1] <= count[1]~reg0.DB_MAX_OUTPUT_PORT_TYPE
count[2] <= count[2]~reg0.DB_MAX_OUTPUT_PORT_TYPE
count[3] <= count[3]~reg0.DB_MAX_OUTPUT_PORT_TYPE
count[4] <= count[4]~reg0.DB_MAX_OUTPUT_PORT_TYPE
count[5] <= count[5]~reg0.DB_MAX_OUTPUT_PORT_TYPE
count[6] <= count[6]~reg0.DB_MAX_OUTPUT_PORT_TYPE
count[7] <= count[7]~reg0.DB_MAX_OUTPUT_PORT_TYPE
start_val[0] => Add0.IN16
start_val[0] => count.DATAB
start_val[1] => Add0.IN15
start_val[1] => count.DATAB
start_val[2] => Add0.IN14
start_val[2] => count.DATAB
start_val[3] => Add0.IN13
start_val[3] => count.DATAB
start_val[4] => Add0.IN12
start_val[4] => count.DATAB
start_val[5] => Add0.IN11
start_val[5] => count.DATAB
start_val[6] => Add0.IN10
start_val[6] => count.DATAB
start_val[7] => Add0.IN9
start_val[7] => count.DATAB
inc => count.OUTPUTSELECT
inc => count.OUTPUTSELECT
inc => count.OUTPUTSELECT
inc => count.OUTPUTSELECT
inc => count.OUTPUTSELECT
inc => count.OUTPUTSELECT
inc => count.OUTPUTSELECT
inc => count.OUTPUTSELECT
inc => always0.IN0
enable => always0.IN1
enable => count.OUTPUTSELECT
enable => count.OUTPUTSELECT
enable => count.OUTPUTSELECT
enable => count.OUTPUTSELECT
enable => count.OUTPUTSELECT
enable => count.OUTPUTSELECT
enable => count.OUTPUTSELECT
enable => count.OUTPUTSELECT
clk => count[0]~reg0.CLK
clk => count[1]~reg0.CLK
clk => count[2]~reg0.CLK
clk => count[3]~reg0.CLK
clk => count[4]~reg0.CLK
clk => count[5]~reg0.CLK
clk => count[6]~reg0.CLK
clk => count[7]~reg0.CLK
slow_edge => count.OUTPUTSELECT
slow_edge => count.OUTPUTSELECT
slow_edge => count.OUTPUTSELECT
slow_edge => count.OUTPUTSELECT
slow_edge => count.OUTPUTSELECT
slow_edge => count.OUTPUTSELECT
slow_edge => count.OUTPUTSELECT
slow_edge => count.OUTPUTSELECT
reset => count.OUTPUTSELECT
reset => count.OUTPUTSELECT
reset => count.OUTPUTSELECT
reset => count.OUTPUTSELECT
reset => count.OUTPUTSELECT
reset => count.OUTPUTSELECT
reset => count.OUTPUTSELECT
reset => count.OUTPUTSELECT
init_val[0] => count.DATAB
init_val[1] => count.DATAB


|lab8|snakes_and_apples:snake|grid_light:vertical_bars[6].right_col
green_light_on <= green_light_on.DB_MAX_OUTPUT_PORT_TYPE
head <= head.DB_MAX_OUTPUT_PORT_TYPE
game_over_out <= state_n.DB_MAX_OUTPUT_PORT_TYPE
eating => counter256:counter.inc
eating => always0.IN1
game_over_in => state_n.e_off.OUTPUTSELECT
game_over_in => state_n.e_countdown.OUTPUTSELECT
game_over_in => state_n.e_head.OUTPUTSELECT
game_over_in => state_n.OUTPUTSELECT
left => state_n.OUTPUTSELECT
left => state_n.OUTPUTSELECT
left => state_n.OUTPUTSELECT
left => state_n.OUTPUTSELECT
up => state_n.OUTPUTSELECT
up => state_n.OUTPUTSELECT
up => state_n.OUTPUTSELECT
up => state_n.OUTPUTSELECT
right => state_n.OUTPUTSELECT
right => state_n.OUTPUTSELECT
right => state_n.OUTPUTSELECT
right => state_n.OUTPUTSELECT
down => state_n.OUTPUTSELECT
down => state_n.OUTPUTSELECT
down => state_n.OUTPUTSELECT
down => state_n.OUTPUTSELECT
length[0] => counter256:counter.start_val[0]
length[1] => counter256:counter.start_val[1]
length[2] => counter256:counter.start_val[2]
length[3] => counter256:counter.start_val[3]
length[4] => counter256:counter.start_val[4]
length[5] => counter256:counter.start_val[5]
length[6] => counter256:counter.start_val[6]
length[7] => counter256:counter.start_val[7]
dir[0] => Mux0.IN5
dir[0] => Mux1.IN5
dir[0] => Mux2.IN5
dir[0] => Mux3.IN5
dir[1] => Mux0.IN4
dir[1] => Mux1.IN4
dir[1] => Mux2.IN4
dir[1] => Mux3.IN4
clk => counter256:counter.clk
clk => state_r~1.DATAIN
slow_edge => counter256:counter.slow_edge
slow_edge => state_r.OUTPUTSELECT
slow_edge => state_r.OUTPUTSELECT
slow_edge => state_r.OUTPUTSELECT
slow_edge => state_r.OUTPUTSELECT
reset => counter256:counter.reset
reset => state_r.OUTPUTSELECT
reset => state_r.OUTPUTSELECT
reset => state_r.OUTPUTSELECT
reset => state_r.OUTPUTSELECT
light_type[0] => counter256:counter.init_val[0]
light_type[0] => Equal1.IN1
light_type[0] => Equal2.IN1
light_type[1] => counter256:counter.init_val[1]
light_type[1] => Equal1.IN0
light_type[1] => Equal2.IN0


|lab8|snakes_and_apples:snake|grid_light:vertical_bars[6].right_col|counter256:counter
count[0] <= count[0]~reg0.DB_MAX_OUTPUT_PORT_TYPE
count[1] <= count[1]~reg0.DB_MAX_OUTPUT_PORT_TYPE
count[2] <= count[2]~reg0.DB_MAX_OUTPUT_PORT_TYPE
count[3] <= count[3]~reg0.DB_MAX_OUTPUT_PORT_TYPE
count[4] <= count[4]~reg0.DB_MAX_OUTPUT_PORT_TYPE
count[5] <= count[5]~reg0.DB_MAX_OUTPUT_PORT_TYPE
count[6] <= count[6]~reg0.DB_MAX_OUTPUT_PORT_TYPE
count[7] <= count[7]~reg0.DB_MAX_OUTPUT_PORT_TYPE
start_val[0] => Add0.IN16
start_val[0] => count.DATAB
start_val[1] => Add0.IN15
start_val[1] => count.DATAB
start_val[2] => Add0.IN14
start_val[2] => count.DATAB
start_val[3] => Add0.IN13
start_val[3] => count.DATAB
start_val[4] => Add0.IN12
start_val[4] => count.DATAB
start_val[5] => Add0.IN11
start_val[5] => count.DATAB
start_val[6] => Add0.IN10
start_val[6] => count.DATAB
start_val[7] => Add0.IN9
start_val[7] => count.DATAB
inc => count.OUTPUTSELECT
inc => count.OUTPUTSELECT
inc => count.OUTPUTSELECT
inc => count.OUTPUTSELECT
inc => count.OUTPUTSELECT
inc => count.OUTPUTSELECT
inc => count.OUTPUTSELECT
inc => count.OUTPUTSELECT
inc => always0.IN0
enable => always0.IN1
enable => count.OUTPUTSELECT
enable => count.OUTPUTSELECT
enable => count.OUTPUTSELECT
enable => count.OUTPUTSELECT
enable => count.OUTPUTSELECT
enable => count.OUTPUTSELECT
enable => count.OUTPUTSELECT
enable => count.OUTPUTSELECT
clk => count[0]~reg0.CLK
clk => count[1]~reg0.CLK
clk => count[2]~reg0.CLK
clk => count[3]~reg0.CLK
clk => count[4]~reg0.CLK
clk => count[5]~reg0.CLK
clk => count[6]~reg0.CLK
clk => count[7]~reg0.CLK
slow_edge => count.OUTPUTSELECT
slow_edge => count.OUTPUTSELECT
slow_edge => count.OUTPUTSELECT
slow_edge => count.OUTPUTSELECT
slow_edge => count.OUTPUTSELECT
slow_edge => count.OUTPUTSELECT
slow_edge => count.OUTPUTSELECT
slow_edge => count.OUTPUTSELECT
reset => count.OUTPUTSELECT
reset => count.OUTPUTSELECT
reset => count.OUTPUTSELECT
reset => count.OUTPUTSELECT
reset => count.OUTPUTSELECT
reset => count.OUTPUTSELECT
reset => count.OUTPUTSELECT
reset => count.OUTPUTSELECT
init_val[0] => count.DATAB
init_val[1] => count.DATAB


|lab8|snakes_and_apples:snake|grid_light:vertical_bars[7].left_col
green_light_on <= green_light_on.DB_MAX_OUTPUT_PORT_TYPE
head <= head.DB_MAX_OUTPUT_PORT_TYPE
game_over_out <= state_n.DB_MAX_OUTPUT_PORT_TYPE
eating => counter256:counter.inc
eating => always0.IN1
game_over_in => state_n.e_off.OUTPUTSELECT
game_over_in => state_n.e_countdown.OUTPUTSELECT
game_over_in => state_n.e_head.OUTPUTSELECT
game_over_in => state_n.OUTPUTSELECT
left => state_n.OUTPUTSELECT
left => state_n.OUTPUTSELECT
left => state_n.OUTPUTSELECT
left => state_n.OUTPUTSELECT
up => state_n.OUTPUTSELECT
up => state_n.OUTPUTSELECT
up => state_n.OUTPUTSELECT
up => state_n.OUTPUTSELECT
right => state_n.OUTPUTSELECT
right => state_n.OUTPUTSELECT
right => state_n.OUTPUTSELECT
right => state_n.OUTPUTSELECT
down => state_n.OUTPUTSELECT
down => state_n.OUTPUTSELECT
down => state_n.OUTPUTSELECT
down => state_n.OUTPUTSELECT
length[0] => counter256:counter.start_val[0]
length[1] => counter256:counter.start_val[1]
length[2] => counter256:counter.start_val[2]
length[3] => counter256:counter.start_val[3]
length[4] => counter256:counter.start_val[4]
length[5] => counter256:counter.start_val[5]
length[6] => counter256:counter.start_val[6]
length[7] => counter256:counter.start_val[7]
dir[0] => Mux0.IN5
dir[0] => Mux1.IN5
dir[0] => Mux2.IN5
dir[0] => Mux3.IN5
dir[1] => Mux0.IN4
dir[1] => Mux1.IN4
dir[1] => Mux2.IN4
dir[1] => Mux3.IN4
clk => counter256:counter.clk
clk => state_r~1.DATAIN
slow_edge => counter256:counter.slow_edge
slow_edge => state_r.OUTPUTSELECT
slow_edge => state_r.OUTPUTSELECT
slow_edge => state_r.OUTPUTSELECT
slow_edge => state_r.OUTPUTSELECT
reset => counter256:counter.reset
reset => state_r.OUTPUTSELECT
reset => state_r.OUTPUTSELECT
reset => state_r.OUTPUTSELECT
reset => state_r.OUTPUTSELECT
light_type[0] => counter256:counter.init_val[0]
light_type[0] => Equal1.IN1
light_type[0] => Equal2.IN1
light_type[1] => counter256:counter.init_val[1]
light_type[1] => Equal1.IN0
light_type[1] => Equal2.IN0


|lab8|snakes_and_apples:snake|grid_light:vertical_bars[7].left_col|counter256:counter
count[0] <= count[0]~reg0.DB_MAX_OUTPUT_PORT_TYPE
count[1] <= count[1]~reg0.DB_MAX_OUTPUT_PORT_TYPE
count[2] <= count[2]~reg0.DB_MAX_OUTPUT_PORT_TYPE
count[3] <= count[3]~reg0.DB_MAX_OUTPUT_PORT_TYPE
count[4] <= count[4]~reg0.DB_MAX_OUTPUT_PORT_TYPE
count[5] <= count[5]~reg0.DB_MAX_OUTPUT_PORT_TYPE
count[6] <= count[6]~reg0.DB_MAX_OUTPUT_PORT_TYPE
count[7] <= count[7]~reg0.DB_MAX_OUTPUT_PORT_TYPE
start_val[0] => Add0.IN16
start_val[0] => count.DATAB
start_val[1] => Add0.IN15
start_val[1] => count.DATAB
start_val[2] => Add0.IN14
start_val[2] => count.DATAB
start_val[3] => Add0.IN13
start_val[3] => count.DATAB
start_val[4] => Add0.IN12
start_val[4] => count.DATAB
start_val[5] => Add0.IN11
start_val[5] => count.DATAB
start_val[6] => Add0.IN10
start_val[6] => count.DATAB
start_val[7] => Add0.IN9
start_val[7] => count.DATAB
inc => count.OUTPUTSELECT
inc => count.OUTPUTSELECT
inc => count.OUTPUTSELECT
inc => count.OUTPUTSELECT
inc => count.OUTPUTSELECT
inc => count.OUTPUTSELECT
inc => count.OUTPUTSELECT
inc => count.OUTPUTSELECT
inc => always0.IN0
enable => always0.IN1
enable => count.OUTPUTSELECT
enable => count.OUTPUTSELECT
enable => count.OUTPUTSELECT
enable => count.OUTPUTSELECT
enable => count.OUTPUTSELECT
enable => count.OUTPUTSELECT
enable => count.OUTPUTSELECT
enable => count.OUTPUTSELECT
clk => count[0]~reg0.CLK
clk => count[1]~reg0.CLK
clk => count[2]~reg0.CLK
clk => count[3]~reg0.CLK
clk => count[4]~reg0.CLK
clk => count[5]~reg0.CLK
clk => count[6]~reg0.CLK
clk => count[7]~reg0.CLK
slow_edge => count.OUTPUTSELECT
slow_edge => count.OUTPUTSELECT
slow_edge => count.OUTPUTSELECT
slow_edge => count.OUTPUTSELECT
slow_edge => count.OUTPUTSELECT
slow_edge => count.OUTPUTSELECT
slow_edge => count.OUTPUTSELECT
slow_edge => count.OUTPUTSELECT
reset => count.OUTPUTSELECT
reset => count.OUTPUTSELECT
reset => count.OUTPUTSELECT
reset => count.OUTPUTSELECT
reset => count.OUTPUTSELECT
reset => count.OUTPUTSELECT
reset => count.OUTPUTSELECT
reset => count.OUTPUTSELECT
init_val[0] => count.DATAB
init_val[1] => count.DATAB


|lab8|snakes_and_apples:snake|grid_light:vertical_bars[7].right_col
green_light_on <= green_light_on.DB_MAX_OUTPUT_PORT_TYPE
head <= head.DB_MAX_OUTPUT_PORT_TYPE
game_over_out <= state_n.DB_MAX_OUTPUT_PORT_TYPE
eating => counter256:counter.inc
eating => always0.IN1
game_over_in => state_n.e_off.OUTPUTSELECT
game_over_in => state_n.e_countdown.OUTPUTSELECT
game_over_in => state_n.e_head.OUTPUTSELECT
game_over_in => state_n.OUTPUTSELECT
left => state_n.OUTPUTSELECT
left => state_n.OUTPUTSELECT
left => state_n.OUTPUTSELECT
left => state_n.OUTPUTSELECT
up => state_n.OUTPUTSELECT
up => state_n.OUTPUTSELECT
up => state_n.OUTPUTSELECT
up => state_n.OUTPUTSELECT
right => state_n.OUTPUTSELECT
right => state_n.OUTPUTSELECT
right => state_n.OUTPUTSELECT
right => state_n.OUTPUTSELECT
down => state_n.OUTPUTSELECT
down => state_n.OUTPUTSELECT
down => state_n.OUTPUTSELECT
down => state_n.OUTPUTSELECT
length[0] => counter256:counter.start_val[0]
length[1] => counter256:counter.start_val[1]
length[2] => counter256:counter.start_val[2]
length[3] => counter256:counter.start_val[3]
length[4] => counter256:counter.start_val[4]
length[5] => counter256:counter.start_val[5]
length[6] => counter256:counter.start_val[6]
length[7] => counter256:counter.start_val[7]
dir[0] => Mux0.IN5
dir[0] => Mux1.IN5
dir[0] => Mux2.IN5
dir[0] => Mux3.IN5
dir[1] => Mux0.IN4
dir[1] => Mux1.IN4
dir[1] => Mux2.IN4
dir[1] => Mux3.IN4
clk => counter256:counter.clk
clk => state_r~1.DATAIN
slow_edge => counter256:counter.slow_edge
slow_edge => state_r.OUTPUTSELECT
slow_edge => state_r.OUTPUTSELECT
slow_edge => state_r.OUTPUTSELECT
slow_edge => state_r.OUTPUTSELECT
reset => counter256:counter.reset
reset => state_r.OUTPUTSELECT
reset => state_r.OUTPUTSELECT
reset => state_r.OUTPUTSELECT
reset => state_r.OUTPUTSELECT
light_type[0] => counter256:counter.init_val[0]
light_type[0] => Equal1.IN1
light_type[0] => Equal2.IN1
light_type[1] => counter256:counter.init_val[1]
light_type[1] => Equal1.IN0
light_type[1] => Equal2.IN0


|lab8|snakes_and_apples:snake|grid_light:vertical_bars[7].right_col|counter256:counter
count[0] <= count[0]~reg0.DB_MAX_OUTPUT_PORT_TYPE
count[1] <= count[1]~reg0.DB_MAX_OUTPUT_PORT_TYPE
count[2] <= count[2]~reg0.DB_MAX_OUTPUT_PORT_TYPE
count[3] <= count[3]~reg0.DB_MAX_OUTPUT_PORT_TYPE
count[4] <= count[4]~reg0.DB_MAX_OUTPUT_PORT_TYPE
count[5] <= count[5]~reg0.DB_MAX_OUTPUT_PORT_TYPE
count[6] <= count[6]~reg0.DB_MAX_OUTPUT_PORT_TYPE
count[7] <= count[7]~reg0.DB_MAX_OUTPUT_PORT_TYPE
start_val[0] => Add0.IN16
start_val[0] => count.DATAB
start_val[1] => Add0.IN15
start_val[1] => count.DATAB
start_val[2] => Add0.IN14
start_val[2] => count.DATAB
start_val[3] => Add0.IN13
start_val[3] => count.DATAB
start_val[4] => Add0.IN12
start_val[4] => count.DATAB
start_val[5] => Add0.IN11
start_val[5] => count.DATAB
start_val[6] => Add0.IN10
start_val[6] => count.DATAB
start_val[7] => Add0.IN9
start_val[7] => count.DATAB
inc => count.OUTPUTSELECT
inc => count.OUTPUTSELECT
inc => count.OUTPUTSELECT
inc => count.OUTPUTSELECT
inc => count.OUTPUTSELECT
inc => count.OUTPUTSELECT
inc => count.OUTPUTSELECT
inc => count.OUTPUTSELECT
inc => always0.IN0
enable => always0.IN1
enable => count.OUTPUTSELECT
enable => count.OUTPUTSELECT
enable => count.OUTPUTSELECT
enable => count.OUTPUTSELECT
enable => count.OUTPUTSELECT
enable => count.OUTPUTSELECT
enable => count.OUTPUTSELECT
enable => count.OUTPUTSELECT
clk => count[0]~reg0.CLK
clk => count[1]~reg0.CLK
clk => count[2]~reg0.CLK
clk => count[3]~reg0.CLK
clk => count[4]~reg0.CLK
clk => count[5]~reg0.CLK
clk => count[6]~reg0.CLK
clk => count[7]~reg0.CLK
slow_edge => count.OUTPUTSELECT
slow_edge => count.OUTPUTSELECT
slow_edge => count.OUTPUTSELECT
slow_edge => count.OUTPUTSELECT
slow_edge => count.OUTPUTSELECT
slow_edge => count.OUTPUTSELECT
slow_edge => count.OUTPUTSELECT
slow_edge => count.OUTPUTSELECT
reset => count.OUTPUTSELECT
reset => count.OUTPUTSELECT
reset => count.OUTPUTSELECT
reset => count.OUTPUTSELECT
reset => count.OUTPUTSELECT
reset => count.OUTPUTSELECT
reset => count.OUTPUTSELECT
reset => count.OUTPUTSELECT
init_val[0] => count.DATAB
init_val[1] => count.DATAB


|lab8|snakes_and_apples:snake|grid_light:vertical_bars[8].left_col
green_light_on <= green_light_on.DB_MAX_OUTPUT_PORT_TYPE
head <= head.DB_MAX_OUTPUT_PORT_TYPE
game_over_out <= state_n.DB_MAX_OUTPUT_PORT_TYPE
eating => counter256:counter.inc
eating => always0.IN1
game_over_in => state_n.e_off.OUTPUTSELECT
game_over_in => state_n.e_countdown.OUTPUTSELECT
game_over_in => state_n.e_head.OUTPUTSELECT
game_over_in => state_n.OUTPUTSELECT
left => state_n.OUTPUTSELECT
left => state_n.OUTPUTSELECT
left => state_n.OUTPUTSELECT
left => state_n.OUTPUTSELECT
up => state_n.OUTPUTSELECT
up => state_n.OUTPUTSELECT
up => state_n.OUTPUTSELECT
up => state_n.OUTPUTSELECT
right => state_n.OUTPUTSELECT
right => state_n.OUTPUTSELECT
right => state_n.OUTPUTSELECT
right => state_n.OUTPUTSELECT
down => state_n.OUTPUTSELECT
down => state_n.OUTPUTSELECT
down => state_n.OUTPUTSELECT
down => state_n.OUTPUTSELECT
length[0] => counter256:counter.start_val[0]
length[1] => counter256:counter.start_val[1]
length[2] => counter256:counter.start_val[2]
length[3] => counter256:counter.start_val[3]
length[4] => counter256:counter.start_val[4]
length[5] => counter256:counter.start_val[5]
length[6] => counter256:counter.start_val[6]
length[7] => counter256:counter.start_val[7]
dir[0] => Mux0.IN5
dir[0] => Mux1.IN5
dir[0] => Mux2.IN5
dir[0] => Mux3.IN5
dir[1] => Mux0.IN4
dir[1] => Mux1.IN4
dir[1] => Mux2.IN4
dir[1] => Mux3.IN4
clk => counter256:counter.clk
clk => state_r~1.DATAIN
slow_edge => counter256:counter.slow_edge
slow_edge => state_r.OUTPUTSELECT
slow_edge => state_r.OUTPUTSELECT
slow_edge => state_r.OUTPUTSELECT
slow_edge => state_r.OUTPUTSELECT
reset => counter256:counter.reset
reset => state_r.OUTPUTSELECT
reset => state_r.OUTPUTSELECT
reset => state_r.OUTPUTSELECT
reset => state_r.OUTPUTSELECT
light_type[0] => counter256:counter.init_val[0]
light_type[0] => Equal1.IN1
light_type[0] => Equal2.IN1
light_type[1] => counter256:counter.init_val[1]
light_type[1] => Equal1.IN0
light_type[1] => Equal2.IN0


|lab8|snakes_and_apples:snake|grid_light:vertical_bars[8].left_col|counter256:counter
count[0] <= count[0]~reg0.DB_MAX_OUTPUT_PORT_TYPE
count[1] <= count[1]~reg0.DB_MAX_OUTPUT_PORT_TYPE
count[2] <= count[2]~reg0.DB_MAX_OUTPUT_PORT_TYPE
count[3] <= count[3]~reg0.DB_MAX_OUTPUT_PORT_TYPE
count[4] <= count[4]~reg0.DB_MAX_OUTPUT_PORT_TYPE
count[5] <= count[5]~reg0.DB_MAX_OUTPUT_PORT_TYPE
count[6] <= count[6]~reg0.DB_MAX_OUTPUT_PORT_TYPE
count[7] <= count[7]~reg0.DB_MAX_OUTPUT_PORT_TYPE
start_val[0] => Add0.IN16
start_val[0] => count.DATAB
start_val[1] => Add0.IN15
start_val[1] => count.DATAB
start_val[2] => Add0.IN14
start_val[2] => count.DATAB
start_val[3] => Add0.IN13
start_val[3] => count.DATAB
start_val[4] => Add0.IN12
start_val[4] => count.DATAB
start_val[5] => Add0.IN11
start_val[5] => count.DATAB
start_val[6] => Add0.IN10
start_val[6] => count.DATAB
start_val[7] => Add0.IN9
start_val[7] => count.DATAB
inc => count.OUTPUTSELECT
inc => count.OUTPUTSELECT
inc => count.OUTPUTSELECT
inc => count.OUTPUTSELECT
inc => count.OUTPUTSELECT
inc => count.OUTPUTSELECT
inc => count.OUTPUTSELECT
inc => count.OUTPUTSELECT
inc => always0.IN0
enable => always0.IN1
enable => count.OUTPUTSELECT
enable => count.OUTPUTSELECT
enable => count.OUTPUTSELECT
enable => count.OUTPUTSELECT
enable => count.OUTPUTSELECT
enable => count.OUTPUTSELECT
enable => count.OUTPUTSELECT
enable => count.OUTPUTSELECT
clk => count[0]~reg0.CLK
clk => count[1]~reg0.CLK
clk => count[2]~reg0.CLK
clk => count[3]~reg0.CLK
clk => count[4]~reg0.CLK
clk => count[5]~reg0.CLK
clk => count[6]~reg0.CLK
clk => count[7]~reg0.CLK
slow_edge => count.OUTPUTSELECT
slow_edge => count.OUTPUTSELECT
slow_edge => count.OUTPUTSELECT
slow_edge => count.OUTPUTSELECT
slow_edge => count.OUTPUTSELECT
slow_edge => count.OUTPUTSELECT
slow_edge => count.OUTPUTSELECT
slow_edge => count.OUTPUTSELECT
reset => count.OUTPUTSELECT
reset => count.OUTPUTSELECT
reset => count.OUTPUTSELECT
reset => count.OUTPUTSELECT
reset => count.OUTPUTSELECT
reset => count.OUTPUTSELECT
reset => count.OUTPUTSELECT
reset => count.OUTPUTSELECT
init_val[0] => count.DATAB
init_val[1] => count.DATAB


|lab8|snakes_and_apples:snake|grid_light:vertical_bars[8].right_col
green_light_on <= green_light_on.DB_MAX_OUTPUT_PORT_TYPE
head <= head.DB_MAX_OUTPUT_PORT_TYPE
game_over_out <= state_n.DB_MAX_OUTPUT_PORT_TYPE
eating => counter256:counter.inc
eating => always0.IN1
game_over_in => state_n.e_off.OUTPUTSELECT
game_over_in => state_n.e_countdown.OUTPUTSELECT
game_over_in => state_n.e_head.OUTPUTSELECT
game_over_in => state_n.OUTPUTSELECT
left => state_n.OUTPUTSELECT
left => state_n.OUTPUTSELECT
left => state_n.OUTPUTSELECT
left => state_n.OUTPUTSELECT
up => state_n.OUTPUTSELECT
up => state_n.OUTPUTSELECT
up => state_n.OUTPUTSELECT
up => state_n.OUTPUTSELECT
right => state_n.OUTPUTSELECT
right => state_n.OUTPUTSELECT
right => state_n.OUTPUTSELECT
right => state_n.OUTPUTSELECT
down => state_n.OUTPUTSELECT
down => state_n.OUTPUTSELECT
down => state_n.OUTPUTSELECT
down => state_n.OUTPUTSELECT
length[0] => counter256:counter.start_val[0]
length[1] => counter256:counter.start_val[1]
length[2] => counter256:counter.start_val[2]
length[3] => counter256:counter.start_val[3]
length[4] => counter256:counter.start_val[4]
length[5] => counter256:counter.start_val[5]
length[6] => counter256:counter.start_val[6]
length[7] => counter256:counter.start_val[7]
dir[0] => Mux0.IN5
dir[0] => Mux1.IN5
dir[0] => Mux2.IN5
dir[0] => Mux3.IN5
dir[1] => Mux0.IN4
dir[1] => Mux1.IN4
dir[1] => Mux2.IN4
dir[1] => Mux3.IN4
clk => counter256:counter.clk
clk => state_r~1.DATAIN
slow_edge => counter256:counter.slow_edge
slow_edge => state_r.OUTPUTSELECT
slow_edge => state_r.OUTPUTSELECT
slow_edge => state_r.OUTPUTSELECT
slow_edge => state_r.OUTPUTSELECT
reset => counter256:counter.reset
reset => state_r.OUTPUTSELECT
reset => state_r.OUTPUTSELECT
reset => state_r.OUTPUTSELECT
reset => state_r.OUTPUTSELECT
light_type[0] => counter256:counter.init_val[0]
light_type[0] => Equal1.IN1
light_type[0] => Equal2.IN1
light_type[1] => counter256:counter.init_val[1]
light_type[1] => Equal1.IN0
light_type[1] => Equal2.IN0


|lab8|snakes_and_apples:snake|grid_light:vertical_bars[8].right_col|counter256:counter
count[0] <= count[0]~reg0.DB_MAX_OUTPUT_PORT_TYPE
count[1] <= count[1]~reg0.DB_MAX_OUTPUT_PORT_TYPE
count[2] <= count[2]~reg0.DB_MAX_OUTPUT_PORT_TYPE
count[3] <= count[3]~reg0.DB_MAX_OUTPUT_PORT_TYPE
count[4] <= count[4]~reg0.DB_MAX_OUTPUT_PORT_TYPE
count[5] <= count[5]~reg0.DB_MAX_OUTPUT_PORT_TYPE
count[6] <= count[6]~reg0.DB_MAX_OUTPUT_PORT_TYPE
count[7] <= count[7]~reg0.DB_MAX_OUTPUT_PORT_TYPE
start_val[0] => Add0.IN16
start_val[0] => count.DATAB
start_val[1] => Add0.IN15
start_val[1] => count.DATAB
start_val[2] => Add0.IN14
start_val[2] => count.DATAB
start_val[3] => Add0.IN13
start_val[3] => count.DATAB
start_val[4] => Add0.IN12
start_val[4] => count.DATAB
start_val[5] => Add0.IN11
start_val[5] => count.DATAB
start_val[6] => Add0.IN10
start_val[6] => count.DATAB
start_val[7] => Add0.IN9
start_val[7] => count.DATAB
inc => count.OUTPUTSELECT
inc => count.OUTPUTSELECT
inc => count.OUTPUTSELECT
inc => count.OUTPUTSELECT
inc => count.OUTPUTSELECT
inc => count.OUTPUTSELECT
inc => count.OUTPUTSELECT
inc => count.OUTPUTSELECT
inc => always0.IN0
enable => always0.IN1
enable => count.OUTPUTSELECT
enable => count.OUTPUTSELECT
enable => count.OUTPUTSELECT
enable => count.OUTPUTSELECT
enable => count.OUTPUTSELECT
enable => count.OUTPUTSELECT
enable => count.OUTPUTSELECT
enable => count.OUTPUTSELECT
clk => count[0]~reg0.CLK
clk => count[1]~reg0.CLK
clk => count[2]~reg0.CLK
clk => count[3]~reg0.CLK
clk => count[4]~reg0.CLK
clk => count[5]~reg0.CLK
clk => count[6]~reg0.CLK
clk => count[7]~reg0.CLK
slow_edge => count.OUTPUTSELECT
slow_edge => count.OUTPUTSELECT
slow_edge => count.OUTPUTSELECT
slow_edge => count.OUTPUTSELECT
slow_edge => count.OUTPUTSELECT
slow_edge => count.OUTPUTSELECT
slow_edge => count.OUTPUTSELECT
slow_edge => count.OUTPUTSELECT
reset => count.OUTPUTSELECT
reset => count.OUTPUTSELECT
reset => count.OUTPUTSELECT
reset => count.OUTPUTSELECT
reset => count.OUTPUTSELECT
reset => count.OUTPUTSELECT
reset => count.OUTPUTSELECT
reset => count.OUTPUTSELECT
init_val[0] => count.DATAB
init_val[1] => count.DATAB


|lab8|snakes_and_apples:snake|grid_light:vertical_bars[9].left_col
green_light_on <= green_light_on.DB_MAX_OUTPUT_PORT_TYPE
head <= head.DB_MAX_OUTPUT_PORT_TYPE
game_over_out <= state_n.DB_MAX_OUTPUT_PORT_TYPE
eating => counter256:counter.inc
eating => always0.IN1
game_over_in => state_n.e_off.OUTPUTSELECT
game_over_in => state_n.e_countdown.OUTPUTSELECT
game_over_in => state_n.e_head.OUTPUTSELECT
game_over_in => state_n.OUTPUTSELECT
left => state_n.OUTPUTSELECT
left => state_n.OUTPUTSELECT
left => state_n.OUTPUTSELECT
left => state_n.OUTPUTSELECT
up => state_n.OUTPUTSELECT
up => state_n.OUTPUTSELECT
up => state_n.OUTPUTSELECT
up => state_n.OUTPUTSELECT
right => state_n.OUTPUTSELECT
right => state_n.OUTPUTSELECT
right => state_n.OUTPUTSELECT
right => state_n.OUTPUTSELECT
down => state_n.OUTPUTSELECT
down => state_n.OUTPUTSELECT
down => state_n.OUTPUTSELECT
down => state_n.OUTPUTSELECT
length[0] => counter256:counter.start_val[0]
length[1] => counter256:counter.start_val[1]
length[2] => counter256:counter.start_val[2]
length[3] => counter256:counter.start_val[3]
length[4] => counter256:counter.start_val[4]
length[5] => counter256:counter.start_val[5]
length[6] => counter256:counter.start_val[6]
length[7] => counter256:counter.start_val[7]
dir[0] => Mux0.IN5
dir[0] => Mux1.IN5
dir[0] => Mux2.IN5
dir[0] => Mux3.IN5
dir[1] => Mux0.IN4
dir[1] => Mux1.IN4
dir[1] => Mux2.IN4
dir[1] => Mux3.IN4
clk => counter256:counter.clk
clk => state_r~1.DATAIN
slow_edge => counter256:counter.slow_edge
slow_edge => state_r.OUTPUTSELECT
slow_edge => state_r.OUTPUTSELECT
slow_edge => state_r.OUTPUTSELECT
slow_edge => state_r.OUTPUTSELECT
reset => counter256:counter.reset
reset => state_r.OUTPUTSELECT
reset => state_r.OUTPUTSELECT
reset => state_r.OUTPUTSELECT
reset => state_r.OUTPUTSELECT
light_type[0] => counter256:counter.init_val[0]
light_type[0] => Equal1.IN1
light_type[0] => Equal2.IN1
light_type[1] => counter256:counter.init_val[1]
light_type[1] => Equal1.IN0
light_type[1] => Equal2.IN0


|lab8|snakes_and_apples:snake|grid_light:vertical_bars[9].left_col|counter256:counter
count[0] <= count[0]~reg0.DB_MAX_OUTPUT_PORT_TYPE
count[1] <= count[1]~reg0.DB_MAX_OUTPUT_PORT_TYPE
count[2] <= count[2]~reg0.DB_MAX_OUTPUT_PORT_TYPE
count[3] <= count[3]~reg0.DB_MAX_OUTPUT_PORT_TYPE
count[4] <= count[4]~reg0.DB_MAX_OUTPUT_PORT_TYPE
count[5] <= count[5]~reg0.DB_MAX_OUTPUT_PORT_TYPE
count[6] <= count[6]~reg0.DB_MAX_OUTPUT_PORT_TYPE
count[7] <= count[7]~reg0.DB_MAX_OUTPUT_PORT_TYPE
start_val[0] => Add0.IN16
start_val[0] => count.DATAB
start_val[1] => Add0.IN15
start_val[1] => count.DATAB
start_val[2] => Add0.IN14
start_val[2] => count.DATAB
start_val[3] => Add0.IN13
start_val[3] => count.DATAB
start_val[4] => Add0.IN12
start_val[4] => count.DATAB
start_val[5] => Add0.IN11
start_val[5] => count.DATAB
start_val[6] => Add0.IN10
start_val[6] => count.DATAB
start_val[7] => Add0.IN9
start_val[7] => count.DATAB
inc => count.OUTPUTSELECT
inc => count.OUTPUTSELECT
inc => count.OUTPUTSELECT
inc => count.OUTPUTSELECT
inc => count.OUTPUTSELECT
inc => count.OUTPUTSELECT
inc => count.OUTPUTSELECT
inc => count.OUTPUTSELECT
inc => always0.IN0
enable => always0.IN1
enable => count.OUTPUTSELECT
enable => count.OUTPUTSELECT
enable => count.OUTPUTSELECT
enable => count.OUTPUTSELECT
enable => count.OUTPUTSELECT
enable => count.OUTPUTSELECT
enable => count.OUTPUTSELECT
enable => count.OUTPUTSELECT
clk => count[0]~reg0.CLK
clk => count[1]~reg0.CLK
clk => count[2]~reg0.CLK
clk => count[3]~reg0.CLK
clk => count[4]~reg0.CLK
clk => count[5]~reg0.CLK
clk => count[6]~reg0.CLK
clk => count[7]~reg0.CLK
slow_edge => count.OUTPUTSELECT
slow_edge => count.OUTPUTSELECT
slow_edge => count.OUTPUTSELECT
slow_edge => count.OUTPUTSELECT
slow_edge => count.OUTPUTSELECT
slow_edge => count.OUTPUTSELECT
slow_edge => count.OUTPUTSELECT
slow_edge => count.OUTPUTSELECT
reset => count.OUTPUTSELECT
reset => count.OUTPUTSELECT
reset => count.OUTPUTSELECT
reset => count.OUTPUTSELECT
reset => count.OUTPUTSELECT
reset => count.OUTPUTSELECT
reset => count.OUTPUTSELECT
reset => count.OUTPUTSELECT
init_val[0] => count.DATAB
init_val[1] => count.DATAB


|lab8|snakes_and_apples:snake|grid_light:vertical_bars[9].right_col
green_light_on <= green_light_on.DB_MAX_OUTPUT_PORT_TYPE
head <= head.DB_MAX_OUTPUT_PORT_TYPE
game_over_out <= state_n.DB_MAX_OUTPUT_PORT_TYPE
eating => counter256:counter.inc
eating => always0.IN1
game_over_in => state_n.e_off.OUTPUTSELECT
game_over_in => state_n.e_countdown.OUTPUTSELECT
game_over_in => state_n.e_head.OUTPUTSELECT
game_over_in => state_n.OUTPUTSELECT
left => state_n.OUTPUTSELECT
left => state_n.OUTPUTSELECT
left => state_n.OUTPUTSELECT
left => state_n.OUTPUTSELECT
up => state_n.OUTPUTSELECT
up => state_n.OUTPUTSELECT
up => state_n.OUTPUTSELECT
up => state_n.OUTPUTSELECT
right => state_n.OUTPUTSELECT
right => state_n.OUTPUTSELECT
right => state_n.OUTPUTSELECT
right => state_n.OUTPUTSELECT
down => state_n.OUTPUTSELECT
down => state_n.OUTPUTSELECT
down => state_n.OUTPUTSELECT
down => state_n.OUTPUTSELECT
length[0] => counter256:counter.start_val[0]
length[1] => counter256:counter.start_val[1]
length[2] => counter256:counter.start_val[2]
length[3] => counter256:counter.start_val[3]
length[4] => counter256:counter.start_val[4]
length[5] => counter256:counter.start_val[5]
length[6] => counter256:counter.start_val[6]
length[7] => counter256:counter.start_val[7]
dir[0] => Mux0.IN5
dir[0] => Mux1.IN5
dir[0] => Mux2.IN5
dir[0] => Mux3.IN5
dir[1] => Mux0.IN4
dir[1] => Mux1.IN4
dir[1] => Mux2.IN4
dir[1] => Mux3.IN4
clk => counter256:counter.clk
clk => state_r~1.DATAIN
slow_edge => counter256:counter.slow_edge
slow_edge => state_r.OUTPUTSELECT
slow_edge => state_r.OUTPUTSELECT
slow_edge => state_r.OUTPUTSELECT
slow_edge => state_r.OUTPUTSELECT
reset => counter256:counter.reset
reset => state_r.OUTPUTSELECT
reset => state_r.OUTPUTSELECT
reset => state_r.OUTPUTSELECT
reset => state_r.OUTPUTSELECT
light_type[0] => counter256:counter.init_val[0]
light_type[0] => Equal1.IN1
light_type[0] => Equal2.IN1
light_type[1] => counter256:counter.init_val[1]
light_type[1] => Equal1.IN0
light_type[1] => Equal2.IN0


|lab8|snakes_and_apples:snake|grid_light:vertical_bars[9].right_col|counter256:counter
count[0] <= count[0]~reg0.DB_MAX_OUTPUT_PORT_TYPE
count[1] <= count[1]~reg0.DB_MAX_OUTPUT_PORT_TYPE
count[2] <= count[2]~reg0.DB_MAX_OUTPUT_PORT_TYPE
count[3] <= count[3]~reg0.DB_MAX_OUTPUT_PORT_TYPE
count[4] <= count[4]~reg0.DB_MAX_OUTPUT_PORT_TYPE
count[5] <= count[5]~reg0.DB_MAX_OUTPUT_PORT_TYPE
count[6] <= count[6]~reg0.DB_MAX_OUTPUT_PORT_TYPE
count[7] <= count[7]~reg0.DB_MAX_OUTPUT_PORT_TYPE
start_val[0] => Add0.IN16
start_val[0] => count.DATAB
start_val[1] => Add0.IN15
start_val[1] => count.DATAB
start_val[2] => Add0.IN14
start_val[2] => count.DATAB
start_val[3] => Add0.IN13
start_val[3] => count.DATAB
start_val[4] => Add0.IN12
start_val[4] => count.DATAB
start_val[5] => Add0.IN11
start_val[5] => count.DATAB
start_val[6] => Add0.IN10
start_val[6] => count.DATAB
start_val[7] => Add0.IN9
start_val[7] => count.DATAB
inc => count.OUTPUTSELECT
inc => count.OUTPUTSELECT
inc => count.OUTPUTSELECT
inc => count.OUTPUTSELECT
inc => count.OUTPUTSELECT
inc => count.OUTPUTSELECT
inc => count.OUTPUTSELECT
inc => count.OUTPUTSELECT
inc => always0.IN0
enable => always0.IN1
enable => count.OUTPUTSELECT
enable => count.OUTPUTSELECT
enable => count.OUTPUTSELECT
enable => count.OUTPUTSELECT
enable => count.OUTPUTSELECT
enable => count.OUTPUTSELECT
enable => count.OUTPUTSELECT
enable => count.OUTPUTSELECT
clk => count[0]~reg0.CLK
clk => count[1]~reg0.CLK
clk => count[2]~reg0.CLK
clk => count[3]~reg0.CLK
clk => count[4]~reg0.CLK
clk => count[5]~reg0.CLK
clk => count[6]~reg0.CLK
clk => count[7]~reg0.CLK
slow_edge => count.OUTPUTSELECT
slow_edge => count.OUTPUTSELECT
slow_edge => count.OUTPUTSELECT
slow_edge => count.OUTPUTSELECT
slow_edge => count.OUTPUTSELECT
slow_edge => count.OUTPUTSELECT
slow_edge => count.OUTPUTSELECT
slow_edge => count.OUTPUTSELECT
reset => count.OUTPUTSELECT
reset => count.OUTPUTSELECT
reset => count.OUTPUTSELECT
reset => count.OUTPUTSELECT
reset => count.OUTPUTSELECT
reset => count.OUTPUTSELECT
reset => count.OUTPUTSELECT
reset => count.OUTPUTSELECT
init_val[0] => count.DATAB
init_val[1] => count.DATAB


|lab8|snakes_and_apples:snake|grid_light:vertical_bars[10].left_col
green_light_on <= green_light_on.DB_MAX_OUTPUT_PORT_TYPE
head <= head.DB_MAX_OUTPUT_PORT_TYPE
game_over_out <= state_n.DB_MAX_OUTPUT_PORT_TYPE
eating => counter256:counter.inc
eating => always0.IN1
game_over_in => state_n.e_off.OUTPUTSELECT
game_over_in => state_n.e_countdown.OUTPUTSELECT
game_over_in => state_n.e_head.OUTPUTSELECT
game_over_in => state_n.OUTPUTSELECT
left => state_n.OUTPUTSELECT
left => state_n.OUTPUTSELECT
left => state_n.OUTPUTSELECT
left => state_n.OUTPUTSELECT
up => state_n.OUTPUTSELECT
up => state_n.OUTPUTSELECT
up => state_n.OUTPUTSELECT
up => state_n.OUTPUTSELECT
right => state_n.OUTPUTSELECT
right => state_n.OUTPUTSELECT
right => state_n.OUTPUTSELECT
right => state_n.OUTPUTSELECT
down => state_n.OUTPUTSELECT
down => state_n.OUTPUTSELECT
down => state_n.OUTPUTSELECT
down => state_n.OUTPUTSELECT
length[0] => counter256:counter.start_val[0]
length[1] => counter256:counter.start_val[1]
length[2] => counter256:counter.start_val[2]
length[3] => counter256:counter.start_val[3]
length[4] => counter256:counter.start_val[4]
length[5] => counter256:counter.start_val[5]
length[6] => counter256:counter.start_val[6]
length[7] => counter256:counter.start_val[7]
dir[0] => Mux0.IN5
dir[0] => Mux1.IN5
dir[0] => Mux2.IN5
dir[0] => Mux3.IN5
dir[1] => Mux0.IN4
dir[1] => Mux1.IN4
dir[1] => Mux2.IN4
dir[1] => Mux3.IN4
clk => counter256:counter.clk
clk => state_r~1.DATAIN
slow_edge => counter256:counter.slow_edge
slow_edge => state_r.OUTPUTSELECT
slow_edge => state_r.OUTPUTSELECT
slow_edge => state_r.OUTPUTSELECT
slow_edge => state_r.OUTPUTSELECT
reset => counter256:counter.reset
reset => state_r.OUTPUTSELECT
reset => state_r.OUTPUTSELECT
reset => state_r.OUTPUTSELECT
reset => state_r.OUTPUTSELECT
light_type[0] => counter256:counter.init_val[0]
light_type[0] => Equal1.IN1
light_type[0] => Equal2.IN1
light_type[1] => counter256:counter.init_val[1]
light_type[1] => Equal1.IN0
light_type[1] => Equal2.IN0


|lab8|snakes_and_apples:snake|grid_light:vertical_bars[10].left_col|counter256:counter
count[0] <= count[0]~reg0.DB_MAX_OUTPUT_PORT_TYPE
count[1] <= count[1]~reg0.DB_MAX_OUTPUT_PORT_TYPE
count[2] <= count[2]~reg0.DB_MAX_OUTPUT_PORT_TYPE
count[3] <= count[3]~reg0.DB_MAX_OUTPUT_PORT_TYPE
count[4] <= count[4]~reg0.DB_MAX_OUTPUT_PORT_TYPE
count[5] <= count[5]~reg0.DB_MAX_OUTPUT_PORT_TYPE
count[6] <= count[6]~reg0.DB_MAX_OUTPUT_PORT_TYPE
count[7] <= count[7]~reg0.DB_MAX_OUTPUT_PORT_TYPE
start_val[0] => Add0.IN16
start_val[0] => count.DATAB
start_val[1] => Add0.IN15
start_val[1] => count.DATAB
start_val[2] => Add0.IN14
start_val[2] => count.DATAB
start_val[3] => Add0.IN13
start_val[3] => count.DATAB
start_val[4] => Add0.IN12
start_val[4] => count.DATAB
start_val[5] => Add0.IN11
start_val[5] => count.DATAB
start_val[6] => Add0.IN10
start_val[6] => count.DATAB
start_val[7] => Add0.IN9
start_val[7] => count.DATAB
inc => count.OUTPUTSELECT
inc => count.OUTPUTSELECT
inc => count.OUTPUTSELECT
inc => count.OUTPUTSELECT
inc => count.OUTPUTSELECT
inc => count.OUTPUTSELECT
inc => count.OUTPUTSELECT
inc => count.OUTPUTSELECT
inc => always0.IN0
enable => always0.IN1
enable => count.OUTPUTSELECT
enable => count.OUTPUTSELECT
enable => count.OUTPUTSELECT
enable => count.OUTPUTSELECT
enable => count.OUTPUTSELECT
enable => count.OUTPUTSELECT
enable => count.OUTPUTSELECT
enable => count.OUTPUTSELECT
clk => count[0]~reg0.CLK
clk => count[1]~reg0.CLK
clk => count[2]~reg0.CLK
clk => count[3]~reg0.CLK
clk => count[4]~reg0.CLK
clk => count[5]~reg0.CLK
clk => count[6]~reg0.CLK
clk => count[7]~reg0.CLK
slow_edge => count.OUTPUTSELECT
slow_edge => count.OUTPUTSELECT
slow_edge => count.OUTPUTSELECT
slow_edge => count.OUTPUTSELECT
slow_edge => count.OUTPUTSELECT
slow_edge => count.OUTPUTSELECT
slow_edge => count.OUTPUTSELECT
slow_edge => count.OUTPUTSELECT
reset => count.OUTPUTSELECT
reset => count.OUTPUTSELECT
reset => count.OUTPUTSELECT
reset => count.OUTPUTSELECT
reset => count.OUTPUTSELECT
reset => count.OUTPUTSELECT
reset => count.OUTPUTSELECT
reset => count.OUTPUTSELECT
init_val[0] => count.DATAB
init_val[1] => count.DATAB


|lab8|snakes_and_apples:snake|grid_light:vertical_bars[10].right_col
green_light_on <= green_light_on.DB_MAX_OUTPUT_PORT_TYPE
head <= head.DB_MAX_OUTPUT_PORT_TYPE
game_over_out <= state_n.DB_MAX_OUTPUT_PORT_TYPE
eating => counter256:counter.inc
eating => always0.IN1
game_over_in => state_n.e_off.OUTPUTSELECT
game_over_in => state_n.e_countdown.OUTPUTSELECT
game_over_in => state_n.e_head.OUTPUTSELECT
game_over_in => state_n.OUTPUTSELECT
left => state_n.OUTPUTSELECT
left => state_n.OUTPUTSELECT
left => state_n.OUTPUTSELECT
left => state_n.OUTPUTSELECT
up => state_n.OUTPUTSELECT
up => state_n.OUTPUTSELECT
up => state_n.OUTPUTSELECT
up => state_n.OUTPUTSELECT
right => state_n.OUTPUTSELECT
right => state_n.OUTPUTSELECT
right => state_n.OUTPUTSELECT
right => state_n.OUTPUTSELECT
down => state_n.OUTPUTSELECT
down => state_n.OUTPUTSELECT
down => state_n.OUTPUTSELECT
down => state_n.OUTPUTSELECT
length[0] => counter256:counter.start_val[0]
length[1] => counter256:counter.start_val[1]
length[2] => counter256:counter.start_val[2]
length[3] => counter256:counter.start_val[3]
length[4] => counter256:counter.start_val[4]
length[5] => counter256:counter.start_val[5]
length[6] => counter256:counter.start_val[6]
length[7] => counter256:counter.start_val[7]
dir[0] => Mux0.IN5
dir[0] => Mux1.IN5
dir[0] => Mux2.IN5
dir[0] => Mux3.IN5
dir[1] => Mux0.IN4
dir[1] => Mux1.IN4
dir[1] => Mux2.IN4
dir[1] => Mux3.IN4
clk => counter256:counter.clk
clk => state_r~1.DATAIN
slow_edge => counter256:counter.slow_edge
slow_edge => state_r.OUTPUTSELECT
slow_edge => state_r.OUTPUTSELECT
slow_edge => state_r.OUTPUTSELECT
slow_edge => state_r.OUTPUTSELECT
reset => counter256:counter.reset
reset => state_r.OUTPUTSELECT
reset => state_r.OUTPUTSELECT
reset => state_r.OUTPUTSELECT
reset => state_r.OUTPUTSELECT
light_type[0] => counter256:counter.init_val[0]
light_type[0] => Equal1.IN1
light_type[0] => Equal2.IN1
light_type[1] => counter256:counter.init_val[1]
light_type[1] => Equal1.IN0
light_type[1] => Equal2.IN0


|lab8|snakes_and_apples:snake|grid_light:vertical_bars[10].right_col|counter256:counter
count[0] <= count[0]~reg0.DB_MAX_OUTPUT_PORT_TYPE
count[1] <= count[1]~reg0.DB_MAX_OUTPUT_PORT_TYPE
count[2] <= count[2]~reg0.DB_MAX_OUTPUT_PORT_TYPE
count[3] <= count[3]~reg0.DB_MAX_OUTPUT_PORT_TYPE
count[4] <= count[4]~reg0.DB_MAX_OUTPUT_PORT_TYPE
count[5] <= count[5]~reg0.DB_MAX_OUTPUT_PORT_TYPE
count[6] <= count[6]~reg0.DB_MAX_OUTPUT_PORT_TYPE
count[7] <= count[7]~reg0.DB_MAX_OUTPUT_PORT_TYPE
start_val[0] => Add0.IN16
start_val[0] => count.DATAB
start_val[1] => Add0.IN15
start_val[1] => count.DATAB
start_val[2] => Add0.IN14
start_val[2] => count.DATAB
start_val[3] => Add0.IN13
start_val[3] => count.DATAB
start_val[4] => Add0.IN12
start_val[4] => count.DATAB
start_val[5] => Add0.IN11
start_val[5] => count.DATAB
start_val[6] => Add0.IN10
start_val[6] => count.DATAB
start_val[7] => Add0.IN9
start_val[7] => count.DATAB
inc => count.OUTPUTSELECT
inc => count.OUTPUTSELECT
inc => count.OUTPUTSELECT
inc => count.OUTPUTSELECT
inc => count.OUTPUTSELECT
inc => count.OUTPUTSELECT
inc => count.OUTPUTSELECT
inc => count.OUTPUTSELECT
inc => always0.IN0
enable => always0.IN1
enable => count.OUTPUTSELECT
enable => count.OUTPUTSELECT
enable => count.OUTPUTSELECT
enable => count.OUTPUTSELECT
enable => count.OUTPUTSELECT
enable => count.OUTPUTSELECT
enable => count.OUTPUTSELECT
enable => count.OUTPUTSELECT
clk => count[0]~reg0.CLK
clk => count[1]~reg0.CLK
clk => count[2]~reg0.CLK
clk => count[3]~reg0.CLK
clk => count[4]~reg0.CLK
clk => count[5]~reg0.CLK
clk => count[6]~reg0.CLK
clk => count[7]~reg0.CLK
slow_edge => count.OUTPUTSELECT
slow_edge => count.OUTPUTSELECT
slow_edge => count.OUTPUTSELECT
slow_edge => count.OUTPUTSELECT
slow_edge => count.OUTPUTSELECT
slow_edge => count.OUTPUTSELECT
slow_edge => count.OUTPUTSELECT
slow_edge => count.OUTPUTSELECT
reset => count.OUTPUTSELECT
reset => count.OUTPUTSELECT
reset => count.OUTPUTSELECT
reset => count.OUTPUTSELECT
reset => count.OUTPUTSELECT
reset => count.OUTPUTSELECT
reset => count.OUTPUTSELECT
reset => count.OUTPUTSELECT
init_val[0] => count.DATAB
init_val[1] => count.DATAB


|lab8|snakes_and_apples:snake|grid_light:vertical_bars[11].left_col
green_light_on <= green_light_on.DB_MAX_OUTPUT_PORT_TYPE
head <= head.DB_MAX_OUTPUT_PORT_TYPE
game_over_out <= state_n.DB_MAX_OUTPUT_PORT_TYPE
eating => counter256:counter.inc
eating => always0.IN1
game_over_in => state_n.e_off.OUTPUTSELECT
game_over_in => state_n.e_countdown.OUTPUTSELECT
game_over_in => state_n.e_head.OUTPUTSELECT
game_over_in => state_n.OUTPUTSELECT
left => state_n.OUTPUTSELECT
left => state_n.OUTPUTSELECT
left => state_n.OUTPUTSELECT
left => state_n.OUTPUTSELECT
up => state_n.OUTPUTSELECT
up => state_n.OUTPUTSELECT
up => state_n.OUTPUTSELECT
up => state_n.OUTPUTSELECT
right => state_n.OUTPUTSELECT
right => state_n.OUTPUTSELECT
right => state_n.OUTPUTSELECT
right => state_n.OUTPUTSELECT
down => state_n.OUTPUTSELECT
down => state_n.OUTPUTSELECT
down => state_n.OUTPUTSELECT
down => state_n.OUTPUTSELECT
length[0] => counter256:counter.start_val[0]
length[1] => counter256:counter.start_val[1]
length[2] => counter256:counter.start_val[2]
length[3] => counter256:counter.start_val[3]
length[4] => counter256:counter.start_val[4]
length[5] => counter256:counter.start_val[5]
length[6] => counter256:counter.start_val[6]
length[7] => counter256:counter.start_val[7]
dir[0] => Mux0.IN5
dir[0] => Mux1.IN5
dir[0] => Mux2.IN5
dir[0] => Mux3.IN5
dir[1] => Mux0.IN4
dir[1] => Mux1.IN4
dir[1] => Mux2.IN4
dir[1] => Mux3.IN4
clk => counter256:counter.clk
clk => state_r~1.DATAIN
slow_edge => counter256:counter.slow_edge
slow_edge => state_r.OUTPUTSELECT
slow_edge => state_r.OUTPUTSELECT
slow_edge => state_r.OUTPUTSELECT
slow_edge => state_r.OUTPUTSELECT
reset => counter256:counter.reset
reset => state_r.OUTPUTSELECT
reset => state_r.OUTPUTSELECT
reset => state_r.OUTPUTSELECT
reset => state_r.OUTPUTSELECT
light_type[0] => counter256:counter.init_val[0]
light_type[0] => Equal1.IN1
light_type[0] => Equal2.IN1
light_type[1] => counter256:counter.init_val[1]
light_type[1] => Equal1.IN0
light_type[1] => Equal2.IN0


|lab8|snakes_and_apples:snake|grid_light:vertical_bars[11].left_col|counter256:counter
count[0] <= count[0]~reg0.DB_MAX_OUTPUT_PORT_TYPE
count[1] <= count[1]~reg0.DB_MAX_OUTPUT_PORT_TYPE
count[2] <= count[2]~reg0.DB_MAX_OUTPUT_PORT_TYPE
count[3] <= count[3]~reg0.DB_MAX_OUTPUT_PORT_TYPE
count[4] <= count[4]~reg0.DB_MAX_OUTPUT_PORT_TYPE
count[5] <= count[5]~reg0.DB_MAX_OUTPUT_PORT_TYPE
count[6] <= count[6]~reg0.DB_MAX_OUTPUT_PORT_TYPE
count[7] <= count[7]~reg0.DB_MAX_OUTPUT_PORT_TYPE
start_val[0] => Add0.IN16
start_val[0] => count.DATAB
start_val[1] => Add0.IN15
start_val[1] => count.DATAB
start_val[2] => Add0.IN14
start_val[2] => count.DATAB
start_val[3] => Add0.IN13
start_val[3] => count.DATAB
start_val[4] => Add0.IN12
start_val[4] => count.DATAB
start_val[5] => Add0.IN11
start_val[5] => count.DATAB
start_val[6] => Add0.IN10
start_val[6] => count.DATAB
start_val[7] => Add0.IN9
start_val[7] => count.DATAB
inc => count.OUTPUTSELECT
inc => count.OUTPUTSELECT
inc => count.OUTPUTSELECT
inc => count.OUTPUTSELECT
inc => count.OUTPUTSELECT
inc => count.OUTPUTSELECT
inc => count.OUTPUTSELECT
inc => count.OUTPUTSELECT
inc => always0.IN0
enable => always0.IN1
enable => count.OUTPUTSELECT
enable => count.OUTPUTSELECT
enable => count.OUTPUTSELECT
enable => count.OUTPUTSELECT
enable => count.OUTPUTSELECT
enable => count.OUTPUTSELECT
enable => count.OUTPUTSELECT
enable => count.OUTPUTSELECT
clk => count[0]~reg0.CLK
clk => count[1]~reg0.CLK
clk => count[2]~reg0.CLK
clk => count[3]~reg0.CLK
clk => count[4]~reg0.CLK
clk => count[5]~reg0.CLK
clk => count[6]~reg0.CLK
clk => count[7]~reg0.CLK
slow_edge => count.OUTPUTSELECT
slow_edge => count.OUTPUTSELECT
slow_edge => count.OUTPUTSELECT
slow_edge => count.OUTPUTSELECT
slow_edge => count.OUTPUTSELECT
slow_edge => count.OUTPUTSELECT
slow_edge => count.OUTPUTSELECT
slow_edge => count.OUTPUTSELECT
reset => count.OUTPUTSELECT
reset => count.OUTPUTSELECT
reset => count.OUTPUTSELECT
reset => count.OUTPUTSELECT
reset => count.OUTPUTSELECT
reset => count.OUTPUTSELECT
reset => count.OUTPUTSELECT
reset => count.OUTPUTSELECT
init_val[0] => count.DATAB
init_val[1] => count.DATAB


|lab8|snakes_and_apples:snake|grid_light:vertical_bars[11].right_col
green_light_on <= green_light_on.DB_MAX_OUTPUT_PORT_TYPE
head <= head.DB_MAX_OUTPUT_PORT_TYPE
game_over_out <= state_n.DB_MAX_OUTPUT_PORT_TYPE
eating => counter256:counter.inc
eating => always0.IN1
game_over_in => state_n.e_off.OUTPUTSELECT
game_over_in => state_n.e_countdown.OUTPUTSELECT
game_over_in => state_n.e_head.OUTPUTSELECT
game_over_in => state_n.OUTPUTSELECT
left => state_n.OUTPUTSELECT
left => state_n.OUTPUTSELECT
left => state_n.OUTPUTSELECT
left => state_n.OUTPUTSELECT
up => state_n.OUTPUTSELECT
up => state_n.OUTPUTSELECT
up => state_n.OUTPUTSELECT
up => state_n.OUTPUTSELECT
right => state_n.OUTPUTSELECT
right => state_n.OUTPUTSELECT
right => state_n.OUTPUTSELECT
right => state_n.OUTPUTSELECT
down => state_n.OUTPUTSELECT
down => state_n.OUTPUTSELECT
down => state_n.OUTPUTSELECT
down => state_n.OUTPUTSELECT
length[0] => counter256:counter.start_val[0]
length[1] => counter256:counter.start_val[1]
length[2] => counter256:counter.start_val[2]
length[3] => counter256:counter.start_val[3]
length[4] => counter256:counter.start_val[4]
length[5] => counter256:counter.start_val[5]
length[6] => counter256:counter.start_val[6]
length[7] => counter256:counter.start_val[7]
dir[0] => Mux0.IN5
dir[0] => Mux1.IN5
dir[0] => Mux2.IN5
dir[0] => Mux3.IN5
dir[1] => Mux0.IN4
dir[1] => Mux1.IN4
dir[1] => Mux2.IN4
dir[1] => Mux3.IN4
clk => counter256:counter.clk
clk => state_r~1.DATAIN
slow_edge => counter256:counter.slow_edge
slow_edge => state_r.OUTPUTSELECT
slow_edge => state_r.OUTPUTSELECT
slow_edge => state_r.OUTPUTSELECT
slow_edge => state_r.OUTPUTSELECT
reset => counter256:counter.reset
reset => state_r.OUTPUTSELECT
reset => state_r.OUTPUTSELECT
reset => state_r.OUTPUTSELECT
reset => state_r.OUTPUTSELECT
light_type[0] => counter256:counter.init_val[0]
light_type[0] => Equal1.IN1
light_type[0] => Equal2.IN1
light_type[1] => counter256:counter.init_val[1]
light_type[1] => Equal1.IN0
light_type[1] => Equal2.IN0


|lab8|snakes_and_apples:snake|grid_light:vertical_bars[11].right_col|counter256:counter
count[0] <= count[0]~reg0.DB_MAX_OUTPUT_PORT_TYPE
count[1] <= count[1]~reg0.DB_MAX_OUTPUT_PORT_TYPE
count[2] <= count[2]~reg0.DB_MAX_OUTPUT_PORT_TYPE
count[3] <= count[3]~reg0.DB_MAX_OUTPUT_PORT_TYPE
count[4] <= count[4]~reg0.DB_MAX_OUTPUT_PORT_TYPE
count[5] <= count[5]~reg0.DB_MAX_OUTPUT_PORT_TYPE
count[6] <= count[6]~reg0.DB_MAX_OUTPUT_PORT_TYPE
count[7] <= count[7]~reg0.DB_MAX_OUTPUT_PORT_TYPE
start_val[0] => Add0.IN16
start_val[0] => count.DATAB
start_val[1] => Add0.IN15
start_val[1] => count.DATAB
start_val[2] => Add0.IN14
start_val[2] => count.DATAB
start_val[3] => Add0.IN13
start_val[3] => count.DATAB
start_val[4] => Add0.IN12
start_val[4] => count.DATAB
start_val[5] => Add0.IN11
start_val[5] => count.DATAB
start_val[6] => Add0.IN10
start_val[6] => count.DATAB
start_val[7] => Add0.IN9
start_val[7] => count.DATAB
inc => count.OUTPUTSELECT
inc => count.OUTPUTSELECT
inc => count.OUTPUTSELECT
inc => count.OUTPUTSELECT
inc => count.OUTPUTSELECT
inc => count.OUTPUTSELECT
inc => count.OUTPUTSELECT
inc => count.OUTPUTSELECT
inc => always0.IN0
enable => always0.IN1
enable => count.OUTPUTSELECT
enable => count.OUTPUTSELECT
enable => count.OUTPUTSELECT
enable => count.OUTPUTSELECT
enable => count.OUTPUTSELECT
enable => count.OUTPUTSELECT
enable => count.OUTPUTSELECT
enable => count.OUTPUTSELECT
clk => count[0]~reg0.CLK
clk => count[1]~reg0.CLK
clk => count[2]~reg0.CLK
clk => count[3]~reg0.CLK
clk => count[4]~reg0.CLK
clk => count[5]~reg0.CLK
clk => count[6]~reg0.CLK
clk => count[7]~reg0.CLK
slow_edge => count.OUTPUTSELECT
slow_edge => count.OUTPUTSELECT
slow_edge => count.OUTPUTSELECT
slow_edge => count.OUTPUTSELECT
slow_edge => count.OUTPUTSELECT
slow_edge => count.OUTPUTSELECT
slow_edge => count.OUTPUTSELECT
slow_edge => count.OUTPUTSELECT
reset => count.OUTPUTSELECT
reset => count.OUTPUTSELECT
reset => count.OUTPUTSELECT
reset => count.OUTPUTSELECT
reset => count.OUTPUTSELECT
reset => count.OUTPUTSELECT
reset => count.OUTPUTSELECT
reset => count.OUTPUTSELECT
init_val[0] => count.DATAB
init_val[1] => count.DATAB


|lab8|snakes_and_apples:snake|grid_light:vertical_bars[12].left_col
green_light_on <= green_light_on.DB_MAX_OUTPUT_PORT_TYPE
head <= head.DB_MAX_OUTPUT_PORT_TYPE
game_over_out <= state_n.DB_MAX_OUTPUT_PORT_TYPE
eating => counter256:counter.inc
eating => always0.IN1
game_over_in => state_n.e_off.OUTPUTSELECT
game_over_in => state_n.e_countdown.OUTPUTSELECT
game_over_in => state_n.e_head.OUTPUTSELECT
game_over_in => state_n.OUTPUTSELECT
left => state_n.OUTPUTSELECT
left => state_n.OUTPUTSELECT
left => state_n.OUTPUTSELECT
left => state_n.OUTPUTSELECT
up => state_n.OUTPUTSELECT
up => state_n.OUTPUTSELECT
up => state_n.OUTPUTSELECT
up => state_n.OUTPUTSELECT
right => state_n.OUTPUTSELECT
right => state_n.OUTPUTSELECT
right => state_n.OUTPUTSELECT
right => state_n.OUTPUTSELECT
down => state_n.OUTPUTSELECT
down => state_n.OUTPUTSELECT
down => state_n.OUTPUTSELECT
down => state_n.OUTPUTSELECT
length[0] => counter256:counter.start_val[0]
length[1] => counter256:counter.start_val[1]
length[2] => counter256:counter.start_val[2]
length[3] => counter256:counter.start_val[3]
length[4] => counter256:counter.start_val[4]
length[5] => counter256:counter.start_val[5]
length[6] => counter256:counter.start_val[6]
length[7] => counter256:counter.start_val[7]
dir[0] => Mux0.IN5
dir[0] => Mux1.IN5
dir[0] => Mux2.IN5
dir[0] => Mux3.IN5
dir[1] => Mux0.IN4
dir[1] => Mux1.IN4
dir[1] => Mux2.IN4
dir[1] => Mux3.IN4
clk => counter256:counter.clk
clk => state_r~1.DATAIN
slow_edge => counter256:counter.slow_edge
slow_edge => state_r.OUTPUTSELECT
slow_edge => state_r.OUTPUTSELECT
slow_edge => state_r.OUTPUTSELECT
slow_edge => state_r.OUTPUTSELECT
reset => counter256:counter.reset
reset => state_r.OUTPUTSELECT
reset => state_r.OUTPUTSELECT
reset => state_r.OUTPUTSELECT
reset => state_r.OUTPUTSELECT
light_type[0] => counter256:counter.init_val[0]
light_type[0] => Equal1.IN1
light_type[0] => Equal2.IN1
light_type[1] => counter256:counter.init_val[1]
light_type[1] => Equal1.IN0
light_type[1] => Equal2.IN0


|lab8|snakes_and_apples:snake|grid_light:vertical_bars[12].left_col|counter256:counter
count[0] <= count[0]~reg0.DB_MAX_OUTPUT_PORT_TYPE
count[1] <= count[1]~reg0.DB_MAX_OUTPUT_PORT_TYPE
count[2] <= count[2]~reg0.DB_MAX_OUTPUT_PORT_TYPE
count[3] <= count[3]~reg0.DB_MAX_OUTPUT_PORT_TYPE
count[4] <= count[4]~reg0.DB_MAX_OUTPUT_PORT_TYPE
count[5] <= count[5]~reg0.DB_MAX_OUTPUT_PORT_TYPE
count[6] <= count[6]~reg0.DB_MAX_OUTPUT_PORT_TYPE
count[7] <= count[7]~reg0.DB_MAX_OUTPUT_PORT_TYPE
start_val[0] => Add0.IN16
start_val[0] => count.DATAB
start_val[1] => Add0.IN15
start_val[1] => count.DATAB
start_val[2] => Add0.IN14
start_val[2] => count.DATAB
start_val[3] => Add0.IN13
start_val[3] => count.DATAB
start_val[4] => Add0.IN12
start_val[4] => count.DATAB
start_val[5] => Add0.IN11
start_val[5] => count.DATAB
start_val[6] => Add0.IN10
start_val[6] => count.DATAB
start_val[7] => Add0.IN9
start_val[7] => count.DATAB
inc => count.OUTPUTSELECT
inc => count.OUTPUTSELECT
inc => count.OUTPUTSELECT
inc => count.OUTPUTSELECT
inc => count.OUTPUTSELECT
inc => count.OUTPUTSELECT
inc => count.OUTPUTSELECT
inc => count.OUTPUTSELECT
inc => always0.IN0
enable => always0.IN1
enable => count.OUTPUTSELECT
enable => count.OUTPUTSELECT
enable => count.OUTPUTSELECT
enable => count.OUTPUTSELECT
enable => count.OUTPUTSELECT
enable => count.OUTPUTSELECT
enable => count.OUTPUTSELECT
enable => count.OUTPUTSELECT
clk => count[0]~reg0.CLK
clk => count[1]~reg0.CLK
clk => count[2]~reg0.CLK
clk => count[3]~reg0.CLK
clk => count[4]~reg0.CLK
clk => count[5]~reg0.CLK
clk => count[6]~reg0.CLK
clk => count[7]~reg0.CLK
slow_edge => count.OUTPUTSELECT
slow_edge => count.OUTPUTSELECT
slow_edge => count.OUTPUTSELECT
slow_edge => count.OUTPUTSELECT
slow_edge => count.OUTPUTSELECT
slow_edge => count.OUTPUTSELECT
slow_edge => count.OUTPUTSELECT
slow_edge => count.OUTPUTSELECT
reset => count.OUTPUTSELECT
reset => count.OUTPUTSELECT
reset => count.OUTPUTSELECT
reset => count.OUTPUTSELECT
reset => count.OUTPUTSELECT
reset => count.OUTPUTSELECT
reset => count.OUTPUTSELECT
reset => count.OUTPUTSELECT
init_val[0] => count.DATAB
init_val[1] => count.DATAB


|lab8|snakes_and_apples:snake|grid_light:vertical_bars[12].right_col
green_light_on <= green_light_on.DB_MAX_OUTPUT_PORT_TYPE
head <= head.DB_MAX_OUTPUT_PORT_TYPE
game_over_out <= state_n.DB_MAX_OUTPUT_PORT_TYPE
eating => counter256:counter.inc
eating => always0.IN1
game_over_in => state_n.e_off.OUTPUTSELECT
game_over_in => state_n.e_countdown.OUTPUTSELECT
game_over_in => state_n.e_head.OUTPUTSELECT
game_over_in => state_n.OUTPUTSELECT
left => state_n.OUTPUTSELECT
left => state_n.OUTPUTSELECT
left => state_n.OUTPUTSELECT
left => state_n.OUTPUTSELECT
up => state_n.OUTPUTSELECT
up => state_n.OUTPUTSELECT
up => state_n.OUTPUTSELECT
up => state_n.OUTPUTSELECT
right => state_n.OUTPUTSELECT
right => state_n.OUTPUTSELECT
right => state_n.OUTPUTSELECT
right => state_n.OUTPUTSELECT
down => state_n.OUTPUTSELECT
down => state_n.OUTPUTSELECT
down => state_n.OUTPUTSELECT
down => state_n.OUTPUTSELECT
length[0] => counter256:counter.start_val[0]
length[1] => counter256:counter.start_val[1]
length[2] => counter256:counter.start_val[2]
length[3] => counter256:counter.start_val[3]
length[4] => counter256:counter.start_val[4]
length[5] => counter256:counter.start_val[5]
length[6] => counter256:counter.start_val[6]
length[7] => counter256:counter.start_val[7]
dir[0] => Mux0.IN5
dir[0] => Mux1.IN5
dir[0] => Mux2.IN5
dir[0] => Mux3.IN5
dir[1] => Mux0.IN4
dir[1] => Mux1.IN4
dir[1] => Mux2.IN4
dir[1] => Mux3.IN4
clk => counter256:counter.clk
clk => state_r~1.DATAIN
slow_edge => counter256:counter.slow_edge
slow_edge => state_r.OUTPUTSELECT
slow_edge => state_r.OUTPUTSELECT
slow_edge => state_r.OUTPUTSELECT
slow_edge => state_r.OUTPUTSELECT
reset => counter256:counter.reset
reset => state_r.OUTPUTSELECT
reset => state_r.OUTPUTSELECT
reset => state_r.OUTPUTSELECT
reset => state_r.OUTPUTSELECT
light_type[0] => counter256:counter.init_val[0]
light_type[0] => Equal1.IN1
light_type[0] => Equal2.IN1
light_type[1] => counter256:counter.init_val[1]
light_type[1] => Equal1.IN0
light_type[1] => Equal2.IN0


|lab8|snakes_and_apples:snake|grid_light:vertical_bars[12].right_col|counter256:counter
count[0] <= count[0]~reg0.DB_MAX_OUTPUT_PORT_TYPE
count[1] <= count[1]~reg0.DB_MAX_OUTPUT_PORT_TYPE
count[2] <= count[2]~reg0.DB_MAX_OUTPUT_PORT_TYPE
count[3] <= count[3]~reg0.DB_MAX_OUTPUT_PORT_TYPE
count[4] <= count[4]~reg0.DB_MAX_OUTPUT_PORT_TYPE
count[5] <= count[5]~reg0.DB_MAX_OUTPUT_PORT_TYPE
count[6] <= count[6]~reg0.DB_MAX_OUTPUT_PORT_TYPE
count[7] <= count[7]~reg0.DB_MAX_OUTPUT_PORT_TYPE
start_val[0] => Add0.IN16
start_val[0] => count.DATAB
start_val[1] => Add0.IN15
start_val[1] => count.DATAB
start_val[2] => Add0.IN14
start_val[2] => count.DATAB
start_val[3] => Add0.IN13
start_val[3] => count.DATAB
start_val[4] => Add0.IN12
start_val[4] => count.DATAB
start_val[5] => Add0.IN11
start_val[5] => count.DATAB
start_val[6] => Add0.IN10
start_val[6] => count.DATAB
start_val[7] => Add0.IN9
start_val[7] => count.DATAB
inc => count.OUTPUTSELECT
inc => count.OUTPUTSELECT
inc => count.OUTPUTSELECT
inc => count.OUTPUTSELECT
inc => count.OUTPUTSELECT
inc => count.OUTPUTSELECT
inc => count.OUTPUTSELECT
inc => count.OUTPUTSELECT
inc => always0.IN0
enable => always0.IN1
enable => count.OUTPUTSELECT
enable => count.OUTPUTSELECT
enable => count.OUTPUTSELECT
enable => count.OUTPUTSELECT
enable => count.OUTPUTSELECT
enable => count.OUTPUTSELECT
enable => count.OUTPUTSELECT
enable => count.OUTPUTSELECT
clk => count[0]~reg0.CLK
clk => count[1]~reg0.CLK
clk => count[2]~reg0.CLK
clk => count[3]~reg0.CLK
clk => count[4]~reg0.CLK
clk => count[5]~reg0.CLK
clk => count[6]~reg0.CLK
clk => count[7]~reg0.CLK
slow_edge => count.OUTPUTSELECT
slow_edge => count.OUTPUTSELECT
slow_edge => count.OUTPUTSELECT
slow_edge => count.OUTPUTSELECT
slow_edge => count.OUTPUTSELECT
slow_edge => count.OUTPUTSELECT
slow_edge => count.OUTPUTSELECT
slow_edge => count.OUTPUTSELECT
reset => count.OUTPUTSELECT
reset => count.OUTPUTSELECT
reset => count.OUTPUTSELECT
reset => count.OUTPUTSELECT
reset => count.OUTPUTSELECT
reset => count.OUTPUTSELECT
reset => count.OUTPUTSELECT
reset => count.OUTPUTSELECT
init_val[0] => count.DATAB
init_val[1] => count.DATAB


|lab8|snakes_and_apples:snake|grid_light:vertical_bars[13].left_col
green_light_on <= green_light_on.DB_MAX_OUTPUT_PORT_TYPE
head <= head.DB_MAX_OUTPUT_PORT_TYPE
game_over_out <= state_n.DB_MAX_OUTPUT_PORT_TYPE
eating => counter256:counter.inc
eating => always0.IN1
game_over_in => state_n.e_off.OUTPUTSELECT
game_over_in => state_n.e_countdown.OUTPUTSELECT
game_over_in => state_n.e_head.OUTPUTSELECT
game_over_in => state_n.OUTPUTSELECT
left => state_n.OUTPUTSELECT
left => state_n.OUTPUTSELECT
left => state_n.OUTPUTSELECT
left => state_n.OUTPUTSELECT
up => state_n.OUTPUTSELECT
up => state_n.OUTPUTSELECT
up => state_n.OUTPUTSELECT
up => state_n.OUTPUTSELECT
right => state_n.OUTPUTSELECT
right => state_n.OUTPUTSELECT
right => state_n.OUTPUTSELECT
right => state_n.OUTPUTSELECT
down => state_n.OUTPUTSELECT
down => state_n.OUTPUTSELECT
down => state_n.OUTPUTSELECT
down => state_n.OUTPUTSELECT
length[0] => counter256:counter.start_val[0]
length[1] => counter256:counter.start_val[1]
length[2] => counter256:counter.start_val[2]
length[3] => counter256:counter.start_val[3]
length[4] => counter256:counter.start_val[4]
length[5] => counter256:counter.start_val[5]
length[6] => counter256:counter.start_val[6]
length[7] => counter256:counter.start_val[7]
dir[0] => Mux0.IN5
dir[0] => Mux1.IN5
dir[0] => Mux2.IN5
dir[0] => Mux3.IN5
dir[1] => Mux0.IN4
dir[1] => Mux1.IN4
dir[1] => Mux2.IN4
dir[1] => Mux3.IN4
clk => counter256:counter.clk
clk => state_r~1.DATAIN
slow_edge => counter256:counter.slow_edge
slow_edge => state_r.OUTPUTSELECT
slow_edge => state_r.OUTPUTSELECT
slow_edge => state_r.OUTPUTSELECT
slow_edge => state_r.OUTPUTSELECT
reset => counter256:counter.reset
reset => state_r.OUTPUTSELECT
reset => state_r.OUTPUTSELECT
reset => state_r.OUTPUTSELECT
reset => state_r.OUTPUTSELECT
light_type[0] => counter256:counter.init_val[0]
light_type[0] => Equal1.IN1
light_type[0] => Equal2.IN1
light_type[1] => counter256:counter.init_val[1]
light_type[1] => Equal1.IN0
light_type[1] => Equal2.IN0


|lab8|snakes_and_apples:snake|grid_light:vertical_bars[13].left_col|counter256:counter
count[0] <= count[0]~reg0.DB_MAX_OUTPUT_PORT_TYPE
count[1] <= count[1]~reg0.DB_MAX_OUTPUT_PORT_TYPE
count[2] <= count[2]~reg0.DB_MAX_OUTPUT_PORT_TYPE
count[3] <= count[3]~reg0.DB_MAX_OUTPUT_PORT_TYPE
count[4] <= count[4]~reg0.DB_MAX_OUTPUT_PORT_TYPE
count[5] <= count[5]~reg0.DB_MAX_OUTPUT_PORT_TYPE
count[6] <= count[6]~reg0.DB_MAX_OUTPUT_PORT_TYPE
count[7] <= count[7]~reg0.DB_MAX_OUTPUT_PORT_TYPE
start_val[0] => Add0.IN16
start_val[0] => count.DATAB
start_val[1] => Add0.IN15
start_val[1] => count.DATAB
start_val[2] => Add0.IN14
start_val[2] => count.DATAB
start_val[3] => Add0.IN13
start_val[3] => count.DATAB
start_val[4] => Add0.IN12
start_val[4] => count.DATAB
start_val[5] => Add0.IN11
start_val[5] => count.DATAB
start_val[6] => Add0.IN10
start_val[6] => count.DATAB
start_val[7] => Add0.IN9
start_val[7] => count.DATAB
inc => count.OUTPUTSELECT
inc => count.OUTPUTSELECT
inc => count.OUTPUTSELECT
inc => count.OUTPUTSELECT
inc => count.OUTPUTSELECT
inc => count.OUTPUTSELECT
inc => count.OUTPUTSELECT
inc => count.OUTPUTSELECT
inc => always0.IN0
enable => always0.IN1
enable => count.OUTPUTSELECT
enable => count.OUTPUTSELECT
enable => count.OUTPUTSELECT
enable => count.OUTPUTSELECT
enable => count.OUTPUTSELECT
enable => count.OUTPUTSELECT
enable => count.OUTPUTSELECT
enable => count.OUTPUTSELECT
clk => count[0]~reg0.CLK
clk => count[1]~reg0.CLK
clk => count[2]~reg0.CLK
clk => count[3]~reg0.CLK
clk => count[4]~reg0.CLK
clk => count[5]~reg0.CLK
clk => count[6]~reg0.CLK
clk => count[7]~reg0.CLK
slow_edge => count.OUTPUTSELECT
slow_edge => count.OUTPUTSELECT
slow_edge => count.OUTPUTSELECT
slow_edge => count.OUTPUTSELECT
slow_edge => count.OUTPUTSELECT
slow_edge => count.OUTPUTSELECT
slow_edge => count.OUTPUTSELECT
slow_edge => count.OUTPUTSELECT
reset => count.OUTPUTSELECT
reset => count.OUTPUTSELECT
reset => count.OUTPUTSELECT
reset => count.OUTPUTSELECT
reset => count.OUTPUTSELECT
reset => count.OUTPUTSELECT
reset => count.OUTPUTSELECT
reset => count.OUTPUTSELECT
init_val[0] => count.DATAB
init_val[1] => count.DATAB


|lab8|snakes_and_apples:snake|grid_light:vertical_bars[13].right_col
green_light_on <= green_light_on.DB_MAX_OUTPUT_PORT_TYPE
head <= head.DB_MAX_OUTPUT_PORT_TYPE
game_over_out <= state_n.DB_MAX_OUTPUT_PORT_TYPE
eating => counter256:counter.inc
eating => always0.IN1
game_over_in => state_n.e_off.OUTPUTSELECT
game_over_in => state_n.e_countdown.OUTPUTSELECT
game_over_in => state_n.e_head.OUTPUTSELECT
game_over_in => state_n.OUTPUTSELECT
left => state_n.OUTPUTSELECT
left => state_n.OUTPUTSELECT
left => state_n.OUTPUTSELECT
left => state_n.OUTPUTSELECT
up => state_n.OUTPUTSELECT
up => state_n.OUTPUTSELECT
up => state_n.OUTPUTSELECT
up => state_n.OUTPUTSELECT
right => state_n.OUTPUTSELECT
right => state_n.OUTPUTSELECT
right => state_n.OUTPUTSELECT
right => state_n.OUTPUTSELECT
down => state_n.OUTPUTSELECT
down => state_n.OUTPUTSELECT
down => state_n.OUTPUTSELECT
down => state_n.OUTPUTSELECT
length[0] => counter256:counter.start_val[0]
length[1] => counter256:counter.start_val[1]
length[2] => counter256:counter.start_val[2]
length[3] => counter256:counter.start_val[3]
length[4] => counter256:counter.start_val[4]
length[5] => counter256:counter.start_val[5]
length[6] => counter256:counter.start_val[6]
length[7] => counter256:counter.start_val[7]
dir[0] => Mux0.IN5
dir[0] => Mux1.IN5
dir[0] => Mux2.IN5
dir[0] => Mux3.IN5
dir[1] => Mux0.IN4
dir[1] => Mux1.IN4
dir[1] => Mux2.IN4
dir[1] => Mux3.IN4
clk => counter256:counter.clk
clk => state_r~1.DATAIN
slow_edge => counter256:counter.slow_edge
slow_edge => state_r.OUTPUTSELECT
slow_edge => state_r.OUTPUTSELECT
slow_edge => state_r.OUTPUTSELECT
slow_edge => state_r.OUTPUTSELECT
reset => counter256:counter.reset
reset => state_r.OUTPUTSELECT
reset => state_r.OUTPUTSELECT
reset => state_r.OUTPUTSELECT
reset => state_r.OUTPUTSELECT
light_type[0] => counter256:counter.init_val[0]
light_type[0] => Equal1.IN1
light_type[0] => Equal2.IN1
light_type[1] => counter256:counter.init_val[1]
light_type[1] => Equal1.IN0
light_type[1] => Equal2.IN0


|lab8|snakes_and_apples:snake|grid_light:vertical_bars[13].right_col|counter256:counter
count[0] <= count[0]~reg0.DB_MAX_OUTPUT_PORT_TYPE
count[1] <= count[1]~reg0.DB_MAX_OUTPUT_PORT_TYPE
count[2] <= count[2]~reg0.DB_MAX_OUTPUT_PORT_TYPE
count[3] <= count[3]~reg0.DB_MAX_OUTPUT_PORT_TYPE
count[4] <= count[4]~reg0.DB_MAX_OUTPUT_PORT_TYPE
count[5] <= count[5]~reg0.DB_MAX_OUTPUT_PORT_TYPE
count[6] <= count[6]~reg0.DB_MAX_OUTPUT_PORT_TYPE
count[7] <= count[7]~reg0.DB_MAX_OUTPUT_PORT_TYPE
start_val[0] => Add0.IN16
start_val[0] => count.DATAB
start_val[1] => Add0.IN15
start_val[1] => count.DATAB
start_val[2] => Add0.IN14
start_val[2] => count.DATAB
start_val[3] => Add0.IN13
start_val[3] => count.DATAB
start_val[4] => Add0.IN12
start_val[4] => count.DATAB
start_val[5] => Add0.IN11
start_val[5] => count.DATAB
start_val[6] => Add0.IN10
start_val[6] => count.DATAB
start_val[7] => Add0.IN9
start_val[7] => count.DATAB
inc => count.OUTPUTSELECT
inc => count.OUTPUTSELECT
inc => count.OUTPUTSELECT
inc => count.OUTPUTSELECT
inc => count.OUTPUTSELECT
inc => count.OUTPUTSELECT
inc => count.OUTPUTSELECT
inc => count.OUTPUTSELECT
inc => always0.IN0
enable => always0.IN1
enable => count.OUTPUTSELECT
enable => count.OUTPUTSELECT
enable => count.OUTPUTSELECT
enable => count.OUTPUTSELECT
enable => count.OUTPUTSELECT
enable => count.OUTPUTSELECT
enable => count.OUTPUTSELECT
enable => count.OUTPUTSELECT
clk => count[0]~reg0.CLK
clk => count[1]~reg0.CLK
clk => count[2]~reg0.CLK
clk => count[3]~reg0.CLK
clk => count[4]~reg0.CLK
clk => count[5]~reg0.CLK
clk => count[6]~reg0.CLK
clk => count[7]~reg0.CLK
slow_edge => count.OUTPUTSELECT
slow_edge => count.OUTPUTSELECT
slow_edge => count.OUTPUTSELECT
slow_edge => count.OUTPUTSELECT
slow_edge => count.OUTPUTSELECT
slow_edge => count.OUTPUTSELECT
slow_edge => count.OUTPUTSELECT
slow_edge => count.OUTPUTSELECT
reset => count.OUTPUTSELECT
reset => count.OUTPUTSELECT
reset => count.OUTPUTSELECT
reset => count.OUTPUTSELECT
reset => count.OUTPUTSELECT
reset => count.OUTPUTSELECT
reset => count.OUTPUTSELECT
reset => count.OUTPUTSELECT
init_val[0] => count.DATAB
init_val[1] => count.DATAB


|lab8|snakes_and_apples:snake|grid_light:vertical_bars[14].left_col
green_light_on <= green_light_on.DB_MAX_OUTPUT_PORT_TYPE
head <= head.DB_MAX_OUTPUT_PORT_TYPE
game_over_out <= state_n.DB_MAX_OUTPUT_PORT_TYPE
eating => counter256:counter.inc
eating => always0.IN1
game_over_in => state_n.e_off.OUTPUTSELECT
game_over_in => state_n.e_countdown.OUTPUTSELECT
game_over_in => state_n.e_head.OUTPUTSELECT
game_over_in => state_n.OUTPUTSELECT
left => state_n.OUTPUTSELECT
left => state_n.OUTPUTSELECT
left => state_n.OUTPUTSELECT
left => state_n.OUTPUTSELECT
up => state_n.OUTPUTSELECT
up => state_n.OUTPUTSELECT
up => state_n.OUTPUTSELECT
up => state_n.OUTPUTSELECT
right => state_n.OUTPUTSELECT
right => state_n.OUTPUTSELECT
right => state_n.OUTPUTSELECT
right => state_n.OUTPUTSELECT
down => state_n.OUTPUTSELECT
down => state_n.OUTPUTSELECT
down => state_n.OUTPUTSELECT
down => state_n.OUTPUTSELECT
length[0] => counter256:counter.start_val[0]
length[1] => counter256:counter.start_val[1]
length[2] => counter256:counter.start_val[2]
length[3] => counter256:counter.start_val[3]
length[4] => counter256:counter.start_val[4]
length[5] => counter256:counter.start_val[5]
length[6] => counter256:counter.start_val[6]
length[7] => counter256:counter.start_val[7]
dir[0] => Mux0.IN5
dir[0] => Mux1.IN5
dir[0] => Mux2.IN5
dir[0] => Mux3.IN5
dir[1] => Mux0.IN4
dir[1] => Mux1.IN4
dir[1] => Mux2.IN4
dir[1] => Mux3.IN4
clk => counter256:counter.clk
clk => state_r~1.DATAIN
slow_edge => counter256:counter.slow_edge
slow_edge => state_r.OUTPUTSELECT
slow_edge => state_r.OUTPUTSELECT
slow_edge => state_r.OUTPUTSELECT
slow_edge => state_r.OUTPUTSELECT
reset => counter256:counter.reset
reset => state_r.OUTPUTSELECT
reset => state_r.OUTPUTSELECT
reset => state_r.OUTPUTSELECT
reset => state_r.OUTPUTSELECT
light_type[0] => counter256:counter.init_val[0]
light_type[0] => Equal1.IN1
light_type[0] => Equal2.IN1
light_type[1] => counter256:counter.init_val[1]
light_type[1] => Equal1.IN0
light_type[1] => Equal2.IN0


|lab8|snakes_and_apples:snake|grid_light:vertical_bars[14].left_col|counter256:counter
count[0] <= count[0]~reg0.DB_MAX_OUTPUT_PORT_TYPE
count[1] <= count[1]~reg0.DB_MAX_OUTPUT_PORT_TYPE
count[2] <= count[2]~reg0.DB_MAX_OUTPUT_PORT_TYPE
count[3] <= count[3]~reg0.DB_MAX_OUTPUT_PORT_TYPE
count[4] <= count[4]~reg0.DB_MAX_OUTPUT_PORT_TYPE
count[5] <= count[5]~reg0.DB_MAX_OUTPUT_PORT_TYPE
count[6] <= count[6]~reg0.DB_MAX_OUTPUT_PORT_TYPE
count[7] <= count[7]~reg0.DB_MAX_OUTPUT_PORT_TYPE
start_val[0] => Add0.IN16
start_val[0] => count.DATAB
start_val[1] => Add0.IN15
start_val[1] => count.DATAB
start_val[2] => Add0.IN14
start_val[2] => count.DATAB
start_val[3] => Add0.IN13
start_val[3] => count.DATAB
start_val[4] => Add0.IN12
start_val[4] => count.DATAB
start_val[5] => Add0.IN11
start_val[5] => count.DATAB
start_val[6] => Add0.IN10
start_val[6] => count.DATAB
start_val[7] => Add0.IN9
start_val[7] => count.DATAB
inc => count.OUTPUTSELECT
inc => count.OUTPUTSELECT
inc => count.OUTPUTSELECT
inc => count.OUTPUTSELECT
inc => count.OUTPUTSELECT
inc => count.OUTPUTSELECT
inc => count.OUTPUTSELECT
inc => count.OUTPUTSELECT
inc => always0.IN0
enable => always0.IN1
enable => count.OUTPUTSELECT
enable => count.OUTPUTSELECT
enable => count.OUTPUTSELECT
enable => count.OUTPUTSELECT
enable => count.OUTPUTSELECT
enable => count.OUTPUTSELECT
enable => count.OUTPUTSELECT
enable => count.OUTPUTSELECT
clk => count[0]~reg0.CLK
clk => count[1]~reg0.CLK
clk => count[2]~reg0.CLK
clk => count[3]~reg0.CLK
clk => count[4]~reg0.CLK
clk => count[5]~reg0.CLK
clk => count[6]~reg0.CLK
clk => count[7]~reg0.CLK
slow_edge => count.OUTPUTSELECT
slow_edge => count.OUTPUTSELECT
slow_edge => count.OUTPUTSELECT
slow_edge => count.OUTPUTSELECT
slow_edge => count.OUTPUTSELECT
slow_edge => count.OUTPUTSELECT
slow_edge => count.OUTPUTSELECT
slow_edge => count.OUTPUTSELECT
reset => count.OUTPUTSELECT
reset => count.OUTPUTSELECT
reset => count.OUTPUTSELECT
reset => count.OUTPUTSELECT
reset => count.OUTPUTSELECT
reset => count.OUTPUTSELECT
reset => count.OUTPUTSELECT
reset => count.OUTPUTSELECT
init_val[0] => count.DATAB
init_val[1] => count.DATAB


|lab8|snakes_and_apples:snake|grid_light:vertical_bars[14].right_col
green_light_on <= green_light_on.DB_MAX_OUTPUT_PORT_TYPE
head <= head.DB_MAX_OUTPUT_PORT_TYPE
game_over_out <= state_n.DB_MAX_OUTPUT_PORT_TYPE
eating => counter256:counter.inc
eating => always0.IN1
game_over_in => state_n.e_off.OUTPUTSELECT
game_over_in => state_n.e_countdown.OUTPUTSELECT
game_over_in => state_n.e_head.OUTPUTSELECT
game_over_in => state_n.OUTPUTSELECT
left => state_n.OUTPUTSELECT
left => state_n.OUTPUTSELECT
left => state_n.OUTPUTSELECT
left => state_n.OUTPUTSELECT
up => state_n.OUTPUTSELECT
up => state_n.OUTPUTSELECT
up => state_n.OUTPUTSELECT
up => state_n.OUTPUTSELECT
right => state_n.OUTPUTSELECT
right => state_n.OUTPUTSELECT
right => state_n.OUTPUTSELECT
right => state_n.OUTPUTSELECT
down => state_n.OUTPUTSELECT
down => state_n.OUTPUTSELECT
down => state_n.OUTPUTSELECT
down => state_n.OUTPUTSELECT
length[0] => counter256:counter.start_val[0]
length[1] => counter256:counter.start_val[1]
length[2] => counter256:counter.start_val[2]
length[3] => counter256:counter.start_val[3]
length[4] => counter256:counter.start_val[4]
length[5] => counter256:counter.start_val[5]
length[6] => counter256:counter.start_val[6]
length[7] => counter256:counter.start_val[7]
dir[0] => Mux0.IN5
dir[0] => Mux1.IN5
dir[0] => Mux2.IN5
dir[0] => Mux3.IN5
dir[1] => Mux0.IN4
dir[1] => Mux1.IN4
dir[1] => Mux2.IN4
dir[1] => Mux3.IN4
clk => counter256:counter.clk
clk => state_r~1.DATAIN
slow_edge => counter256:counter.slow_edge
slow_edge => state_r.OUTPUTSELECT
slow_edge => state_r.OUTPUTSELECT
slow_edge => state_r.OUTPUTSELECT
slow_edge => state_r.OUTPUTSELECT
reset => counter256:counter.reset
reset => state_r.OUTPUTSELECT
reset => state_r.OUTPUTSELECT
reset => state_r.OUTPUTSELECT
reset => state_r.OUTPUTSELECT
light_type[0] => counter256:counter.init_val[0]
light_type[0] => Equal1.IN1
light_type[0] => Equal2.IN1
light_type[1] => counter256:counter.init_val[1]
light_type[1] => Equal1.IN0
light_type[1] => Equal2.IN0


|lab8|snakes_and_apples:snake|grid_light:vertical_bars[14].right_col|counter256:counter
count[0] <= count[0]~reg0.DB_MAX_OUTPUT_PORT_TYPE
count[1] <= count[1]~reg0.DB_MAX_OUTPUT_PORT_TYPE
count[2] <= count[2]~reg0.DB_MAX_OUTPUT_PORT_TYPE
count[3] <= count[3]~reg0.DB_MAX_OUTPUT_PORT_TYPE
count[4] <= count[4]~reg0.DB_MAX_OUTPUT_PORT_TYPE
count[5] <= count[5]~reg0.DB_MAX_OUTPUT_PORT_TYPE
count[6] <= count[6]~reg0.DB_MAX_OUTPUT_PORT_TYPE
count[7] <= count[7]~reg0.DB_MAX_OUTPUT_PORT_TYPE
start_val[0] => Add0.IN16
start_val[0] => count.DATAB
start_val[1] => Add0.IN15
start_val[1] => count.DATAB
start_val[2] => Add0.IN14
start_val[2] => count.DATAB
start_val[3] => Add0.IN13
start_val[3] => count.DATAB
start_val[4] => Add0.IN12
start_val[4] => count.DATAB
start_val[5] => Add0.IN11
start_val[5] => count.DATAB
start_val[6] => Add0.IN10
start_val[6] => count.DATAB
start_val[7] => Add0.IN9
start_val[7] => count.DATAB
inc => count.OUTPUTSELECT
inc => count.OUTPUTSELECT
inc => count.OUTPUTSELECT
inc => count.OUTPUTSELECT
inc => count.OUTPUTSELECT
inc => count.OUTPUTSELECT
inc => count.OUTPUTSELECT
inc => count.OUTPUTSELECT
inc => always0.IN0
enable => always0.IN1
enable => count.OUTPUTSELECT
enable => count.OUTPUTSELECT
enable => count.OUTPUTSELECT
enable => count.OUTPUTSELECT
enable => count.OUTPUTSELECT
enable => count.OUTPUTSELECT
enable => count.OUTPUTSELECT
enable => count.OUTPUTSELECT
clk => count[0]~reg0.CLK
clk => count[1]~reg0.CLK
clk => count[2]~reg0.CLK
clk => count[3]~reg0.CLK
clk => count[4]~reg0.CLK
clk => count[5]~reg0.CLK
clk => count[6]~reg0.CLK
clk => count[7]~reg0.CLK
slow_edge => count.OUTPUTSELECT
slow_edge => count.OUTPUTSELECT
slow_edge => count.OUTPUTSELECT
slow_edge => count.OUTPUTSELECT
slow_edge => count.OUTPUTSELECT
slow_edge => count.OUTPUTSELECT
slow_edge => count.OUTPUTSELECT
slow_edge => count.OUTPUTSELECT
reset => count.OUTPUTSELECT
reset => count.OUTPUTSELECT
reset => count.OUTPUTSELECT
reset => count.OUTPUTSELECT
reset => count.OUTPUTSELECT
reset => count.OUTPUTSELECT
reset => count.OUTPUTSELECT
reset => count.OUTPUTSELECT
init_val[0] => count.DATAB
init_val[1] => count.DATAB


|lab8|snakes_and_apples:snake|grid_light:horizontal_bars[1].top_row
green_light_on <= green_light_on.DB_MAX_OUTPUT_PORT_TYPE
head <= head.DB_MAX_OUTPUT_PORT_TYPE
game_over_out <= state_n.DB_MAX_OUTPUT_PORT_TYPE
eating => counter256:counter.inc
eating => always0.IN1
game_over_in => state_n.e_off.OUTPUTSELECT
game_over_in => state_n.e_countdown.OUTPUTSELECT
game_over_in => state_n.e_head.OUTPUTSELECT
game_over_in => state_n.OUTPUTSELECT
left => state_n.OUTPUTSELECT
left => state_n.OUTPUTSELECT
left => state_n.OUTPUTSELECT
left => state_n.OUTPUTSELECT
up => state_n.OUTPUTSELECT
up => state_n.OUTPUTSELECT
up => state_n.OUTPUTSELECT
up => state_n.OUTPUTSELECT
right => state_n.OUTPUTSELECT
right => state_n.OUTPUTSELECT
right => state_n.OUTPUTSELECT
right => state_n.OUTPUTSELECT
down => state_n.OUTPUTSELECT
down => state_n.OUTPUTSELECT
down => state_n.OUTPUTSELECT
down => state_n.OUTPUTSELECT
length[0] => counter256:counter.start_val[0]
length[1] => counter256:counter.start_val[1]
length[2] => counter256:counter.start_val[2]
length[3] => counter256:counter.start_val[3]
length[4] => counter256:counter.start_val[4]
length[5] => counter256:counter.start_val[5]
length[6] => counter256:counter.start_val[6]
length[7] => counter256:counter.start_val[7]
dir[0] => Mux0.IN5
dir[0] => Mux1.IN5
dir[0] => Mux2.IN5
dir[0] => Mux3.IN5
dir[1] => Mux0.IN4
dir[1] => Mux1.IN4
dir[1] => Mux2.IN4
dir[1] => Mux3.IN4
clk => counter256:counter.clk
clk => state_r~1.DATAIN
slow_edge => counter256:counter.slow_edge
slow_edge => state_r.OUTPUTSELECT
slow_edge => state_r.OUTPUTSELECT
slow_edge => state_r.OUTPUTSELECT
slow_edge => state_r.OUTPUTSELECT
reset => counter256:counter.reset
reset => state_r.OUTPUTSELECT
reset => state_r.OUTPUTSELECT
reset => state_r.OUTPUTSELECT
reset => state_r.OUTPUTSELECT
light_type[0] => counter256:counter.init_val[0]
light_type[0] => Equal1.IN1
light_type[0] => Equal2.IN1
light_type[1] => counter256:counter.init_val[1]
light_type[1] => Equal1.IN0
light_type[1] => Equal2.IN0


|lab8|snakes_and_apples:snake|grid_light:horizontal_bars[1].top_row|counter256:counter
count[0] <= count[0]~reg0.DB_MAX_OUTPUT_PORT_TYPE
count[1] <= count[1]~reg0.DB_MAX_OUTPUT_PORT_TYPE
count[2] <= count[2]~reg0.DB_MAX_OUTPUT_PORT_TYPE
count[3] <= count[3]~reg0.DB_MAX_OUTPUT_PORT_TYPE
count[4] <= count[4]~reg0.DB_MAX_OUTPUT_PORT_TYPE
count[5] <= count[5]~reg0.DB_MAX_OUTPUT_PORT_TYPE
count[6] <= count[6]~reg0.DB_MAX_OUTPUT_PORT_TYPE
count[7] <= count[7]~reg0.DB_MAX_OUTPUT_PORT_TYPE
start_val[0] => Add0.IN16
start_val[0] => count.DATAB
start_val[1] => Add0.IN15
start_val[1] => count.DATAB
start_val[2] => Add0.IN14
start_val[2] => count.DATAB
start_val[3] => Add0.IN13
start_val[3] => count.DATAB
start_val[4] => Add0.IN12
start_val[4] => count.DATAB
start_val[5] => Add0.IN11
start_val[5] => count.DATAB
start_val[6] => Add0.IN10
start_val[6] => count.DATAB
start_val[7] => Add0.IN9
start_val[7] => count.DATAB
inc => count.OUTPUTSELECT
inc => count.OUTPUTSELECT
inc => count.OUTPUTSELECT
inc => count.OUTPUTSELECT
inc => count.OUTPUTSELECT
inc => count.OUTPUTSELECT
inc => count.OUTPUTSELECT
inc => count.OUTPUTSELECT
inc => always0.IN0
enable => always0.IN1
enable => count.OUTPUTSELECT
enable => count.OUTPUTSELECT
enable => count.OUTPUTSELECT
enable => count.OUTPUTSELECT
enable => count.OUTPUTSELECT
enable => count.OUTPUTSELECT
enable => count.OUTPUTSELECT
enable => count.OUTPUTSELECT
clk => count[0]~reg0.CLK
clk => count[1]~reg0.CLK
clk => count[2]~reg0.CLK
clk => count[3]~reg0.CLK
clk => count[4]~reg0.CLK
clk => count[5]~reg0.CLK
clk => count[6]~reg0.CLK
clk => count[7]~reg0.CLK
slow_edge => count.OUTPUTSELECT
slow_edge => count.OUTPUTSELECT
slow_edge => count.OUTPUTSELECT
slow_edge => count.OUTPUTSELECT
slow_edge => count.OUTPUTSELECT
slow_edge => count.OUTPUTSELECT
slow_edge => count.OUTPUTSELECT
slow_edge => count.OUTPUTSELECT
reset => count.OUTPUTSELECT
reset => count.OUTPUTSELECT
reset => count.OUTPUTSELECT
reset => count.OUTPUTSELECT
reset => count.OUTPUTSELECT
reset => count.OUTPUTSELECT
reset => count.OUTPUTSELECT
reset => count.OUTPUTSELECT
init_val[0] => count.DATAB
init_val[1] => count.DATAB


|lab8|snakes_and_apples:snake|grid_light:horizontal_bars[1].bot_row
green_light_on <= green_light_on.DB_MAX_OUTPUT_PORT_TYPE
head <= head.DB_MAX_OUTPUT_PORT_TYPE
game_over_out <= state_n.DB_MAX_OUTPUT_PORT_TYPE
eating => counter256:counter.inc
eating => always0.IN1
game_over_in => state_n.e_off.OUTPUTSELECT
game_over_in => state_n.e_countdown.OUTPUTSELECT
game_over_in => state_n.e_head.OUTPUTSELECT
game_over_in => state_n.OUTPUTSELECT
left => state_n.OUTPUTSELECT
left => state_n.OUTPUTSELECT
left => state_n.OUTPUTSELECT
left => state_n.OUTPUTSELECT
up => state_n.OUTPUTSELECT
up => state_n.OUTPUTSELECT
up => state_n.OUTPUTSELECT
up => state_n.OUTPUTSELECT
right => state_n.OUTPUTSELECT
right => state_n.OUTPUTSELECT
right => state_n.OUTPUTSELECT
right => state_n.OUTPUTSELECT
down => state_n.OUTPUTSELECT
down => state_n.OUTPUTSELECT
down => state_n.OUTPUTSELECT
down => state_n.OUTPUTSELECT
length[0] => counter256:counter.start_val[0]
length[1] => counter256:counter.start_val[1]
length[2] => counter256:counter.start_val[2]
length[3] => counter256:counter.start_val[3]
length[4] => counter256:counter.start_val[4]
length[5] => counter256:counter.start_val[5]
length[6] => counter256:counter.start_val[6]
length[7] => counter256:counter.start_val[7]
dir[0] => Mux0.IN5
dir[0] => Mux1.IN5
dir[0] => Mux2.IN5
dir[0] => Mux3.IN5
dir[1] => Mux0.IN4
dir[1] => Mux1.IN4
dir[1] => Mux2.IN4
dir[1] => Mux3.IN4
clk => counter256:counter.clk
clk => state_r~1.DATAIN
slow_edge => counter256:counter.slow_edge
slow_edge => state_r.OUTPUTSELECT
slow_edge => state_r.OUTPUTSELECT
slow_edge => state_r.OUTPUTSELECT
slow_edge => state_r.OUTPUTSELECT
reset => counter256:counter.reset
reset => state_r.OUTPUTSELECT
reset => state_r.OUTPUTSELECT
reset => state_r.OUTPUTSELECT
reset => state_r.OUTPUTSELECT
light_type[0] => counter256:counter.init_val[0]
light_type[0] => Equal1.IN1
light_type[0] => Equal2.IN1
light_type[1] => counter256:counter.init_val[1]
light_type[1] => Equal1.IN0
light_type[1] => Equal2.IN0


|lab8|snakes_and_apples:snake|grid_light:horizontal_bars[1].bot_row|counter256:counter
count[0] <= count[0]~reg0.DB_MAX_OUTPUT_PORT_TYPE
count[1] <= count[1]~reg0.DB_MAX_OUTPUT_PORT_TYPE
count[2] <= count[2]~reg0.DB_MAX_OUTPUT_PORT_TYPE
count[3] <= count[3]~reg0.DB_MAX_OUTPUT_PORT_TYPE
count[4] <= count[4]~reg0.DB_MAX_OUTPUT_PORT_TYPE
count[5] <= count[5]~reg0.DB_MAX_OUTPUT_PORT_TYPE
count[6] <= count[6]~reg0.DB_MAX_OUTPUT_PORT_TYPE
count[7] <= count[7]~reg0.DB_MAX_OUTPUT_PORT_TYPE
start_val[0] => Add0.IN16
start_val[0] => count.DATAB
start_val[1] => Add0.IN15
start_val[1] => count.DATAB
start_val[2] => Add0.IN14
start_val[2] => count.DATAB
start_val[3] => Add0.IN13
start_val[3] => count.DATAB
start_val[4] => Add0.IN12
start_val[4] => count.DATAB
start_val[5] => Add0.IN11
start_val[5] => count.DATAB
start_val[6] => Add0.IN10
start_val[6] => count.DATAB
start_val[7] => Add0.IN9
start_val[7] => count.DATAB
inc => count.OUTPUTSELECT
inc => count.OUTPUTSELECT
inc => count.OUTPUTSELECT
inc => count.OUTPUTSELECT
inc => count.OUTPUTSELECT
inc => count.OUTPUTSELECT
inc => count.OUTPUTSELECT
inc => count.OUTPUTSELECT
inc => always0.IN0
enable => always0.IN1
enable => count.OUTPUTSELECT
enable => count.OUTPUTSELECT
enable => count.OUTPUTSELECT
enable => count.OUTPUTSELECT
enable => count.OUTPUTSELECT
enable => count.OUTPUTSELECT
enable => count.OUTPUTSELECT
enable => count.OUTPUTSELECT
clk => count[0]~reg0.CLK
clk => count[1]~reg0.CLK
clk => count[2]~reg0.CLK
clk => count[3]~reg0.CLK
clk => count[4]~reg0.CLK
clk => count[5]~reg0.CLK
clk => count[6]~reg0.CLK
clk => count[7]~reg0.CLK
slow_edge => count.OUTPUTSELECT
slow_edge => count.OUTPUTSELECT
slow_edge => count.OUTPUTSELECT
slow_edge => count.OUTPUTSELECT
slow_edge => count.OUTPUTSELECT
slow_edge => count.OUTPUTSELECT
slow_edge => count.OUTPUTSELECT
slow_edge => count.OUTPUTSELECT
reset => count.OUTPUTSELECT
reset => count.OUTPUTSELECT
reset => count.OUTPUTSELECT
reset => count.OUTPUTSELECT
reset => count.OUTPUTSELECT
reset => count.OUTPUTSELECT
reset => count.OUTPUTSELECT
reset => count.OUTPUTSELECT
init_val[0] => count.DATAB
init_val[1] => count.DATAB


|lab8|snakes_and_apples:snake|grid_light:horizontal_bars[2].top_row
green_light_on <= green_light_on.DB_MAX_OUTPUT_PORT_TYPE
head <= head.DB_MAX_OUTPUT_PORT_TYPE
game_over_out <= state_n.DB_MAX_OUTPUT_PORT_TYPE
eating => counter256:counter.inc
eating => always0.IN1
game_over_in => state_n.e_off.OUTPUTSELECT
game_over_in => state_n.e_countdown.OUTPUTSELECT
game_over_in => state_n.e_head.OUTPUTSELECT
game_over_in => state_n.OUTPUTSELECT
left => state_n.OUTPUTSELECT
left => state_n.OUTPUTSELECT
left => state_n.OUTPUTSELECT
left => state_n.OUTPUTSELECT
up => state_n.OUTPUTSELECT
up => state_n.OUTPUTSELECT
up => state_n.OUTPUTSELECT
up => state_n.OUTPUTSELECT
right => state_n.OUTPUTSELECT
right => state_n.OUTPUTSELECT
right => state_n.OUTPUTSELECT
right => state_n.OUTPUTSELECT
down => state_n.OUTPUTSELECT
down => state_n.OUTPUTSELECT
down => state_n.OUTPUTSELECT
down => state_n.OUTPUTSELECT
length[0] => counter256:counter.start_val[0]
length[1] => counter256:counter.start_val[1]
length[2] => counter256:counter.start_val[2]
length[3] => counter256:counter.start_val[3]
length[4] => counter256:counter.start_val[4]
length[5] => counter256:counter.start_val[5]
length[6] => counter256:counter.start_val[6]
length[7] => counter256:counter.start_val[7]
dir[0] => Mux0.IN5
dir[0] => Mux1.IN5
dir[0] => Mux2.IN5
dir[0] => Mux3.IN5
dir[1] => Mux0.IN4
dir[1] => Mux1.IN4
dir[1] => Mux2.IN4
dir[1] => Mux3.IN4
clk => counter256:counter.clk
clk => state_r~1.DATAIN
slow_edge => counter256:counter.slow_edge
slow_edge => state_r.OUTPUTSELECT
slow_edge => state_r.OUTPUTSELECT
slow_edge => state_r.OUTPUTSELECT
slow_edge => state_r.OUTPUTSELECT
reset => counter256:counter.reset
reset => state_r.OUTPUTSELECT
reset => state_r.OUTPUTSELECT
reset => state_r.OUTPUTSELECT
reset => state_r.OUTPUTSELECT
light_type[0] => counter256:counter.init_val[0]
light_type[0] => Equal1.IN1
light_type[0] => Equal2.IN1
light_type[1] => counter256:counter.init_val[1]
light_type[1] => Equal1.IN0
light_type[1] => Equal2.IN0


|lab8|snakes_and_apples:snake|grid_light:horizontal_bars[2].top_row|counter256:counter
count[0] <= count[0]~reg0.DB_MAX_OUTPUT_PORT_TYPE
count[1] <= count[1]~reg0.DB_MAX_OUTPUT_PORT_TYPE
count[2] <= count[2]~reg0.DB_MAX_OUTPUT_PORT_TYPE
count[3] <= count[3]~reg0.DB_MAX_OUTPUT_PORT_TYPE
count[4] <= count[4]~reg0.DB_MAX_OUTPUT_PORT_TYPE
count[5] <= count[5]~reg0.DB_MAX_OUTPUT_PORT_TYPE
count[6] <= count[6]~reg0.DB_MAX_OUTPUT_PORT_TYPE
count[7] <= count[7]~reg0.DB_MAX_OUTPUT_PORT_TYPE
start_val[0] => Add0.IN16
start_val[0] => count.DATAB
start_val[1] => Add0.IN15
start_val[1] => count.DATAB
start_val[2] => Add0.IN14
start_val[2] => count.DATAB
start_val[3] => Add0.IN13
start_val[3] => count.DATAB
start_val[4] => Add0.IN12
start_val[4] => count.DATAB
start_val[5] => Add0.IN11
start_val[5] => count.DATAB
start_val[6] => Add0.IN10
start_val[6] => count.DATAB
start_val[7] => Add0.IN9
start_val[7] => count.DATAB
inc => count.OUTPUTSELECT
inc => count.OUTPUTSELECT
inc => count.OUTPUTSELECT
inc => count.OUTPUTSELECT
inc => count.OUTPUTSELECT
inc => count.OUTPUTSELECT
inc => count.OUTPUTSELECT
inc => count.OUTPUTSELECT
inc => always0.IN0
enable => always0.IN1
enable => count.OUTPUTSELECT
enable => count.OUTPUTSELECT
enable => count.OUTPUTSELECT
enable => count.OUTPUTSELECT
enable => count.OUTPUTSELECT
enable => count.OUTPUTSELECT
enable => count.OUTPUTSELECT
enable => count.OUTPUTSELECT
clk => count[0]~reg0.CLK
clk => count[1]~reg0.CLK
clk => count[2]~reg0.CLK
clk => count[3]~reg0.CLK
clk => count[4]~reg0.CLK
clk => count[5]~reg0.CLK
clk => count[6]~reg0.CLK
clk => count[7]~reg0.CLK
slow_edge => count.OUTPUTSELECT
slow_edge => count.OUTPUTSELECT
slow_edge => count.OUTPUTSELECT
slow_edge => count.OUTPUTSELECT
slow_edge => count.OUTPUTSELECT
slow_edge => count.OUTPUTSELECT
slow_edge => count.OUTPUTSELECT
slow_edge => count.OUTPUTSELECT
reset => count.OUTPUTSELECT
reset => count.OUTPUTSELECT
reset => count.OUTPUTSELECT
reset => count.OUTPUTSELECT
reset => count.OUTPUTSELECT
reset => count.OUTPUTSELECT
reset => count.OUTPUTSELECT
reset => count.OUTPUTSELECT
init_val[0] => count.DATAB
init_val[1] => count.DATAB


|lab8|snakes_and_apples:snake|grid_light:horizontal_bars[2].bot_row
green_light_on <= green_light_on.DB_MAX_OUTPUT_PORT_TYPE
head <= head.DB_MAX_OUTPUT_PORT_TYPE
game_over_out <= state_n.DB_MAX_OUTPUT_PORT_TYPE
eating => counter256:counter.inc
eating => always0.IN1
game_over_in => state_n.e_off.OUTPUTSELECT
game_over_in => state_n.e_countdown.OUTPUTSELECT
game_over_in => state_n.e_head.OUTPUTSELECT
game_over_in => state_n.OUTPUTSELECT
left => state_n.OUTPUTSELECT
left => state_n.OUTPUTSELECT
left => state_n.OUTPUTSELECT
left => state_n.OUTPUTSELECT
up => state_n.OUTPUTSELECT
up => state_n.OUTPUTSELECT
up => state_n.OUTPUTSELECT
up => state_n.OUTPUTSELECT
right => state_n.OUTPUTSELECT
right => state_n.OUTPUTSELECT
right => state_n.OUTPUTSELECT
right => state_n.OUTPUTSELECT
down => state_n.OUTPUTSELECT
down => state_n.OUTPUTSELECT
down => state_n.OUTPUTSELECT
down => state_n.OUTPUTSELECT
length[0] => counter256:counter.start_val[0]
length[1] => counter256:counter.start_val[1]
length[2] => counter256:counter.start_val[2]
length[3] => counter256:counter.start_val[3]
length[4] => counter256:counter.start_val[4]
length[5] => counter256:counter.start_val[5]
length[6] => counter256:counter.start_val[6]
length[7] => counter256:counter.start_val[7]
dir[0] => Mux0.IN5
dir[0] => Mux1.IN5
dir[0] => Mux2.IN5
dir[0] => Mux3.IN5
dir[1] => Mux0.IN4
dir[1] => Mux1.IN4
dir[1] => Mux2.IN4
dir[1] => Mux3.IN4
clk => counter256:counter.clk
clk => state_r~1.DATAIN
slow_edge => counter256:counter.slow_edge
slow_edge => state_r.OUTPUTSELECT
slow_edge => state_r.OUTPUTSELECT
slow_edge => state_r.OUTPUTSELECT
slow_edge => state_r.OUTPUTSELECT
reset => counter256:counter.reset
reset => state_r.OUTPUTSELECT
reset => state_r.OUTPUTSELECT
reset => state_r.OUTPUTSELECT
reset => state_r.OUTPUTSELECT
light_type[0] => counter256:counter.init_val[0]
light_type[0] => Equal1.IN1
light_type[0] => Equal2.IN1
light_type[1] => counter256:counter.init_val[1]
light_type[1] => Equal1.IN0
light_type[1] => Equal2.IN0


|lab8|snakes_and_apples:snake|grid_light:horizontal_bars[2].bot_row|counter256:counter
count[0] <= count[0]~reg0.DB_MAX_OUTPUT_PORT_TYPE
count[1] <= count[1]~reg0.DB_MAX_OUTPUT_PORT_TYPE
count[2] <= count[2]~reg0.DB_MAX_OUTPUT_PORT_TYPE
count[3] <= count[3]~reg0.DB_MAX_OUTPUT_PORT_TYPE
count[4] <= count[4]~reg0.DB_MAX_OUTPUT_PORT_TYPE
count[5] <= count[5]~reg0.DB_MAX_OUTPUT_PORT_TYPE
count[6] <= count[6]~reg0.DB_MAX_OUTPUT_PORT_TYPE
count[7] <= count[7]~reg0.DB_MAX_OUTPUT_PORT_TYPE
start_val[0] => Add0.IN16
start_val[0] => count.DATAB
start_val[1] => Add0.IN15
start_val[1] => count.DATAB
start_val[2] => Add0.IN14
start_val[2] => count.DATAB
start_val[3] => Add0.IN13
start_val[3] => count.DATAB
start_val[4] => Add0.IN12
start_val[4] => count.DATAB
start_val[5] => Add0.IN11
start_val[5] => count.DATAB
start_val[6] => Add0.IN10
start_val[6] => count.DATAB
start_val[7] => Add0.IN9
start_val[7] => count.DATAB
inc => count.OUTPUTSELECT
inc => count.OUTPUTSELECT
inc => count.OUTPUTSELECT
inc => count.OUTPUTSELECT
inc => count.OUTPUTSELECT
inc => count.OUTPUTSELECT
inc => count.OUTPUTSELECT
inc => count.OUTPUTSELECT
inc => always0.IN0
enable => always0.IN1
enable => count.OUTPUTSELECT
enable => count.OUTPUTSELECT
enable => count.OUTPUTSELECT
enable => count.OUTPUTSELECT
enable => count.OUTPUTSELECT
enable => count.OUTPUTSELECT
enable => count.OUTPUTSELECT
enable => count.OUTPUTSELECT
clk => count[0]~reg0.CLK
clk => count[1]~reg0.CLK
clk => count[2]~reg0.CLK
clk => count[3]~reg0.CLK
clk => count[4]~reg0.CLK
clk => count[5]~reg0.CLK
clk => count[6]~reg0.CLK
clk => count[7]~reg0.CLK
slow_edge => count.OUTPUTSELECT
slow_edge => count.OUTPUTSELECT
slow_edge => count.OUTPUTSELECT
slow_edge => count.OUTPUTSELECT
slow_edge => count.OUTPUTSELECT
slow_edge => count.OUTPUTSELECT
slow_edge => count.OUTPUTSELECT
slow_edge => count.OUTPUTSELECT
reset => count.OUTPUTSELECT
reset => count.OUTPUTSELECT
reset => count.OUTPUTSELECT
reset => count.OUTPUTSELECT
reset => count.OUTPUTSELECT
reset => count.OUTPUTSELECT
reset => count.OUTPUTSELECT
reset => count.OUTPUTSELECT
init_val[0] => count.DATAB
init_val[1] => count.DATAB


|lab8|snakes_and_apples:snake|grid_light:horizontal_bars[3].top_row
green_light_on <= green_light_on.DB_MAX_OUTPUT_PORT_TYPE
head <= head.DB_MAX_OUTPUT_PORT_TYPE
game_over_out <= state_n.DB_MAX_OUTPUT_PORT_TYPE
eating => counter256:counter.inc
eating => always0.IN1
game_over_in => state_n.e_off.OUTPUTSELECT
game_over_in => state_n.e_countdown.OUTPUTSELECT
game_over_in => state_n.e_head.OUTPUTSELECT
game_over_in => state_n.OUTPUTSELECT
left => state_n.OUTPUTSELECT
left => state_n.OUTPUTSELECT
left => state_n.OUTPUTSELECT
left => state_n.OUTPUTSELECT
up => state_n.OUTPUTSELECT
up => state_n.OUTPUTSELECT
up => state_n.OUTPUTSELECT
up => state_n.OUTPUTSELECT
right => state_n.OUTPUTSELECT
right => state_n.OUTPUTSELECT
right => state_n.OUTPUTSELECT
right => state_n.OUTPUTSELECT
down => state_n.OUTPUTSELECT
down => state_n.OUTPUTSELECT
down => state_n.OUTPUTSELECT
down => state_n.OUTPUTSELECT
length[0] => counter256:counter.start_val[0]
length[1] => counter256:counter.start_val[1]
length[2] => counter256:counter.start_val[2]
length[3] => counter256:counter.start_val[3]
length[4] => counter256:counter.start_val[4]
length[5] => counter256:counter.start_val[5]
length[6] => counter256:counter.start_val[6]
length[7] => counter256:counter.start_val[7]
dir[0] => Mux0.IN5
dir[0] => Mux1.IN5
dir[0] => Mux2.IN5
dir[0] => Mux3.IN5
dir[1] => Mux0.IN4
dir[1] => Mux1.IN4
dir[1] => Mux2.IN4
dir[1] => Mux3.IN4
clk => counter256:counter.clk
clk => state_r~1.DATAIN
slow_edge => counter256:counter.slow_edge
slow_edge => state_r.OUTPUTSELECT
slow_edge => state_r.OUTPUTSELECT
slow_edge => state_r.OUTPUTSELECT
slow_edge => state_r.OUTPUTSELECT
reset => counter256:counter.reset
reset => state_r.OUTPUTSELECT
reset => state_r.OUTPUTSELECT
reset => state_r.OUTPUTSELECT
reset => state_r.OUTPUTSELECT
light_type[0] => counter256:counter.init_val[0]
light_type[0] => Equal1.IN1
light_type[0] => Equal2.IN1
light_type[1] => counter256:counter.init_val[1]
light_type[1] => Equal1.IN0
light_type[1] => Equal2.IN0


|lab8|snakes_and_apples:snake|grid_light:horizontal_bars[3].top_row|counter256:counter
count[0] <= count[0]~reg0.DB_MAX_OUTPUT_PORT_TYPE
count[1] <= count[1]~reg0.DB_MAX_OUTPUT_PORT_TYPE
count[2] <= count[2]~reg0.DB_MAX_OUTPUT_PORT_TYPE
count[3] <= count[3]~reg0.DB_MAX_OUTPUT_PORT_TYPE
count[4] <= count[4]~reg0.DB_MAX_OUTPUT_PORT_TYPE
count[5] <= count[5]~reg0.DB_MAX_OUTPUT_PORT_TYPE
count[6] <= count[6]~reg0.DB_MAX_OUTPUT_PORT_TYPE
count[7] <= count[7]~reg0.DB_MAX_OUTPUT_PORT_TYPE
start_val[0] => Add0.IN16
start_val[0] => count.DATAB
start_val[1] => Add0.IN15
start_val[1] => count.DATAB
start_val[2] => Add0.IN14
start_val[2] => count.DATAB
start_val[3] => Add0.IN13
start_val[3] => count.DATAB
start_val[4] => Add0.IN12
start_val[4] => count.DATAB
start_val[5] => Add0.IN11
start_val[5] => count.DATAB
start_val[6] => Add0.IN10
start_val[6] => count.DATAB
start_val[7] => Add0.IN9
start_val[7] => count.DATAB
inc => count.OUTPUTSELECT
inc => count.OUTPUTSELECT
inc => count.OUTPUTSELECT
inc => count.OUTPUTSELECT
inc => count.OUTPUTSELECT
inc => count.OUTPUTSELECT
inc => count.OUTPUTSELECT
inc => count.OUTPUTSELECT
inc => always0.IN0
enable => always0.IN1
enable => count.OUTPUTSELECT
enable => count.OUTPUTSELECT
enable => count.OUTPUTSELECT
enable => count.OUTPUTSELECT
enable => count.OUTPUTSELECT
enable => count.OUTPUTSELECT
enable => count.OUTPUTSELECT
enable => count.OUTPUTSELECT
clk => count[0]~reg0.CLK
clk => count[1]~reg0.CLK
clk => count[2]~reg0.CLK
clk => count[3]~reg0.CLK
clk => count[4]~reg0.CLK
clk => count[5]~reg0.CLK
clk => count[6]~reg0.CLK
clk => count[7]~reg0.CLK
slow_edge => count.OUTPUTSELECT
slow_edge => count.OUTPUTSELECT
slow_edge => count.OUTPUTSELECT
slow_edge => count.OUTPUTSELECT
slow_edge => count.OUTPUTSELECT
slow_edge => count.OUTPUTSELECT
slow_edge => count.OUTPUTSELECT
slow_edge => count.OUTPUTSELECT
reset => count.OUTPUTSELECT
reset => count.OUTPUTSELECT
reset => count.OUTPUTSELECT
reset => count.OUTPUTSELECT
reset => count.OUTPUTSELECT
reset => count.OUTPUTSELECT
reset => count.OUTPUTSELECT
reset => count.OUTPUTSELECT
init_val[0] => count.DATAB
init_val[1] => count.DATAB


|lab8|snakes_and_apples:snake|grid_light:horizontal_bars[3].bot_row
green_light_on <= green_light_on.DB_MAX_OUTPUT_PORT_TYPE
head <= head.DB_MAX_OUTPUT_PORT_TYPE
game_over_out <= state_n.DB_MAX_OUTPUT_PORT_TYPE
eating => counter256:counter.inc
eating => always0.IN1
game_over_in => state_n.e_off.OUTPUTSELECT
game_over_in => state_n.e_countdown.OUTPUTSELECT
game_over_in => state_n.e_head.OUTPUTSELECT
game_over_in => state_n.OUTPUTSELECT
left => state_n.OUTPUTSELECT
left => state_n.OUTPUTSELECT
left => state_n.OUTPUTSELECT
left => state_n.OUTPUTSELECT
up => state_n.OUTPUTSELECT
up => state_n.OUTPUTSELECT
up => state_n.OUTPUTSELECT
up => state_n.OUTPUTSELECT
right => state_n.OUTPUTSELECT
right => state_n.OUTPUTSELECT
right => state_n.OUTPUTSELECT
right => state_n.OUTPUTSELECT
down => state_n.OUTPUTSELECT
down => state_n.OUTPUTSELECT
down => state_n.OUTPUTSELECT
down => state_n.OUTPUTSELECT
length[0] => counter256:counter.start_val[0]
length[1] => counter256:counter.start_val[1]
length[2] => counter256:counter.start_val[2]
length[3] => counter256:counter.start_val[3]
length[4] => counter256:counter.start_val[4]
length[5] => counter256:counter.start_val[5]
length[6] => counter256:counter.start_val[6]
length[7] => counter256:counter.start_val[7]
dir[0] => Mux0.IN5
dir[0] => Mux1.IN5
dir[0] => Mux2.IN5
dir[0] => Mux3.IN5
dir[1] => Mux0.IN4
dir[1] => Mux1.IN4
dir[1] => Mux2.IN4
dir[1] => Mux3.IN4
clk => counter256:counter.clk
clk => state_r~1.DATAIN
slow_edge => counter256:counter.slow_edge
slow_edge => state_r.OUTPUTSELECT
slow_edge => state_r.OUTPUTSELECT
slow_edge => state_r.OUTPUTSELECT
slow_edge => state_r.OUTPUTSELECT
reset => counter256:counter.reset
reset => state_r.OUTPUTSELECT
reset => state_r.OUTPUTSELECT
reset => state_r.OUTPUTSELECT
reset => state_r.OUTPUTSELECT
light_type[0] => counter256:counter.init_val[0]
light_type[0] => Equal1.IN1
light_type[0] => Equal2.IN1
light_type[1] => counter256:counter.init_val[1]
light_type[1] => Equal1.IN0
light_type[1] => Equal2.IN0


|lab8|snakes_and_apples:snake|grid_light:horizontal_bars[3].bot_row|counter256:counter
count[0] <= count[0]~reg0.DB_MAX_OUTPUT_PORT_TYPE
count[1] <= count[1]~reg0.DB_MAX_OUTPUT_PORT_TYPE
count[2] <= count[2]~reg0.DB_MAX_OUTPUT_PORT_TYPE
count[3] <= count[3]~reg0.DB_MAX_OUTPUT_PORT_TYPE
count[4] <= count[4]~reg0.DB_MAX_OUTPUT_PORT_TYPE
count[5] <= count[5]~reg0.DB_MAX_OUTPUT_PORT_TYPE
count[6] <= count[6]~reg0.DB_MAX_OUTPUT_PORT_TYPE
count[7] <= count[7]~reg0.DB_MAX_OUTPUT_PORT_TYPE
start_val[0] => Add0.IN16
start_val[0] => count.DATAB
start_val[1] => Add0.IN15
start_val[1] => count.DATAB
start_val[2] => Add0.IN14
start_val[2] => count.DATAB
start_val[3] => Add0.IN13
start_val[3] => count.DATAB
start_val[4] => Add0.IN12
start_val[4] => count.DATAB
start_val[5] => Add0.IN11
start_val[5] => count.DATAB
start_val[6] => Add0.IN10
start_val[6] => count.DATAB
start_val[7] => Add0.IN9
start_val[7] => count.DATAB
inc => count.OUTPUTSELECT
inc => count.OUTPUTSELECT
inc => count.OUTPUTSELECT
inc => count.OUTPUTSELECT
inc => count.OUTPUTSELECT
inc => count.OUTPUTSELECT
inc => count.OUTPUTSELECT
inc => count.OUTPUTSELECT
inc => always0.IN0
enable => always0.IN1
enable => count.OUTPUTSELECT
enable => count.OUTPUTSELECT
enable => count.OUTPUTSELECT
enable => count.OUTPUTSELECT
enable => count.OUTPUTSELECT
enable => count.OUTPUTSELECT
enable => count.OUTPUTSELECT
enable => count.OUTPUTSELECT
clk => count[0]~reg0.CLK
clk => count[1]~reg0.CLK
clk => count[2]~reg0.CLK
clk => count[3]~reg0.CLK
clk => count[4]~reg0.CLK
clk => count[5]~reg0.CLK
clk => count[6]~reg0.CLK
clk => count[7]~reg0.CLK
slow_edge => count.OUTPUTSELECT
slow_edge => count.OUTPUTSELECT
slow_edge => count.OUTPUTSELECT
slow_edge => count.OUTPUTSELECT
slow_edge => count.OUTPUTSELECT
slow_edge => count.OUTPUTSELECT
slow_edge => count.OUTPUTSELECT
slow_edge => count.OUTPUTSELECT
reset => count.OUTPUTSELECT
reset => count.OUTPUTSELECT
reset => count.OUTPUTSELECT
reset => count.OUTPUTSELECT
reset => count.OUTPUTSELECT
reset => count.OUTPUTSELECT
reset => count.OUTPUTSELECT
reset => count.OUTPUTSELECT
init_val[0] => count.DATAB
init_val[1] => count.DATAB


|lab8|snakes_and_apples:snake|grid_light:horizontal_bars[4].top_row
green_light_on <= green_light_on.DB_MAX_OUTPUT_PORT_TYPE
head <= head.DB_MAX_OUTPUT_PORT_TYPE
game_over_out <= state_n.DB_MAX_OUTPUT_PORT_TYPE
eating => counter256:counter.inc
eating => always0.IN1
game_over_in => state_n.e_off.OUTPUTSELECT
game_over_in => state_n.e_countdown.OUTPUTSELECT
game_over_in => state_n.e_head.OUTPUTSELECT
game_over_in => state_n.OUTPUTSELECT
left => state_n.OUTPUTSELECT
left => state_n.OUTPUTSELECT
left => state_n.OUTPUTSELECT
left => state_n.OUTPUTSELECT
up => state_n.OUTPUTSELECT
up => state_n.OUTPUTSELECT
up => state_n.OUTPUTSELECT
up => state_n.OUTPUTSELECT
right => state_n.OUTPUTSELECT
right => state_n.OUTPUTSELECT
right => state_n.OUTPUTSELECT
right => state_n.OUTPUTSELECT
down => state_n.OUTPUTSELECT
down => state_n.OUTPUTSELECT
down => state_n.OUTPUTSELECT
down => state_n.OUTPUTSELECT
length[0] => counter256:counter.start_val[0]
length[1] => counter256:counter.start_val[1]
length[2] => counter256:counter.start_val[2]
length[3] => counter256:counter.start_val[3]
length[4] => counter256:counter.start_val[4]
length[5] => counter256:counter.start_val[5]
length[6] => counter256:counter.start_val[6]
length[7] => counter256:counter.start_val[7]
dir[0] => Mux0.IN5
dir[0] => Mux1.IN5
dir[0] => Mux2.IN5
dir[0] => Mux3.IN5
dir[1] => Mux0.IN4
dir[1] => Mux1.IN4
dir[1] => Mux2.IN4
dir[1] => Mux3.IN4
clk => counter256:counter.clk
clk => state_r~1.DATAIN
slow_edge => counter256:counter.slow_edge
slow_edge => state_r.OUTPUTSELECT
slow_edge => state_r.OUTPUTSELECT
slow_edge => state_r.OUTPUTSELECT
slow_edge => state_r.OUTPUTSELECT
reset => counter256:counter.reset
reset => state_r.OUTPUTSELECT
reset => state_r.OUTPUTSELECT
reset => state_r.OUTPUTSELECT
reset => state_r.OUTPUTSELECT
light_type[0] => counter256:counter.init_val[0]
light_type[0] => Equal1.IN1
light_type[0] => Equal2.IN1
light_type[1] => counter256:counter.init_val[1]
light_type[1] => Equal1.IN0
light_type[1] => Equal2.IN0


|lab8|snakes_and_apples:snake|grid_light:horizontal_bars[4].top_row|counter256:counter
count[0] <= count[0]~reg0.DB_MAX_OUTPUT_PORT_TYPE
count[1] <= count[1]~reg0.DB_MAX_OUTPUT_PORT_TYPE
count[2] <= count[2]~reg0.DB_MAX_OUTPUT_PORT_TYPE
count[3] <= count[3]~reg0.DB_MAX_OUTPUT_PORT_TYPE
count[4] <= count[4]~reg0.DB_MAX_OUTPUT_PORT_TYPE
count[5] <= count[5]~reg0.DB_MAX_OUTPUT_PORT_TYPE
count[6] <= count[6]~reg0.DB_MAX_OUTPUT_PORT_TYPE
count[7] <= count[7]~reg0.DB_MAX_OUTPUT_PORT_TYPE
start_val[0] => Add0.IN16
start_val[0] => count.DATAB
start_val[1] => Add0.IN15
start_val[1] => count.DATAB
start_val[2] => Add0.IN14
start_val[2] => count.DATAB
start_val[3] => Add0.IN13
start_val[3] => count.DATAB
start_val[4] => Add0.IN12
start_val[4] => count.DATAB
start_val[5] => Add0.IN11
start_val[5] => count.DATAB
start_val[6] => Add0.IN10
start_val[6] => count.DATAB
start_val[7] => Add0.IN9
start_val[7] => count.DATAB
inc => count.OUTPUTSELECT
inc => count.OUTPUTSELECT
inc => count.OUTPUTSELECT
inc => count.OUTPUTSELECT
inc => count.OUTPUTSELECT
inc => count.OUTPUTSELECT
inc => count.OUTPUTSELECT
inc => count.OUTPUTSELECT
inc => always0.IN0
enable => always0.IN1
enable => count.OUTPUTSELECT
enable => count.OUTPUTSELECT
enable => count.OUTPUTSELECT
enable => count.OUTPUTSELECT
enable => count.OUTPUTSELECT
enable => count.OUTPUTSELECT
enable => count.OUTPUTSELECT
enable => count.OUTPUTSELECT
clk => count[0]~reg0.CLK
clk => count[1]~reg0.CLK
clk => count[2]~reg0.CLK
clk => count[3]~reg0.CLK
clk => count[4]~reg0.CLK
clk => count[5]~reg0.CLK
clk => count[6]~reg0.CLK
clk => count[7]~reg0.CLK
slow_edge => count.OUTPUTSELECT
slow_edge => count.OUTPUTSELECT
slow_edge => count.OUTPUTSELECT
slow_edge => count.OUTPUTSELECT
slow_edge => count.OUTPUTSELECT
slow_edge => count.OUTPUTSELECT
slow_edge => count.OUTPUTSELECT
slow_edge => count.OUTPUTSELECT
reset => count.OUTPUTSELECT
reset => count.OUTPUTSELECT
reset => count.OUTPUTSELECT
reset => count.OUTPUTSELECT
reset => count.OUTPUTSELECT
reset => count.OUTPUTSELECT
reset => count.OUTPUTSELECT
reset => count.OUTPUTSELECT
init_val[0] => count.DATAB
init_val[1] => count.DATAB


|lab8|snakes_and_apples:snake|grid_light:horizontal_bars[4].bot_row
green_light_on <= green_light_on.DB_MAX_OUTPUT_PORT_TYPE
head <= head.DB_MAX_OUTPUT_PORT_TYPE
game_over_out <= state_n.DB_MAX_OUTPUT_PORT_TYPE
eating => counter256:counter.inc
eating => always0.IN1
game_over_in => state_n.e_off.OUTPUTSELECT
game_over_in => state_n.e_countdown.OUTPUTSELECT
game_over_in => state_n.e_head.OUTPUTSELECT
game_over_in => state_n.OUTPUTSELECT
left => state_n.OUTPUTSELECT
left => state_n.OUTPUTSELECT
left => state_n.OUTPUTSELECT
left => state_n.OUTPUTSELECT
up => state_n.OUTPUTSELECT
up => state_n.OUTPUTSELECT
up => state_n.OUTPUTSELECT
up => state_n.OUTPUTSELECT
right => state_n.OUTPUTSELECT
right => state_n.OUTPUTSELECT
right => state_n.OUTPUTSELECT
right => state_n.OUTPUTSELECT
down => state_n.OUTPUTSELECT
down => state_n.OUTPUTSELECT
down => state_n.OUTPUTSELECT
down => state_n.OUTPUTSELECT
length[0] => counter256:counter.start_val[0]
length[1] => counter256:counter.start_val[1]
length[2] => counter256:counter.start_val[2]
length[3] => counter256:counter.start_val[3]
length[4] => counter256:counter.start_val[4]
length[5] => counter256:counter.start_val[5]
length[6] => counter256:counter.start_val[6]
length[7] => counter256:counter.start_val[7]
dir[0] => Mux0.IN5
dir[0] => Mux1.IN5
dir[0] => Mux2.IN5
dir[0] => Mux3.IN5
dir[1] => Mux0.IN4
dir[1] => Mux1.IN4
dir[1] => Mux2.IN4
dir[1] => Mux3.IN4
clk => counter256:counter.clk
clk => state_r~1.DATAIN
slow_edge => counter256:counter.slow_edge
slow_edge => state_r.OUTPUTSELECT
slow_edge => state_r.OUTPUTSELECT
slow_edge => state_r.OUTPUTSELECT
slow_edge => state_r.OUTPUTSELECT
reset => counter256:counter.reset
reset => state_r.OUTPUTSELECT
reset => state_r.OUTPUTSELECT
reset => state_r.OUTPUTSELECT
reset => state_r.OUTPUTSELECT
light_type[0] => counter256:counter.init_val[0]
light_type[0] => Equal1.IN1
light_type[0] => Equal2.IN1
light_type[1] => counter256:counter.init_val[1]
light_type[1] => Equal1.IN0
light_type[1] => Equal2.IN0


|lab8|snakes_and_apples:snake|grid_light:horizontal_bars[4].bot_row|counter256:counter
count[0] <= count[0]~reg0.DB_MAX_OUTPUT_PORT_TYPE
count[1] <= count[1]~reg0.DB_MAX_OUTPUT_PORT_TYPE
count[2] <= count[2]~reg0.DB_MAX_OUTPUT_PORT_TYPE
count[3] <= count[3]~reg0.DB_MAX_OUTPUT_PORT_TYPE
count[4] <= count[4]~reg0.DB_MAX_OUTPUT_PORT_TYPE
count[5] <= count[5]~reg0.DB_MAX_OUTPUT_PORT_TYPE
count[6] <= count[6]~reg0.DB_MAX_OUTPUT_PORT_TYPE
count[7] <= count[7]~reg0.DB_MAX_OUTPUT_PORT_TYPE
start_val[0] => Add0.IN16
start_val[0] => count.DATAB
start_val[1] => Add0.IN15
start_val[1] => count.DATAB
start_val[2] => Add0.IN14
start_val[2] => count.DATAB
start_val[3] => Add0.IN13
start_val[3] => count.DATAB
start_val[4] => Add0.IN12
start_val[4] => count.DATAB
start_val[5] => Add0.IN11
start_val[5] => count.DATAB
start_val[6] => Add0.IN10
start_val[6] => count.DATAB
start_val[7] => Add0.IN9
start_val[7] => count.DATAB
inc => count.OUTPUTSELECT
inc => count.OUTPUTSELECT
inc => count.OUTPUTSELECT
inc => count.OUTPUTSELECT
inc => count.OUTPUTSELECT
inc => count.OUTPUTSELECT
inc => count.OUTPUTSELECT
inc => count.OUTPUTSELECT
inc => always0.IN0
enable => always0.IN1
enable => count.OUTPUTSELECT
enable => count.OUTPUTSELECT
enable => count.OUTPUTSELECT
enable => count.OUTPUTSELECT
enable => count.OUTPUTSELECT
enable => count.OUTPUTSELECT
enable => count.OUTPUTSELECT
enable => count.OUTPUTSELECT
clk => count[0]~reg0.CLK
clk => count[1]~reg0.CLK
clk => count[2]~reg0.CLK
clk => count[3]~reg0.CLK
clk => count[4]~reg0.CLK
clk => count[5]~reg0.CLK
clk => count[6]~reg0.CLK
clk => count[7]~reg0.CLK
slow_edge => count.OUTPUTSELECT
slow_edge => count.OUTPUTSELECT
slow_edge => count.OUTPUTSELECT
slow_edge => count.OUTPUTSELECT
slow_edge => count.OUTPUTSELECT
slow_edge => count.OUTPUTSELECT
slow_edge => count.OUTPUTSELECT
slow_edge => count.OUTPUTSELECT
reset => count.OUTPUTSELECT
reset => count.OUTPUTSELECT
reset => count.OUTPUTSELECT
reset => count.OUTPUTSELECT
reset => count.OUTPUTSELECT
reset => count.OUTPUTSELECT
reset => count.OUTPUTSELECT
reset => count.OUTPUTSELECT
init_val[0] => count.DATAB
init_val[1] => count.DATAB


|lab8|snakes_and_apples:snake|grid_light:horizontal_bars[5].top_row
green_light_on <= green_light_on.DB_MAX_OUTPUT_PORT_TYPE
head <= head.DB_MAX_OUTPUT_PORT_TYPE
game_over_out <= state_n.DB_MAX_OUTPUT_PORT_TYPE
eating => counter256:counter.inc
eating => always0.IN1
game_over_in => state_n.e_off.OUTPUTSELECT
game_over_in => state_n.e_countdown.OUTPUTSELECT
game_over_in => state_n.e_head.OUTPUTSELECT
game_over_in => state_n.OUTPUTSELECT
left => state_n.OUTPUTSELECT
left => state_n.OUTPUTSELECT
left => state_n.OUTPUTSELECT
left => state_n.OUTPUTSELECT
up => state_n.OUTPUTSELECT
up => state_n.OUTPUTSELECT
up => state_n.OUTPUTSELECT
up => state_n.OUTPUTSELECT
right => state_n.OUTPUTSELECT
right => state_n.OUTPUTSELECT
right => state_n.OUTPUTSELECT
right => state_n.OUTPUTSELECT
down => state_n.OUTPUTSELECT
down => state_n.OUTPUTSELECT
down => state_n.OUTPUTSELECT
down => state_n.OUTPUTSELECT
length[0] => counter256:counter.start_val[0]
length[1] => counter256:counter.start_val[1]
length[2] => counter256:counter.start_val[2]
length[3] => counter256:counter.start_val[3]
length[4] => counter256:counter.start_val[4]
length[5] => counter256:counter.start_val[5]
length[6] => counter256:counter.start_val[6]
length[7] => counter256:counter.start_val[7]
dir[0] => Mux0.IN5
dir[0] => Mux1.IN5
dir[0] => Mux2.IN5
dir[0] => Mux3.IN5
dir[1] => Mux0.IN4
dir[1] => Mux1.IN4
dir[1] => Mux2.IN4
dir[1] => Mux3.IN4
clk => counter256:counter.clk
clk => state_r~1.DATAIN
slow_edge => counter256:counter.slow_edge
slow_edge => state_r.OUTPUTSELECT
slow_edge => state_r.OUTPUTSELECT
slow_edge => state_r.OUTPUTSELECT
slow_edge => state_r.OUTPUTSELECT
reset => counter256:counter.reset
reset => state_r.OUTPUTSELECT
reset => state_r.OUTPUTSELECT
reset => state_r.OUTPUTSELECT
reset => state_r.OUTPUTSELECT
light_type[0] => counter256:counter.init_val[0]
light_type[0] => Equal1.IN1
light_type[0] => Equal2.IN1
light_type[1] => counter256:counter.init_val[1]
light_type[1] => Equal1.IN0
light_type[1] => Equal2.IN0


|lab8|snakes_and_apples:snake|grid_light:horizontal_bars[5].top_row|counter256:counter
count[0] <= count[0]~reg0.DB_MAX_OUTPUT_PORT_TYPE
count[1] <= count[1]~reg0.DB_MAX_OUTPUT_PORT_TYPE
count[2] <= count[2]~reg0.DB_MAX_OUTPUT_PORT_TYPE
count[3] <= count[3]~reg0.DB_MAX_OUTPUT_PORT_TYPE
count[4] <= count[4]~reg0.DB_MAX_OUTPUT_PORT_TYPE
count[5] <= count[5]~reg0.DB_MAX_OUTPUT_PORT_TYPE
count[6] <= count[6]~reg0.DB_MAX_OUTPUT_PORT_TYPE
count[7] <= count[7]~reg0.DB_MAX_OUTPUT_PORT_TYPE
start_val[0] => Add0.IN16
start_val[0] => count.DATAB
start_val[1] => Add0.IN15
start_val[1] => count.DATAB
start_val[2] => Add0.IN14
start_val[2] => count.DATAB
start_val[3] => Add0.IN13
start_val[3] => count.DATAB
start_val[4] => Add0.IN12
start_val[4] => count.DATAB
start_val[5] => Add0.IN11
start_val[5] => count.DATAB
start_val[6] => Add0.IN10
start_val[6] => count.DATAB
start_val[7] => Add0.IN9
start_val[7] => count.DATAB
inc => count.OUTPUTSELECT
inc => count.OUTPUTSELECT
inc => count.OUTPUTSELECT
inc => count.OUTPUTSELECT
inc => count.OUTPUTSELECT
inc => count.OUTPUTSELECT
inc => count.OUTPUTSELECT
inc => count.OUTPUTSELECT
inc => always0.IN0
enable => always0.IN1
enable => count.OUTPUTSELECT
enable => count.OUTPUTSELECT
enable => count.OUTPUTSELECT
enable => count.OUTPUTSELECT
enable => count.OUTPUTSELECT
enable => count.OUTPUTSELECT
enable => count.OUTPUTSELECT
enable => count.OUTPUTSELECT
clk => count[0]~reg0.CLK
clk => count[1]~reg0.CLK
clk => count[2]~reg0.CLK
clk => count[3]~reg0.CLK
clk => count[4]~reg0.CLK
clk => count[5]~reg0.CLK
clk => count[6]~reg0.CLK
clk => count[7]~reg0.CLK
slow_edge => count.OUTPUTSELECT
slow_edge => count.OUTPUTSELECT
slow_edge => count.OUTPUTSELECT
slow_edge => count.OUTPUTSELECT
slow_edge => count.OUTPUTSELECT
slow_edge => count.OUTPUTSELECT
slow_edge => count.OUTPUTSELECT
slow_edge => count.OUTPUTSELECT
reset => count.OUTPUTSELECT
reset => count.OUTPUTSELECT
reset => count.OUTPUTSELECT
reset => count.OUTPUTSELECT
reset => count.OUTPUTSELECT
reset => count.OUTPUTSELECT
reset => count.OUTPUTSELECT
reset => count.OUTPUTSELECT
init_val[0] => count.DATAB
init_val[1] => count.DATAB


|lab8|snakes_and_apples:snake|grid_light:horizontal_bars[5].bot_row
green_light_on <= green_light_on.DB_MAX_OUTPUT_PORT_TYPE
head <= head.DB_MAX_OUTPUT_PORT_TYPE
game_over_out <= state_n.DB_MAX_OUTPUT_PORT_TYPE
eating => counter256:counter.inc
eating => always0.IN1
game_over_in => state_n.e_off.OUTPUTSELECT
game_over_in => state_n.e_countdown.OUTPUTSELECT
game_over_in => state_n.e_head.OUTPUTSELECT
game_over_in => state_n.OUTPUTSELECT
left => state_n.OUTPUTSELECT
left => state_n.OUTPUTSELECT
left => state_n.OUTPUTSELECT
left => state_n.OUTPUTSELECT
up => state_n.OUTPUTSELECT
up => state_n.OUTPUTSELECT
up => state_n.OUTPUTSELECT
up => state_n.OUTPUTSELECT
right => state_n.OUTPUTSELECT
right => state_n.OUTPUTSELECT
right => state_n.OUTPUTSELECT
right => state_n.OUTPUTSELECT
down => state_n.OUTPUTSELECT
down => state_n.OUTPUTSELECT
down => state_n.OUTPUTSELECT
down => state_n.OUTPUTSELECT
length[0] => counter256:counter.start_val[0]
length[1] => counter256:counter.start_val[1]
length[2] => counter256:counter.start_val[2]
length[3] => counter256:counter.start_val[3]
length[4] => counter256:counter.start_val[4]
length[5] => counter256:counter.start_val[5]
length[6] => counter256:counter.start_val[6]
length[7] => counter256:counter.start_val[7]
dir[0] => Mux0.IN5
dir[0] => Mux1.IN5
dir[0] => Mux2.IN5
dir[0] => Mux3.IN5
dir[1] => Mux0.IN4
dir[1] => Mux1.IN4
dir[1] => Mux2.IN4
dir[1] => Mux3.IN4
clk => counter256:counter.clk
clk => state_r~1.DATAIN
slow_edge => counter256:counter.slow_edge
slow_edge => state_r.OUTPUTSELECT
slow_edge => state_r.OUTPUTSELECT
slow_edge => state_r.OUTPUTSELECT
slow_edge => state_r.OUTPUTSELECT
reset => counter256:counter.reset
reset => state_r.OUTPUTSELECT
reset => state_r.OUTPUTSELECT
reset => state_r.OUTPUTSELECT
reset => state_r.OUTPUTSELECT
light_type[0] => counter256:counter.init_val[0]
light_type[0] => Equal1.IN1
light_type[0] => Equal2.IN1
light_type[1] => counter256:counter.init_val[1]
light_type[1] => Equal1.IN0
light_type[1] => Equal2.IN0


|lab8|snakes_and_apples:snake|grid_light:horizontal_bars[5].bot_row|counter256:counter
count[0] <= count[0]~reg0.DB_MAX_OUTPUT_PORT_TYPE
count[1] <= count[1]~reg0.DB_MAX_OUTPUT_PORT_TYPE
count[2] <= count[2]~reg0.DB_MAX_OUTPUT_PORT_TYPE
count[3] <= count[3]~reg0.DB_MAX_OUTPUT_PORT_TYPE
count[4] <= count[4]~reg0.DB_MAX_OUTPUT_PORT_TYPE
count[5] <= count[5]~reg0.DB_MAX_OUTPUT_PORT_TYPE
count[6] <= count[6]~reg0.DB_MAX_OUTPUT_PORT_TYPE
count[7] <= count[7]~reg0.DB_MAX_OUTPUT_PORT_TYPE
start_val[0] => Add0.IN16
start_val[0] => count.DATAB
start_val[1] => Add0.IN15
start_val[1] => count.DATAB
start_val[2] => Add0.IN14
start_val[2] => count.DATAB
start_val[3] => Add0.IN13
start_val[3] => count.DATAB
start_val[4] => Add0.IN12
start_val[4] => count.DATAB
start_val[5] => Add0.IN11
start_val[5] => count.DATAB
start_val[6] => Add0.IN10
start_val[6] => count.DATAB
start_val[7] => Add0.IN9
start_val[7] => count.DATAB
inc => count.OUTPUTSELECT
inc => count.OUTPUTSELECT
inc => count.OUTPUTSELECT
inc => count.OUTPUTSELECT
inc => count.OUTPUTSELECT
inc => count.OUTPUTSELECT
inc => count.OUTPUTSELECT
inc => count.OUTPUTSELECT
inc => always0.IN0
enable => always0.IN1
enable => count.OUTPUTSELECT
enable => count.OUTPUTSELECT
enable => count.OUTPUTSELECT
enable => count.OUTPUTSELECT
enable => count.OUTPUTSELECT
enable => count.OUTPUTSELECT
enable => count.OUTPUTSELECT
enable => count.OUTPUTSELECT
clk => count[0]~reg0.CLK
clk => count[1]~reg0.CLK
clk => count[2]~reg0.CLK
clk => count[3]~reg0.CLK
clk => count[4]~reg0.CLK
clk => count[5]~reg0.CLK
clk => count[6]~reg0.CLK
clk => count[7]~reg0.CLK
slow_edge => count.OUTPUTSELECT
slow_edge => count.OUTPUTSELECT
slow_edge => count.OUTPUTSELECT
slow_edge => count.OUTPUTSELECT
slow_edge => count.OUTPUTSELECT
slow_edge => count.OUTPUTSELECT
slow_edge => count.OUTPUTSELECT
slow_edge => count.OUTPUTSELECT
reset => count.OUTPUTSELECT
reset => count.OUTPUTSELECT
reset => count.OUTPUTSELECT
reset => count.OUTPUTSELECT
reset => count.OUTPUTSELECT
reset => count.OUTPUTSELECT
reset => count.OUTPUTSELECT
reset => count.OUTPUTSELECT
init_val[0] => count.DATAB
init_val[1] => count.DATAB


|lab8|snakes_and_apples:snake|grid_light:horizontal_bars[6].top_row
green_light_on <= green_light_on.DB_MAX_OUTPUT_PORT_TYPE
head <= head.DB_MAX_OUTPUT_PORT_TYPE
game_over_out <= state_n.DB_MAX_OUTPUT_PORT_TYPE
eating => counter256:counter.inc
eating => always0.IN1
game_over_in => state_n.e_off.OUTPUTSELECT
game_over_in => state_n.e_countdown.OUTPUTSELECT
game_over_in => state_n.e_head.OUTPUTSELECT
game_over_in => state_n.OUTPUTSELECT
left => state_n.OUTPUTSELECT
left => state_n.OUTPUTSELECT
left => state_n.OUTPUTSELECT
left => state_n.OUTPUTSELECT
up => state_n.OUTPUTSELECT
up => state_n.OUTPUTSELECT
up => state_n.OUTPUTSELECT
up => state_n.OUTPUTSELECT
right => state_n.OUTPUTSELECT
right => state_n.OUTPUTSELECT
right => state_n.OUTPUTSELECT
right => state_n.OUTPUTSELECT
down => state_n.OUTPUTSELECT
down => state_n.OUTPUTSELECT
down => state_n.OUTPUTSELECT
down => state_n.OUTPUTSELECT
length[0] => counter256:counter.start_val[0]
length[1] => counter256:counter.start_val[1]
length[2] => counter256:counter.start_val[2]
length[3] => counter256:counter.start_val[3]
length[4] => counter256:counter.start_val[4]
length[5] => counter256:counter.start_val[5]
length[6] => counter256:counter.start_val[6]
length[7] => counter256:counter.start_val[7]
dir[0] => Mux0.IN5
dir[0] => Mux1.IN5
dir[0] => Mux2.IN5
dir[0] => Mux3.IN5
dir[1] => Mux0.IN4
dir[1] => Mux1.IN4
dir[1] => Mux2.IN4
dir[1] => Mux3.IN4
clk => counter256:counter.clk
clk => state_r~1.DATAIN
slow_edge => counter256:counter.slow_edge
slow_edge => state_r.OUTPUTSELECT
slow_edge => state_r.OUTPUTSELECT
slow_edge => state_r.OUTPUTSELECT
slow_edge => state_r.OUTPUTSELECT
reset => counter256:counter.reset
reset => state_r.OUTPUTSELECT
reset => state_r.OUTPUTSELECT
reset => state_r.OUTPUTSELECT
reset => state_r.OUTPUTSELECT
light_type[0] => counter256:counter.init_val[0]
light_type[0] => Equal1.IN1
light_type[0] => Equal2.IN1
light_type[1] => counter256:counter.init_val[1]
light_type[1] => Equal1.IN0
light_type[1] => Equal2.IN0


|lab8|snakes_and_apples:snake|grid_light:horizontal_bars[6].top_row|counter256:counter
count[0] <= count[0]~reg0.DB_MAX_OUTPUT_PORT_TYPE
count[1] <= count[1]~reg0.DB_MAX_OUTPUT_PORT_TYPE
count[2] <= count[2]~reg0.DB_MAX_OUTPUT_PORT_TYPE
count[3] <= count[3]~reg0.DB_MAX_OUTPUT_PORT_TYPE
count[4] <= count[4]~reg0.DB_MAX_OUTPUT_PORT_TYPE
count[5] <= count[5]~reg0.DB_MAX_OUTPUT_PORT_TYPE
count[6] <= count[6]~reg0.DB_MAX_OUTPUT_PORT_TYPE
count[7] <= count[7]~reg0.DB_MAX_OUTPUT_PORT_TYPE
start_val[0] => Add0.IN16
start_val[0] => count.DATAB
start_val[1] => Add0.IN15
start_val[1] => count.DATAB
start_val[2] => Add0.IN14
start_val[2] => count.DATAB
start_val[3] => Add0.IN13
start_val[3] => count.DATAB
start_val[4] => Add0.IN12
start_val[4] => count.DATAB
start_val[5] => Add0.IN11
start_val[5] => count.DATAB
start_val[6] => Add0.IN10
start_val[6] => count.DATAB
start_val[7] => Add0.IN9
start_val[7] => count.DATAB
inc => count.OUTPUTSELECT
inc => count.OUTPUTSELECT
inc => count.OUTPUTSELECT
inc => count.OUTPUTSELECT
inc => count.OUTPUTSELECT
inc => count.OUTPUTSELECT
inc => count.OUTPUTSELECT
inc => count.OUTPUTSELECT
inc => always0.IN0
enable => always0.IN1
enable => count.OUTPUTSELECT
enable => count.OUTPUTSELECT
enable => count.OUTPUTSELECT
enable => count.OUTPUTSELECT
enable => count.OUTPUTSELECT
enable => count.OUTPUTSELECT
enable => count.OUTPUTSELECT
enable => count.OUTPUTSELECT
clk => count[0]~reg0.CLK
clk => count[1]~reg0.CLK
clk => count[2]~reg0.CLK
clk => count[3]~reg0.CLK
clk => count[4]~reg0.CLK
clk => count[5]~reg0.CLK
clk => count[6]~reg0.CLK
clk => count[7]~reg0.CLK
slow_edge => count.OUTPUTSELECT
slow_edge => count.OUTPUTSELECT
slow_edge => count.OUTPUTSELECT
slow_edge => count.OUTPUTSELECT
slow_edge => count.OUTPUTSELECT
slow_edge => count.OUTPUTSELECT
slow_edge => count.OUTPUTSELECT
slow_edge => count.OUTPUTSELECT
reset => count.OUTPUTSELECT
reset => count.OUTPUTSELECT
reset => count.OUTPUTSELECT
reset => count.OUTPUTSELECT
reset => count.OUTPUTSELECT
reset => count.OUTPUTSELECT
reset => count.OUTPUTSELECT
reset => count.OUTPUTSELECT
init_val[0] => count.DATAB
init_val[1] => count.DATAB


|lab8|snakes_and_apples:snake|grid_light:horizontal_bars[6].bot_row
green_light_on <= green_light_on.DB_MAX_OUTPUT_PORT_TYPE
head <= head.DB_MAX_OUTPUT_PORT_TYPE
game_over_out <= state_n.DB_MAX_OUTPUT_PORT_TYPE
eating => counter256:counter.inc
eating => always0.IN1
game_over_in => state_n.e_off.OUTPUTSELECT
game_over_in => state_n.e_countdown.OUTPUTSELECT
game_over_in => state_n.e_head.OUTPUTSELECT
game_over_in => state_n.OUTPUTSELECT
left => state_n.OUTPUTSELECT
left => state_n.OUTPUTSELECT
left => state_n.OUTPUTSELECT
left => state_n.OUTPUTSELECT
up => state_n.OUTPUTSELECT
up => state_n.OUTPUTSELECT
up => state_n.OUTPUTSELECT
up => state_n.OUTPUTSELECT
right => state_n.OUTPUTSELECT
right => state_n.OUTPUTSELECT
right => state_n.OUTPUTSELECT
right => state_n.OUTPUTSELECT
down => state_n.OUTPUTSELECT
down => state_n.OUTPUTSELECT
down => state_n.OUTPUTSELECT
down => state_n.OUTPUTSELECT
length[0] => counter256:counter.start_val[0]
length[1] => counter256:counter.start_val[1]
length[2] => counter256:counter.start_val[2]
length[3] => counter256:counter.start_val[3]
length[4] => counter256:counter.start_val[4]
length[5] => counter256:counter.start_val[5]
length[6] => counter256:counter.start_val[6]
length[7] => counter256:counter.start_val[7]
dir[0] => Mux0.IN5
dir[0] => Mux1.IN5
dir[0] => Mux2.IN5
dir[0] => Mux3.IN5
dir[1] => Mux0.IN4
dir[1] => Mux1.IN4
dir[1] => Mux2.IN4
dir[1] => Mux3.IN4
clk => counter256:counter.clk
clk => state_r~1.DATAIN
slow_edge => counter256:counter.slow_edge
slow_edge => state_r.OUTPUTSELECT
slow_edge => state_r.OUTPUTSELECT
slow_edge => state_r.OUTPUTSELECT
slow_edge => state_r.OUTPUTSELECT
reset => counter256:counter.reset
reset => state_r.OUTPUTSELECT
reset => state_r.OUTPUTSELECT
reset => state_r.OUTPUTSELECT
reset => state_r.OUTPUTSELECT
light_type[0] => counter256:counter.init_val[0]
light_type[0] => Equal1.IN1
light_type[0] => Equal2.IN1
light_type[1] => counter256:counter.init_val[1]
light_type[1] => Equal1.IN0
light_type[1] => Equal2.IN0


|lab8|snakes_and_apples:snake|grid_light:horizontal_bars[6].bot_row|counter256:counter
count[0] <= count[0]~reg0.DB_MAX_OUTPUT_PORT_TYPE
count[1] <= count[1]~reg0.DB_MAX_OUTPUT_PORT_TYPE
count[2] <= count[2]~reg0.DB_MAX_OUTPUT_PORT_TYPE
count[3] <= count[3]~reg0.DB_MAX_OUTPUT_PORT_TYPE
count[4] <= count[4]~reg0.DB_MAX_OUTPUT_PORT_TYPE
count[5] <= count[5]~reg0.DB_MAX_OUTPUT_PORT_TYPE
count[6] <= count[6]~reg0.DB_MAX_OUTPUT_PORT_TYPE
count[7] <= count[7]~reg0.DB_MAX_OUTPUT_PORT_TYPE
start_val[0] => Add0.IN16
start_val[0] => count.DATAB
start_val[1] => Add0.IN15
start_val[1] => count.DATAB
start_val[2] => Add0.IN14
start_val[2] => count.DATAB
start_val[3] => Add0.IN13
start_val[3] => count.DATAB
start_val[4] => Add0.IN12
start_val[4] => count.DATAB
start_val[5] => Add0.IN11
start_val[5] => count.DATAB
start_val[6] => Add0.IN10
start_val[6] => count.DATAB
start_val[7] => Add0.IN9
start_val[7] => count.DATAB
inc => count.OUTPUTSELECT
inc => count.OUTPUTSELECT
inc => count.OUTPUTSELECT
inc => count.OUTPUTSELECT
inc => count.OUTPUTSELECT
inc => count.OUTPUTSELECT
inc => count.OUTPUTSELECT
inc => count.OUTPUTSELECT
inc => always0.IN0
enable => always0.IN1
enable => count.OUTPUTSELECT
enable => count.OUTPUTSELECT
enable => count.OUTPUTSELECT
enable => count.OUTPUTSELECT
enable => count.OUTPUTSELECT
enable => count.OUTPUTSELECT
enable => count.OUTPUTSELECT
enable => count.OUTPUTSELECT
clk => count[0]~reg0.CLK
clk => count[1]~reg0.CLK
clk => count[2]~reg0.CLK
clk => count[3]~reg0.CLK
clk => count[4]~reg0.CLK
clk => count[5]~reg0.CLK
clk => count[6]~reg0.CLK
clk => count[7]~reg0.CLK
slow_edge => count.OUTPUTSELECT
slow_edge => count.OUTPUTSELECT
slow_edge => count.OUTPUTSELECT
slow_edge => count.OUTPUTSELECT
slow_edge => count.OUTPUTSELECT
slow_edge => count.OUTPUTSELECT
slow_edge => count.OUTPUTSELECT
slow_edge => count.OUTPUTSELECT
reset => count.OUTPUTSELECT
reset => count.OUTPUTSELECT
reset => count.OUTPUTSELECT
reset => count.OUTPUTSELECT
reset => count.OUTPUTSELECT
reset => count.OUTPUTSELECT
reset => count.OUTPUTSELECT
reset => count.OUTPUTSELECT
init_val[0] => count.DATAB
init_val[1] => count.DATAB


|lab8|snakes_and_apples:snake|grid_light:horizontal_bars[7].top_row
green_light_on <= green_light_on.DB_MAX_OUTPUT_PORT_TYPE
head <= head.DB_MAX_OUTPUT_PORT_TYPE
game_over_out <= state_n.DB_MAX_OUTPUT_PORT_TYPE
eating => counter256:counter.inc
eating => always0.IN1
game_over_in => state_n.e_off.OUTPUTSELECT
game_over_in => state_n.e_countdown.OUTPUTSELECT
game_over_in => state_n.e_head.OUTPUTSELECT
game_over_in => state_n.OUTPUTSELECT
left => state_n.OUTPUTSELECT
left => state_n.OUTPUTSELECT
left => state_n.OUTPUTSELECT
left => state_n.OUTPUTSELECT
up => state_n.OUTPUTSELECT
up => state_n.OUTPUTSELECT
up => state_n.OUTPUTSELECT
up => state_n.OUTPUTSELECT
right => state_n.OUTPUTSELECT
right => state_n.OUTPUTSELECT
right => state_n.OUTPUTSELECT
right => state_n.OUTPUTSELECT
down => state_n.OUTPUTSELECT
down => state_n.OUTPUTSELECT
down => state_n.OUTPUTSELECT
down => state_n.OUTPUTSELECT
length[0] => counter256:counter.start_val[0]
length[1] => counter256:counter.start_val[1]
length[2] => counter256:counter.start_val[2]
length[3] => counter256:counter.start_val[3]
length[4] => counter256:counter.start_val[4]
length[5] => counter256:counter.start_val[5]
length[6] => counter256:counter.start_val[6]
length[7] => counter256:counter.start_val[7]
dir[0] => Mux0.IN5
dir[0] => Mux1.IN5
dir[0] => Mux2.IN5
dir[0] => Mux3.IN5
dir[1] => Mux0.IN4
dir[1] => Mux1.IN4
dir[1] => Mux2.IN4
dir[1] => Mux3.IN4
clk => counter256:counter.clk
clk => state_r~1.DATAIN
slow_edge => counter256:counter.slow_edge
slow_edge => state_r.OUTPUTSELECT
slow_edge => state_r.OUTPUTSELECT
slow_edge => state_r.OUTPUTSELECT
slow_edge => state_r.OUTPUTSELECT
reset => counter256:counter.reset
reset => state_r.OUTPUTSELECT
reset => state_r.OUTPUTSELECT
reset => state_r.OUTPUTSELECT
reset => state_r.OUTPUTSELECT
light_type[0] => counter256:counter.init_val[0]
light_type[0] => Equal1.IN1
light_type[0] => Equal2.IN1
light_type[1] => counter256:counter.init_val[1]
light_type[1] => Equal1.IN0
light_type[1] => Equal2.IN0


|lab8|snakes_and_apples:snake|grid_light:horizontal_bars[7].top_row|counter256:counter
count[0] <= count[0]~reg0.DB_MAX_OUTPUT_PORT_TYPE
count[1] <= count[1]~reg0.DB_MAX_OUTPUT_PORT_TYPE
count[2] <= count[2]~reg0.DB_MAX_OUTPUT_PORT_TYPE
count[3] <= count[3]~reg0.DB_MAX_OUTPUT_PORT_TYPE
count[4] <= count[4]~reg0.DB_MAX_OUTPUT_PORT_TYPE
count[5] <= count[5]~reg0.DB_MAX_OUTPUT_PORT_TYPE
count[6] <= count[6]~reg0.DB_MAX_OUTPUT_PORT_TYPE
count[7] <= count[7]~reg0.DB_MAX_OUTPUT_PORT_TYPE
start_val[0] => Add0.IN16
start_val[0] => count.DATAB
start_val[1] => Add0.IN15
start_val[1] => count.DATAB
start_val[2] => Add0.IN14
start_val[2] => count.DATAB
start_val[3] => Add0.IN13
start_val[3] => count.DATAB
start_val[4] => Add0.IN12
start_val[4] => count.DATAB
start_val[5] => Add0.IN11
start_val[5] => count.DATAB
start_val[6] => Add0.IN10
start_val[6] => count.DATAB
start_val[7] => Add0.IN9
start_val[7] => count.DATAB
inc => count.OUTPUTSELECT
inc => count.OUTPUTSELECT
inc => count.OUTPUTSELECT
inc => count.OUTPUTSELECT
inc => count.OUTPUTSELECT
inc => count.OUTPUTSELECT
inc => count.OUTPUTSELECT
inc => count.OUTPUTSELECT
inc => always0.IN0
enable => always0.IN1
enable => count.OUTPUTSELECT
enable => count.OUTPUTSELECT
enable => count.OUTPUTSELECT
enable => count.OUTPUTSELECT
enable => count.OUTPUTSELECT
enable => count.OUTPUTSELECT
enable => count.OUTPUTSELECT
enable => count.OUTPUTSELECT
clk => count[0]~reg0.CLK
clk => count[1]~reg0.CLK
clk => count[2]~reg0.CLK
clk => count[3]~reg0.CLK
clk => count[4]~reg0.CLK
clk => count[5]~reg0.CLK
clk => count[6]~reg0.CLK
clk => count[7]~reg0.CLK
slow_edge => count.OUTPUTSELECT
slow_edge => count.OUTPUTSELECT
slow_edge => count.OUTPUTSELECT
slow_edge => count.OUTPUTSELECT
slow_edge => count.OUTPUTSELECT
slow_edge => count.OUTPUTSELECT
slow_edge => count.OUTPUTSELECT
slow_edge => count.OUTPUTSELECT
reset => count.OUTPUTSELECT
reset => count.OUTPUTSELECT
reset => count.OUTPUTSELECT
reset => count.OUTPUTSELECT
reset => count.OUTPUTSELECT
reset => count.OUTPUTSELECT
reset => count.OUTPUTSELECT
reset => count.OUTPUTSELECT
init_val[0] => count.DATAB
init_val[1] => count.DATAB


|lab8|snakes_and_apples:snake|grid_light:horizontal_bars[7].bot_row
green_light_on <= green_light_on.DB_MAX_OUTPUT_PORT_TYPE
head <= head.DB_MAX_OUTPUT_PORT_TYPE
game_over_out <= state_n.DB_MAX_OUTPUT_PORT_TYPE
eating => counter256:counter.inc
eating => always0.IN1
game_over_in => state_n.e_off.OUTPUTSELECT
game_over_in => state_n.e_countdown.OUTPUTSELECT
game_over_in => state_n.e_head.OUTPUTSELECT
game_over_in => state_n.OUTPUTSELECT
left => state_n.OUTPUTSELECT
left => state_n.OUTPUTSELECT
left => state_n.OUTPUTSELECT
left => state_n.OUTPUTSELECT
up => state_n.OUTPUTSELECT
up => state_n.OUTPUTSELECT
up => state_n.OUTPUTSELECT
up => state_n.OUTPUTSELECT
right => state_n.OUTPUTSELECT
right => state_n.OUTPUTSELECT
right => state_n.OUTPUTSELECT
right => state_n.OUTPUTSELECT
down => state_n.OUTPUTSELECT
down => state_n.OUTPUTSELECT
down => state_n.OUTPUTSELECT
down => state_n.OUTPUTSELECT
length[0] => counter256:counter.start_val[0]
length[1] => counter256:counter.start_val[1]
length[2] => counter256:counter.start_val[2]
length[3] => counter256:counter.start_val[3]
length[4] => counter256:counter.start_val[4]
length[5] => counter256:counter.start_val[5]
length[6] => counter256:counter.start_val[6]
length[7] => counter256:counter.start_val[7]
dir[0] => Mux0.IN5
dir[0] => Mux1.IN5
dir[0] => Mux2.IN5
dir[0] => Mux3.IN5
dir[1] => Mux0.IN4
dir[1] => Mux1.IN4
dir[1] => Mux2.IN4
dir[1] => Mux3.IN4
clk => counter256:counter.clk
clk => state_r~1.DATAIN
slow_edge => counter256:counter.slow_edge
slow_edge => state_r.OUTPUTSELECT
slow_edge => state_r.OUTPUTSELECT
slow_edge => state_r.OUTPUTSELECT
slow_edge => state_r.OUTPUTSELECT
reset => counter256:counter.reset
reset => state_r.OUTPUTSELECT
reset => state_r.OUTPUTSELECT
reset => state_r.OUTPUTSELECT
reset => state_r.OUTPUTSELECT
light_type[0] => counter256:counter.init_val[0]
light_type[0] => Equal1.IN1
light_type[0] => Equal2.IN1
light_type[1] => counter256:counter.init_val[1]
light_type[1] => Equal1.IN0
light_type[1] => Equal2.IN0


|lab8|snakes_and_apples:snake|grid_light:horizontal_bars[7].bot_row|counter256:counter
count[0] <= count[0]~reg0.DB_MAX_OUTPUT_PORT_TYPE
count[1] <= count[1]~reg0.DB_MAX_OUTPUT_PORT_TYPE
count[2] <= count[2]~reg0.DB_MAX_OUTPUT_PORT_TYPE
count[3] <= count[3]~reg0.DB_MAX_OUTPUT_PORT_TYPE
count[4] <= count[4]~reg0.DB_MAX_OUTPUT_PORT_TYPE
count[5] <= count[5]~reg0.DB_MAX_OUTPUT_PORT_TYPE
count[6] <= count[6]~reg0.DB_MAX_OUTPUT_PORT_TYPE
count[7] <= count[7]~reg0.DB_MAX_OUTPUT_PORT_TYPE
start_val[0] => Add0.IN16
start_val[0] => count.DATAB
start_val[1] => Add0.IN15
start_val[1] => count.DATAB
start_val[2] => Add0.IN14
start_val[2] => count.DATAB
start_val[3] => Add0.IN13
start_val[3] => count.DATAB
start_val[4] => Add0.IN12
start_val[4] => count.DATAB
start_val[5] => Add0.IN11
start_val[5] => count.DATAB
start_val[6] => Add0.IN10
start_val[6] => count.DATAB
start_val[7] => Add0.IN9
start_val[7] => count.DATAB
inc => count.OUTPUTSELECT
inc => count.OUTPUTSELECT
inc => count.OUTPUTSELECT
inc => count.OUTPUTSELECT
inc => count.OUTPUTSELECT
inc => count.OUTPUTSELECT
inc => count.OUTPUTSELECT
inc => count.OUTPUTSELECT
inc => always0.IN0
enable => always0.IN1
enable => count.OUTPUTSELECT
enable => count.OUTPUTSELECT
enable => count.OUTPUTSELECT
enable => count.OUTPUTSELECT
enable => count.OUTPUTSELECT
enable => count.OUTPUTSELECT
enable => count.OUTPUTSELECT
enable => count.OUTPUTSELECT
clk => count[0]~reg0.CLK
clk => count[1]~reg0.CLK
clk => count[2]~reg0.CLK
clk => count[3]~reg0.CLK
clk => count[4]~reg0.CLK
clk => count[5]~reg0.CLK
clk => count[6]~reg0.CLK
clk => count[7]~reg0.CLK
slow_edge => count.OUTPUTSELECT
slow_edge => count.OUTPUTSELECT
slow_edge => count.OUTPUTSELECT
slow_edge => count.OUTPUTSELECT
slow_edge => count.OUTPUTSELECT
slow_edge => count.OUTPUTSELECT
slow_edge => count.OUTPUTSELECT
slow_edge => count.OUTPUTSELECT
reset => count.OUTPUTSELECT
reset => count.OUTPUTSELECT
reset => count.OUTPUTSELECT
reset => count.OUTPUTSELECT
reset => count.OUTPUTSELECT
reset => count.OUTPUTSELECT
reset => count.OUTPUTSELECT
reset => count.OUTPUTSELECT
init_val[0] => count.DATAB
init_val[1] => count.DATAB


|lab8|snakes_and_apples:snake|grid_light:horizontal_bars[8].top_row
green_light_on <= green_light_on.DB_MAX_OUTPUT_PORT_TYPE
head <= head.DB_MAX_OUTPUT_PORT_TYPE
game_over_out <= state_n.DB_MAX_OUTPUT_PORT_TYPE
eating => counter256:counter.inc
eating => always0.IN1
game_over_in => state_n.e_off.OUTPUTSELECT
game_over_in => state_n.e_countdown.OUTPUTSELECT
game_over_in => state_n.e_head.OUTPUTSELECT
game_over_in => state_n.OUTPUTSELECT
left => state_n.OUTPUTSELECT
left => state_n.OUTPUTSELECT
left => state_n.OUTPUTSELECT
left => state_n.OUTPUTSELECT
up => state_n.OUTPUTSELECT
up => state_n.OUTPUTSELECT
up => state_n.OUTPUTSELECT
up => state_n.OUTPUTSELECT
right => state_n.OUTPUTSELECT
right => state_n.OUTPUTSELECT
right => state_n.OUTPUTSELECT
right => state_n.OUTPUTSELECT
down => state_n.OUTPUTSELECT
down => state_n.OUTPUTSELECT
down => state_n.OUTPUTSELECT
down => state_n.OUTPUTSELECT
length[0] => counter256:counter.start_val[0]
length[1] => counter256:counter.start_val[1]
length[2] => counter256:counter.start_val[2]
length[3] => counter256:counter.start_val[3]
length[4] => counter256:counter.start_val[4]
length[5] => counter256:counter.start_val[5]
length[6] => counter256:counter.start_val[6]
length[7] => counter256:counter.start_val[7]
dir[0] => Mux0.IN5
dir[0] => Mux1.IN5
dir[0] => Mux2.IN5
dir[0] => Mux3.IN5
dir[1] => Mux0.IN4
dir[1] => Mux1.IN4
dir[1] => Mux2.IN4
dir[1] => Mux3.IN4
clk => counter256:counter.clk
clk => state_r~1.DATAIN
slow_edge => counter256:counter.slow_edge
slow_edge => state_r.OUTPUTSELECT
slow_edge => state_r.OUTPUTSELECT
slow_edge => state_r.OUTPUTSELECT
slow_edge => state_r.OUTPUTSELECT
reset => counter256:counter.reset
reset => state_r.OUTPUTSELECT
reset => state_r.OUTPUTSELECT
reset => state_r.OUTPUTSELECT
reset => state_r.OUTPUTSELECT
light_type[0] => counter256:counter.init_val[0]
light_type[0] => Equal1.IN1
light_type[0] => Equal2.IN1
light_type[1] => counter256:counter.init_val[1]
light_type[1] => Equal1.IN0
light_type[1] => Equal2.IN0


|lab8|snakes_and_apples:snake|grid_light:horizontal_bars[8].top_row|counter256:counter
count[0] <= count[0]~reg0.DB_MAX_OUTPUT_PORT_TYPE
count[1] <= count[1]~reg0.DB_MAX_OUTPUT_PORT_TYPE
count[2] <= count[2]~reg0.DB_MAX_OUTPUT_PORT_TYPE
count[3] <= count[3]~reg0.DB_MAX_OUTPUT_PORT_TYPE
count[4] <= count[4]~reg0.DB_MAX_OUTPUT_PORT_TYPE
count[5] <= count[5]~reg0.DB_MAX_OUTPUT_PORT_TYPE
count[6] <= count[6]~reg0.DB_MAX_OUTPUT_PORT_TYPE
count[7] <= count[7]~reg0.DB_MAX_OUTPUT_PORT_TYPE
start_val[0] => Add0.IN16
start_val[0] => count.DATAB
start_val[1] => Add0.IN15
start_val[1] => count.DATAB
start_val[2] => Add0.IN14
start_val[2] => count.DATAB
start_val[3] => Add0.IN13
start_val[3] => count.DATAB
start_val[4] => Add0.IN12
start_val[4] => count.DATAB
start_val[5] => Add0.IN11
start_val[5] => count.DATAB
start_val[6] => Add0.IN10
start_val[6] => count.DATAB
start_val[7] => Add0.IN9
start_val[7] => count.DATAB
inc => count.OUTPUTSELECT
inc => count.OUTPUTSELECT
inc => count.OUTPUTSELECT
inc => count.OUTPUTSELECT
inc => count.OUTPUTSELECT
inc => count.OUTPUTSELECT
inc => count.OUTPUTSELECT
inc => count.OUTPUTSELECT
inc => always0.IN0
enable => always0.IN1
enable => count.OUTPUTSELECT
enable => count.OUTPUTSELECT
enable => count.OUTPUTSELECT
enable => count.OUTPUTSELECT
enable => count.OUTPUTSELECT
enable => count.OUTPUTSELECT
enable => count.OUTPUTSELECT
enable => count.OUTPUTSELECT
clk => count[0]~reg0.CLK
clk => count[1]~reg0.CLK
clk => count[2]~reg0.CLK
clk => count[3]~reg0.CLK
clk => count[4]~reg0.CLK
clk => count[5]~reg0.CLK
clk => count[6]~reg0.CLK
clk => count[7]~reg0.CLK
slow_edge => count.OUTPUTSELECT
slow_edge => count.OUTPUTSELECT
slow_edge => count.OUTPUTSELECT
slow_edge => count.OUTPUTSELECT
slow_edge => count.OUTPUTSELECT
slow_edge => count.OUTPUTSELECT
slow_edge => count.OUTPUTSELECT
slow_edge => count.OUTPUTSELECT
reset => count.OUTPUTSELECT
reset => count.OUTPUTSELECT
reset => count.OUTPUTSELECT
reset => count.OUTPUTSELECT
reset => count.OUTPUTSELECT
reset => count.OUTPUTSELECT
reset => count.OUTPUTSELECT
reset => count.OUTPUTSELECT
init_val[0] => count.DATAB
init_val[1] => count.DATAB


|lab8|snakes_and_apples:snake|grid_light:horizontal_bars[8].bot_row
green_light_on <= green_light_on.DB_MAX_OUTPUT_PORT_TYPE
head <= head.DB_MAX_OUTPUT_PORT_TYPE
game_over_out <= state_n.DB_MAX_OUTPUT_PORT_TYPE
eating => counter256:counter.inc
eating => always0.IN1
game_over_in => state_n.e_off.OUTPUTSELECT
game_over_in => state_n.e_countdown.OUTPUTSELECT
game_over_in => state_n.e_head.OUTPUTSELECT
game_over_in => state_n.OUTPUTSELECT
left => state_n.OUTPUTSELECT
left => state_n.OUTPUTSELECT
left => state_n.OUTPUTSELECT
left => state_n.OUTPUTSELECT
up => state_n.OUTPUTSELECT
up => state_n.OUTPUTSELECT
up => state_n.OUTPUTSELECT
up => state_n.OUTPUTSELECT
right => state_n.OUTPUTSELECT
right => state_n.OUTPUTSELECT
right => state_n.OUTPUTSELECT
right => state_n.OUTPUTSELECT
down => state_n.OUTPUTSELECT
down => state_n.OUTPUTSELECT
down => state_n.OUTPUTSELECT
down => state_n.OUTPUTSELECT
length[0] => counter256:counter.start_val[0]
length[1] => counter256:counter.start_val[1]
length[2] => counter256:counter.start_val[2]
length[3] => counter256:counter.start_val[3]
length[4] => counter256:counter.start_val[4]
length[5] => counter256:counter.start_val[5]
length[6] => counter256:counter.start_val[6]
length[7] => counter256:counter.start_val[7]
dir[0] => Mux0.IN5
dir[0] => Mux1.IN5
dir[0] => Mux2.IN5
dir[0] => Mux3.IN5
dir[1] => Mux0.IN4
dir[1] => Mux1.IN4
dir[1] => Mux2.IN4
dir[1] => Mux3.IN4
clk => counter256:counter.clk
clk => state_r~1.DATAIN
slow_edge => counter256:counter.slow_edge
slow_edge => state_r.OUTPUTSELECT
slow_edge => state_r.OUTPUTSELECT
slow_edge => state_r.OUTPUTSELECT
slow_edge => state_r.OUTPUTSELECT
reset => counter256:counter.reset
reset => state_r.OUTPUTSELECT
reset => state_r.OUTPUTSELECT
reset => state_r.OUTPUTSELECT
reset => state_r.OUTPUTSELECT
light_type[0] => counter256:counter.init_val[0]
light_type[0] => Equal1.IN1
light_type[0] => Equal2.IN1
light_type[1] => counter256:counter.init_val[1]
light_type[1] => Equal1.IN0
light_type[1] => Equal2.IN0


|lab8|snakes_and_apples:snake|grid_light:horizontal_bars[8].bot_row|counter256:counter
count[0] <= count[0]~reg0.DB_MAX_OUTPUT_PORT_TYPE
count[1] <= count[1]~reg0.DB_MAX_OUTPUT_PORT_TYPE
count[2] <= count[2]~reg0.DB_MAX_OUTPUT_PORT_TYPE
count[3] <= count[3]~reg0.DB_MAX_OUTPUT_PORT_TYPE
count[4] <= count[4]~reg0.DB_MAX_OUTPUT_PORT_TYPE
count[5] <= count[5]~reg0.DB_MAX_OUTPUT_PORT_TYPE
count[6] <= count[6]~reg0.DB_MAX_OUTPUT_PORT_TYPE
count[7] <= count[7]~reg0.DB_MAX_OUTPUT_PORT_TYPE
start_val[0] => Add0.IN16
start_val[0] => count.DATAB
start_val[1] => Add0.IN15
start_val[1] => count.DATAB
start_val[2] => Add0.IN14
start_val[2] => count.DATAB
start_val[3] => Add0.IN13
start_val[3] => count.DATAB
start_val[4] => Add0.IN12
start_val[4] => count.DATAB
start_val[5] => Add0.IN11
start_val[5] => count.DATAB
start_val[6] => Add0.IN10
start_val[6] => count.DATAB
start_val[7] => Add0.IN9
start_val[7] => count.DATAB
inc => count.OUTPUTSELECT
inc => count.OUTPUTSELECT
inc => count.OUTPUTSELECT
inc => count.OUTPUTSELECT
inc => count.OUTPUTSELECT
inc => count.OUTPUTSELECT
inc => count.OUTPUTSELECT
inc => count.OUTPUTSELECT
inc => always0.IN0
enable => always0.IN1
enable => count.OUTPUTSELECT
enable => count.OUTPUTSELECT
enable => count.OUTPUTSELECT
enable => count.OUTPUTSELECT
enable => count.OUTPUTSELECT
enable => count.OUTPUTSELECT
enable => count.OUTPUTSELECT
enable => count.OUTPUTSELECT
clk => count[0]~reg0.CLK
clk => count[1]~reg0.CLK
clk => count[2]~reg0.CLK
clk => count[3]~reg0.CLK
clk => count[4]~reg0.CLK
clk => count[5]~reg0.CLK
clk => count[6]~reg0.CLK
clk => count[7]~reg0.CLK
slow_edge => count.OUTPUTSELECT
slow_edge => count.OUTPUTSELECT
slow_edge => count.OUTPUTSELECT
slow_edge => count.OUTPUTSELECT
slow_edge => count.OUTPUTSELECT
slow_edge => count.OUTPUTSELECT
slow_edge => count.OUTPUTSELECT
slow_edge => count.OUTPUTSELECT
reset => count.OUTPUTSELECT
reset => count.OUTPUTSELECT
reset => count.OUTPUTSELECT
reset => count.OUTPUTSELECT
reset => count.OUTPUTSELECT
reset => count.OUTPUTSELECT
reset => count.OUTPUTSELECT
reset => count.OUTPUTSELECT
init_val[0] => count.DATAB
init_val[1] => count.DATAB


|lab8|snakes_and_apples:snake|grid_light:horizontal_bars[9].top_row
green_light_on <= green_light_on.DB_MAX_OUTPUT_PORT_TYPE
head <= head.DB_MAX_OUTPUT_PORT_TYPE
game_over_out <= state_n.DB_MAX_OUTPUT_PORT_TYPE
eating => counter256:counter.inc
eating => always0.IN1
game_over_in => state_n.e_off.OUTPUTSELECT
game_over_in => state_n.e_countdown.OUTPUTSELECT
game_over_in => state_n.e_head.OUTPUTSELECT
game_over_in => state_n.OUTPUTSELECT
left => state_n.OUTPUTSELECT
left => state_n.OUTPUTSELECT
left => state_n.OUTPUTSELECT
left => state_n.OUTPUTSELECT
up => state_n.OUTPUTSELECT
up => state_n.OUTPUTSELECT
up => state_n.OUTPUTSELECT
up => state_n.OUTPUTSELECT
right => state_n.OUTPUTSELECT
right => state_n.OUTPUTSELECT
right => state_n.OUTPUTSELECT
right => state_n.OUTPUTSELECT
down => state_n.OUTPUTSELECT
down => state_n.OUTPUTSELECT
down => state_n.OUTPUTSELECT
down => state_n.OUTPUTSELECT
length[0] => counter256:counter.start_val[0]
length[1] => counter256:counter.start_val[1]
length[2] => counter256:counter.start_val[2]
length[3] => counter256:counter.start_val[3]
length[4] => counter256:counter.start_val[4]
length[5] => counter256:counter.start_val[5]
length[6] => counter256:counter.start_val[6]
length[7] => counter256:counter.start_val[7]
dir[0] => Mux0.IN5
dir[0] => Mux1.IN5
dir[0] => Mux2.IN5
dir[0] => Mux3.IN5
dir[1] => Mux0.IN4
dir[1] => Mux1.IN4
dir[1] => Mux2.IN4
dir[1] => Mux3.IN4
clk => counter256:counter.clk
clk => state_r~1.DATAIN
slow_edge => counter256:counter.slow_edge
slow_edge => state_r.OUTPUTSELECT
slow_edge => state_r.OUTPUTSELECT
slow_edge => state_r.OUTPUTSELECT
slow_edge => state_r.OUTPUTSELECT
reset => counter256:counter.reset
reset => state_r.OUTPUTSELECT
reset => state_r.OUTPUTSELECT
reset => state_r.OUTPUTSELECT
reset => state_r.OUTPUTSELECT
light_type[0] => counter256:counter.init_val[0]
light_type[0] => Equal1.IN1
light_type[0] => Equal2.IN1
light_type[1] => counter256:counter.init_val[1]
light_type[1] => Equal1.IN0
light_type[1] => Equal2.IN0


|lab8|snakes_and_apples:snake|grid_light:horizontal_bars[9].top_row|counter256:counter
count[0] <= count[0]~reg0.DB_MAX_OUTPUT_PORT_TYPE
count[1] <= count[1]~reg0.DB_MAX_OUTPUT_PORT_TYPE
count[2] <= count[2]~reg0.DB_MAX_OUTPUT_PORT_TYPE
count[3] <= count[3]~reg0.DB_MAX_OUTPUT_PORT_TYPE
count[4] <= count[4]~reg0.DB_MAX_OUTPUT_PORT_TYPE
count[5] <= count[5]~reg0.DB_MAX_OUTPUT_PORT_TYPE
count[6] <= count[6]~reg0.DB_MAX_OUTPUT_PORT_TYPE
count[7] <= count[7]~reg0.DB_MAX_OUTPUT_PORT_TYPE
start_val[0] => Add0.IN16
start_val[0] => count.DATAB
start_val[1] => Add0.IN15
start_val[1] => count.DATAB
start_val[2] => Add0.IN14
start_val[2] => count.DATAB
start_val[3] => Add0.IN13
start_val[3] => count.DATAB
start_val[4] => Add0.IN12
start_val[4] => count.DATAB
start_val[5] => Add0.IN11
start_val[5] => count.DATAB
start_val[6] => Add0.IN10
start_val[6] => count.DATAB
start_val[7] => Add0.IN9
start_val[7] => count.DATAB
inc => count.OUTPUTSELECT
inc => count.OUTPUTSELECT
inc => count.OUTPUTSELECT
inc => count.OUTPUTSELECT
inc => count.OUTPUTSELECT
inc => count.OUTPUTSELECT
inc => count.OUTPUTSELECT
inc => count.OUTPUTSELECT
inc => always0.IN0
enable => always0.IN1
enable => count.OUTPUTSELECT
enable => count.OUTPUTSELECT
enable => count.OUTPUTSELECT
enable => count.OUTPUTSELECT
enable => count.OUTPUTSELECT
enable => count.OUTPUTSELECT
enable => count.OUTPUTSELECT
enable => count.OUTPUTSELECT
clk => count[0]~reg0.CLK
clk => count[1]~reg0.CLK
clk => count[2]~reg0.CLK
clk => count[3]~reg0.CLK
clk => count[4]~reg0.CLK
clk => count[5]~reg0.CLK
clk => count[6]~reg0.CLK
clk => count[7]~reg0.CLK
slow_edge => count.OUTPUTSELECT
slow_edge => count.OUTPUTSELECT
slow_edge => count.OUTPUTSELECT
slow_edge => count.OUTPUTSELECT
slow_edge => count.OUTPUTSELECT
slow_edge => count.OUTPUTSELECT
slow_edge => count.OUTPUTSELECT
slow_edge => count.OUTPUTSELECT
reset => count.OUTPUTSELECT
reset => count.OUTPUTSELECT
reset => count.OUTPUTSELECT
reset => count.OUTPUTSELECT
reset => count.OUTPUTSELECT
reset => count.OUTPUTSELECT
reset => count.OUTPUTSELECT
reset => count.OUTPUTSELECT
init_val[0] => count.DATAB
init_val[1] => count.DATAB


|lab8|snakes_and_apples:snake|grid_light:horizontal_bars[9].bot_row
green_light_on <= green_light_on.DB_MAX_OUTPUT_PORT_TYPE
head <= head.DB_MAX_OUTPUT_PORT_TYPE
game_over_out <= state_n.DB_MAX_OUTPUT_PORT_TYPE
eating => counter256:counter.inc
eating => always0.IN1
game_over_in => state_n.e_off.OUTPUTSELECT
game_over_in => state_n.e_countdown.OUTPUTSELECT
game_over_in => state_n.e_head.OUTPUTSELECT
game_over_in => state_n.OUTPUTSELECT
left => state_n.OUTPUTSELECT
left => state_n.OUTPUTSELECT
left => state_n.OUTPUTSELECT
left => state_n.OUTPUTSELECT
up => state_n.OUTPUTSELECT
up => state_n.OUTPUTSELECT
up => state_n.OUTPUTSELECT
up => state_n.OUTPUTSELECT
right => state_n.OUTPUTSELECT
right => state_n.OUTPUTSELECT
right => state_n.OUTPUTSELECT
right => state_n.OUTPUTSELECT
down => state_n.OUTPUTSELECT
down => state_n.OUTPUTSELECT
down => state_n.OUTPUTSELECT
down => state_n.OUTPUTSELECT
length[0] => counter256:counter.start_val[0]
length[1] => counter256:counter.start_val[1]
length[2] => counter256:counter.start_val[2]
length[3] => counter256:counter.start_val[3]
length[4] => counter256:counter.start_val[4]
length[5] => counter256:counter.start_val[5]
length[6] => counter256:counter.start_val[6]
length[7] => counter256:counter.start_val[7]
dir[0] => Mux0.IN5
dir[0] => Mux1.IN5
dir[0] => Mux2.IN5
dir[0] => Mux3.IN5
dir[1] => Mux0.IN4
dir[1] => Mux1.IN4
dir[1] => Mux2.IN4
dir[1] => Mux3.IN4
clk => counter256:counter.clk
clk => state_r~1.DATAIN
slow_edge => counter256:counter.slow_edge
slow_edge => state_r.OUTPUTSELECT
slow_edge => state_r.OUTPUTSELECT
slow_edge => state_r.OUTPUTSELECT
slow_edge => state_r.OUTPUTSELECT
reset => counter256:counter.reset
reset => state_r.OUTPUTSELECT
reset => state_r.OUTPUTSELECT
reset => state_r.OUTPUTSELECT
reset => state_r.OUTPUTSELECT
light_type[0] => counter256:counter.init_val[0]
light_type[0] => Equal1.IN1
light_type[0] => Equal2.IN1
light_type[1] => counter256:counter.init_val[1]
light_type[1] => Equal1.IN0
light_type[1] => Equal2.IN0


|lab8|snakes_and_apples:snake|grid_light:horizontal_bars[9].bot_row|counter256:counter
count[0] <= count[0]~reg0.DB_MAX_OUTPUT_PORT_TYPE
count[1] <= count[1]~reg0.DB_MAX_OUTPUT_PORT_TYPE
count[2] <= count[2]~reg0.DB_MAX_OUTPUT_PORT_TYPE
count[3] <= count[3]~reg0.DB_MAX_OUTPUT_PORT_TYPE
count[4] <= count[4]~reg0.DB_MAX_OUTPUT_PORT_TYPE
count[5] <= count[5]~reg0.DB_MAX_OUTPUT_PORT_TYPE
count[6] <= count[6]~reg0.DB_MAX_OUTPUT_PORT_TYPE
count[7] <= count[7]~reg0.DB_MAX_OUTPUT_PORT_TYPE
start_val[0] => Add0.IN16
start_val[0] => count.DATAB
start_val[1] => Add0.IN15
start_val[1] => count.DATAB
start_val[2] => Add0.IN14
start_val[2] => count.DATAB
start_val[3] => Add0.IN13
start_val[3] => count.DATAB
start_val[4] => Add0.IN12
start_val[4] => count.DATAB
start_val[5] => Add0.IN11
start_val[5] => count.DATAB
start_val[6] => Add0.IN10
start_val[6] => count.DATAB
start_val[7] => Add0.IN9
start_val[7] => count.DATAB
inc => count.OUTPUTSELECT
inc => count.OUTPUTSELECT
inc => count.OUTPUTSELECT
inc => count.OUTPUTSELECT
inc => count.OUTPUTSELECT
inc => count.OUTPUTSELECT
inc => count.OUTPUTSELECT
inc => count.OUTPUTSELECT
inc => always0.IN0
enable => always0.IN1
enable => count.OUTPUTSELECT
enable => count.OUTPUTSELECT
enable => count.OUTPUTSELECT
enable => count.OUTPUTSELECT
enable => count.OUTPUTSELECT
enable => count.OUTPUTSELECT
enable => count.OUTPUTSELECT
enable => count.OUTPUTSELECT
clk => count[0]~reg0.CLK
clk => count[1]~reg0.CLK
clk => count[2]~reg0.CLK
clk => count[3]~reg0.CLK
clk => count[4]~reg0.CLK
clk => count[5]~reg0.CLK
clk => count[6]~reg0.CLK
clk => count[7]~reg0.CLK
slow_edge => count.OUTPUTSELECT
slow_edge => count.OUTPUTSELECT
slow_edge => count.OUTPUTSELECT
slow_edge => count.OUTPUTSELECT
slow_edge => count.OUTPUTSELECT
slow_edge => count.OUTPUTSELECT
slow_edge => count.OUTPUTSELECT
slow_edge => count.OUTPUTSELECT
reset => count.OUTPUTSELECT
reset => count.OUTPUTSELECT
reset => count.OUTPUTSELECT
reset => count.OUTPUTSELECT
reset => count.OUTPUTSELECT
reset => count.OUTPUTSELECT
reset => count.OUTPUTSELECT
reset => count.OUTPUTSELECT
init_val[0] => count.DATAB
init_val[1] => count.DATAB


|lab8|snakes_and_apples:snake|grid_light:horizontal_bars[10].top_row
green_light_on <= green_light_on.DB_MAX_OUTPUT_PORT_TYPE
head <= head.DB_MAX_OUTPUT_PORT_TYPE
game_over_out <= state_n.DB_MAX_OUTPUT_PORT_TYPE
eating => counter256:counter.inc
eating => always0.IN1
game_over_in => state_n.e_off.OUTPUTSELECT
game_over_in => state_n.e_countdown.OUTPUTSELECT
game_over_in => state_n.e_head.OUTPUTSELECT
game_over_in => state_n.OUTPUTSELECT
left => state_n.OUTPUTSELECT
left => state_n.OUTPUTSELECT
left => state_n.OUTPUTSELECT
left => state_n.OUTPUTSELECT
up => state_n.OUTPUTSELECT
up => state_n.OUTPUTSELECT
up => state_n.OUTPUTSELECT
up => state_n.OUTPUTSELECT
right => state_n.OUTPUTSELECT
right => state_n.OUTPUTSELECT
right => state_n.OUTPUTSELECT
right => state_n.OUTPUTSELECT
down => state_n.OUTPUTSELECT
down => state_n.OUTPUTSELECT
down => state_n.OUTPUTSELECT
down => state_n.OUTPUTSELECT
length[0] => counter256:counter.start_val[0]
length[1] => counter256:counter.start_val[1]
length[2] => counter256:counter.start_val[2]
length[3] => counter256:counter.start_val[3]
length[4] => counter256:counter.start_val[4]
length[5] => counter256:counter.start_val[5]
length[6] => counter256:counter.start_val[6]
length[7] => counter256:counter.start_val[7]
dir[0] => Mux0.IN5
dir[0] => Mux1.IN5
dir[0] => Mux2.IN5
dir[0] => Mux3.IN5
dir[1] => Mux0.IN4
dir[1] => Mux1.IN4
dir[1] => Mux2.IN4
dir[1] => Mux3.IN4
clk => counter256:counter.clk
clk => state_r~1.DATAIN
slow_edge => counter256:counter.slow_edge
slow_edge => state_r.OUTPUTSELECT
slow_edge => state_r.OUTPUTSELECT
slow_edge => state_r.OUTPUTSELECT
slow_edge => state_r.OUTPUTSELECT
reset => counter256:counter.reset
reset => state_r.OUTPUTSELECT
reset => state_r.OUTPUTSELECT
reset => state_r.OUTPUTSELECT
reset => state_r.OUTPUTSELECT
light_type[0] => counter256:counter.init_val[0]
light_type[0] => Equal1.IN1
light_type[0] => Equal2.IN1
light_type[1] => counter256:counter.init_val[1]
light_type[1] => Equal1.IN0
light_type[1] => Equal2.IN0


|lab8|snakes_and_apples:snake|grid_light:horizontal_bars[10].top_row|counter256:counter
count[0] <= count[0]~reg0.DB_MAX_OUTPUT_PORT_TYPE
count[1] <= count[1]~reg0.DB_MAX_OUTPUT_PORT_TYPE
count[2] <= count[2]~reg0.DB_MAX_OUTPUT_PORT_TYPE
count[3] <= count[3]~reg0.DB_MAX_OUTPUT_PORT_TYPE
count[4] <= count[4]~reg0.DB_MAX_OUTPUT_PORT_TYPE
count[5] <= count[5]~reg0.DB_MAX_OUTPUT_PORT_TYPE
count[6] <= count[6]~reg0.DB_MAX_OUTPUT_PORT_TYPE
count[7] <= count[7]~reg0.DB_MAX_OUTPUT_PORT_TYPE
start_val[0] => Add0.IN16
start_val[0] => count.DATAB
start_val[1] => Add0.IN15
start_val[1] => count.DATAB
start_val[2] => Add0.IN14
start_val[2] => count.DATAB
start_val[3] => Add0.IN13
start_val[3] => count.DATAB
start_val[4] => Add0.IN12
start_val[4] => count.DATAB
start_val[5] => Add0.IN11
start_val[5] => count.DATAB
start_val[6] => Add0.IN10
start_val[6] => count.DATAB
start_val[7] => Add0.IN9
start_val[7] => count.DATAB
inc => count.OUTPUTSELECT
inc => count.OUTPUTSELECT
inc => count.OUTPUTSELECT
inc => count.OUTPUTSELECT
inc => count.OUTPUTSELECT
inc => count.OUTPUTSELECT
inc => count.OUTPUTSELECT
inc => count.OUTPUTSELECT
inc => always0.IN0
enable => always0.IN1
enable => count.OUTPUTSELECT
enable => count.OUTPUTSELECT
enable => count.OUTPUTSELECT
enable => count.OUTPUTSELECT
enable => count.OUTPUTSELECT
enable => count.OUTPUTSELECT
enable => count.OUTPUTSELECT
enable => count.OUTPUTSELECT
clk => count[0]~reg0.CLK
clk => count[1]~reg0.CLK
clk => count[2]~reg0.CLK
clk => count[3]~reg0.CLK
clk => count[4]~reg0.CLK
clk => count[5]~reg0.CLK
clk => count[6]~reg0.CLK
clk => count[7]~reg0.CLK
slow_edge => count.OUTPUTSELECT
slow_edge => count.OUTPUTSELECT
slow_edge => count.OUTPUTSELECT
slow_edge => count.OUTPUTSELECT
slow_edge => count.OUTPUTSELECT
slow_edge => count.OUTPUTSELECT
slow_edge => count.OUTPUTSELECT
slow_edge => count.OUTPUTSELECT
reset => count.OUTPUTSELECT
reset => count.OUTPUTSELECT
reset => count.OUTPUTSELECT
reset => count.OUTPUTSELECT
reset => count.OUTPUTSELECT
reset => count.OUTPUTSELECT
reset => count.OUTPUTSELECT
reset => count.OUTPUTSELECT
init_val[0] => count.DATAB
init_val[1] => count.DATAB


|lab8|snakes_and_apples:snake|grid_light:horizontal_bars[10].bot_row
green_light_on <= green_light_on.DB_MAX_OUTPUT_PORT_TYPE
head <= head.DB_MAX_OUTPUT_PORT_TYPE
game_over_out <= state_n.DB_MAX_OUTPUT_PORT_TYPE
eating => counter256:counter.inc
eating => always0.IN1
game_over_in => state_n.e_off.OUTPUTSELECT
game_over_in => state_n.e_countdown.OUTPUTSELECT
game_over_in => state_n.e_head.OUTPUTSELECT
game_over_in => state_n.OUTPUTSELECT
left => state_n.OUTPUTSELECT
left => state_n.OUTPUTSELECT
left => state_n.OUTPUTSELECT
left => state_n.OUTPUTSELECT
up => state_n.OUTPUTSELECT
up => state_n.OUTPUTSELECT
up => state_n.OUTPUTSELECT
up => state_n.OUTPUTSELECT
right => state_n.OUTPUTSELECT
right => state_n.OUTPUTSELECT
right => state_n.OUTPUTSELECT
right => state_n.OUTPUTSELECT
down => state_n.OUTPUTSELECT
down => state_n.OUTPUTSELECT
down => state_n.OUTPUTSELECT
down => state_n.OUTPUTSELECT
length[0] => counter256:counter.start_val[0]
length[1] => counter256:counter.start_val[1]
length[2] => counter256:counter.start_val[2]
length[3] => counter256:counter.start_val[3]
length[4] => counter256:counter.start_val[4]
length[5] => counter256:counter.start_val[5]
length[6] => counter256:counter.start_val[6]
length[7] => counter256:counter.start_val[7]
dir[0] => Mux0.IN5
dir[0] => Mux1.IN5
dir[0] => Mux2.IN5
dir[0] => Mux3.IN5
dir[1] => Mux0.IN4
dir[1] => Mux1.IN4
dir[1] => Mux2.IN4
dir[1] => Mux3.IN4
clk => counter256:counter.clk
clk => state_r~1.DATAIN
slow_edge => counter256:counter.slow_edge
slow_edge => state_r.OUTPUTSELECT
slow_edge => state_r.OUTPUTSELECT
slow_edge => state_r.OUTPUTSELECT
slow_edge => state_r.OUTPUTSELECT
reset => counter256:counter.reset
reset => state_r.OUTPUTSELECT
reset => state_r.OUTPUTSELECT
reset => state_r.OUTPUTSELECT
reset => state_r.OUTPUTSELECT
light_type[0] => counter256:counter.init_val[0]
light_type[0] => Equal1.IN1
light_type[0] => Equal2.IN1
light_type[1] => counter256:counter.init_val[1]
light_type[1] => Equal1.IN0
light_type[1] => Equal2.IN0


|lab8|snakes_and_apples:snake|grid_light:horizontal_bars[10].bot_row|counter256:counter
count[0] <= count[0]~reg0.DB_MAX_OUTPUT_PORT_TYPE
count[1] <= count[1]~reg0.DB_MAX_OUTPUT_PORT_TYPE
count[2] <= count[2]~reg0.DB_MAX_OUTPUT_PORT_TYPE
count[3] <= count[3]~reg0.DB_MAX_OUTPUT_PORT_TYPE
count[4] <= count[4]~reg0.DB_MAX_OUTPUT_PORT_TYPE
count[5] <= count[5]~reg0.DB_MAX_OUTPUT_PORT_TYPE
count[6] <= count[6]~reg0.DB_MAX_OUTPUT_PORT_TYPE
count[7] <= count[7]~reg0.DB_MAX_OUTPUT_PORT_TYPE
start_val[0] => Add0.IN16
start_val[0] => count.DATAB
start_val[1] => Add0.IN15
start_val[1] => count.DATAB
start_val[2] => Add0.IN14
start_val[2] => count.DATAB
start_val[3] => Add0.IN13
start_val[3] => count.DATAB
start_val[4] => Add0.IN12
start_val[4] => count.DATAB
start_val[5] => Add0.IN11
start_val[5] => count.DATAB
start_val[6] => Add0.IN10
start_val[6] => count.DATAB
start_val[7] => Add0.IN9
start_val[7] => count.DATAB
inc => count.OUTPUTSELECT
inc => count.OUTPUTSELECT
inc => count.OUTPUTSELECT
inc => count.OUTPUTSELECT
inc => count.OUTPUTSELECT
inc => count.OUTPUTSELECT
inc => count.OUTPUTSELECT
inc => count.OUTPUTSELECT
inc => always0.IN0
enable => always0.IN1
enable => count.OUTPUTSELECT
enable => count.OUTPUTSELECT
enable => count.OUTPUTSELECT
enable => count.OUTPUTSELECT
enable => count.OUTPUTSELECT
enable => count.OUTPUTSELECT
enable => count.OUTPUTSELECT
enable => count.OUTPUTSELECT
clk => count[0]~reg0.CLK
clk => count[1]~reg0.CLK
clk => count[2]~reg0.CLK
clk => count[3]~reg0.CLK
clk => count[4]~reg0.CLK
clk => count[5]~reg0.CLK
clk => count[6]~reg0.CLK
clk => count[7]~reg0.CLK
slow_edge => count.OUTPUTSELECT
slow_edge => count.OUTPUTSELECT
slow_edge => count.OUTPUTSELECT
slow_edge => count.OUTPUTSELECT
slow_edge => count.OUTPUTSELECT
slow_edge => count.OUTPUTSELECT
slow_edge => count.OUTPUTSELECT
slow_edge => count.OUTPUTSELECT
reset => count.OUTPUTSELECT
reset => count.OUTPUTSELECT
reset => count.OUTPUTSELECT
reset => count.OUTPUTSELECT
reset => count.OUTPUTSELECT
reset => count.OUTPUTSELECT
reset => count.OUTPUTSELECT
reset => count.OUTPUTSELECT
init_val[0] => count.DATAB
init_val[1] => count.DATAB


|lab8|snakes_and_apples:snake|grid_light:horizontal_bars[11].top_row
green_light_on <= green_light_on.DB_MAX_OUTPUT_PORT_TYPE
head <= head.DB_MAX_OUTPUT_PORT_TYPE
game_over_out <= state_n.DB_MAX_OUTPUT_PORT_TYPE
eating => counter256:counter.inc
eating => always0.IN1
game_over_in => state_n.e_off.OUTPUTSELECT
game_over_in => state_n.e_countdown.OUTPUTSELECT
game_over_in => state_n.e_head.OUTPUTSELECT
game_over_in => state_n.OUTPUTSELECT
left => state_n.OUTPUTSELECT
left => state_n.OUTPUTSELECT
left => state_n.OUTPUTSELECT
left => state_n.OUTPUTSELECT
up => state_n.OUTPUTSELECT
up => state_n.OUTPUTSELECT
up => state_n.OUTPUTSELECT
up => state_n.OUTPUTSELECT
right => state_n.OUTPUTSELECT
right => state_n.OUTPUTSELECT
right => state_n.OUTPUTSELECT
right => state_n.OUTPUTSELECT
down => state_n.OUTPUTSELECT
down => state_n.OUTPUTSELECT
down => state_n.OUTPUTSELECT
down => state_n.OUTPUTSELECT
length[0] => counter256:counter.start_val[0]
length[1] => counter256:counter.start_val[1]
length[2] => counter256:counter.start_val[2]
length[3] => counter256:counter.start_val[3]
length[4] => counter256:counter.start_val[4]
length[5] => counter256:counter.start_val[5]
length[6] => counter256:counter.start_val[6]
length[7] => counter256:counter.start_val[7]
dir[0] => Mux0.IN5
dir[0] => Mux1.IN5
dir[0] => Mux2.IN5
dir[0] => Mux3.IN5
dir[1] => Mux0.IN4
dir[1] => Mux1.IN4
dir[1] => Mux2.IN4
dir[1] => Mux3.IN4
clk => counter256:counter.clk
clk => state_r~1.DATAIN
slow_edge => counter256:counter.slow_edge
slow_edge => state_r.OUTPUTSELECT
slow_edge => state_r.OUTPUTSELECT
slow_edge => state_r.OUTPUTSELECT
slow_edge => state_r.OUTPUTSELECT
reset => counter256:counter.reset
reset => state_r.OUTPUTSELECT
reset => state_r.OUTPUTSELECT
reset => state_r.OUTPUTSELECT
reset => state_r.OUTPUTSELECT
light_type[0] => counter256:counter.init_val[0]
light_type[0] => Equal1.IN1
light_type[0] => Equal2.IN1
light_type[1] => counter256:counter.init_val[1]
light_type[1] => Equal1.IN0
light_type[1] => Equal2.IN0


|lab8|snakes_and_apples:snake|grid_light:horizontal_bars[11].top_row|counter256:counter
count[0] <= count[0]~reg0.DB_MAX_OUTPUT_PORT_TYPE
count[1] <= count[1]~reg0.DB_MAX_OUTPUT_PORT_TYPE
count[2] <= count[2]~reg0.DB_MAX_OUTPUT_PORT_TYPE
count[3] <= count[3]~reg0.DB_MAX_OUTPUT_PORT_TYPE
count[4] <= count[4]~reg0.DB_MAX_OUTPUT_PORT_TYPE
count[5] <= count[5]~reg0.DB_MAX_OUTPUT_PORT_TYPE
count[6] <= count[6]~reg0.DB_MAX_OUTPUT_PORT_TYPE
count[7] <= count[7]~reg0.DB_MAX_OUTPUT_PORT_TYPE
start_val[0] => Add0.IN16
start_val[0] => count.DATAB
start_val[1] => Add0.IN15
start_val[1] => count.DATAB
start_val[2] => Add0.IN14
start_val[2] => count.DATAB
start_val[3] => Add0.IN13
start_val[3] => count.DATAB
start_val[4] => Add0.IN12
start_val[4] => count.DATAB
start_val[5] => Add0.IN11
start_val[5] => count.DATAB
start_val[6] => Add0.IN10
start_val[6] => count.DATAB
start_val[7] => Add0.IN9
start_val[7] => count.DATAB
inc => count.OUTPUTSELECT
inc => count.OUTPUTSELECT
inc => count.OUTPUTSELECT
inc => count.OUTPUTSELECT
inc => count.OUTPUTSELECT
inc => count.OUTPUTSELECT
inc => count.OUTPUTSELECT
inc => count.OUTPUTSELECT
inc => always0.IN0
enable => always0.IN1
enable => count.OUTPUTSELECT
enable => count.OUTPUTSELECT
enable => count.OUTPUTSELECT
enable => count.OUTPUTSELECT
enable => count.OUTPUTSELECT
enable => count.OUTPUTSELECT
enable => count.OUTPUTSELECT
enable => count.OUTPUTSELECT
clk => count[0]~reg0.CLK
clk => count[1]~reg0.CLK
clk => count[2]~reg0.CLK
clk => count[3]~reg0.CLK
clk => count[4]~reg0.CLK
clk => count[5]~reg0.CLK
clk => count[6]~reg0.CLK
clk => count[7]~reg0.CLK
slow_edge => count.OUTPUTSELECT
slow_edge => count.OUTPUTSELECT
slow_edge => count.OUTPUTSELECT
slow_edge => count.OUTPUTSELECT
slow_edge => count.OUTPUTSELECT
slow_edge => count.OUTPUTSELECT
slow_edge => count.OUTPUTSELECT
slow_edge => count.OUTPUTSELECT
reset => count.OUTPUTSELECT
reset => count.OUTPUTSELECT
reset => count.OUTPUTSELECT
reset => count.OUTPUTSELECT
reset => count.OUTPUTSELECT
reset => count.OUTPUTSELECT
reset => count.OUTPUTSELECT
reset => count.OUTPUTSELECT
init_val[0] => count.DATAB
init_val[1] => count.DATAB


|lab8|snakes_and_apples:snake|grid_light:horizontal_bars[11].bot_row
green_light_on <= green_light_on.DB_MAX_OUTPUT_PORT_TYPE
head <= head.DB_MAX_OUTPUT_PORT_TYPE
game_over_out <= state_n.DB_MAX_OUTPUT_PORT_TYPE
eating => counter256:counter.inc
eating => always0.IN1
game_over_in => state_n.e_off.OUTPUTSELECT
game_over_in => state_n.e_countdown.OUTPUTSELECT
game_over_in => state_n.e_head.OUTPUTSELECT
game_over_in => state_n.OUTPUTSELECT
left => state_n.OUTPUTSELECT
left => state_n.OUTPUTSELECT
left => state_n.OUTPUTSELECT
left => state_n.OUTPUTSELECT
up => state_n.OUTPUTSELECT
up => state_n.OUTPUTSELECT
up => state_n.OUTPUTSELECT
up => state_n.OUTPUTSELECT
right => state_n.OUTPUTSELECT
right => state_n.OUTPUTSELECT
right => state_n.OUTPUTSELECT
right => state_n.OUTPUTSELECT
down => state_n.OUTPUTSELECT
down => state_n.OUTPUTSELECT
down => state_n.OUTPUTSELECT
down => state_n.OUTPUTSELECT
length[0] => counter256:counter.start_val[0]
length[1] => counter256:counter.start_val[1]
length[2] => counter256:counter.start_val[2]
length[3] => counter256:counter.start_val[3]
length[4] => counter256:counter.start_val[4]
length[5] => counter256:counter.start_val[5]
length[6] => counter256:counter.start_val[6]
length[7] => counter256:counter.start_val[7]
dir[0] => Mux0.IN5
dir[0] => Mux1.IN5
dir[0] => Mux2.IN5
dir[0] => Mux3.IN5
dir[1] => Mux0.IN4
dir[1] => Mux1.IN4
dir[1] => Mux2.IN4
dir[1] => Mux3.IN4
clk => counter256:counter.clk
clk => state_r~1.DATAIN
slow_edge => counter256:counter.slow_edge
slow_edge => state_r.OUTPUTSELECT
slow_edge => state_r.OUTPUTSELECT
slow_edge => state_r.OUTPUTSELECT
slow_edge => state_r.OUTPUTSELECT
reset => counter256:counter.reset
reset => state_r.OUTPUTSELECT
reset => state_r.OUTPUTSELECT
reset => state_r.OUTPUTSELECT
reset => state_r.OUTPUTSELECT
light_type[0] => counter256:counter.init_val[0]
light_type[0] => Equal1.IN1
light_type[0] => Equal2.IN1
light_type[1] => counter256:counter.init_val[1]
light_type[1] => Equal1.IN0
light_type[1] => Equal2.IN0


|lab8|snakes_and_apples:snake|grid_light:horizontal_bars[11].bot_row|counter256:counter
count[0] <= count[0]~reg0.DB_MAX_OUTPUT_PORT_TYPE
count[1] <= count[1]~reg0.DB_MAX_OUTPUT_PORT_TYPE
count[2] <= count[2]~reg0.DB_MAX_OUTPUT_PORT_TYPE
count[3] <= count[3]~reg0.DB_MAX_OUTPUT_PORT_TYPE
count[4] <= count[4]~reg0.DB_MAX_OUTPUT_PORT_TYPE
count[5] <= count[5]~reg0.DB_MAX_OUTPUT_PORT_TYPE
count[6] <= count[6]~reg0.DB_MAX_OUTPUT_PORT_TYPE
count[7] <= count[7]~reg0.DB_MAX_OUTPUT_PORT_TYPE
start_val[0] => Add0.IN16
start_val[0] => count.DATAB
start_val[1] => Add0.IN15
start_val[1] => count.DATAB
start_val[2] => Add0.IN14
start_val[2] => count.DATAB
start_val[3] => Add0.IN13
start_val[3] => count.DATAB
start_val[4] => Add0.IN12
start_val[4] => count.DATAB
start_val[5] => Add0.IN11
start_val[5] => count.DATAB
start_val[6] => Add0.IN10
start_val[6] => count.DATAB
start_val[7] => Add0.IN9
start_val[7] => count.DATAB
inc => count.OUTPUTSELECT
inc => count.OUTPUTSELECT
inc => count.OUTPUTSELECT
inc => count.OUTPUTSELECT
inc => count.OUTPUTSELECT
inc => count.OUTPUTSELECT
inc => count.OUTPUTSELECT
inc => count.OUTPUTSELECT
inc => always0.IN0
enable => always0.IN1
enable => count.OUTPUTSELECT
enable => count.OUTPUTSELECT
enable => count.OUTPUTSELECT
enable => count.OUTPUTSELECT
enable => count.OUTPUTSELECT
enable => count.OUTPUTSELECT
enable => count.OUTPUTSELECT
enable => count.OUTPUTSELECT
clk => count[0]~reg0.CLK
clk => count[1]~reg0.CLK
clk => count[2]~reg0.CLK
clk => count[3]~reg0.CLK
clk => count[4]~reg0.CLK
clk => count[5]~reg0.CLK
clk => count[6]~reg0.CLK
clk => count[7]~reg0.CLK
slow_edge => count.OUTPUTSELECT
slow_edge => count.OUTPUTSELECT
slow_edge => count.OUTPUTSELECT
slow_edge => count.OUTPUTSELECT
slow_edge => count.OUTPUTSELECT
slow_edge => count.OUTPUTSELECT
slow_edge => count.OUTPUTSELECT
slow_edge => count.OUTPUTSELECT
reset => count.OUTPUTSELECT
reset => count.OUTPUTSELECT
reset => count.OUTPUTSELECT
reset => count.OUTPUTSELECT
reset => count.OUTPUTSELECT
reset => count.OUTPUTSELECT
reset => count.OUTPUTSELECT
reset => count.OUTPUTSELECT
init_val[0] => count.DATAB
init_val[1] => count.DATAB


|lab8|snakes_and_apples:snake|grid_light:horizontal_bars[12].top_row
green_light_on <= green_light_on.DB_MAX_OUTPUT_PORT_TYPE
head <= head.DB_MAX_OUTPUT_PORT_TYPE
game_over_out <= state_n.DB_MAX_OUTPUT_PORT_TYPE
eating => counter256:counter.inc
eating => always0.IN1
game_over_in => state_n.e_off.OUTPUTSELECT
game_over_in => state_n.e_countdown.OUTPUTSELECT
game_over_in => state_n.e_head.OUTPUTSELECT
game_over_in => state_n.OUTPUTSELECT
left => state_n.OUTPUTSELECT
left => state_n.OUTPUTSELECT
left => state_n.OUTPUTSELECT
left => state_n.OUTPUTSELECT
up => state_n.OUTPUTSELECT
up => state_n.OUTPUTSELECT
up => state_n.OUTPUTSELECT
up => state_n.OUTPUTSELECT
right => state_n.OUTPUTSELECT
right => state_n.OUTPUTSELECT
right => state_n.OUTPUTSELECT
right => state_n.OUTPUTSELECT
down => state_n.OUTPUTSELECT
down => state_n.OUTPUTSELECT
down => state_n.OUTPUTSELECT
down => state_n.OUTPUTSELECT
length[0] => counter256:counter.start_val[0]
length[1] => counter256:counter.start_val[1]
length[2] => counter256:counter.start_val[2]
length[3] => counter256:counter.start_val[3]
length[4] => counter256:counter.start_val[4]
length[5] => counter256:counter.start_val[5]
length[6] => counter256:counter.start_val[6]
length[7] => counter256:counter.start_val[7]
dir[0] => Mux0.IN5
dir[0] => Mux1.IN5
dir[0] => Mux2.IN5
dir[0] => Mux3.IN5
dir[1] => Mux0.IN4
dir[1] => Mux1.IN4
dir[1] => Mux2.IN4
dir[1] => Mux3.IN4
clk => counter256:counter.clk
clk => state_r~1.DATAIN
slow_edge => counter256:counter.slow_edge
slow_edge => state_r.OUTPUTSELECT
slow_edge => state_r.OUTPUTSELECT
slow_edge => state_r.OUTPUTSELECT
slow_edge => state_r.OUTPUTSELECT
reset => counter256:counter.reset
reset => state_r.OUTPUTSELECT
reset => state_r.OUTPUTSELECT
reset => state_r.OUTPUTSELECT
reset => state_r.OUTPUTSELECT
light_type[0] => counter256:counter.init_val[0]
light_type[0] => Equal1.IN1
light_type[0] => Equal2.IN1
light_type[1] => counter256:counter.init_val[1]
light_type[1] => Equal1.IN0
light_type[1] => Equal2.IN0


|lab8|snakes_and_apples:snake|grid_light:horizontal_bars[12].top_row|counter256:counter
count[0] <= count[0]~reg0.DB_MAX_OUTPUT_PORT_TYPE
count[1] <= count[1]~reg0.DB_MAX_OUTPUT_PORT_TYPE
count[2] <= count[2]~reg0.DB_MAX_OUTPUT_PORT_TYPE
count[3] <= count[3]~reg0.DB_MAX_OUTPUT_PORT_TYPE
count[4] <= count[4]~reg0.DB_MAX_OUTPUT_PORT_TYPE
count[5] <= count[5]~reg0.DB_MAX_OUTPUT_PORT_TYPE
count[6] <= count[6]~reg0.DB_MAX_OUTPUT_PORT_TYPE
count[7] <= count[7]~reg0.DB_MAX_OUTPUT_PORT_TYPE
start_val[0] => Add0.IN16
start_val[0] => count.DATAB
start_val[1] => Add0.IN15
start_val[1] => count.DATAB
start_val[2] => Add0.IN14
start_val[2] => count.DATAB
start_val[3] => Add0.IN13
start_val[3] => count.DATAB
start_val[4] => Add0.IN12
start_val[4] => count.DATAB
start_val[5] => Add0.IN11
start_val[5] => count.DATAB
start_val[6] => Add0.IN10
start_val[6] => count.DATAB
start_val[7] => Add0.IN9
start_val[7] => count.DATAB
inc => count.OUTPUTSELECT
inc => count.OUTPUTSELECT
inc => count.OUTPUTSELECT
inc => count.OUTPUTSELECT
inc => count.OUTPUTSELECT
inc => count.OUTPUTSELECT
inc => count.OUTPUTSELECT
inc => count.OUTPUTSELECT
inc => always0.IN0
enable => always0.IN1
enable => count.OUTPUTSELECT
enable => count.OUTPUTSELECT
enable => count.OUTPUTSELECT
enable => count.OUTPUTSELECT
enable => count.OUTPUTSELECT
enable => count.OUTPUTSELECT
enable => count.OUTPUTSELECT
enable => count.OUTPUTSELECT
clk => count[0]~reg0.CLK
clk => count[1]~reg0.CLK
clk => count[2]~reg0.CLK
clk => count[3]~reg0.CLK
clk => count[4]~reg0.CLK
clk => count[5]~reg0.CLK
clk => count[6]~reg0.CLK
clk => count[7]~reg0.CLK
slow_edge => count.OUTPUTSELECT
slow_edge => count.OUTPUTSELECT
slow_edge => count.OUTPUTSELECT
slow_edge => count.OUTPUTSELECT
slow_edge => count.OUTPUTSELECT
slow_edge => count.OUTPUTSELECT
slow_edge => count.OUTPUTSELECT
slow_edge => count.OUTPUTSELECT
reset => count.OUTPUTSELECT
reset => count.OUTPUTSELECT
reset => count.OUTPUTSELECT
reset => count.OUTPUTSELECT
reset => count.OUTPUTSELECT
reset => count.OUTPUTSELECT
reset => count.OUTPUTSELECT
reset => count.OUTPUTSELECT
init_val[0] => count.DATAB
init_val[1] => count.DATAB


|lab8|snakes_and_apples:snake|grid_light:horizontal_bars[12].bot_row
green_light_on <= green_light_on.DB_MAX_OUTPUT_PORT_TYPE
head <= head.DB_MAX_OUTPUT_PORT_TYPE
game_over_out <= state_n.DB_MAX_OUTPUT_PORT_TYPE
eating => counter256:counter.inc
eating => always0.IN1
game_over_in => state_n.e_off.OUTPUTSELECT
game_over_in => state_n.e_countdown.OUTPUTSELECT
game_over_in => state_n.e_head.OUTPUTSELECT
game_over_in => state_n.OUTPUTSELECT
left => state_n.OUTPUTSELECT
left => state_n.OUTPUTSELECT
left => state_n.OUTPUTSELECT
left => state_n.OUTPUTSELECT
up => state_n.OUTPUTSELECT
up => state_n.OUTPUTSELECT
up => state_n.OUTPUTSELECT
up => state_n.OUTPUTSELECT
right => state_n.OUTPUTSELECT
right => state_n.OUTPUTSELECT
right => state_n.OUTPUTSELECT
right => state_n.OUTPUTSELECT
down => state_n.OUTPUTSELECT
down => state_n.OUTPUTSELECT
down => state_n.OUTPUTSELECT
down => state_n.OUTPUTSELECT
length[0] => counter256:counter.start_val[0]
length[1] => counter256:counter.start_val[1]
length[2] => counter256:counter.start_val[2]
length[3] => counter256:counter.start_val[3]
length[4] => counter256:counter.start_val[4]
length[5] => counter256:counter.start_val[5]
length[6] => counter256:counter.start_val[6]
length[7] => counter256:counter.start_val[7]
dir[0] => Mux0.IN5
dir[0] => Mux1.IN5
dir[0] => Mux2.IN5
dir[0] => Mux3.IN5
dir[1] => Mux0.IN4
dir[1] => Mux1.IN4
dir[1] => Mux2.IN4
dir[1] => Mux3.IN4
clk => counter256:counter.clk
clk => state_r~1.DATAIN
slow_edge => counter256:counter.slow_edge
slow_edge => state_r.OUTPUTSELECT
slow_edge => state_r.OUTPUTSELECT
slow_edge => state_r.OUTPUTSELECT
slow_edge => state_r.OUTPUTSELECT
reset => counter256:counter.reset
reset => state_r.OUTPUTSELECT
reset => state_r.OUTPUTSELECT
reset => state_r.OUTPUTSELECT
reset => state_r.OUTPUTSELECT
light_type[0] => counter256:counter.init_val[0]
light_type[0] => Equal1.IN1
light_type[0] => Equal2.IN1
light_type[1] => counter256:counter.init_val[1]
light_type[1] => Equal1.IN0
light_type[1] => Equal2.IN0


|lab8|snakes_and_apples:snake|grid_light:horizontal_bars[12].bot_row|counter256:counter
count[0] <= count[0]~reg0.DB_MAX_OUTPUT_PORT_TYPE
count[1] <= count[1]~reg0.DB_MAX_OUTPUT_PORT_TYPE
count[2] <= count[2]~reg0.DB_MAX_OUTPUT_PORT_TYPE
count[3] <= count[3]~reg0.DB_MAX_OUTPUT_PORT_TYPE
count[4] <= count[4]~reg0.DB_MAX_OUTPUT_PORT_TYPE
count[5] <= count[5]~reg0.DB_MAX_OUTPUT_PORT_TYPE
count[6] <= count[6]~reg0.DB_MAX_OUTPUT_PORT_TYPE
count[7] <= count[7]~reg0.DB_MAX_OUTPUT_PORT_TYPE
start_val[0] => Add0.IN16
start_val[0] => count.DATAB
start_val[1] => Add0.IN15
start_val[1] => count.DATAB
start_val[2] => Add0.IN14
start_val[2] => count.DATAB
start_val[3] => Add0.IN13
start_val[3] => count.DATAB
start_val[4] => Add0.IN12
start_val[4] => count.DATAB
start_val[5] => Add0.IN11
start_val[5] => count.DATAB
start_val[6] => Add0.IN10
start_val[6] => count.DATAB
start_val[7] => Add0.IN9
start_val[7] => count.DATAB
inc => count.OUTPUTSELECT
inc => count.OUTPUTSELECT
inc => count.OUTPUTSELECT
inc => count.OUTPUTSELECT
inc => count.OUTPUTSELECT
inc => count.OUTPUTSELECT
inc => count.OUTPUTSELECT
inc => count.OUTPUTSELECT
inc => always0.IN0
enable => always0.IN1
enable => count.OUTPUTSELECT
enable => count.OUTPUTSELECT
enable => count.OUTPUTSELECT
enable => count.OUTPUTSELECT
enable => count.OUTPUTSELECT
enable => count.OUTPUTSELECT
enable => count.OUTPUTSELECT
enable => count.OUTPUTSELECT
clk => count[0]~reg0.CLK
clk => count[1]~reg0.CLK
clk => count[2]~reg0.CLK
clk => count[3]~reg0.CLK
clk => count[4]~reg0.CLK
clk => count[5]~reg0.CLK
clk => count[6]~reg0.CLK
clk => count[7]~reg0.CLK
slow_edge => count.OUTPUTSELECT
slow_edge => count.OUTPUTSELECT
slow_edge => count.OUTPUTSELECT
slow_edge => count.OUTPUTSELECT
slow_edge => count.OUTPUTSELECT
slow_edge => count.OUTPUTSELECT
slow_edge => count.OUTPUTSELECT
slow_edge => count.OUTPUTSELECT
reset => count.OUTPUTSELECT
reset => count.OUTPUTSELECT
reset => count.OUTPUTSELECT
reset => count.OUTPUTSELECT
reset => count.OUTPUTSELECT
reset => count.OUTPUTSELECT
reset => count.OUTPUTSELECT
reset => count.OUTPUTSELECT
init_val[0] => count.DATAB
init_val[1] => count.DATAB


|lab8|snakes_and_apples:snake|grid_light:horizontal_bars[13].top_row
green_light_on <= green_light_on.DB_MAX_OUTPUT_PORT_TYPE
head <= head.DB_MAX_OUTPUT_PORT_TYPE
game_over_out <= state_n.DB_MAX_OUTPUT_PORT_TYPE
eating => counter256:counter.inc
eating => always0.IN1
game_over_in => state_n.e_off.OUTPUTSELECT
game_over_in => state_n.e_countdown.OUTPUTSELECT
game_over_in => state_n.e_head.OUTPUTSELECT
game_over_in => state_n.OUTPUTSELECT
left => state_n.OUTPUTSELECT
left => state_n.OUTPUTSELECT
left => state_n.OUTPUTSELECT
left => state_n.OUTPUTSELECT
up => state_n.OUTPUTSELECT
up => state_n.OUTPUTSELECT
up => state_n.OUTPUTSELECT
up => state_n.OUTPUTSELECT
right => state_n.OUTPUTSELECT
right => state_n.OUTPUTSELECT
right => state_n.OUTPUTSELECT
right => state_n.OUTPUTSELECT
down => state_n.OUTPUTSELECT
down => state_n.OUTPUTSELECT
down => state_n.OUTPUTSELECT
down => state_n.OUTPUTSELECT
length[0] => counter256:counter.start_val[0]
length[1] => counter256:counter.start_val[1]
length[2] => counter256:counter.start_val[2]
length[3] => counter256:counter.start_val[3]
length[4] => counter256:counter.start_val[4]
length[5] => counter256:counter.start_val[5]
length[6] => counter256:counter.start_val[6]
length[7] => counter256:counter.start_val[7]
dir[0] => Mux0.IN5
dir[0] => Mux1.IN5
dir[0] => Mux2.IN5
dir[0] => Mux3.IN5
dir[1] => Mux0.IN4
dir[1] => Mux1.IN4
dir[1] => Mux2.IN4
dir[1] => Mux3.IN4
clk => counter256:counter.clk
clk => state_r~1.DATAIN
slow_edge => counter256:counter.slow_edge
slow_edge => state_r.OUTPUTSELECT
slow_edge => state_r.OUTPUTSELECT
slow_edge => state_r.OUTPUTSELECT
slow_edge => state_r.OUTPUTSELECT
reset => counter256:counter.reset
reset => state_r.OUTPUTSELECT
reset => state_r.OUTPUTSELECT
reset => state_r.OUTPUTSELECT
reset => state_r.OUTPUTSELECT
light_type[0] => counter256:counter.init_val[0]
light_type[0] => Equal1.IN1
light_type[0] => Equal2.IN1
light_type[1] => counter256:counter.init_val[1]
light_type[1] => Equal1.IN0
light_type[1] => Equal2.IN0


|lab8|snakes_and_apples:snake|grid_light:horizontal_bars[13].top_row|counter256:counter
count[0] <= count[0]~reg0.DB_MAX_OUTPUT_PORT_TYPE
count[1] <= count[1]~reg0.DB_MAX_OUTPUT_PORT_TYPE
count[2] <= count[2]~reg0.DB_MAX_OUTPUT_PORT_TYPE
count[3] <= count[3]~reg0.DB_MAX_OUTPUT_PORT_TYPE
count[4] <= count[4]~reg0.DB_MAX_OUTPUT_PORT_TYPE
count[5] <= count[5]~reg0.DB_MAX_OUTPUT_PORT_TYPE
count[6] <= count[6]~reg0.DB_MAX_OUTPUT_PORT_TYPE
count[7] <= count[7]~reg0.DB_MAX_OUTPUT_PORT_TYPE
start_val[0] => Add0.IN16
start_val[0] => count.DATAB
start_val[1] => Add0.IN15
start_val[1] => count.DATAB
start_val[2] => Add0.IN14
start_val[2] => count.DATAB
start_val[3] => Add0.IN13
start_val[3] => count.DATAB
start_val[4] => Add0.IN12
start_val[4] => count.DATAB
start_val[5] => Add0.IN11
start_val[5] => count.DATAB
start_val[6] => Add0.IN10
start_val[6] => count.DATAB
start_val[7] => Add0.IN9
start_val[7] => count.DATAB
inc => count.OUTPUTSELECT
inc => count.OUTPUTSELECT
inc => count.OUTPUTSELECT
inc => count.OUTPUTSELECT
inc => count.OUTPUTSELECT
inc => count.OUTPUTSELECT
inc => count.OUTPUTSELECT
inc => count.OUTPUTSELECT
inc => always0.IN0
enable => always0.IN1
enable => count.OUTPUTSELECT
enable => count.OUTPUTSELECT
enable => count.OUTPUTSELECT
enable => count.OUTPUTSELECT
enable => count.OUTPUTSELECT
enable => count.OUTPUTSELECT
enable => count.OUTPUTSELECT
enable => count.OUTPUTSELECT
clk => count[0]~reg0.CLK
clk => count[1]~reg0.CLK
clk => count[2]~reg0.CLK
clk => count[3]~reg0.CLK
clk => count[4]~reg0.CLK
clk => count[5]~reg0.CLK
clk => count[6]~reg0.CLK
clk => count[7]~reg0.CLK
slow_edge => count.OUTPUTSELECT
slow_edge => count.OUTPUTSELECT
slow_edge => count.OUTPUTSELECT
slow_edge => count.OUTPUTSELECT
slow_edge => count.OUTPUTSELECT
slow_edge => count.OUTPUTSELECT
slow_edge => count.OUTPUTSELECT
slow_edge => count.OUTPUTSELECT
reset => count.OUTPUTSELECT
reset => count.OUTPUTSELECT
reset => count.OUTPUTSELECT
reset => count.OUTPUTSELECT
reset => count.OUTPUTSELECT
reset => count.OUTPUTSELECT
reset => count.OUTPUTSELECT
reset => count.OUTPUTSELECT
init_val[0] => count.DATAB
init_val[1] => count.DATAB


|lab8|snakes_and_apples:snake|grid_light:horizontal_bars[13].bot_row
green_light_on <= green_light_on.DB_MAX_OUTPUT_PORT_TYPE
head <= head.DB_MAX_OUTPUT_PORT_TYPE
game_over_out <= state_n.DB_MAX_OUTPUT_PORT_TYPE
eating => counter256:counter.inc
eating => always0.IN1
game_over_in => state_n.e_off.OUTPUTSELECT
game_over_in => state_n.e_countdown.OUTPUTSELECT
game_over_in => state_n.e_head.OUTPUTSELECT
game_over_in => state_n.OUTPUTSELECT
left => state_n.OUTPUTSELECT
left => state_n.OUTPUTSELECT
left => state_n.OUTPUTSELECT
left => state_n.OUTPUTSELECT
up => state_n.OUTPUTSELECT
up => state_n.OUTPUTSELECT
up => state_n.OUTPUTSELECT
up => state_n.OUTPUTSELECT
right => state_n.OUTPUTSELECT
right => state_n.OUTPUTSELECT
right => state_n.OUTPUTSELECT
right => state_n.OUTPUTSELECT
down => state_n.OUTPUTSELECT
down => state_n.OUTPUTSELECT
down => state_n.OUTPUTSELECT
down => state_n.OUTPUTSELECT
length[0] => counter256:counter.start_val[0]
length[1] => counter256:counter.start_val[1]
length[2] => counter256:counter.start_val[2]
length[3] => counter256:counter.start_val[3]
length[4] => counter256:counter.start_val[4]
length[5] => counter256:counter.start_val[5]
length[6] => counter256:counter.start_val[6]
length[7] => counter256:counter.start_val[7]
dir[0] => Mux0.IN5
dir[0] => Mux1.IN5
dir[0] => Mux2.IN5
dir[0] => Mux3.IN5
dir[1] => Mux0.IN4
dir[1] => Mux1.IN4
dir[1] => Mux2.IN4
dir[1] => Mux3.IN4
clk => counter256:counter.clk
clk => state_r~1.DATAIN
slow_edge => counter256:counter.slow_edge
slow_edge => state_r.OUTPUTSELECT
slow_edge => state_r.OUTPUTSELECT
slow_edge => state_r.OUTPUTSELECT
slow_edge => state_r.OUTPUTSELECT
reset => counter256:counter.reset
reset => state_r.OUTPUTSELECT
reset => state_r.OUTPUTSELECT
reset => state_r.OUTPUTSELECT
reset => state_r.OUTPUTSELECT
light_type[0] => counter256:counter.init_val[0]
light_type[0] => Equal1.IN1
light_type[0] => Equal2.IN1
light_type[1] => counter256:counter.init_val[1]
light_type[1] => Equal1.IN0
light_type[1] => Equal2.IN0


|lab8|snakes_and_apples:snake|grid_light:horizontal_bars[13].bot_row|counter256:counter
count[0] <= count[0]~reg0.DB_MAX_OUTPUT_PORT_TYPE
count[1] <= count[1]~reg0.DB_MAX_OUTPUT_PORT_TYPE
count[2] <= count[2]~reg0.DB_MAX_OUTPUT_PORT_TYPE
count[3] <= count[3]~reg0.DB_MAX_OUTPUT_PORT_TYPE
count[4] <= count[4]~reg0.DB_MAX_OUTPUT_PORT_TYPE
count[5] <= count[5]~reg0.DB_MAX_OUTPUT_PORT_TYPE
count[6] <= count[6]~reg0.DB_MAX_OUTPUT_PORT_TYPE
count[7] <= count[7]~reg0.DB_MAX_OUTPUT_PORT_TYPE
start_val[0] => Add0.IN16
start_val[0] => count.DATAB
start_val[1] => Add0.IN15
start_val[1] => count.DATAB
start_val[2] => Add0.IN14
start_val[2] => count.DATAB
start_val[3] => Add0.IN13
start_val[3] => count.DATAB
start_val[4] => Add0.IN12
start_val[4] => count.DATAB
start_val[5] => Add0.IN11
start_val[5] => count.DATAB
start_val[6] => Add0.IN10
start_val[6] => count.DATAB
start_val[7] => Add0.IN9
start_val[7] => count.DATAB
inc => count.OUTPUTSELECT
inc => count.OUTPUTSELECT
inc => count.OUTPUTSELECT
inc => count.OUTPUTSELECT
inc => count.OUTPUTSELECT
inc => count.OUTPUTSELECT
inc => count.OUTPUTSELECT
inc => count.OUTPUTSELECT
inc => always0.IN0
enable => always0.IN1
enable => count.OUTPUTSELECT
enable => count.OUTPUTSELECT
enable => count.OUTPUTSELECT
enable => count.OUTPUTSELECT
enable => count.OUTPUTSELECT
enable => count.OUTPUTSELECT
enable => count.OUTPUTSELECT
enable => count.OUTPUTSELECT
clk => count[0]~reg0.CLK
clk => count[1]~reg0.CLK
clk => count[2]~reg0.CLK
clk => count[3]~reg0.CLK
clk => count[4]~reg0.CLK
clk => count[5]~reg0.CLK
clk => count[6]~reg0.CLK
clk => count[7]~reg0.CLK
slow_edge => count.OUTPUTSELECT
slow_edge => count.OUTPUTSELECT
slow_edge => count.OUTPUTSELECT
slow_edge => count.OUTPUTSELECT
slow_edge => count.OUTPUTSELECT
slow_edge => count.OUTPUTSELECT
slow_edge => count.OUTPUTSELECT
slow_edge => count.OUTPUTSELECT
reset => count.OUTPUTSELECT
reset => count.OUTPUTSELECT
reset => count.OUTPUTSELECT
reset => count.OUTPUTSELECT
reset => count.OUTPUTSELECT
reset => count.OUTPUTSELECT
reset => count.OUTPUTSELECT
reset => count.OUTPUTSELECT
init_val[0] => count.DATAB
init_val[1] => count.DATAB


|lab8|snakes_and_apples:snake|grid_light:horizontal_bars[14].top_row
green_light_on <= green_light_on.DB_MAX_OUTPUT_PORT_TYPE
head <= head.DB_MAX_OUTPUT_PORT_TYPE
game_over_out <= state_n.DB_MAX_OUTPUT_PORT_TYPE
eating => counter256:counter.inc
eating => always0.IN1
game_over_in => state_n.e_off.OUTPUTSELECT
game_over_in => state_n.e_countdown.OUTPUTSELECT
game_over_in => state_n.e_head.OUTPUTSELECT
game_over_in => state_n.OUTPUTSELECT
left => state_n.OUTPUTSELECT
left => state_n.OUTPUTSELECT
left => state_n.OUTPUTSELECT
left => state_n.OUTPUTSELECT
up => state_n.OUTPUTSELECT
up => state_n.OUTPUTSELECT
up => state_n.OUTPUTSELECT
up => state_n.OUTPUTSELECT
right => state_n.OUTPUTSELECT
right => state_n.OUTPUTSELECT
right => state_n.OUTPUTSELECT
right => state_n.OUTPUTSELECT
down => state_n.OUTPUTSELECT
down => state_n.OUTPUTSELECT
down => state_n.OUTPUTSELECT
down => state_n.OUTPUTSELECT
length[0] => counter256:counter.start_val[0]
length[1] => counter256:counter.start_val[1]
length[2] => counter256:counter.start_val[2]
length[3] => counter256:counter.start_val[3]
length[4] => counter256:counter.start_val[4]
length[5] => counter256:counter.start_val[5]
length[6] => counter256:counter.start_val[6]
length[7] => counter256:counter.start_val[7]
dir[0] => Mux0.IN5
dir[0] => Mux1.IN5
dir[0] => Mux2.IN5
dir[0] => Mux3.IN5
dir[1] => Mux0.IN4
dir[1] => Mux1.IN4
dir[1] => Mux2.IN4
dir[1] => Mux3.IN4
clk => counter256:counter.clk
clk => state_r~1.DATAIN
slow_edge => counter256:counter.slow_edge
slow_edge => state_r.OUTPUTSELECT
slow_edge => state_r.OUTPUTSELECT
slow_edge => state_r.OUTPUTSELECT
slow_edge => state_r.OUTPUTSELECT
reset => counter256:counter.reset
reset => state_r.OUTPUTSELECT
reset => state_r.OUTPUTSELECT
reset => state_r.OUTPUTSELECT
reset => state_r.OUTPUTSELECT
light_type[0] => counter256:counter.init_val[0]
light_type[0] => Equal1.IN1
light_type[0] => Equal2.IN1
light_type[1] => counter256:counter.init_val[1]
light_type[1] => Equal1.IN0
light_type[1] => Equal2.IN0


|lab8|snakes_and_apples:snake|grid_light:horizontal_bars[14].top_row|counter256:counter
count[0] <= count[0]~reg0.DB_MAX_OUTPUT_PORT_TYPE
count[1] <= count[1]~reg0.DB_MAX_OUTPUT_PORT_TYPE
count[2] <= count[2]~reg0.DB_MAX_OUTPUT_PORT_TYPE
count[3] <= count[3]~reg0.DB_MAX_OUTPUT_PORT_TYPE
count[4] <= count[4]~reg0.DB_MAX_OUTPUT_PORT_TYPE
count[5] <= count[5]~reg0.DB_MAX_OUTPUT_PORT_TYPE
count[6] <= count[6]~reg0.DB_MAX_OUTPUT_PORT_TYPE
count[7] <= count[7]~reg0.DB_MAX_OUTPUT_PORT_TYPE
start_val[0] => Add0.IN16
start_val[0] => count.DATAB
start_val[1] => Add0.IN15
start_val[1] => count.DATAB
start_val[2] => Add0.IN14
start_val[2] => count.DATAB
start_val[3] => Add0.IN13
start_val[3] => count.DATAB
start_val[4] => Add0.IN12
start_val[4] => count.DATAB
start_val[5] => Add0.IN11
start_val[5] => count.DATAB
start_val[6] => Add0.IN10
start_val[6] => count.DATAB
start_val[7] => Add0.IN9
start_val[7] => count.DATAB
inc => count.OUTPUTSELECT
inc => count.OUTPUTSELECT
inc => count.OUTPUTSELECT
inc => count.OUTPUTSELECT
inc => count.OUTPUTSELECT
inc => count.OUTPUTSELECT
inc => count.OUTPUTSELECT
inc => count.OUTPUTSELECT
inc => always0.IN0
enable => always0.IN1
enable => count.OUTPUTSELECT
enable => count.OUTPUTSELECT
enable => count.OUTPUTSELECT
enable => count.OUTPUTSELECT
enable => count.OUTPUTSELECT
enable => count.OUTPUTSELECT
enable => count.OUTPUTSELECT
enable => count.OUTPUTSELECT
clk => count[0]~reg0.CLK
clk => count[1]~reg0.CLK
clk => count[2]~reg0.CLK
clk => count[3]~reg0.CLK
clk => count[4]~reg0.CLK
clk => count[5]~reg0.CLK
clk => count[6]~reg0.CLK
clk => count[7]~reg0.CLK
slow_edge => count.OUTPUTSELECT
slow_edge => count.OUTPUTSELECT
slow_edge => count.OUTPUTSELECT
slow_edge => count.OUTPUTSELECT
slow_edge => count.OUTPUTSELECT
slow_edge => count.OUTPUTSELECT
slow_edge => count.OUTPUTSELECT
slow_edge => count.OUTPUTSELECT
reset => count.OUTPUTSELECT
reset => count.OUTPUTSELECT
reset => count.OUTPUTSELECT
reset => count.OUTPUTSELECT
reset => count.OUTPUTSELECT
reset => count.OUTPUTSELECT
reset => count.OUTPUTSELECT
reset => count.OUTPUTSELECT
init_val[0] => count.DATAB
init_val[1] => count.DATAB


|lab8|snakes_and_apples:snake|grid_light:horizontal_bars[14].bot_row
green_light_on <= green_light_on.DB_MAX_OUTPUT_PORT_TYPE
head <= head.DB_MAX_OUTPUT_PORT_TYPE
game_over_out <= state_n.DB_MAX_OUTPUT_PORT_TYPE
eating => counter256:counter.inc
eating => always0.IN1
game_over_in => state_n.e_off.OUTPUTSELECT
game_over_in => state_n.e_countdown.OUTPUTSELECT
game_over_in => state_n.e_head.OUTPUTSELECT
game_over_in => state_n.OUTPUTSELECT
left => state_n.OUTPUTSELECT
left => state_n.OUTPUTSELECT
left => state_n.OUTPUTSELECT
left => state_n.OUTPUTSELECT
up => state_n.OUTPUTSELECT
up => state_n.OUTPUTSELECT
up => state_n.OUTPUTSELECT
up => state_n.OUTPUTSELECT
right => state_n.OUTPUTSELECT
right => state_n.OUTPUTSELECT
right => state_n.OUTPUTSELECT
right => state_n.OUTPUTSELECT
down => state_n.OUTPUTSELECT
down => state_n.OUTPUTSELECT
down => state_n.OUTPUTSELECT
down => state_n.OUTPUTSELECT
length[0] => counter256:counter.start_val[0]
length[1] => counter256:counter.start_val[1]
length[2] => counter256:counter.start_val[2]
length[3] => counter256:counter.start_val[3]
length[4] => counter256:counter.start_val[4]
length[5] => counter256:counter.start_val[5]
length[6] => counter256:counter.start_val[6]
length[7] => counter256:counter.start_val[7]
dir[0] => Mux0.IN5
dir[0] => Mux1.IN5
dir[0] => Mux2.IN5
dir[0] => Mux3.IN5
dir[1] => Mux0.IN4
dir[1] => Mux1.IN4
dir[1] => Mux2.IN4
dir[1] => Mux3.IN4
clk => counter256:counter.clk
clk => state_r~1.DATAIN
slow_edge => counter256:counter.slow_edge
slow_edge => state_r.OUTPUTSELECT
slow_edge => state_r.OUTPUTSELECT
slow_edge => state_r.OUTPUTSELECT
slow_edge => state_r.OUTPUTSELECT
reset => counter256:counter.reset
reset => state_r.OUTPUTSELECT
reset => state_r.OUTPUTSELECT
reset => state_r.OUTPUTSELECT
reset => state_r.OUTPUTSELECT
light_type[0] => counter256:counter.init_val[0]
light_type[0] => Equal1.IN1
light_type[0] => Equal2.IN1
light_type[1] => counter256:counter.init_val[1]
light_type[1] => Equal1.IN0
light_type[1] => Equal2.IN0


|lab8|snakes_and_apples:snake|grid_light:horizontal_bars[14].bot_row|counter256:counter
count[0] <= count[0]~reg0.DB_MAX_OUTPUT_PORT_TYPE
count[1] <= count[1]~reg0.DB_MAX_OUTPUT_PORT_TYPE
count[2] <= count[2]~reg0.DB_MAX_OUTPUT_PORT_TYPE
count[3] <= count[3]~reg0.DB_MAX_OUTPUT_PORT_TYPE
count[4] <= count[4]~reg0.DB_MAX_OUTPUT_PORT_TYPE
count[5] <= count[5]~reg0.DB_MAX_OUTPUT_PORT_TYPE
count[6] <= count[6]~reg0.DB_MAX_OUTPUT_PORT_TYPE
count[7] <= count[7]~reg0.DB_MAX_OUTPUT_PORT_TYPE
start_val[0] => Add0.IN16
start_val[0] => count.DATAB
start_val[1] => Add0.IN15
start_val[1] => count.DATAB
start_val[2] => Add0.IN14
start_val[2] => count.DATAB
start_val[3] => Add0.IN13
start_val[3] => count.DATAB
start_val[4] => Add0.IN12
start_val[4] => count.DATAB
start_val[5] => Add0.IN11
start_val[5] => count.DATAB
start_val[6] => Add0.IN10
start_val[6] => count.DATAB
start_val[7] => Add0.IN9
start_val[7] => count.DATAB
inc => count.OUTPUTSELECT
inc => count.OUTPUTSELECT
inc => count.OUTPUTSELECT
inc => count.OUTPUTSELECT
inc => count.OUTPUTSELECT
inc => count.OUTPUTSELECT
inc => count.OUTPUTSELECT
inc => count.OUTPUTSELECT
inc => always0.IN0
enable => always0.IN1
enable => count.OUTPUTSELECT
enable => count.OUTPUTSELECT
enable => count.OUTPUTSELECT
enable => count.OUTPUTSELECT
enable => count.OUTPUTSELECT
enable => count.OUTPUTSELECT
enable => count.OUTPUTSELECT
enable => count.OUTPUTSELECT
clk => count[0]~reg0.CLK
clk => count[1]~reg0.CLK
clk => count[2]~reg0.CLK
clk => count[3]~reg0.CLK
clk => count[4]~reg0.CLK
clk => count[5]~reg0.CLK
clk => count[6]~reg0.CLK
clk => count[7]~reg0.CLK
slow_edge => count.OUTPUTSELECT
slow_edge => count.OUTPUTSELECT
slow_edge => count.OUTPUTSELECT
slow_edge => count.OUTPUTSELECT
slow_edge => count.OUTPUTSELECT
slow_edge => count.OUTPUTSELECT
slow_edge => count.OUTPUTSELECT
slow_edge => count.OUTPUTSELECT
reset => count.OUTPUTSELECT
reset => count.OUTPUTSELECT
reset => count.OUTPUTSELECT
reset => count.OUTPUTSELECT
reset => count.OUTPUTSELECT
reset => count.OUTPUTSELECT
reset => count.OUTPUTSELECT
reset => count.OUTPUTSELECT
init_val[0] => count.DATAB
init_val[1] => count.DATAB


|lab8|snakes_and_apples:snake|grid_light:center_grid_row[1].center_grid_col[1].light
green_light_on <= green_light_on.DB_MAX_OUTPUT_PORT_TYPE
head <= head.DB_MAX_OUTPUT_PORT_TYPE
game_over_out <= state_n.DB_MAX_OUTPUT_PORT_TYPE
eating => counter256:counter.inc
eating => always0.IN1
game_over_in => state_n.e_off.OUTPUTSELECT
game_over_in => state_n.e_countdown.OUTPUTSELECT
game_over_in => state_n.e_head.OUTPUTSELECT
game_over_in => state_n.OUTPUTSELECT
left => state_n.OUTPUTSELECT
left => state_n.OUTPUTSELECT
left => state_n.OUTPUTSELECT
left => state_n.OUTPUTSELECT
up => state_n.OUTPUTSELECT
up => state_n.OUTPUTSELECT
up => state_n.OUTPUTSELECT
up => state_n.OUTPUTSELECT
right => state_n.OUTPUTSELECT
right => state_n.OUTPUTSELECT
right => state_n.OUTPUTSELECT
right => state_n.OUTPUTSELECT
down => state_n.OUTPUTSELECT
down => state_n.OUTPUTSELECT
down => state_n.OUTPUTSELECT
down => state_n.OUTPUTSELECT
length[0] => counter256:counter.start_val[0]
length[1] => counter256:counter.start_val[1]
length[2] => counter256:counter.start_val[2]
length[3] => counter256:counter.start_val[3]
length[4] => counter256:counter.start_val[4]
length[5] => counter256:counter.start_val[5]
length[6] => counter256:counter.start_val[6]
length[7] => counter256:counter.start_val[7]
dir[0] => Mux0.IN5
dir[0] => Mux1.IN5
dir[0] => Mux2.IN5
dir[0] => Mux3.IN5
dir[1] => Mux0.IN4
dir[1] => Mux1.IN4
dir[1] => Mux2.IN4
dir[1] => Mux3.IN4
clk => counter256:counter.clk
clk => state_r~1.DATAIN
slow_edge => counter256:counter.slow_edge
slow_edge => state_r.OUTPUTSELECT
slow_edge => state_r.OUTPUTSELECT
slow_edge => state_r.OUTPUTSELECT
slow_edge => state_r.OUTPUTSELECT
reset => counter256:counter.reset
reset => state_r.OUTPUTSELECT
reset => state_r.OUTPUTSELECT
reset => state_r.OUTPUTSELECT
reset => state_r.OUTPUTSELECT
light_type[0] => counter256:counter.init_val[0]
light_type[0] => Equal1.IN1
light_type[0] => Equal2.IN1
light_type[1] => counter256:counter.init_val[1]
light_type[1] => Equal1.IN0
light_type[1] => Equal2.IN0


|lab8|snakes_and_apples:snake|grid_light:center_grid_row[1].center_grid_col[1].light|counter256:counter
count[0] <= count[0]~reg0.DB_MAX_OUTPUT_PORT_TYPE
count[1] <= count[1]~reg0.DB_MAX_OUTPUT_PORT_TYPE
count[2] <= count[2]~reg0.DB_MAX_OUTPUT_PORT_TYPE
count[3] <= count[3]~reg0.DB_MAX_OUTPUT_PORT_TYPE
count[4] <= count[4]~reg0.DB_MAX_OUTPUT_PORT_TYPE
count[5] <= count[5]~reg0.DB_MAX_OUTPUT_PORT_TYPE
count[6] <= count[6]~reg0.DB_MAX_OUTPUT_PORT_TYPE
count[7] <= count[7]~reg0.DB_MAX_OUTPUT_PORT_TYPE
start_val[0] => Add0.IN16
start_val[0] => count.DATAB
start_val[1] => Add0.IN15
start_val[1] => count.DATAB
start_val[2] => Add0.IN14
start_val[2] => count.DATAB
start_val[3] => Add0.IN13
start_val[3] => count.DATAB
start_val[4] => Add0.IN12
start_val[4] => count.DATAB
start_val[5] => Add0.IN11
start_val[5] => count.DATAB
start_val[6] => Add0.IN10
start_val[6] => count.DATAB
start_val[7] => Add0.IN9
start_val[7] => count.DATAB
inc => count.OUTPUTSELECT
inc => count.OUTPUTSELECT
inc => count.OUTPUTSELECT
inc => count.OUTPUTSELECT
inc => count.OUTPUTSELECT
inc => count.OUTPUTSELECT
inc => count.OUTPUTSELECT
inc => count.OUTPUTSELECT
inc => always0.IN0
enable => always0.IN1
enable => count.OUTPUTSELECT
enable => count.OUTPUTSELECT
enable => count.OUTPUTSELECT
enable => count.OUTPUTSELECT
enable => count.OUTPUTSELECT
enable => count.OUTPUTSELECT
enable => count.OUTPUTSELECT
enable => count.OUTPUTSELECT
clk => count[0]~reg0.CLK
clk => count[1]~reg0.CLK
clk => count[2]~reg0.CLK
clk => count[3]~reg0.CLK
clk => count[4]~reg0.CLK
clk => count[5]~reg0.CLK
clk => count[6]~reg0.CLK
clk => count[7]~reg0.CLK
slow_edge => count.OUTPUTSELECT
slow_edge => count.OUTPUTSELECT
slow_edge => count.OUTPUTSELECT
slow_edge => count.OUTPUTSELECT
slow_edge => count.OUTPUTSELECT
slow_edge => count.OUTPUTSELECT
slow_edge => count.OUTPUTSELECT
slow_edge => count.OUTPUTSELECT
reset => count.OUTPUTSELECT
reset => count.OUTPUTSELECT
reset => count.OUTPUTSELECT
reset => count.OUTPUTSELECT
reset => count.OUTPUTSELECT
reset => count.OUTPUTSELECT
reset => count.OUTPUTSELECT
reset => count.OUTPUTSELECT
init_val[0] => count.DATAB
init_val[1] => count.DATAB


|lab8|snakes_and_apples:snake|grid_light:center_grid_row[1].center_grid_col[2].light
green_light_on <= green_light_on.DB_MAX_OUTPUT_PORT_TYPE
head <= head.DB_MAX_OUTPUT_PORT_TYPE
game_over_out <= state_n.DB_MAX_OUTPUT_PORT_TYPE
eating => counter256:counter.inc
eating => always0.IN1
game_over_in => state_n.e_off.OUTPUTSELECT
game_over_in => state_n.e_countdown.OUTPUTSELECT
game_over_in => state_n.e_head.OUTPUTSELECT
game_over_in => state_n.OUTPUTSELECT
left => state_n.OUTPUTSELECT
left => state_n.OUTPUTSELECT
left => state_n.OUTPUTSELECT
left => state_n.OUTPUTSELECT
up => state_n.OUTPUTSELECT
up => state_n.OUTPUTSELECT
up => state_n.OUTPUTSELECT
up => state_n.OUTPUTSELECT
right => state_n.OUTPUTSELECT
right => state_n.OUTPUTSELECT
right => state_n.OUTPUTSELECT
right => state_n.OUTPUTSELECT
down => state_n.OUTPUTSELECT
down => state_n.OUTPUTSELECT
down => state_n.OUTPUTSELECT
down => state_n.OUTPUTSELECT
length[0] => counter256:counter.start_val[0]
length[1] => counter256:counter.start_val[1]
length[2] => counter256:counter.start_val[2]
length[3] => counter256:counter.start_val[3]
length[4] => counter256:counter.start_val[4]
length[5] => counter256:counter.start_val[5]
length[6] => counter256:counter.start_val[6]
length[7] => counter256:counter.start_val[7]
dir[0] => Mux0.IN5
dir[0] => Mux1.IN5
dir[0] => Mux2.IN5
dir[0] => Mux3.IN5
dir[1] => Mux0.IN4
dir[1] => Mux1.IN4
dir[1] => Mux2.IN4
dir[1] => Mux3.IN4
clk => counter256:counter.clk
clk => state_r~1.DATAIN
slow_edge => counter256:counter.slow_edge
slow_edge => state_r.OUTPUTSELECT
slow_edge => state_r.OUTPUTSELECT
slow_edge => state_r.OUTPUTSELECT
slow_edge => state_r.OUTPUTSELECT
reset => counter256:counter.reset
reset => state_r.OUTPUTSELECT
reset => state_r.OUTPUTSELECT
reset => state_r.OUTPUTSELECT
reset => state_r.OUTPUTSELECT
light_type[0] => counter256:counter.init_val[0]
light_type[0] => Equal1.IN1
light_type[0] => Equal2.IN1
light_type[1] => counter256:counter.init_val[1]
light_type[1] => Equal1.IN0
light_type[1] => Equal2.IN0


|lab8|snakes_and_apples:snake|grid_light:center_grid_row[1].center_grid_col[2].light|counter256:counter
count[0] <= count[0]~reg0.DB_MAX_OUTPUT_PORT_TYPE
count[1] <= count[1]~reg0.DB_MAX_OUTPUT_PORT_TYPE
count[2] <= count[2]~reg0.DB_MAX_OUTPUT_PORT_TYPE
count[3] <= count[3]~reg0.DB_MAX_OUTPUT_PORT_TYPE
count[4] <= count[4]~reg0.DB_MAX_OUTPUT_PORT_TYPE
count[5] <= count[5]~reg0.DB_MAX_OUTPUT_PORT_TYPE
count[6] <= count[6]~reg0.DB_MAX_OUTPUT_PORT_TYPE
count[7] <= count[7]~reg0.DB_MAX_OUTPUT_PORT_TYPE
start_val[0] => Add0.IN16
start_val[0] => count.DATAB
start_val[1] => Add0.IN15
start_val[1] => count.DATAB
start_val[2] => Add0.IN14
start_val[2] => count.DATAB
start_val[3] => Add0.IN13
start_val[3] => count.DATAB
start_val[4] => Add0.IN12
start_val[4] => count.DATAB
start_val[5] => Add0.IN11
start_val[5] => count.DATAB
start_val[6] => Add0.IN10
start_val[6] => count.DATAB
start_val[7] => Add0.IN9
start_val[7] => count.DATAB
inc => count.OUTPUTSELECT
inc => count.OUTPUTSELECT
inc => count.OUTPUTSELECT
inc => count.OUTPUTSELECT
inc => count.OUTPUTSELECT
inc => count.OUTPUTSELECT
inc => count.OUTPUTSELECT
inc => count.OUTPUTSELECT
inc => always0.IN0
enable => always0.IN1
enable => count.OUTPUTSELECT
enable => count.OUTPUTSELECT
enable => count.OUTPUTSELECT
enable => count.OUTPUTSELECT
enable => count.OUTPUTSELECT
enable => count.OUTPUTSELECT
enable => count.OUTPUTSELECT
enable => count.OUTPUTSELECT
clk => count[0]~reg0.CLK
clk => count[1]~reg0.CLK
clk => count[2]~reg0.CLK
clk => count[3]~reg0.CLK
clk => count[4]~reg0.CLK
clk => count[5]~reg0.CLK
clk => count[6]~reg0.CLK
clk => count[7]~reg0.CLK
slow_edge => count.OUTPUTSELECT
slow_edge => count.OUTPUTSELECT
slow_edge => count.OUTPUTSELECT
slow_edge => count.OUTPUTSELECT
slow_edge => count.OUTPUTSELECT
slow_edge => count.OUTPUTSELECT
slow_edge => count.OUTPUTSELECT
slow_edge => count.OUTPUTSELECT
reset => count.OUTPUTSELECT
reset => count.OUTPUTSELECT
reset => count.OUTPUTSELECT
reset => count.OUTPUTSELECT
reset => count.OUTPUTSELECT
reset => count.OUTPUTSELECT
reset => count.OUTPUTSELECT
reset => count.OUTPUTSELECT
init_val[0] => count.DATAB
init_val[1] => count.DATAB


|lab8|snakes_and_apples:snake|grid_light:center_grid_row[1].center_grid_col[3].light
green_light_on <= green_light_on.DB_MAX_OUTPUT_PORT_TYPE
head <= head.DB_MAX_OUTPUT_PORT_TYPE
game_over_out <= state_n.DB_MAX_OUTPUT_PORT_TYPE
eating => counter256:counter.inc
eating => always0.IN1
game_over_in => state_n.e_off.OUTPUTSELECT
game_over_in => state_n.e_countdown.OUTPUTSELECT
game_over_in => state_n.e_head.OUTPUTSELECT
game_over_in => state_n.OUTPUTSELECT
left => state_n.OUTPUTSELECT
left => state_n.OUTPUTSELECT
left => state_n.OUTPUTSELECT
left => state_n.OUTPUTSELECT
up => state_n.OUTPUTSELECT
up => state_n.OUTPUTSELECT
up => state_n.OUTPUTSELECT
up => state_n.OUTPUTSELECT
right => state_n.OUTPUTSELECT
right => state_n.OUTPUTSELECT
right => state_n.OUTPUTSELECT
right => state_n.OUTPUTSELECT
down => state_n.OUTPUTSELECT
down => state_n.OUTPUTSELECT
down => state_n.OUTPUTSELECT
down => state_n.OUTPUTSELECT
length[0] => counter256:counter.start_val[0]
length[1] => counter256:counter.start_val[1]
length[2] => counter256:counter.start_val[2]
length[3] => counter256:counter.start_val[3]
length[4] => counter256:counter.start_val[4]
length[5] => counter256:counter.start_val[5]
length[6] => counter256:counter.start_val[6]
length[7] => counter256:counter.start_val[7]
dir[0] => Mux0.IN5
dir[0] => Mux1.IN5
dir[0] => Mux2.IN5
dir[0] => Mux3.IN5
dir[1] => Mux0.IN4
dir[1] => Mux1.IN4
dir[1] => Mux2.IN4
dir[1] => Mux3.IN4
clk => counter256:counter.clk
clk => state_r~1.DATAIN
slow_edge => counter256:counter.slow_edge
slow_edge => state_r.OUTPUTSELECT
slow_edge => state_r.OUTPUTSELECT
slow_edge => state_r.OUTPUTSELECT
slow_edge => state_r.OUTPUTSELECT
reset => counter256:counter.reset
reset => state_r.OUTPUTSELECT
reset => state_r.OUTPUTSELECT
reset => state_r.OUTPUTSELECT
reset => state_r.OUTPUTSELECT
light_type[0] => counter256:counter.init_val[0]
light_type[0] => Equal1.IN1
light_type[0] => Equal2.IN1
light_type[1] => counter256:counter.init_val[1]
light_type[1] => Equal1.IN0
light_type[1] => Equal2.IN0


|lab8|snakes_and_apples:snake|grid_light:center_grid_row[1].center_grid_col[3].light|counter256:counter
count[0] <= count[0]~reg0.DB_MAX_OUTPUT_PORT_TYPE
count[1] <= count[1]~reg0.DB_MAX_OUTPUT_PORT_TYPE
count[2] <= count[2]~reg0.DB_MAX_OUTPUT_PORT_TYPE
count[3] <= count[3]~reg0.DB_MAX_OUTPUT_PORT_TYPE
count[4] <= count[4]~reg0.DB_MAX_OUTPUT_PORT_TYPE
count[5] <= count[5]~reg0.DB_MAX_OUTPUT_PORT_TYPE
count[6] <= count[6]~reg0.DB_MAX_OUTPUT_PORT_TYPE
count[7] <= count[7]~reg0.DB_MAX_OUTPUT_PORT_TYPE
start_val[0] => Add0.IN16
start_val[0] => count.DATAB
start_val[1] => Add0.IN15
start_val[1] => count.DATAB
start_val[2] => Add0.IN14
start_val[2] => count.DATAB
start_val[3] => Add0.IN13
start_val[3] => count.DATAB
start_val[4] => Add0.IN12
start_val[4] => count.DATAB
start_val[5] => Add0.IN11
start_val[5] => count.DATAB
start_val[6] => Add0.IN10
start_val[6] => count.DATAB
start_val[7] => Add0.IN9
start_val[7] => count.DATAB
inc => count.OUTPUTSELECT
inc => count.OUTPUTSELECT
inc => count.OUTPUTSELECT
inc => count.OUTPUTSELECT
inc => count.OUTPUTSELECT
inc => count.OUTPUTSELECT
inc => count.OUTPUTSELECT
inc => count.OUTPUTSELECT
inc => always0.IN0
enable => always0.IN1
enable => count.OUTPUTSELECT
enable => count.OUTPUTSELECT
enable => count.OUTPUTSELECT
enable => count.OUTPUTSELECT
enable => count.OUTPUTSELECT
enable => count.OUTPUTSELECT
enable => count.OUTPUTSELECT
enable => count.OUTPUTSELECT
clk => count[0]~reg0.CLK
clk => count[1]~reg0.CLK
clk => count[2]~reg0.CLK
clk => count[3]~reg0.CLK
clk => count[4]~reg0.CLK
clk => count[5]~reg0.CLK
clk => count[6]~reg0.CLK
clk => count[7]~reg0.CLK
slow_edge => count.OUTPUTSELECT
slow_edge => count.OUTPUTSELECT
slow_edge => count.OUTPUTSELECT
slow_edge => count.OUTPUTSELECT
slow_edge => count.OUTPUTSELECT
slow_edge => count.OUTPUTSELECT
slow_edge => count.OUTPUTSELECT
slow_edge => count.OUTPUTSELECT
reset => count.OUTPUTSELECT
reset => count.OUTPUTSELECT
reset => count.OUTPUTSELECT
reset => count.OUTPUTSELECT
reset => count.OUTPUTSELECT
reset => count.OUTPUTSELECT
reset => count.OUTPUTSELECT
reset => count.OUTPUTSELECT
init_val[0] => count.DATAB
init_val[1] => count.DATAB


|lab8|snakes_and_apples:snake|grid_light:center_grid_row[1].center_grid_col[4].light
green_light_on <= green_light_on.DB_MAX_OUTPUT_PORT_TYPE
head <= head.DB_MAX_OUTPUT_PORT_TYPE
game_over_out <= state_n.DB_MAX_OUTPUT_PORT_TYPE
eating => counter256:counter.inc
eating => always0.IN1
game_over_in => state_n.e_off.OUTPUTSELECT
game_over_in => state_n.e_countdown.OUTPUTSELECT
game_over_in => state_n.e_head.OUTPUTSELECT
game_over_in => state_n.OUTPUTSELECT
left => state_n.OUTPUTSELECT
left => state_n.OUTPUTSELECT
left => state_n.OUTPUTSELECT
left => state_n.OUTPUTSELECT
up => state_n.OUTPUTSELECT
up => state_n.OUTPUTSELECT
up => state_n.OUTPUTSELECT
up => state_n.OUTPUTSELECT
right => state_n.OUTPUTSELECT
right => state_n.OUTPUTSELECT
right => state_n.OUTPUTSELECT
right => state_n.OUTPUTSELECT
down => state_n.OUTPUTSELECT
down => state_n.OUTPUTSELECT
down => state_n.OUTPUTSELECT
down => state_n.OUTPUTSELECT
length[0] => counter256:counter.start_val[0]
length[1] => counter256:counter.start_val[1]
length[2] => counter256:counter.start_val[2]
length[3] => counter256:counter.start_val[3]
length[4] => counter256:counter.start_val[4]
length[5] => counter256:counter.start_val[5]
length[6] => counter256:counter.start_val[6]
length[7] => counter256:counter.start_val[7]
dir[0] => Mux0.IN5
dir[0] => Mux1.IN5
dir[0] => Mux2.IN5
dir[0] => Mux3.IN5
dir[1] => Mux0.IN4
dir[1] => Mux1.IN4
dir[1] => Mux2.IN4
dir[1] => Mux3.IN4
clk => counter256:counter.clk
clk => state_r~1.DATAIN
slow_edge => counter256:counter.slow_edge
slow_edge => state_r.OUTPUTSELECT
slow_edge => state_r.OUTPUTSELECT
slow_edge => state_r.OUTPUTSELECT
slow_edge => state_r.OUTPUTSELECT
reset => counter256:counter.reset
reset => state_r.OUTPUTSELECT
reset => state_r.OUTPUTSELECT
reset => state_r.OUTPUTSELECT
reset => state_r.OUTPUTSELECT
light_type[0] => counter256:counter.init_val[0]
light_type[0] => Equal1.IN1
light_type[0] => Equal2.IN1
light_type[1] => counter256:counter.init_val[1]
light_type[1] => Equal1.IN0
light_type[1] => Equal2.IN0


|lab8|snakes_and_apples:snake|grid_light:center_grid_row[1].center_grid_col[4].light|counter256:counter
count[0] <= count[0]~reg0.DB_MAX_OUTPUT_PORT_TYPE
count[1] <= count[1]~reg0.DB_MAX_OUTPUT_PORT_TYPE
count[2] <= count[2]~reg0.DB_MAX_OUTPUT_PORT_TYPE
count[3] <= count[3]~reg0.DB_MAX_OUTPUT_PORT_TYPE
count[4] <= count[4]~reg0.DB_MAX_OUTPUT_PORT_TYPE
count[5] <= count[5]~reg0.DB_MAX_OUTPUT_PORT_TYPE
count[6] <= count[6]~reg0.DB_MAX_OUTPUT_PORT_TYPE
count[7] <= count[7]~reg0.DB_MAX_OUTPUT_PORT_TYPE
start_val[0] => Add0.IN16
start_val[0] => count.DATAB
start_val[1] => Add0.IN15
start_val[1] => count.DATAB
start_val[2] => Add0.IN14
start_val[2] => count.DATAB
start_val[3] => Add0.IN13
start_val[3] => count.DATAB
start_val[4] => Add0.IN12
start_val[4] => count.DATAB
start_val[5] => Add0.IN11
start_val[5] => count.DATAB
start_val[6] => Add0.IN10
start_val[6] => count.DATAB
start_val[7] => Add0.IN9
start_val[7] => count.DATAB
inc => count.OUTPUTSELECT
inc => count.OUTPUTSELECT
inc => count.OUTPUTSELECT
inc => count.OUTPUTSELECT
inc => count.OUTPUTSELECT
inc => count.OUTPUTSELECT
inc => count.OUTPUTSELECT
inc => count.OUTPUTSELECT
inc => always0.IN0
enable => always0.IN1
enable => count.OUTPUTSELECT
enable => count.OUTPUTSELECT
enable => count.OUTPUTSELECT
enable => count.OUTPUTSELECT
enable => count.OUTPUTSELECT
enable => count.OUTPUTSELECT
enable => count.OUTPUTSELECT
enable => count.OUTPUTSELECT
clk => count[0]~reg0.CLK
clk => count[1]~reg0.CLK
clk => count[2]~reg0.CLK
clk => count[3]~reg0.CLK
clk => count[4]~reg0.CLK
clk => count[5]~reg0.CLK
clk => count[6]~reg0.CLK
clk => count[7]~reg0.CLK
slow_edge => count.OUTPUTSELECT
slow_edge => count.OUTPUTSELECT
slow_edge => count.OUTPUTSELECT
slow_edge => count.OUTPUTSELECT
slow_edge => count.OUTPUTSELECT
slow_edge => count.OUTPUTSELECT
slow_edge => count.OUTPUTSELECT
slow_edge => count.OUTPUTSELECT
reset => count.OUTPUTSELECT
reset => count.OUTPUTSELECT
reset => count.OUTPUTSELECT
reset => count.OUTPUTSELECT
reset => count.OUTPUTSELECT
reset => count.OUTPUTSELECT
reset => count.OUTPUTSELECT
reset => count.OUTPUTSELECT
init_val[0] => count.DATAB
init_val[1] => count.DATAB


|lab8|snakes_and_apples:snake|grid_light:center_grid_row[1].center_grid_col[5].light
green_light_on <= green_light_on.DB_MAX_OUTPUT_PORT_TYPE
head <= head.DB_MAX_OUTPUT_PORT_TYPE
game_over_out <= state_n.DB_MAX_OUTPUT_PORT_TYPE
eating => counter256:counter.inc
eating => always0.IN1
game_over_in => state_n.e_off.OUTPUTSELECT
game_over_in => state_n.e_countdown.OUTPUTSELECT
game_over_in => state_n.e_head.OUTPUTSELECT
game_over_in => state_n.OUTPUTSELECT
left => state_n.OUTPUTSELECT
left => state_n.OUTPUTSELECT
left => state_n.OUTPUTSELECT
left => state_n.OUTPUTSELECT
up => state_n.OUTPUTSELECT
up => state_n.OUTPUTSELECT
up => state_n.OUTPUTSELECT
up => state_n.OUTPUTSELECT
right => state_n.OUTPUTSELECT
right => state_n.OUTPUTSELECT
right => state_n.OUTPUTSELECT
right => state_n.OUTPUTSELECT
down => state_n.OUTPUTSELECT
down => state_n.OUTPUTSELECT
down => state_n.OUTPUTSELECT
down => state_n.OUTPUTSELECT
length[0] => counter256:counter.start_val[0]
length[1] => counter256:counter.start_val[1]
length[2] => counter256:counter.start_val[2]
length[3] => counter256:counter.start_val[3]
length[4] => counter256:counter.start_val[4]
length[5] => counter256:counter.start_val[5]
length[6] => counter256:counter.start_val[6]
length[7] => counter256:counter.start_val[7]
dir[0] => Mux0.IN5
dir[0] => Mux1.IN5
dir[0] => Mux2.IN5
dir[0] => Mux3.IN5
dir[1] => Mux0.IN4
dir[1] => Mux1.IN4
dir[1] => Mux2.IN4
dir[1] => Mux3.IN4
clk => counter256:counter.clk
clk => state_r~1.DATAIN
slow_edge => counter256:counter.slow_edge
slow_edge => state_r.OUTPUTSELECT
slow_edge => state_r.OUTPUTSELECT
slow_edge => state_r.OUTPUTSELECT
slow_edge => state_r.OUTPUTSELECT
reset => counter256:counter.reset
reset => state_r.OUTPUTSELECT
reset => state_r.OUTPUTSELECT
reset => state_r.OUTPUTSELECT
reset => state_r.OUTPUTSELECT
light_type[0] => counter256:counter.init_val[0]
light_type[0] => Equal1.IN1
light_type[0] => Equal2.IN1
light_type[1] => counter256:counter.init_val[1]
light_type[1] => Equal1.IN0
light_type[1] => Equal2.IN0


|lab8|snakes_and_apples:snake|grid_light:center_grid_row[1].center_grid_col[5].light|counter256:counter
count[0] <= count[0]~reg0.DB_MAX_OUTPUT_PORT_TYPE
count[1] <= count[1]~reg0.DB_MAX_OUTPUT_PORT_TYPE
count[2] <= count[2]~reg0.DB_MAX_OUTPUT_PORT_TYPE
count[3] <= count[3]~reg0.DB_MAX_OUTPUT_PORT_TYPE
count[4] <= count[4]~reg0.DB_MAX_OUTPUT_PORT_TYPE
count[5] <= count[5]~reg0.DB_MAX_OUTPUT_PORT_TYPE
count[6] <= count[6]~reg0.DB_MAX_OUTPUT_PORT_TYPE
count[7] <= count[7]~reg0.DB_MAX_OUTPUT_PORT_TYPE
start_val[0] => Add0.IN16
start_val[0] => count.DATAB
start_val[1] => Add0.IN15
start_val[1] => count.DATAB
start_val[2] => Add0.IN14
start_val[2] => count.DATAB
start_val[3] => Add0.IN13
start_val[3] => count.DATAB
start_val[4] => Add0.IN12
start_val[4] => count.DATAB
start_val[5] => Add0.IN11
start_val[5] => count.DATAB
start_val[6] => Add0.IN10
start_val[6] => count.DATAB
start_val[7] => Add0.IN9
start_val[7] => count.DATAB
inc => count.OUTPUTSELECT
inc => count.OUTPUTSELECT
inc => count.OUTPUTSELECT
inc => count.OUTPUTSELECT
inc => count.OUTPUTSELECT
inc => count.OUTPUTSELECT
inc => count.OUTPUTSELECT
inc => count.OUTPUTSELECT
inc => always0.IN0
enable => always0.IN1
enable => count.OUTPUTSELECT
enable => count.OUTPUTSELECT
enable => count.OUTPUTSELECT
enable => count.OUTPUTSELECT
enable => count.OUTPUTSELECT
enable => count.OUTPUTSELECT
enable => count.OUTPUTSELECT
enable => count.OUTPUTSELECT
clk => count[0]~reg0.CLK
clk => count[1]~reg0.CLK
clk => count[2]~reg0.CLK
clk => count[3]~reg0.CLK
clk => count[4]~reg0.CLK
clk => count[5]~reg0.CLK
clk => count[6]~reg0.CLK
clk => count[7]~reg0.CLK
slow_edge => count.OUTPUTSELECT
slow_edge => count.OUTPUTSELECT
slow_edge => count.OUTPUTSELECT
slow_edge => count.OUTPUTSELECT
slow_edge => count.OUTPUTSELECT
slow_edge => count.OUTPUTSELECT
slow_edge => count.OUTPUTSELECT
slow_edge => count.OUTPUTSELECT
reset => count.OUTPUTSELECT
reset => count.OUTPUTSELECT
reset => count.OUTPUTSELECT
reset => count.OUTPUTSELECT
reset => count.OUTPUTSELECT
reset => count.OUTPUTSELECT
reset => count.OUTPUTSELECT
reset => count.OUTPUTSELECT
init_val[0] => count.DATAB
init_val[1] => count.DATAB


|lab8|snakes_and_apples:snake|grid_light:center_grid_row[1].center_grid_col[6].light
green_light_on <= green_light_on.DB_MAX_OUTPUT_PORT_TYPE
head <= head.DB_MAX_OUTPUT_PORT_TYPE
game_over_out <= state_n.DB_MAX_OUTPUT_PORT_TYPE
eating => counter256:counter.inc
eating => always0.IN1
game_over_in => state_n.e_off.OUTPUTSELECT
game_over_in => state_n.e_countdown.OUTPUTSELECT
game_over_in => state_n.e_head.OUTPUTSELECT
game_over_in => state_n.OUTPUTSELECT
left => state_n.OUTPUTSELECT
left => state_n.OUTPUTSELECT
left => state_n.OUTPUTSELECT
left => state_n.OUTPUTSELECT
up => state_n.OUTPUTSELECT
up => state_n.OUTPUTSELECT
up => state_n.OUTPUTSELECT
up => state_n.OUTPUTSELECT
right => state_n.OUTPUTSELECT
right => state_n.OUTPUTSELECT
right => state_n.OUTPUTSELECT
right => state_n.OUTPUTSELECT
down => state_n.OUTPUTSELECT
down => state_n.OUTPUTSELECT
down => state_n.OUTPUTSELECT
down => state_n.OUTPUTSELECT
length[0] => counter256:counter.start_val[0]
length[1] => counter256:counter.start_val[1]
length[2] => counter256:counter.start_val[2]
length[3] => counter256:counter.start_val[3]
length[4] => counter256:counter.start_val[4]
length[5] => counter256:counter.start_val[5]
length[6] => counter256:counter.start_val[6]
length[7] => counter256:counter.start_val[7]
dir[0] => Mux0.IN5
dir[0] => Mux1.IN5
dir[0] => Mux2.IN5
dir[0] => Mux3.IN5
dir[1] => Mux0.IN4
dir[1] => Mux1.IN4
dir[1] => Mux2.IN4
dir[1] => Mux3.IN4
clk => counter256:counter.clk
clk => state_r~1.DATAIN
slow_edge => counter256:counter.slow_edge
slow_edge => state_r.OUTPUTSELECT
slow_edge => state_r.OUTPUTSELECT
slow_edge => state_r.OUTPUTSELECT
slow_edge => state_r.OUTPUTSELECT
reset => counter256:counter.reset
reset => state_r.OUTPUTSELECT
reset => state_r.OUTPUTSELECT
reset => state_r.OUTPUTSELECT
reset => state_r.OUTPUTSELECT
light_type[0] => counter256:counter.init_val[0]
light_type[0] => Equal1.IN1
light_type[0] => Equal2.IN1
light_type[1] => counter256:counter.init_val[1]
light_type[1] => Equal1.IN0
light_type[1] => Equal2.IN0


|lab8|snakes_and_apples:snake|grid_light:center_grid_row[1].center_grid_col[6].light|counter256:counter
count[0] <= count[0]~reg0.DB_MAX_OUTPUT_PORT_TYPE
count[1] <= count[1]~reg0.DB_MAX_OUTPUT_PORT_TYPE
count[2] <= count[2]~reg0.DB_MAX_OUTPUT_PORT_TYPE
count[3] <= count[3]~reg0.DB_MAX_OUTPUT_PORT_TYPE
count[4] <= count[4]~reg0.DB_MAX_OUTPUT_PORT_TYPE
count[5] <= count[5]~reg0.DB_MAX_OUTPUT_PORT_TYPE
count[6] <= count[6]~reg0.DB_MAX_OUTPUT_PORT_TYPE
count[7] <= count[7]~reg0.DB_MAX_OUTPUT_PORT_TYPE
start_val[0] => Add0.IN16
start_val[0] => count.DATAB
start_val[1] => Add0.IN15
start_val[1] => count.DATAB
start_val[2] => Add0.IN14
start_val[2] => count.DATAB
start_val[3] => Add0.IN13
start_val[3] => count.DATAB
start_val[4] => Add0.IN12
start_val[4] => count.DATAB
start_val[5] => Add0.IN11
start_val[5] => count.DATAB
start_val[6] => Add0.IN10
start_val[6] => count.DATAB
start_val[7] => Add0.IN9
start_val[7] => count.DATAB
inc => count.OUTPUTSELECT
inc => count.OUTPUTSELECT
inc => count.OUTPUTSELECT
inc => count.OUTPUTSELECT
inc => count.OUTPUTSELECT
inc => count.OUTPUTSELECT
inc => count.OUTPUTSELECT
inc => count.OUTPUTSELECT
inc => always0.IN0
enable => always0.IN1
enable => count.OUTPUTSELECT
enable => count.OUTPUTSELECT
enable => count.OUTPUTSELECT
enable => count.OUTPUTSELECT
enable => count.OUTPUTSELECT
enable => count.OUTPUTSELECT
enable => count.OUTPUTSELECT
enable => count.OUTPUTSELECT
clk => count[0]~reg0.CLK
clk => count[1]~reg0.CLK
clk => count[2]~reg0.CLK
clk => count[3]~reg0.CLK
clk => count[4]~reg0.CLK
clk => count[5]~reg0.CLK
clk => count[6]~reg0.CLK
clk => count[7]~reg0.CLK
slow_edge => count.OUTPUTSELECT
slow_edge => count.OUTPUTSELECT
slow_edge => count.OUTPUTSELECT
slow_edge => count.OUTPUTSELECT
slow_edge => count.OUTPUTSELECT
slow_edge => count.OUTPUTSELECT
slow_edge => count.OUTPUTSELECT
slow_edge => count.OUTPUTSELECT
reset => count.OUTPUTSELECT
reset => count.OUTPUTSELECT
reset => count.OUTPUTSELECT
reset => count.OUTPUTSELECT
reset => count.OUTPUTSELECT
reset => count.OUTPUTSELECT
reset => count.OUTPUTSELECT
reset => count.OUTPUTSELECT
init_val[0] => count.DATAB
init_val[1] => count.DATAB


|lab8|snakes_and_apples:snake|grid_light:center_grid_row[1].center_grid_col[7].light
green_light_on <= green_light_on.DB_MAX_OUTPUT_PORT_TYPE
head <= head.DB_MAX_OUTPUT_PORT_TYPE
game_over_out <= state_n.DB_MAX_OUTPUT_PORT_TYPE
eating => counter256:counter.inc
eating => always0.IN1
game_over_in => state_n.e_off.OUTPUTSELECT
game_over_in => state_n.e_countdown.OUTPUTSELECT
game_over_in => state_n.e_head.OUTPUTSELECT
game_over_in => state_n.OUTPUTSELECT
left => state_n.OUTPUTSELECT
left => state_n.OUTPUTSELECT
left => state_n.OUTPUTSELECT
left => state_n.OUTPUTSELECT
up => state_n.OUTPUTSELECT
up => state_n.OUTPUTSELECT
up => state_n.OUTPUTSELECT
up => state_n.OUTPUTSELECT
right => state_n.OUTPUTSELECT
right => state_n.OUTPUTSELECT
right => state_n.OUTPUTSELECT
right => state_n.OUTPUTSELECT
down => state_n.OUTPUTSELECT
down => state_n.OUTPUTSELECT
down => state_n.OUTPUTSELECT
down => state_n.OUTPUTSELECT
length[0] => counter256:counter.start_val[0]
length[1] => counter256:counter.start_val[1]
length[2] => counter256:counter.start_val[2]
length[3] => counter256:counter.start_val[3]
length[4] => counter256:counter.start_val[4]
length[5] => counter256:counter.start_val[5]
length[6] => counter256:counter.start_val[6]
length[7] => counter256:counter.start_val[7]
dir[0] => Mux0.IN5
dir[0] => Mux1.IN5
dir[0] => Mux2.IN5
dir[0] => Mux3.IN5
dir[1] => Mux0.IN4
dir[1] => Mux1.IN4
dir[1] => Mux2.IN4
dir[1] => Mux3.IN4
clk => counter256:counter.clk
clk => state_r~1.DATAIN
slow_edge => counter256:counter.slow_edge
slow_edge => state_r.OUTPUTSELECT
slow_edge => state_r.OUTPUTSELECT
slow_edge => state_r.OUTPUTSELECT
slow_edge => state_r.OUTPUTSELECT
reset => counter256:counter.reset
reset => state_r.OUTPUTSELECT
reset => state_r.OUTPUTSELECT
reset => state_r.OUTPUTSELECT
reset => state_r.OUTPUTSELECT
light_type[0] => counter256:counter.init_val[0]
light_type[0] => Equal1.IN1
light_type[0] => Equal2.IN1
light_type[1] => counter256:counter.init_val[1]
light_type[1] => Equal1.IN0
light_type[1] => Equal2.IN0


|lab8|snakes_and_apples:snake|grid_light:center_grid_row[1].center_grid_col[7].light|counter256:counter
count[0] <= count[0]~reg0.DB_MAX_OUTPUT_PORT_TYPE
count[1] <= count[1]~reg0.DB_MAX_OUTPUT_PORT_TYPE
count[2] <= count[2]~reg0.DB_MAX_OUTPUT_PORT_TYPE
count[3] <= count[3]~reg0.DB_MAX_OUTPUT_PORT_TYPE
count[4] <= count[4]~reg0.DB_MAX_OUTPUT_PORT_TYPE
count[5] <= count[5]~reg0.DB_MAX_OUTPUT_PORT_TYPE
count[6] <= count[6]~reg0.DB_MAX_OUTPUT_PORT_TYPE
count[7] <= count[7]~reg0.DB_MAX_OUTPUT_PORT_TYPE
start_val[0] => Add0.IN16
start_val[0] => count.DATAB
start_val[1] => Add0.IN15
start_val[1] => count.DATAB
start_val[2] => Add0.IN14
start_val[2] => count.DATAB
start_val[3] => Add0.IN13
start_val[3] => count.DATAB
start_val[4] => Add0.IN12
start_val[4] => count.DATAB
start_val[5] => Add0.IN11
start_val[5] => count.DATAB
start_val[6] => Add0.IN10
start_val[6] => count.DATAB
start_val[7] => Add0.IN9
start_val[7] => count.DATAB
inc => count.OUTPUTSELECT
inc => count.OUTPUTSELECT
inc => count.OUTPUTSELECT
inc => count.OUTPUTSELECT
inc => count.OUTPUTSELECT
inc => count.OUTPUTSELECT
inc => count.OUTPUTSELECT
inc => count.OUTPUTSELECT
inc => always0.IN0
enable => always0.IN1
enable => count.OUTPUTSELECT
enable => count.OUTPUTSELECT
enable => count.OUTPUTSELECT
enable => count.OUTPUTSELECT
enable => count.OUTPUTSELECT
enable => count.OUTPUTSELECT
enable => count.OUTPUTSELECT
enable => count.OUTPUTSELECT
clk => count[0]~reg0.CLK
clk => count[1]~reg0.CLK
clk => count[2]~reg0.CLK
clk => count[3]~reg0.CLK
clk => count[4]~reg0.CLK
clk => count[5]~reg0.CLK
clk => count[6]~reg0.CLK
clk => count[7]~reg0.CLK
slow_edge => count.OUTPUTSELECT
slow_edge => count.OUTPUTSELECT
slow_edge => count.OUTPUTSELECT
slow_edge => count.OUTPUTSELECT
slow_edge => count.OUTPUTSELECT
slow_edge => count.OUTPUTSELECT
slow_edge => count.OUTPUTSELECT
slow_edge => count.OUTPUTSELECT
reset => count.OUTPUTSELECT
reset => count.OUTPUTSELECT
reset => count.OUTPUTSELECT
reset => count.OUTPUTSELECT
reset => count.OUTPUTSELECT
reset => count.OUTPUTSELECT
reset => count.OUTPUTSELECT
reset => count.OUTPUTSELECT
init_val[0] => count.DATAB
init_val[1] => count.DATAB


|lab8|snakes_and_apples:snake|grid_light:center_grid_row[1].center_grid_col[8].light
green_light_on <= green_light_on.DB_MAX_OUTPUT_PORT_TYPE
head <= head.DB_MAX_OUTPUT_PORT_TYPE
game_over_out <= state_n.DB_MAX_OUTPUT_PORT_TYPE
eating => counter256:counter.inc
eating => always0.IN1
game_over_in => state_n.e_off.OUTPUTSELECT
game_over_in => state_n.e_countdown.OUTPUTSELECT
game_over_in => state_n.e_head.OUTPUTSELECT
game_over_in => state_n.OUTPUTSELECT
left => state_n.OUTPUTSELECT
left => state_n.OUTPUTSELECT
left => state_n.OUTPUTSELECT
left => state_n.OUTPUTSELECT
up => state_n.OUTPUTSELECT
up => state_n.OUTPUTSELECT
up => state_n.OUTPUTSELECT
up => state_n.OUTPUTSELECT
right => state_n.OUTPUTSELECT
right => state_n.OUTPUTSELECT
right => state_n.OUTPUTSELECT
right => state_n.OUTPUTSELECT
down => state_n.OUTPUTSELECT
down => state_n.OUTPUTSELECT
down => state_n.OUTPUTSELECT
down => state_n.OUTPUTSELECT
length[0] => counter256:counter.start_val[0]
length[1] => counter256:counter.start_val[1]
length[2] => counter256:counter.start_val[2]
length[3] => counter256:counter.start_val[3]
length[4] => counter256:counter.start_val[4]
length[5] => counter256:counter.start_val[5]
length[6] => counter256:counter.start_val[6]
length[7] => counter256:counter.start_val[7]
dir[0] => Mux0.IN5
dir[0] => Mux1.IN5
dir[0] => Mux2.IN5
dir[0] => Mux3.IN5
dir[1] => Mux0.IN4
dir[1] => Mux1.IN4
dir[1] => Mux2.IN4
dir[1] => Mux3.IN4
clk => counter256:counter.clk
clk => state_r~1.DATAIN
slow_edge => counter256:counter.slow_edge
slow_edge => state_r.OUTPUTSELECT
slow_edge => state_r.OUTPUTSELECT
slow_edge => state_r.OUTPUTSELECT
slow_edge => state_r.OUTPUTSELECT
reset => counter256:counter.reset
reset => state_r.OUTPUTSELECT
reset => state_r.OUTPUTSELECT
reset => state_r.OUTPUTSELECT
reset => state_r.OUTPUTSELECT
light_type[0] => counter256:counter.init_val[0]
light_type[0] => Equal1.IN1
light_type[0] => Equal2.IN1
light_type[1] => counter256:counter.init_val[1]
light_type[1] => Equal1.IN0
light_type[1] => Equal2.IN0


|lab8|snakes_and_apples:snake|grid_light:center_grid_row[1].center_grid_col[8].light|counter256:counter
count[0] <= count[0]~reg0.DB_MAX_OUTPUT_PORT_TYPE
count[1] <= count[1]~reg0.DB_MAX_OUTPUT_PORT_TYPE
count[2] <= count[2]~reg0.DB_MAX_OUTPUT_PORT_TYPE
count[3] <= count[3]~reg0.DB_MAX_OUTPUT_PORT_TYPE
count[4] <= count[4]~reg0.DB_MAX_OUTPUT_PORT_TYPE
count[5] <= count[5]~reg0.DB_MAX_OUTPUT_PORT_TYPE
count[6] <= count[6]~reg0.DB_MAX_OUTPUT_PORT_TYPE
count[7] <= count[7]~reg0.DB_MAX_OUTPUT_PORT_TYPE
start_val[0] => Add0.IN16
start_val[0] => count.DATAB
start_val[1] => Add0.IN15
start_val[1] => count.DATAB
start_val[2] => Add0.IN14
start_val[2] => count.DATAB
start_val[3] => Add0.IN13
start_val[3] => count.DATAB
start_val[4] => Add0.IN12
start_val[4] => count.DATAB
start_val[5] => Add0.IN11
start_val[5] => count.DATAB
start_val[6] => Add0.IN10
start_val[6] => count.DATAB
start_val[7] => Add0.IN9
start_val[7] => count.DATAB
inc => count.OUTPUTSELECT
inc => count.OUTPUTSELECT
inc => count.OUTPUTSELECT
inc => count.OUTPUTSELECT
inc => count.OUTPUTSELECT
inc => count.OUTPUTSELECT
inc => count.OUTPUTSELECT
inc => count.OUTPUTSELECT
inc => always0.IN0
enable => always0.IN1
enable => count.OUTPUTSELECT
enable => count.OUTPUTSELECT
enable => count.OUTPUTSELECT
enable => count.OUTPUTSELECT
enable => count.OUTPUTSELECT
enable => count.OUTPUTSELECT
enable => count.OUTPUTSELECT
enable => count.OUTPUTSELECT
clk => count[0]~reg0.CLK
clk => count[1]~reg0.CLK
clk => count[2]~reg0.CLK
clk => count[3]~reg0.CLK
clk => count[4]~reg0.CLK
clk => count[5]~reg0.CLK
clk => count[6]~reg0.CLK
clk => count[7]~reg0.CLK
slow_edge => count.OUTPUTSELECT
slow_edge => count.OUTPUTSELECT
slow_edge => count.OUTPUTSELECT
slow_edge => count.OUTPUTSELECT
slow_edge => count.OUTPUTSELECT
slow_edge => count.OUTPUTSELECT
slow_edge => count.OUTPUTSELECT
slow_edge => count.OUTPUTSELECT
reset => count.OUTPUTSELECT
reset => count.OUTPUTSELECT
reset => count.OUTPUTSELECT
reset => count.OUTPUTSELECT
reset => count.OUTPUTSELECT
reset => count.OUTPUTSELECT
reset => count.OUTPUTSELECT
reset => count.OUTPUTSELECT
init_val[0] => count.DATAB
init_val[1] => count.DATAB


|lab8|snakes_and_apples:snake|grid_light:center_grid_row[1].center_grid_col[9].light
green_light_on <= green_light_on.DB_MAX_OUTPUT_PORT_TYPE
head <= head.DB_MAX_OUTPUT_PORT_TYPE
game_over_out <= state_n.DB_MAX_OUTPUT_PORT_TYPE
eating => counter256:counter.inc
eating => always0.IN1
game_over_in => state_n.e_off.OUTPUTSELECT
game_over_in => state_n.e_countdown.OUTPUTSELECT
game_over_in => state_n.e_head.OUTPUTSELECT
game_over_in => state_n.OUTPUTSELECT
left => state_n.OUTPUTSELECT
left => state_n.OUTPUTSELECT
left => state_n.OUTPUTSELECT
left => state_n.OUTPUTSELECT
up => state_n.OUTPUTSELECT
up => state_n.OUTPUTSELECT
up => state_n.OUTPUTSELECT
up => state_n.OUTPUTSELECT
right => state_n.OUTPUTSELECT
right => state_n.OUTPUTSELECT
right => state_n.OUTPUTSELECT
right => state_n.OUTPUTSELECT
down => state_n.OUTPUTSELECT
down => state_n.OUTPUTSELECT
down => state_n.OUTPUTSELECT
down => state_n.OUTPUTSELECT
length[0] => counter256:counter.start_val[0]
length[1] => counter256:counter.start_val[1]
length[2] => counter256:counter.start_val[2]
length[3] => counter256:counter.start_val[3]
length[4] => counter256:counter.start_val[4]
length[5] => counter256:counter.start_val[5]
length[6] => counter256:counter.start_val[6]
length[7] => counter256:counter.start_val[7]
dir[0] => Mux0.IN5
dir[0] => Mux1.IN5
dir[0] => Mux2.IN5
dir[0] => Mux3.IN5
dir[1] => Mux0.IN4
dir[1] => Mux1.IN4
dir[1] => Mux2.IN4
dir[1] => Mux3.IN4
clk => counter256:counter.clk
clk => state_r~1.DATAIN
slow_edge => counter256:counter.slow_edge
slow_edge => state_r.OUTPUTSELECT
slow_edge => state_r.OUTPUTSELECT
slow_edge => state_r.OUTPUTSELECT
slow_edge => state_r.OUTPUTSELECT
reset => counter256:counter.reset
reset => state_r.OUTPUTSELECT
reset => state_r.OUTPUTSELECT
reset => state_r.OUTPUTSELECT
reset => state_r.OUTPUTSELECT
light_type[0] => counter256:counter.init_val[0]
light_type[0] => Equal1.IN1
light_type[0] => Equal2.IN1
light_type[1] => counter256:counter.init_val[1]
light_type[1] => Equal1.IN0
light_type[1] => Equal2.IN0


|lab8|snakes_and_apples:snake|grid_light:center_grid_row[1].center_grid_col[9].light|counter256:counter
count[0] <= count[0]~reg0.DB_MAX_OUTPUT_PORT_TYPE
count[1] <= count[1]~reg0.DB_MAX_OUTPUT_PORT_TYPE
count[2] <= count[2]~reg0.DB_MAX_OUTPUT_PORT_TYPE
count[3] <= count[3]~reg0.DB_MAX_OUTPUT_PORT_TYPE
count[4] <= count[4]~reg0.DB_MAX_OUTPUT_PORT_TYPE
count[5] <= count[5]~reg0.DB_MAX_OUTPUT_PORT_TYPE
count[6] <= count[6]~reg0.DB_MAX_OUTPUT_PORT_TYPE
count[7] <= count[7]~reg0.DB_MAX_OUTPUT_PORT_TYPE
start_val[0] => Add0.IN16
start_val[0] => count.DATAB
start_val[1] => Add0.IN15
start_val[1] => count.DATAB
start_val[2] => Add0.IN14
start_val[2] => count.DATAB
start_val[3] => Add0.IN13
start_val[3] => count.DATAB
start_val[4] => Add0.IN12
start_val[4] => count.DATAB
start_val[5] => Add0.IN11
start_val[5] => count.DATAB
start_val[6] => Add0.IN10
start_val[6] => count.DATAB
start_val[7] => Add0.IN9
start_val[7] => count.DATAB
inc => count.OUTPUTSELECT
inc => count.OUTPUTSELECT
inc => count.OUTPUTSELECT
inc => count.OUTPUTSELECT
inc => count.OUTPUTSELECT
inc => count.OUTPUTSELECT
inc => count.OUTPUTSELECT
inc => count.OUTPUTSELECT
inc => always0.IN0
enable => always0.IN1
enable => count.OUTPUTSELECT
enable => count.OUTPUTSELECT
enable => count.OUTPUTSELECT
enable => count.OUTPUTSELECT
enable => count.OUTPUTSELECT
enable => count.OUTPUTSELECT
enable => count.OUTPUTSELECT
enable => count.OUTPUTSELECT
clk => count[0]~reg0.CLK
clk => count[1]~reg0.CLK
clk => count[2]~reg0.CLK
clk => count[3]~reg0.CLK
clk => count[4]~reg0.CLK
clk => count[5]~reg0.CLK
clk => count[6]~reg0.CLK
clk => count[7]~reg0.CLK
slow_edge => count.OUTPUTSELECT
slow_edge => count.OUTPUTSELECT
slow_edge => count.OUTPUTSELECT
slow_edge => count.OUTPUTSELECT
slow_edge => count.OUTPUTSELECT
slow_edge => count.OUTPUTSELECT
slow_edge => count.OUTPUTSELECT
slow_edge => count.OUTPUTSELECT
reset => count.OUTPUTSELECT
reset => count.OUTPUTSELECT
reset => count.OUTPUTSELECT
reset => count.OUTPUTSELECT
reset => count.OUTPUTSELECT
reset => count.OUTPUTSELECT
reset => count.OUTPUTSELECT
reset => count.OUTPUTSELECT
init_val[0] => count.DATAB
init_val[1] => count.DATAB


|lab8|snakes_and_apples:snake|grid_light:center_grid_row[1].center_grid_col[10].light
green_light_on <= green_light_on.DB_MAX_OUTPUT_PORT_TYPE
head <= head.DB_MAX_OUTPUT_PORT_TYPE
game_over_out <= state_n.DB_MAX_OUTPUT_PORT_TYPE
eating => counter256:counter.inc
eating => always0.IN1
game_over_in => state_n.e_off.OUTPUTSELECT
game_over_in => state_n.e_countdown.OUTPUTSELECT
game_over_in => state_n.e_head.OUTPUTSELECT
game_over_in => state_n.OUTPUTSELECT
left => state_n.OUTPUTSELECT
left => state_n.OUTPUTSELECT
left => state_n.OUTPUTSELECT
left => state_n.OUTPUTSELECT
up => state_n.OUTPUTSELECT
up => state_n.OUTPUTSELECT
up => state_n.OUTPUTSELECT
up => state_n.OUTPUTSELECT
right => state_n.OUTPUTSELECT
right => state_n.OUTPUTSELECT
right => state_n.OUTPUTSELECT
right => state_n.OUTPUTSELECT
down => state_n.OUTPUTSELECT
down => state_n.OUTPUTSELECT
down => state_n.OUTPUTSELECT
down => state_n.OUTPUTSELECT
length[0] => counter256:counter.start_val[0]
length[1] => counter256:counter.start_val[1]
length[2] => counter256:counter.start_val[2]
length[3] => counter256:counter.start_val[3]
length[4] => counter256:counter.start_val[4]
length[5] => counter256:counter.start_val[5]
length[6] => counter256:counter.start_val[6]
length[7] => counter256:counter.start_val[7]
dir[0] => Mux0.IN5
dir[0] => Mux1.IN5
dir[0] => Mux2.IN5
dir[0] => Mux3.IN5
dir[1] => Mux0.IN4
dir[1] => Mux1.IN4
dir[1] => Mux2.IN4
dir[1] => Mux3.IN4
clk => counter256:counter.clk
clk => state_r~1.DATAIN
slow_edge => counter256:counter.slow_edge
slow_edge => state_r.OUTPUTSELECT
slow_edge => state_r.OUTPUTSELECT
slow_edge => state_r.OUTPUTSELECT
slow_edge => state_r.OUTPUTSELECT
reset => counter256:counter.reset
reset => state_r.OUTPUTSELECT
reset => state_r.OUTPUTSELECT
reset => state_r.OUTPUTSELECT
reset => state_r.OUTPUTSELECT
light_type[0] => counter256:counter.init_val[0]
light_type[0] => Equal1.IN1
light_type[0] => Equal2.IN1
light_type[1] => counter256:counter.init_val[1]
light_type[1] => Equal1.IN0
light_type[1] => Equal2.IN0


|lab8|snakes_and_apples:snake|grid_light:center_grid_row[1].center_grid_col[10].light|counter256:counter
count[0] <= count[0]~reg0.DB_MAX_OUTPUT_PORT_TYPE
count[1] <= count[1]~reg0.DB_MAX_OUTPUT_PORT_TYPE
count[2] <= count[2]~reg0.DB_MAX_OUTPUT_PORT_TYPE
count[3] <= count[3]~reg0.DB_MAX_OUTPUT_PORT_TYPE
count[4] <= count[4]~reg0.DB_MAX_OUTPUT_PORT_TYPE
count[5] <= count[5]~reg0.DB_MAX_OUTPUT_PORT_TYPE
count[6] <= count[6]~reg0.DB_MAX_OUTPUT_PORT_TYPE
count[7] <= count[7]~reg0.DB_MAX_OUTPUT_PORT_TYPE
start_val[0] => Add0.IN16
start_val[0] => count.DATAB
start_val[1] => Add0.IN15
start_val[1] => count.DATAB
start_val[2] => Add0.IN14
start_val[2] => count.DATAB
start_val[3] => Add0.IN13
start_val[3] => count.DATAB
start_val[4] => Add0.IN12
start_val[4] => count.DATAB
start_val[5] => Add0.IN11
start_val[5] => count.DATAB
start_val[6] => Add0.IN10
start_val[6] => count.DATAB
start_val[7] => Add0.IN9
start_val[7] => count.DATAB
inc => count.OUTPUTSELECT
inc => count.OUTPUTSELECT
inc => count.OUTPUTSELECT
inc => count.OUTPUTSELECT
inc => count.OUTPUTSELECT
inc => count.OUTPUTSELECT
inc => count.OUTPUTSELECT
inc => count.OUTPUTSELECT
inc => always0.IN0
enable => always0.IN1
enable => count.OUTPUTSELECT
enable => count.OUTPUTSELECT
enable => count.OUTPUTSELECT
enable => count.OUTPUTSELECT
enable => count.OUTPUTSELECT
enable => count.OUTPUTSELECT
enable => count.OUTPUTSELECT
enable => count.OUTPUTSELECT
clk => count[0]~reg0.CLK
clk => count[1]~reg0.CLK
clk => count[2]~reg0.CLK
clk => count[3]~reg0.CLK
clk => count[4]~reg0.CLK
clk => count[5]~reg0.CLK
clk => count[6]~reg0.CLK
clk => count[7]~reg0.CLK
slow_edge => count.OUTPUTSELECT
slow_edge => count.OUTPUTSELECT
slow_edge => count.OUTPUTSELECT
slow_edge => count.OUTPUTSELECT
slow_edge => count.OUTPUTSELECT
slow_edge => count.OUTPUTSELECT
slow_edge => count.OUTPUTSELECT
slow_edge => count.OUTPUTSELECT
reset => count.OUTPUTSELECT
reset => count.OUTPUTSELECT
reset => count.OUTPUTSELECT
reset => count.OUTPUTSELECT
reset => count.OUTPUTSELECT
reset => count.OUTPUTSELECT
reset => count.OUTPUTSELECT
reset => count.OUTPUTSELECT
init_val[0] => count.DATAB
init_val[1] => count.DATAB


|lab8|snakes_and_apples:snake|grid_light:center_grid_row[1].center_grid_col[11].light
green_light_on <= green_light_on.DB_MAX_OUTPUT_PORT_TYPE
head <= head.DB_MAX_OUTPUT_PORT_TYPE
game_over_out <= state_n.DB_MAX_OUTPUT_PORT_TYPE
eating => counter256:counter.inc
eating => always0.IN1
game_over_in => state_n.e_off.OUTPUTSELECT
game_over_in => state_n.e_countdown.OUTPUTSELECT
game_over_in => state_n.e_head.OUTPUTSELECT
game_over_in => state_n.OUTPUTSELECT
left => state_n.OUTPUTSELECT
left => state_n.OUTPUTSELECT
left => state_n.OUTPUTSELECT
left => state_n.OUTPUTSELECT
up => state_n.OUTPUTSELECT
up => state_n.OUTPUTSELECT
up => state_n.OUTPUTSELECT
up => state_n.OUTPUTSELECT
right => state_n.OUTPUTSELECT
right => state_n.OUTPUTSELECT
right => state_n.OUTPUTSELECT
right => state_n.OUTPUTSELECT
down => state_n.OUTPUTSELECT
down => state_n.OUTPUTSELECT
down => state_n.OUTPUTSELECT
down => state_n.OUTPUTSELECT
length[0] => counter256:counter.start_val[0]
length[1] => counter256:counter.start_val[1]
length[2] => counter256:counter.start_val[2]
length[3] => counter256:counter.start_val[3]
length[4] => counter256:counter.start_val[4]
length[5] => counter256:counter.start_val[5]
length[6] => counter256:counter.start_val[6]
length[7] => counter256:counter.start_val[7]
dir[0] => Mux0.IN5
dir[0] => Mux1.IN5
dir[0] => Mux2.IN5
dir[0] => Mux3.IN5
dir[1] => Mux0.IN4
dir[1] => Mux1.IN4
dir[1] => Mux2.IN4
dir[1] => Mux3.IN4
clk => counter256:counter.clk
clk => state_r~1.DATAIN
slow_edge => counter256:counter.slow_edge
slow_edge => state_r.OUTPUTSELECT
slow_edge => state_r.OUTPUTSELECT
slow_edge => state_r.OUTPUTSELECT
slow_edge => state_r.OUTPUTSELECT
reset => counter256:counter.reset
reset => state_r.OUTPUTSELECT
reset => state_r.OUTPUTSELECT
reset => state_r.OUTPUTSELECT
reset => state_r.OUTPUTSELECT
light_type[0] => counter256:counter.init_val[0]
light_type[0] => Equal1.IN1
light_type[0] => Equal2.IN1
light_type[1] => counter256:counter.init_val[1]
light_type[1] => Equal1.IN0
light_type[1] => Equal2.IN0


|lab8|snakes_and_apples:snake|grid_light:center_grid_row[1].center_grid_col[11].light|counter256:counter
count[0] <= count[0]~reg0.DB_MAX_OUTPUT_PORT_TYPE
count[1] <= count[1]~reg0.DB_MAX_OUTPUT_PORT_TYPE
count[2] <= count[2]~reg0.DB_MAX_OUTPUT_PORT_TYPE
count[3] <= count[3]~reg0.DB_MAX_OUTPUT_PORT_TYPE
count[4] <= count[4]~reg0.DB_MAX_OUTPUT_PORT_TYPE
count[5] <= count[5]~reg0.DB_MAX_OUTPUT_PORT_TYPE
count[6] <= count[6]~reg0.DB_MAX_OUTPUT_PORT_TYPE
count[7] <= count[7]~reg0.DB_MAX_OUTPUT_PORT_TYPE
start_val[0] => Add0.IN16
start_val[0] => count.DATAB
start_val[1] => Add0.IN15
start_val[1] => count.DATAB
start_val[2] => Add0.IN14
start_val[2] => count.DATAB
start_val[3] => Add0.IN13
start_val[3] => count.DATAB
start_val[4] => Add0.IN12
start_val[4] => count.DATAB
start_val[5] => Add0.IN11
start_val[5] => count.DATAB
start_val[6] => Add0.IN10
start_val[6] => count.DATAB
start_val[7] => Add0.IN9
start_val[7] => count.DATAB
inc => count.OUTPUTSELECT
inc => count.OUTPUTSELECT
inc => count.OUTPUTSELECT
inc => count.OUTPUTSELECT
inc => count.OUTPUTSELECT
inc => count.OUTPUTSELECT
inc => count.OUTPUTSELECT
inc => count.OUTPUTSELECT
inc => always0.IN0
enable => always0.IN1
enable => count.OUTPUTSELECT
enable => count.OUTPUTSELECT
enable => count.OUTPUTSELECT
enable => count.OUTPUTSELECT
enable => count.OUTPUTSELECT
enable => count.OUTPUTSELECT
enable => count.OUTPUTSELECT
enable => count.OUTPUTSELECT
clk => count[0]~reg0.CLK
clk => count[1]~reg0.CLK
clk => count[2]~reg0.CLK
clk => count[3]~reg0.CLK
clk => count[4]~reg0.CLK
clk => count[5]~reg0.CLK
clk => count[6]~reg0.CLK
clk => count[7]~reg0.CLK
slow_edge => count.OUTPUTSELECT
slow_edge => count.OUTPUTSELECT
slow_edge => count.OUTPUTSELECT
slow_edge => count.OUTPUTSELECT
slow_edge => count.OUTPUTSELECT
slow_edge => count.OUTPUTSELECT
slow_edge => count.OUTPUTSELECT
slow_edge => count.OUTPUTSELECT
reset => count.OUTPUTSELECT
reset => count.OUTPUTSELECT
reset => count.OUTPUTSELECT
reset => count.OUTPUTSELECT
reset => count.OUTPUTSELECT
reset => count.OUTPUTSELECT
reset => count.OUTPUTSELECT
reset => count.OUTPUTSELECT
init_val[0] => count.DATAB
init_val[1] => count.DATAB


|lab8|snakes_and_apples:snake|grid_light:center_grid_row[1].center_grid_col[12].light
green_light_on <= green_light_on.DB_MAX_OUTPUT_PORT_TYPE
head <= head.DB_MAX_OUTPUT_PORT_TYPE
game_over_out <= state_n.DB_MAX_OUTPUT_PORT_TYPE
eating => counter256:counter.inc
eating => always0.IN1
game_over_in => state_n.e_off.OUTPUTSELECT
game_over_in => state_n.e_countdown.OUTPUTSELECT
game_over_in => state_n.e_head.OUTPUTSELECT
game_over_in => state_n.OUTPUTSELECT
left => state_n.OUTPUTSELECT
left => state_n.OUTPUTSELECT
left => state_n.OUTPUTSELECT
left => state_n.OUTPUTSELECT
up => state_n.OUTPUTSELECT
up => state_n.OUTPUTSELECT
up => state_n.OUTPUTSELECT
up => state_n.OUTPUTSELECT
right => state_n.OUTPUTSELECT
right => state_n.OUTPUTSELECT
right => state_n.OUTPUTSELECT
right => state_n.OUTPUTSELECT
down => state_n.OUTPUTSELECT
down => state_n.OUTPUTSELECT
down => state_n.OUTPUTSELECT
down => state_n.OUTPUTSELECT
length[0] => counter256:counter.start_val[0]
length[1] => counter256:counter.start_val[1]
length[2] => counter256:counter.start_val[2]
length[3] => counter256:counter.start_val[3]
length[4] => counter256:counter.start_val[4]
length[5] => counter256:counter.start_val[5]
length[6] => counter256:counter.start_val[6]
length[7] => counter256:counter.start_val[7]
dir[0] => Mux0.IN5
dir[0] => Mux1.IN5
dir[0] => Mux2.IN5
dir[0] => Mux3.IN5
dir[1] => Mux0.IN4
dir[1] => Mux1.IN4
dir[1] => Mux2.IN4
dir[1] => Mux3.IN4
clk => counter256:counter.clk
clk => state_r~1.DATAIN
slow_edge => counter256:counter.slow_edge
slow_edge => state_r.OUTPUTSELECT
slow_edge => state_r.OUTPUTSELECT
slow_edge => state_r.OUTPUTSELECT
slow_edge => state_r.OUTPUTSELECT
reset => counter256:counter.reset
reset => state_r.OUTPUTSELECT
reset => state_r.OUTPUTSELECT
reset => state_r.OUTPUTSELECT
reset => state_r.OUTPUTSELECT
light_type[0] => counter256:counter.init_val[0]
light_type[0] => Equal1.IN1
light_type[0] => Equal2.IN1
light_type[1] => counter256:counter.init_val[1]
light_type[1] => Equal1.IN0
light_type[1] => Equal2.IN0


|lab8|snakes_and_apples:snake|grid_light:center_grid_row[1].center_grid_col[12].light|counter256:counter
count[0] <= count[0]~reg0.DB_MAX_OUTPUT_PORT_TYPE
count[1] <= count[1]~reg0.DB_MAX_OUTPUT_PORT_TYPE
count[2] <= count[2]~reg0.DB_MAX_OUTPUT_PORT_TYPE
count[3] <= count[3]~reg0.DB_MAX_OUTPUT_PORT_TYPE
count[4] <= count[4]~reg0.DB_MAX_OUTPUT_PORT_TYPE
count[5] <= count[5]~reg0.DB_MAX_OUTPUT_PORT_TYPE
count[6] <= count[6]~reg0.DB_MAX_OUTPUT_PORT_TYPE
count[7] <= count[7]~reg0.DB_MAX_OUTPUT_PORT_TYPE
start_val[0] => Add0.IN16
start_val[0] => count.DATAB
start_val[1] => Add0.IN15
start_val[1] => count.DATAB
start_val[2] => Add0.IN14
start_val[2] => count.DATAB
start_val[3] => Add0.IN13
start_val[3] => count.DATAB
start_val[4] => Add0.IN12
start_val[4] => count.DATAB
start_val[5] => Add0.IN11
start_val[5] => count.DATAB
start_val[6] => Add0.IN10
start_val[6] => count.DATAB
start_val[7] => Add0.IN9
start_val[7] => count.DATAB
inc => count.OUTPUTSELECT
inc => count.OUTPUTSELECT
inc => count.OUTPUTSELECT
inc => count.OUTPUTSELECT
inc => count.OUTPUTSELECT
inc => count.OUTPUTSELECT
inc => count.OUTPUTSELECT
inc => count.OUTPUTSELECT
inc => always0.IN0
enable => always0.IN1
enable => count.OUTPUTSELECT
enable => count.OUTPUTSELECT
enable => count.OUTPUTSELECT
enable => count.OUTPUTSELECT
enable => count.OUTPUTSELECT
enable => count.OUTPUTSELECT
enable => count.OUTPUTSELECT
enable => count.OUTPUTSELECT
clk => count[0]~reg0.CLK
clk => count[1]~reg0.CLK
clk => count[2]~reg0.CLK
clk => count[3]~reg0.CLK
clk => count[4]~reg0.CLK
clk => count[5]~reg0.CLK
clk => count[6]~reg0.CLK
clk => count[7]~reg0.CLK
slow_edge => count.OUTPUTSELECT
slow_edge => count.OUTPUTSELECT
slow_edge => count.OUTPUTSELECT
slow_edge => count.OUTPUTSELECT
slow_edge => count.OUTPUTSELECT
slow_edge => count.OUTPUTSELECT
slow_edge => count.OUTPUTSELECT
slow_edge => count.OUTPUTSELECT
reset => count.OUTPUTSELECT
reset => count.OUTPUTSELECT
reset => count.OUTPUTSELECT
reset => count.OUTPUTSELECT
reset => count.OUTPUTSELECT
reset => count.OUTPUTSELECT
reset => count.OUTPUTSELECT
reset => count.OUTPUTSELECT
init_val[0] => count.DATAB
init_val[1] => count.DATAB


|lab8|snakes_and_apples:snake|grid_light:center_grid_row[1].center_grid_col[13].light
green_light_on <= green_light_on.DB_MAX_OUTPUT_PORT_TYPE
head <= head.DB_MAX_OUTPUT_PORT_TYPE
game_over_out <= state_n.DB_MAX_OUTPUT_PORT_TYPE
eating => counter256:counter.inc
eating => always0.IN1
game_over_in => state_n.e_off.OUTPUTSELECT
game_over_in => state_n.e_countdown.OUTPUTSELECT
game_over_in => state_n.e_head.OUTPUTSELECT
game_over_in => state_n.OUTPUTSELECT
left => state_n.OUTPUTSELECT
left => state_n.OUTPUTSELECT
left => state_n.OUTPUTSELECT
left => state_n.OUTPUTSELECT
up => state_n.OUTPUTSELECT
up => state_n.OUTPUTSELECT
up => state_n.OUTPUTSELECT
up => state_n.OUTPUTSELECT
right => state_n.OUTPUTSELECT
right => state_n.OUTPUTSELECT
right => state_n.OUTPUTSELECT
right => state_n.OUTPUTSELECT
down => state_n.OUTPUTSELECT
down => state_n.OUTPUTSELECT
down => state_n.OUTPUTSELECT
down => state_n.OUTPUTSELECT
length[0] => counter256:counter.start_val[0]
length[1] => counter256:counter.start_val[1]
length[2] => counter256:counter.start_val[2]
length[3] => counter256:counter.start_val[3]
length[4] => counter256:counter.start_val[4]
length[5] => counter256:counter.start_val[5]
length[6] => counter256:counter.start_val[6]
length[7] => counter256:counter.start_val[7]
dir[0] => Mux0.IN5
dir[0] => Mux1.IN5
dir[0] => Mux2.IN5
dir[0] => Mux3.IN5
dir[1] => Mux0.IN4
dir[1] => Mux1.IN4
dir[1] => Mux2.IN4
dir[1] => Mux3.IN4
clk => counter256:counter.clk
clk => state_r~1.DATAIN
slow_edge => counter256:counter.slow_edge
slow_edge => state_r.OUTPUTSELECT
slow_edge => state_r.OUTPUTSELECT
slow_edge => state_r.OUTPUTSELECT
slow_edge => state_r.OUTPUTSELECT
reset => counter256:counter.reset
reset => state_r.OUTPUTSELECT
reset => state_r.OUTPUTSELECT
reset => state_r.OUTPUTSELECT
reset => state_r.OUTPUTSELECT
light_type[0] => counter256:counter.init_val[0]
light_type[0] => Equal1.IN1
light_type[0] => Equal2.IN1
light_type[1] => counter256:counter.init_val[1]
light_type[1] => Equal1.IN0
light_type[1] => Equal2.IN0


|lab8|snakes_and_apples:snake|grid_light:center_grid_row[1].center_grid_col[13].light|counter256:counter
count[0] <= count[0]~reg0.DB_MAX_OUTPUT_PORT_TYPE
count[1] <= count[1]~reg0.DB_MAX_OUTPUT_PORT_TYPE
count[2] <= count[2]~reg0.DB_MAX_OUTPUT_PORT_TYPE
count[3] <= count[3]~reg0.DB_MAX_OUTPUT_PORT_TYPE
count[4] <= count[4]~reg0.DB_MAX_OUTPUT_PORT_TYPE
count[5] <= count[5]~reg0.DB_MAX_OUTPUT_PORT_TYPE
count[6] <= count[6]~reg0.DB_MAX_OUTPUT_PORT_TYPE
count[7] <= count[7]~reg0.DB_MAX_OUTPUT_PORT_TYPE
start_val[0] => Add0.IN16
start_val[0] => count.DATAB
start_val[1] => Add0.IN15
start_val[1] => count.DATAB
start_val[2] => Add0.IN14
start_val[2] => count.DATAB
start_val[3] => Add0.IN13
start_val[3] => count.DATAB
start_val[4] => Add0.IN12
start_val[4] => count.DATAB
start_val[5] => Add0.IN11
start_val[5] => count.DATAB
start_val[6] => Add0.IN10
start_val[6] => count.DATAB
start_val[7] => Add0.IN9
start_val[7] => count.DATAB
inc => count.OUTPUTSELECT
inc => count.OUTPUTSELECT
inc => count.OUTPUTSELECT
inc => count.OUTPUTSELECT
inc => count.OUTPUTSELECT
inc => count.OUTPUTSELECT
inc => count.OUTPUTSELECT
inc => count.OUTPUTSELECT
inc => always0.IN0
enable => always0.IN1
enable => count.OUTPUTSELECT
enable => count.OUTPUTSELECT
enable => count.OUTPUTSELECT
enable => count.OUTPUTSELECT
enable => count.OUTPUTSELECT
enable => count.OUTPUTSELECT
enable => count.OUTPUTSELECT
enable => count.OUTPUTSELECT
clk => count[0]~reg0.CLK
clk => count[1]~reg0.CLK
clk => count[2]~reg0.CLK
clk => count[3]~reg0.CLK
clk => count[4]~reg0.CLK
clk => count[5]~reg0.CLK
clk => count[6]~reg0.CLK
clk => count[7]~reg0.CLK
slow_edge => count.OUTPUTSELECT
slow_edge => count.OUTPUTSELECT
slow_edge => count.OUTPUTSELECT
slow_edge => count.OUTPUTSELECT
slow_edge => count.OUTPUTSELECT
slow_edge => count.OUTPUTSELECT
slow_edge => count.OUTPUTSELECT
slow_edge => count.OUTPUTSELECT
reset => count.OUTPUTSELECT
reset => count.OUTPUTSELECT
reset => count.OUTPUTSELECT
reset => count.OUTPUTSELECT
reset => count.OUTPUTSELECT
reset => count.OUTPUTSELECT
reset => count.OUTPUTSELECT
reset => count.OUTPUTSELECT
init_val[0] => count.DATAB
init_val[1] => count.DATAB


|lab8|snakes_and_apples:snake|grid_light:center_grid_row[1].center_grid_col[14].light
green_light_on <= green_light_on.DB_MAX_OUTPUT_PORT_TYPE
head <= head.DB_MAX_OUTPUT_PORT_TYPE
game_over_out <= state_n.DB_MAX_OUTPUT_PORT_TYPE
eating => counter256:counter.inc
eating => always0.IN1
game_over_in => state_n.e_off.OUTPUTSELECT
game_over_in => state_n.e_countdown.OUTPUTSELECT
game_over_in => state_n.e_head.OUTPUTSELECT
game_over_in => state_n.OUTPUTSELECT
left => state_n.OUTPUTSELECT
left => state_n.OUTPUTSELECT
left => state_n.OUTPUTSELECT
left => state_n.OUTPUTSELECT
up => state_n.OUTPUTSELECT
up => state_n.OUTPUTSELECT
up => state_n.OUTPUTSELECT
up => state_n.OUTPUTSELECT
right => state_n.OUTPUTSELECT
right => state_n.OUTPUTSELECT
right => state_n.OUTPUTSELECT
right => state_n.OUTPUTSELECT
down => state_n.OUTPUTSELECT
down => state_n.OUTPUTSELECT
down => state_n.OUTPUTSELECT
down => state_n.OUTPUTSELECT
length[0] => counter256:counter.start_val[0]
length[1] => counter256:counter.start_val[1]
length[2] => counter256:counter.start_val[2]
length[3] => counter256:counter.start_val[3]
length[4] => counter256:counter.start_val[4]
length[5] => counter256:counter.start_val[5]
length[6] => counter256:counter.start_val[6]
length[7] => counter256:counter.start_val[7]
dir[0] => Mux0.IN5
dir[0] => Mux1.IN5
dir[0] => Mux2.IN5
dir[0] => Mux3.IN5
dir[1] => Mux0.IN4
dir[1] => Mux1.IN4
dir[1] => Mux2.IN4
dir[1] => Mux3.IN4
clk => counter256:counter.clk
clk => state_r~1.DATAIN
slow_edge => counter256:counter.slow_edge
slow_edge => state_r.OUTPUTSELECT
slow_edge => state_r.OUTPUTSELECT
slow_edge => state_r.OUTPUTSELECT
slow_edge => state_r.OUTPUTSELECT
reset => counter256:counter.reset
reset => state_r.OUTPUTSELECT
reset => state_r.OUTPUTSELECT
reset => state_r.OUTPUTSELECT
reset => state_r.OUTPUTSELECT
light_type[0] => counter256:counter.init_val[0]
light_type[0] => Equal1.IN1
light_type[0] => Equal2.IN1
light_type[1] => counter256:counter.init_val[1]
light_type[1] => Equal1.IN0
light_type[1] => Equal2.IN0


|lab8|snakes_and_apples:snake|grid_light:center_grid_row[1].center_grid_col[14].light|counter256:counter
count[0] <= count[0]~reg0.DB_MAX_OUTPUT_PORT_TYPE
count[1] <= count[1]~reg0.DB_MAX_OUTPUT_PORT_TYPE
count[2] <= count[2]~reg0.DB_MAX_OUTPUT_PORT_TYPE
count[3] <= count[3]~reg0.DB_MAX_OUTPUT_PORT_TYPE
count[4] <= count[4]~reg0.DB_MAX_OUTPUT_PORT_TYPE
count[5] <= count[5]~reg0.DB_MAX_OUTPUT_PORT_TYPE
count[6] <= count[6]~reg0.DB_MAX_OUTPUT_PORT_TYPE
count[7] <= count[7]~reg0.DB_MAX_OUTPUT_PORT_TYPE
start_val[0] => Add0.IN16
start_val[0] => count.DATAB
start_val[1] => Add0.IN15
start_val[1] => count.DATAB
start_val[2] => Add0.IN14
start_val[2] => count.DATAB
start_val[3] => Add0.IN13
start_val[3] => count.DATAB
start_val[4] => Add0.IN12
start_val[4] => count.DATAB
start_val[5] => Add0.IN11
start_val[5] => count.DATAB
start_val[6] => Add0.IN10
start_val[6] => count.DATAB
start_val[7] => Add0.IN9
start_val[7] => count.DATAB
inc => count.OUTPUTSELECT
inc => count.OUTPUTSELECT
inc => count.OUTPUTSELECT
inc => count.OUTPUTSELECT
inc => count.OUTPUTSELECT
inc => count.OUTPUTSELECT
inc => count.OUTPUTSELECT
inc => count.OUTPUTSELECT
inc => always0.IN0
enable => always0.IN1
enable => count.OUTPUTSELECT
enable => count.OUTPUTSELECT
enable => count.OUTPUTSELECT
enable => count.OUTPUTSELECT
enable => count.OUTPUTSELECT
enable => count.OUTPUTSELECT
enable => count.OUTPUTSELECT
enable => count.OUTPUTSELECT
clk => count[0]~reg0.CLK
clk => count[1]~reg0.CLK
clk => count[2]~reg0.CLK
clk => count[3]~reg0.CLK
clk => count[4]~reg0.CLK
clk => count[5]~reg0.CLK
clk => count[6]~reg0.CLK
clk => count[7]~reg0.CLK
slow_edge => count.OUTPUTSELECT
slow_edge => count.OUTPUTSELECT
slow_edge => count.OUTPUTSELECT
slow_edge => count.OUTPUTSELECT
slow_edge => count.OUTPUTSELECT
slow_edge => count.OUTPUTSELECT
slow_edge => count.OUTPUTSELECT
slow_edge => count.OUTPUTSELECT
reset => count.OUTPUTSELECT
reset => count.OUTPUTSELECT
reset => count.OUTPUTSELECT
reset => count.OUTPUTSELECT
reset => count.OUTPUTSELECT
reset => count.OUTPUTSELECT
reset => count.OUTPUTSELECT
reset => count.OUTPUTSELECT
init_val[0] => count.DATAB
init_val[1] => count.DATAB


|lab8|snakes_and_apples:snake|grid_light:center_grid_row[2].center_grid_col[1].light
green_light_on <= green_light_on.DB_MAX_OUTPUT_PORT_TYPE
head <= head.DB_MAX_OUTPUT_PORT_TYPE
game_over_out <= state_n.DB_MAX_OUTPUT_PORT_TYPE
eating => counter256:counter.inc
eating => always0.IN1
game_over_in => state_n.e_off.OUTPUTSELECT
game_over_in => state_n.e_countdown.OUTPUTSELECT
game_over_in => state_n.e_head.OUTPUTSELECT
game_over_in => state_n.OUTPUTSELECT
left => state_n.OUTPUTSELECT
left => state_n.OUTPUTSELECT
left => state_n.OUTPUTSELECT
left => state_n.OUTPUTSELECT
up => state_n.OUTPUTSELECT
up => state_n.OUTPUTSELECT
up => state_n.OUTPUTSELECT
up => state_n.OUTPUTSELECT
right => state_n.OUTPUTSELECT
right => state_n.OUTPUTSELECT
right => state_n.OUTPUTSELECT
right => state_n.OUTPUTSELECT
down => state_n.OUTPUTSELECT
down => state_n.OUTPUTSELECT
down => state_n.OUTPUTSELECT
down => state_n.OUTPUTSELECT
length[0] => counter256:counter.start_val[0]
length[1] => counter256:counter.start_val[1]
length[2] => counter256:counter.start_val[2]
length[3] => counter256:counter.start_val[3]
length[4] => counter256:counter.start_val[4]
length[5] => counter256:counter.start_val[5]
length[6] => counter256:counter.start_val[6]
length[7] => counter256:counter.start_val[7]
dir[0] => Mux0.IN5
dir[0] => Mux1.IN5
dir[0] => Mux2.IN5
dir[0] => Mux3.IN5
dir[1] => Mux0.IN4
dir[1] => Mux1.IN4
dir[1] => Mux2.IN4
dir[1] => Mux3.IN4
clk => counter256:counter.clk
clk => state_r~1.DATAIN
slow_edge => counter256:counter.slow_edge
slow_edge => state_r.OUTPUTSELECT
slow_edge => state_r.OUTPUTSELECT
slow_edge => state_r.OUTPUTSELECT
slow_edge => state_r.OUTPUTSELECT
reset => counter256:counter.reset
reset => state_r.OUTPUTSELECT
reset => state_r.OUTPUTSELECT
reset => state_r.OUTPUTSELECT
reset => state_r.OUTPUTSELECT
light_type[0] => counter256:counter.init_val[0]
light_type[0] => Equal1.IN1
light_type[0] => Equal2.IN1
light_type[1] => counter256:counter.init_val[1]
light_type[1] => Equal1.IN0
light_type[1] => Equal2.IN0


|lab8|snakes_and_apples:snake|grid_light:center_grid_row[2].center_grid_col[1].light|counter256:counter
count[0] <= count[0]~reg0.DB_MAX_OUTPUT_PORT_TYPE
count[1] <= count[1]~reg0.DB_MAX_OUTPUT_PORT_TYPE
count[2] <= count[2]~reg0.DB_MAX_OUTPUT_PORT_TYPE
count[3] <= count[3]~reg0.DB_MAX_OUTPUT_PORT_TYPE
count[4] <= count[4]~reg0.DB_MAX_OUTPUT_PORT_TYPE
count[5] <= count[5]~reg0.DB_MAX_OUTPUT_PORT_TYPE
count[6] <= count[6]~reg0.DB_MAX_OUTPUT_PORT_TYPE
count[7] <= count[7]~reg0.DB_MAX_OUTPUT_PORT_TYPE
start_val[0] => Add0.IN16
start_val[0] => count.DATAB
start_val[1] => Add0.IN15
start_val[1] => count.DATAB
start_val[2] => Add0.IN14
start_val[2] => count.DATAB
start_val[3] => Add0.IN13
start_val[3] => count.DATAB
start_val[4] => Add0.IN12
start_val[4] => count.DATAB
start_val[5] => Add0.IN11
start_val[5] => count.DATAB
start_val[6] => Add0.IN10
start_val[6] => count.DATAB
start_val[7] => Add0.IN9
start_val[7] => count.DATAB
inc => count.OUTPUTSELECT
inc => count.OUTPUTSELECT
inc => count.OUTPUTSELECT
inc => count.OUTPUTSELECT
inc => count.OUTPUTSELECT
inc => count.OUTPUTSELECT
inc => count.OUTPUTSELECT
inc => count.OUTPUTSELECT
inc => always0.IN0
enable => always0.IN1
enable => count.OUTPUTSELECT
enable => count.OUTPUTSELECT
enable => count.OUTPUTSELECT
enable => count.OUTPUTSELECT
enable => count.OUTPUTSELECT
enable => count.OUTPUTSELECT
enable => count.OUTPUTSELECT
enable => count.OUTPUTSELECT
clk => count[0]~reg0.CLK
clk => count[1]~reg0.CLK
clk => count[2]~reg0.CLK
clk => count[3]~reg0.CLK
clk => count[4]~reg0.CLK
clk => count[5]~reg0.CLK
clk => count[6]~reg0.CLK
clk => count[7]~reg0.CLK
slow_edge => count.OUTPUTSELECT
slow_edge => count.OUTPUTSELECT
slow_edge => count.OUTPUTSELECT
slow_edge => count.OUTPUTSELECT
slow_edge => count.OUTPUTSELECT
slow_edge => count.OUTPUTSELECT
slow_edge => count.OUTPUTSELECT
slow_edge => count.OUTPUTSELECT
reset => count.OUTPUTSELECT
reset => count.OUTPUTSELECT
reset => count.OUTPUTSELECT
reset => count.OUTPUTSELECT
reset => count.OUTPUTSELECT
reset => count.OUTPUTSELECT
reset => count.OUTPUTSELECT
reset => count.OUTPUTSELECT
init_val[0] => count.DATAB
init_val[1] => count.DATAB


|lab8|snakes_and_apples:snake|grid_light:center_grid_row[2].center_grid_col[2].light
green_light_on <= green_light_on.DB_MAX_OUTPUT_PORT_TYPE
head <= head.DB_MAX_OUTPUT_PORT_TYPE
game_over_out <= state_n.DB_MAX_OUTPUT_PORT_TYPE
eating => counter256:counter.inc
eating => always0.IN1
game_over_in => state_n.e_off.OUTPUTSELECT
game_over_in => state_n.e_countdown.OUTPUTSELECT
game_over_in => state_n.e_head.OUTPUTSELECT
game_over_in => state_n.OUTPUTSELECT
left => state_n.OUTPUTSELECT
left => state_n.OUTPUTSELECT
left => state_n.OUTPUTSELECT
left => state_n.OUTPUTSELECT
up => state_n.OUTPUTSELECT
up => state_n.OUTPUTSELECT
up => state_n.OUTPUTSELECT
up => state_n.OUTPUTSELECT
right => state_n.OUTPUTSELECT
right => state_n.OUTPUTSELECT
right => state_n.OUTPUTSELECT
right => state_n.OUTPUTSELECT
down => state_n.OUTPUTSELECT
down => state_n.OUTPUTSELECT
down => state_n.OUTPUTSELECT
down => state_n.OUTPUTSELECT
length[0] => counter256:counter.start_val[0]
length[1] => counter256:counter.start_val[1]
length[2] => counter256:counter.start_val[2]
length[3] => counter256:counter.start_val[3]
length[4] => counter256:counter.start_val[4]
length[5] => counter256:counter.start_val[5]
length[6] => counter256:counter.start_val[6]
length[7] => counter256:counter.start_val[7]
dir[0] => Mux0.IN5
dir[0] => Mux1.IN5
dir[0] => Mux2.IN5
dir[0] => Mux3.IN5
dir[1] => Mux0.IN4
dir[1] => Mux1.IN4
dir[1] => Mux2.IN4
dir[1] => Mux3.IN4
clk => counter256:counter.clk
clk => state_r~1.DATAIN
slow_edge => counter256:counter.slow_edge
slow_edge => state_r.OUTPUTSELECT
slow_edge => state_r.OUTPUTSELECT
slow_edge => state_r.OUTPUTSELECT
slow_edge => state_r.OUTPUTSELECT
reset => counter256:counter.reset
reset => state_r.OUTPUTSELECT
reset => state_r.OUTPUTSELECT
reset => state_r.OUTPUTSELECT
reset => state_r.OUTPUTSELECT
light_type[0] => counter256:counter.init_val[0]
light_type[0] => Equal1.IN1
light_type[0] => Equal2.IN1
light_type[1] => counter256:counter.init_val[1]
light_type[1] => Equal1.IN0
light_type[1] => Equal2.IN0


|lab8|snakes_and_apples:snake|grid_light:center_grid_row[2].center_grid_col[2].light|counter256:counter
count[0] <= count[0]~reg0.DB_MAX_OUTPUT_PORT_TYPE
count[1] <= count[1]~reg0.DB_MAX_OUTPUT_PORT_TYPE
count[2] <= count[2]~reg0.DB_MAX_OUTPUT_PORT_TYPE
count[3] <= count[3]~reg0.DB_MAX_OUTPUT_PORT_TYPE
count[4] <= count[4]~reg0.DB_MAX_OUTPUT_PORT_TYPE
count[5] <= count[5]~reg0.DB_MAX_OUTPUT_PORT_TYPE
count[6] <= count[6]~reg0.DB_MAX_OUTPUT_PORT_TYPE
count[7] <= count[7]~reg0.DB_MAX_OUTPUT_PORT_TYPE
start_val[0] => Add0.IN16
start_val[0] => count.DATAB
start_val[1] => Add0.IN15
start_val[1] => count.DATAB
start_val[2] => Add0.IN14
start_val[2] => count.DATAB
start_val[3] => Add0.IN13
start_val[3] => count.DATAB
start_val[4] => Add0.IN12
start_val[4] => count.DATAB
start_val[5] => Add0.IN11
start_val[5] => count.DATAB
start_val[6] => Add0.IN10
start_val[6] => count.DATAB
start_val[7] => Add0.IN9
start_val[7] => count.DATAB
inc => count.OUTPUTSELECT
inc => count.OUTPUTSELECT
inc => count.OUTPUTSELECT
inc => count.OUTPUTSELECT
inc => count.OUTPUTSELECT
inc => count.OUTPUTSELECT
inc => count.OUTPUTSELECT
inc => count.OUTPUTSELECT
inc => always0.IN0
enable => always0.IN1
enable => count.OUTPUTSELECT
enable => count.OUTPUTSELECT
enable => count.OUTPUTSELECT
enable => count.OUTPUTSELECT
enable => count.OUTPUTSELECT
enable => count.OUTPUTSELECT
enable => count.OUTPUTSELECT
enable => count.OUTPUTSELECT
clk => count[0]~reg0.CLK
clk => count[1]~reg0.CLK
clk => count[2]~reg0.CLK
clk => count[3]~reg0.CLK
clk => count[4]~reg0.CLK
clk => count[5]~reg0.CLK
clk => count[6]~reg0.CLK
clk => count[7]~reg0.CLK
slow_edge => count.OUTPUTSELECT
slow_edge => count.OUTPUTSELECT
slow_edge => count.OUTPUTSELECT
slow_edge => count.OUTPUTSELECT
slow_edge => count.OUTPUTSELECT
slow_edge => count.OUTPUTSELECT
slow_edge => count.OUTPUTSELECT
slow_edge => count.OUTPUTSELECT
reset => count.OUTPUTSELECT
reset => count.OUTPUTSELECT
reset => count.OUTPUTSELECT
reset => count.OUTPUTSELECT
reset => count.OUTPUTSELECT
reset => count.OUTPUTSELECT
reset => count.OUTPUTSELECT
reset => count.OUTPUTSELECT
init_val[0] => count.DATAB
init_val[1] => count.DATAB


|lab8|snakes_and_apples:snake|grid_light:center_grid_row[2].center_grid_col[3].light
green_light_on <= green_light_on.DB_MAX_OUTPUT_PORT_TYPE
head <= head.DB_MAX_OUTPUT_PORT_TYPE
game_over_out <= state_n.DB_MAX_OUTPUT_PORT_TYPE
eating => counter256:counter.inc
eating => always0.IN1
game_over_in => state_n.e_off.OUTPUTSELECT
game_over_in => state_n.e_countdown.OUTPUTSELECT
game_over_in => state_n.e_head.OUTPUTSELECT
game_over_in => state_n.OUTPUTSELECT
left => state_n.OUTPUTSELECT
left => state_n.OUTPUTSELECT
left => state_n.OUTPUTSELECT
left => state_n.OUTPUTSELECT
up => state_n.OUTPUTSELECT
up => state_n.OUTPUTSELECT
up => state_n.OUTPUTSELECT
up => state_n.OUTPUTSELECT
right => state_n.OUTPUTSELECT
right => state_n.OUTPUTSELECT
right => state_n.OUTPUTSELECT
right => state_n.OUTPUTSELECT
down => state_n.OUTPUTSELECT
down => state_n.OUTPUTSELECT
down => state_n.OUTPUTSELECT
down => state_n.OUTPUTSELECT
length[0] => counter256:counter.start_val[0]
length[1] => counter256:counter.start_val[1]
length[2] => counter256:counter.start_val[2]
length[3] => counter256:counter.start_val[3]
length[4] => counter256:counter.start_val[4]
length[5] => counter256:counter.start_val[5]
length[6] => counter256:counter.start_val[6]
length[7] => counter256:counter.start_val[7]
dir[0] => Mux0.IN5
dir[0] => Mux1.IN5
dir[0] => Mux2.IN5
dir[0] => Mux3.IN5
dir[1] => Mux0.IN4
dir[1] => Mux1.IN4
dir[1] => Mux2.IN4
dir[1] => Mux3.IN4
clk => counter256:counter.clk
clk => state_r~1.DATAIN
slow_edge => counter256:counter.slow_edge
slow_edge => state_r.OUTPUTSELECT
slow_edge => state_r.OUTPUTSELECT
slow_edge => state_r.OUTPUTSELECT
slow_edge => state_r.OUTPUTSELECT
reset => counter256:counter.reset
reset => state_r.OUTPUTSELECT
reset => state_r.OUTPUTSELECT
reset => state_r.OUTPUTSELECT
reset => state_r.OUTPUTSELECT
light_type[0] => counter256:counter.init_val[0]
light_type[0] => Equal1.IN1
light_type[0] => Equal2.IN1
light_type[1] => counter256:counter.init_val[1]
light_type[1] => Equal1.IN0
light_type[1] => Equal2.IN0


|lab8|snakes_and_apples:snake|grid_light:center_grid_row[2].center_grid_col[3].light|counter256:counter
count[0] <= count[0]~reg0.DB_MAX_OUTPUT_PORT_TYPE
count[1] <= count[1]~reg0.DB_MAX_OUTPUT_PORT_TYPE
count[2] <= count[2]~reg0.DB_MAX_OUTPUT_PORT_TYPE
count[3] <= count[3]~reg0.DB_MAX_OUTPUT_PORT_TYPE
count[4] <= count[4]~reg0.DB_MAX_OUTPUT_PORT_TYPE
count[5] <= count[5]~reg0.DB_MAX_OUTPUT_PORT_TYPE
count[6] <= count[6]~reg0.DB_MAX_OUTPUT_PORT_TYPE
count[7] <= count[7]~reg0.DB_MAX_OUTPUT_PORT_TYPE
start_val[0] => Add0.IN16
start_val[0] => count.DATAB
start_val[1] => Add0.IN15
start_val[1] => count.DATAB
start_val[2] => Add0.IN14
start_val[2] => count.DATAB
start_val[3] => Add0.IN13
start_val[3] => count.DATAB
start_val[4] => Add0.IN12
start_val[4] => count.DATAB
start_val[5] => Add0.IN11
start_val[5] => count.DATAB
start_val[6] => Add0.IN10
start_val[6] => count.DATAB
start_val[7] => Add0.IN9
start_val[7] => count.DATAB
inc => count.OUTPUTSELECT
inc => count.OUTPUTSELECT
inc => count.OUTPUTSELECT
inc => count.OUTPUTSELECT
inc => count.OUTPUTSELECT
inc => count.OUTPUTSELECT
inc => count.OUTPUTSELECT
inc => count.OUTPUTSELECT
inc => always0.IN0
enable => always0.IN1
enable => count.OUTPUTSELECT
enable => count.OUTPUTSELECT
enable => count.OUTPUTSELECT
enable => count.OUTPUTSELECT
enable => count.OUTPUTSELECT
enable => count.OUTPUTSELECT
enable => count.OUTPUTSELECT
enable => count.OUTPUTSELECT
clk => count[0]~reg0.CLK
clk => count[1]~reg0.CLK
clk => count[2]~reg0.CLK
clk => count[3]~reg0.CLK
clk => count[4]~reg0.CLK
clk => count[5]~reg0.CLK
clk => count[6]~reg0.CLK
clk => count[7]~reg0.CLK
slow_edge => count.OUTPUTSELECT
slow_edge => count.OUTPUTSELECT
slow_edge => count.OUTPUTSELECT
slow_edge => count.OUTPUTSELECT
slow_edge => count.OUTPUTSELECT
slow_edge => count.OUTPUTSELECT
slow_edge => count.OUTPUTSELECT
slow_edge => count.OUTPUTSELECT
reset => count.OUTPUTSELECT
reset => count.OUTPUTSELECT
reset => count.OUTPUTSELECT
reset => count.OUTPUTSELECT
reset => count.OUTPUTSELECT
reset => count.OUTPUTSELECT
reset => count.OUTPUTSELECT
reset => count.OUTPUTSELECT
init_val[0] => count.DATAB
init_val[1] => count.DATAB


|lab8|snakes_and_apples:snake|grid_light:center_grid_row[2].center_grid_col[4].light
green_light_on <= green_light_on.DB_MAX_OUTPUT_PORT_TYPE
head <= head.DB_MAX_OUTPUT_PORT_TYPE
game_over_out <= state_n.DB_MAX_OUTPUT_PORT_TYPE
eating => counter256:counter.inc
eating => always0.IN1
game_over_in => state_n.e_off.OUTPUTSELECT
game_over_in => state_n.e_countdown.OUTPUTSELECT
game_over_in => state_n.e_head.OUTPUTSELECT
game_over_in => state_n.OUTPUTSELECT
left => state_n.OUTPUTSELECT
left => state_n.OUTPUTSELECT
left => state_n.OUTPUTSELECT
left => state_n.OUTPUTSELECT
up => state_n.OUTPUTSELECT
up => state_n.OUTPUTSELECT
up => state_n.OUTPUTSELECT
up => state_n.OUTPUTSELECT
right => state_n.OUTPUTSELECT
right => state_n.OUTPUTSELECT
right => state_n.OUTPUTSELECT
right => state_n.OUTPUTSELECT
down => state_n.OUTPUTSELECT
down => state_n.OUTPUTSELECT
down => state_n.OUTPUTSELECT
down => state_n.OUTPUTSELECT
length[0] => counter256:counter.start_val[0]
length[1] => counter256:counter.start_val[1]
length[2] => counter256:counter.start_val[2]
length[3] => counter256:counter.start_val[3]
length[4] => counter256:counter.start_val[4]
length[5] => counter256:counter.start_val[5]
length[6] => counter256:counter.start_val[6]
length[7] => counter256:counter.start_val[7]
dir[0] => Mux0.IN5
dir[0] => Mux1.IN5
dir[0] => Mux2.IN5
dir[0] => Mux3.IN5
dir[1] => Mux0.IN4
dir[1] => Mux1.IN4
dir[1] => Mux2.IN4
dir[1] => Mux3.IN4
clk => counter256:counter.clk
clk => state_r~1.DATAIN
slow_edge => counter256:counter.slow_edge
slow_edge => state_r.OUTPUTSELECT
slow_edge => state_r.OUTPUTSELECT
slow_edge => state_r.OUTPUTSELECT
slow_edge => state_r.OUTPUTSELECT
reset => counter256:counter.reset
reset => state_r.OUTPUTSELECT
reset => state_r.OUTPUTSELECT
reset => state_r.OUTPUTSELECT
reset => state_r.OUTPUTSELECT
light_type[0] => counter256:counter.init_val[0]
light_type[0] => Equal1.IN1
light_type[0] => Equal2.IN1
light_type[1] => counter256:counter.init_val[1]
light_type[1] => Equal1.IN0
light_type[1] => Equal2.IN0


|lab8|snakes_and_apples:snake|grid_light:center_grid_row[2].center_grid_col[4].light|counter256:counter
count[0] <= count[0]~reg0.DB_MAX_OUTPUT_PORT_TYPE
count[1] <= count[1]~reg0.DB_MAX_OUTPUT_PORT_TYPE
count[2] <= count[2]~reg0.DB_MAX_OUTPUT_PORT_TYPE
count[3] <= count[3]~reg0.DB_MAX_OUTPUT_PORT_TYPE
count[4] <= count[4]~reg0.DB_MAX_OUTPUT_PORT_TYPE
count[5] <= count[5]~reg0.DB_MAX_OUTPUT_PORT_TYPE
count[6] <= count[6]~reg0.DB_MAX_OUTPUT_PORT_TYPE
count[7] <= count[7]~reg0.DB_MAX_OUTPUT_PORT_TYPE
start_val[0] => Add0.IN16
start_val[0] => count.DATAB
start_val[1] => Add0.IN15
start_val[1] => count.DATAB
start_val[2] => Add0.IN14
start_val[2] => count.DATAB
start_val[3] => Add0.IN13
start_val[3] => count.DATAB
start_val[4] => Add0.IN12
start_val[4] => count.DATAB
start_val[5] => Add0.IN11
start_val[5] => count.DATAB
start_val[6] => Add0.IN10
start_val[6] => count.DATAB
start_val[7] => Add0.IN9
start_val[7] => count.DATAB
inc => count.OUTPUTSELECT
inc => count.OUTPUTSELECT
inc => count.OUTPUTSELECT
inc => count.OUTPUTSELECT
inc => count.OUTPUTSELECT
inc => count.OUTPUTSELECT
inc => count.OUTPUTSELECT
inc => count.OUTPUTSELECT
inc => always0.IN0
enable => always0.IN1
enable => count.OUTPUTSELECT
enable => count.OUTPUTSELECT
enable => count.OUTPUTSELECT
enable => count.OUTPUTSELECT
enable => count.OUTPUTSELECT
enable => count.OUTPUTSELECT
enable => count.OUTPUTSELECT
enable => count.OUTPUTSELECT
clk => count[0]~reg0.CLK
clk => count[1]~reg0.CLK
clk => count[2]~reg0.CLK
clk => count[3]~reg0.CLK
clk => count[4]~reg0.CLK
clk => count[5]~reg0.CLK
clk => count[6]~reg0.CLK
clk => count[7]~reg0.CLK
slow_edge => count.OUTPUTSELECT
slow_edge => count.OUTPUTSELECT
slow_edge => count.OUTPUTSELECT
slow_edge => count.OUTPUTSELECT
slow_edge => count.OUTPUTSELECT
slow_edge => count.OUTPUTSELECT
slow_edge => count.OUTPUTSELECT
slow_edge => count.OUTPUTSELECT
reset => count.OUTPUTSELECT
reset => count.OUTPUTSELECT
reset => count.OUTPUTSELECT
reset => count.OUTPUTSELECT
reset => count.OUTPUTSELECT
reset => count.OUTPUTSELECT
reset => count.OUTPUTSELECT
reset => count.OUTPUTSELECT
init_val[0] => count.DATAB
init_val[1] => count.DATAB


|lab8|snakes_and_apples:snake|grid_light:center_grid_row[2].center_grid_col[5].light
green_light_on <= green_light_on.DB_MAX_OUTPUT_PORT_TYPE
head <= head.DB_MAX_OUTPUT_PORT_TYPE
game_over_out <= state_n.DB_MAX_OUTPUT_PORT_TYPE
eating => counter256:counter.inc
eating => always0.IN1
game_over_in => state_n.e_off.OUTPUTSELECT
game_over_in => state_n.e_countdown.OUTPUTSELECT
game_over_in => state_n.e_head.OUTPUTSELECT
game_over_in => state_n.OUTPUTSELECT
left => state_n.OUTPUTSELECT
left => state_n.OUTPUTSELECT
left => state_n.OUTPUTSELECT
left => state_n.OUTPUTSELECT
up => state_n.OUTPUTSELECT
up => state_n.OUTPUTSELECT
up => state_n.OUTPUTSELECT
up => state_n.OUTPUTSELECT
right => state_n.OUTPUTSELECT
right => state_n.OUTPUTSELECT
right => state_n.OUTPUTSELECT
right => state_n.OUTPUTSELECT
down => state_n.OUTPUTSELECT
down => state_n.OUTPUTSELECT
down => state_n.OUTPUTSELECT
down => state_n.OUTPUTSELECT
length[0] => counter256:counter.start_val[0]
length[1] => counter256:counter.start_val[1]
length[2] => counter256:counter.start_val[2]
length[3] => counter256:counter.start_val[3]
length[4] => counter256:counter.start_val[4]
length[5] => counter256:counter.start_val[5]
length[6] => counter256:counter.start_val[6]
length[7] => counter256:counter.start_val[7]
dir[0] => Mux0.IN5
dir[0] => Mux1.IN5
dir[0] => Mux2.IN5
dir[0] => Mux3.IN5
dir[1] => Mux0.IN4
dir[1] => Mux1.IN4
dir[1] => Mux2.IN4
dir[1] => Mux3.IN4
clk => counter256:counter.clk
clk => state_r~1.DATAIN
slow_edge => counter256:counter.slow_edge
slow_edge => state_r.OUTPUTSELECT
slow_edge => state_r.OUTPUTSELECT
slow_edge => state_r.OUTPUTSELECT
slow_edge => state_r.OUTPUTSELECT
reset => counter256:counter.reset
reset => state_r.OUTPUTSELECT
reset => state_r.OUTPUTSELECT
reset => state_r.OUTPUTSELECT
reset => state_r.OUTPUTSELECT
light_type[0] => counter256:counter.init_val[0]
light_type[0] => Equal1.IN1
light_type[0] => Equal2.IN1
light_type[1] => counter256:counter.init_val[1]
light_type[1] => Equal1.IN0
light_type[1] => Equal2.IN0


|lab8|snakes_and_apples:snake|grid_light:center_grid_row[2].center_grid_col[5].light|counter256:counter
count[0] <= count[0]~reg0.DB_MAX_OUTPUT_PORT_TYPE
count[1] <= count[1]~reg0.DB_MAX_OUTPUT_PORT_TYPE
count[2] <= count[2]~reg0.DB_MAX_OUTPUT_PORT_TYPE
count[3] <= count[3]~reg0.DB_MAX_OUTPUT_PORT_TYPE
count[4] <= count[4]~reg0.DB_MAX_OUTPUT_PORT_TYPE
count[5] <= count[5]~reg0.DB_MAX_OUTPUT_PORT_TYPE
count[6] <= count[6]~reg0.DB_MAX_OUTPUT_PORT_TYPE
count[7] <= count[7]~reg0.DB_MAX_OUTPUT_PORT_TYPE
start_val[0] => Add0.IN16
start_val[0] => count.DATAB
start_val[1] => Add0.IN15
start_val[1] => count.DATAB
start_val[2] => Add0.IN14
start_val[2] => count.DATAB
start_val[3] => Add0.IN13
start_val[3] => count.DATAB
start_val[4] => Add0.IN12
start_val[4] => count.DATAB
start_val[5] => Add0.IN11
start_val[5] => count.DATAB
start_val[6] => Add0.IN10
start_val[6] => count.DATAB
start_val[7] => Add0.IN9
start_val[7] => count.DATAB
inc => count.OUTPUTSELECT
inc => count.OUTPUTSELECT
inc => count.OUTPUTSELECT
inc => count.OUTPUTSELECT
inc => count.OUTPUTSELECT
inc => count.OUTPUTSELECT
inc => count.OUTPUTSELECT
inc => count.OUTPUTSELECT
inc => always0.IN0
enable => always0.IN1
enable => count.OUTPUTSELECT
enable => count.OUTPUTSELECT
enable => count.OUTPUTSELECT
enable => count.OUTPUTSELECT
enable => count.OUTPUTSELECT
enable => count.OUTPUTSELECT
enable => count.OUTPUTSELECT
enable => count.OUTPUTSELECT
clk => count[0]~reg0.CLK
clk => count[1]~reg0.CLK
clk => count[2]~reg0.CLK
clk => count[3]~reg0.CLK
clk => count[4]~reg0.CLK
clk => count[5]~reg0.CLK
clk => count[6]~reg0.CLK
clk => count[7]~reg0.CLK
slow_edge => count.OUTPUTSELECT
slow_edge => count.OUTPUTSELECT
slow_edge => count.OUTPUTSELECT
slow_edge => count.OUTPUTSELECT
slow_edge => count.OUTPUTSELECT
slow_edge => count.OUTPUTSELECT
slow_edge => count.OUTPUTSELECT
slow_edge => count.OUTPUTSELECT
reset => count.OUTPUTSELECT
reset => count.OUTPUTSELECT
reset => count.OUTPUTSELECT
reset => count.OUTPUTSELECT
reset => count.OUTPUTSELECT
reset => count.OUTPUTSELECT
reset => count.OUTPUTSELECT
reset => count.OUTPUTSELECT
init_val[0] => count.DATAB
init_val[1] => count.DATAB


|lab8|snakes_and_apples:snake|grid_light:center_grid_row[2].center_grid_col[6].light
green_light_on <= green_light_on.DB_MAX_OUTPUT_PORT_TYPE
head <= head.DB_MAX_OUTPUT_PORT_TYPE
game_over_out <= state_n.DB_MAX_OUTPUT_PORT_TYPE
eating => counter256:counter.inc
eating => always0.IN1
game_over_in => state_n.e_off.OUTPUTSELECT
game_over_in => state_n.e_countdown.OUTPUTSELECT
game_over_in => state_n.e_head.OUTPUTSELECT
game_over_in => state_n.OUTPUTSELECT
left => state_n.OUTPUTSELECT
left => state_n.OUTPUTSELECT
left => state_n.OUTPUTSELECT
left => state_n.OUTPUTSELECT
up => state_n.OUTPUTSELECT
up => state_n.OUTPUTSELECT
up => state_n.OUTPUTSELECT
up => state_n.OUTPUTSELECT
right => state_n.OUTPUTSELECT
right => state_n.OUTPUTSELECT
right => state_n.OUTPUTSELECT
right => state_n.OUTPUTSELECT
down => state_n.OUTPUTSELECT
down => state_n.OUTPUTSELECT
down => state_n.OUTPUTSELECT
down => state_n.OUTPUTSELECT
length[0] => counter256:counter.start_val[0]
length[1] => counter256:counter.start_val[1]
length[2] => counter256:counter.start_val[2]
length[3] => counter256:counter.start_val[3]
length[4] => counter256:counter.start_val[4]
length[5] => counter256:counter.start_val[5]
length[6] => counter256:counter.start_val[6]
length[7] => counter256:counter.start_val[7]
dir[0] => Mux0.IN5
dir[0] => Mux1.IN5
dir[0] => Mux2.IN5
dir[0] => Mux3.IN5
dir[1] => Mux0.IN4
dir[1] => Mux1.IN4
dir[1] => Mux2.IN4
dir[1] => Mux3.IN4
clk => counter256:counter.clk
clk => state_r~1.DATAIN
slow_edge => counter256:counter.slow_edge
slow_edge => state_r.OUTPUTSELECT
slow_edge => state_r.OUTPUTSELECT
slow_edge => state_r.OUTPUTSELECT
slow_edge => state_r.OUTPUTSELECT
reset => counter256:counter.reset
reset => state_r.OUTPUTSELECT
reset => state_r.OUTPUTSELECT
reset => state_r.OUTPUTSELECT
reset => state_r.OUTPUTSELECT
light_type[0] => counter256:counter.init_val[0]
light_type[0] => Equal1.IN1
light_type[0] => Equal2.IN1
light_type[1] => counter256:counter.init_val[1]
light_type[1] => Equal1.IN0
light_type[1] => Equal2.IN0


|lab8|snakes_and_apples:snake|grid_light:center_grid_row[2].center_grid_col[6].light|counter256:counter
count[0] <= count[0]~reg0.DB_MAX_OUTPUT_PORT_TYPE
count[1] <= count[1]~reg0.DB_MAX_OUTPUT_PORT_TYPE
count[2] <= count[2]~reg0.DB_MAX_OUTPUT_PORT_TYPE
count[3] <= count[3]~reg0.DB_MAX_OUTPUT_PORT_TYPE
count[4] <= count[4]~reg0.DB_MAX_OUTPUT_PORT_TYPE
count[5] <= count[5]~reg0.DB_MAX_OUTPUT_PORT_TYPE
count[6] <= count[6]~reg0.DB_MAX_OUTPUT_PORT_TYPE
count[7] <= count[7]~reg0.DB_MAX_OUTPUT_PORT_TYPE
start_val[0] => Add0.IN16
start_val[0] => count.DATAB
start_val[1] => Add0.IN15
start_val[1] => count.DATAB
start_val[2] => Add0.IN14
start_val[2] => count.DATAB
start_val[3] => Add0.IN13
start_val[3] => count.DATAB
start_val[4] => Add0.IN12
start_val[4] => count.DATAB
start_val[5] => Add0.IN11
start_val[5] => count.DATAB
start_val[6] => Add0.IN10
start_val[6] => count.DATAB
start_val[7] => Add0.IN9
start_val[7] => count.DATAB
inc => count.OUTPUTSELECT
inc => count.OUTPUTSELECT
inc => count.OUTPUTSELECT
inc => count.OUTPUTSELECT
inc => count.OUTPUTSELECT
inc => count.OUTPUTSELECT
inc => count.OUTPUTSELECT
inc => count.OUTPUTSELECT
inc => always0.IN0
enable => always0.IN1
enable => count.OUTPUTSELECT
enable => count.OUTPUTSELECT
enable => count.OUTPUTSELECT
enable => count.OUTPUTSELECT
enable => count.OUTPUTSELECT
enable => count.OUTPUTSELECT
enable => count.OUTPUTSELECT
enable => count.OUTPUTSELECT
clk => count[0]~reg0.CLK
clk => count[1]~reg0.CLK
clk => count[2]~reg0.CLK
clk => count[3]~reg0.CLK
clk => count[4]~reg0.CLK
clk => count[5]~reg0.CLK
clk => count[6]~reg0.CLK
clk => count[7]~reg0.CLK
slow_edge => count.OUTPUTSELECT
slow_edge => count.OUTPUTSELECT
slow_edge => count.OUTPUTSELECT
slow_edge => count.OUTPUTSELECT
slow_edge => count.OUTPUTSELECT
slow_edge => count.OUTPUTSELECT
slow_edge => count.OUTPUTSELECT
slow_edge => count.OUTPUTSELECT
reset => count.OUTPUTSELECT
reset => count.OUTPUTSELECT
reset => count.OUTPUTSELECT
reset => count.OUTPUTSELECT
reset => count.OUTPUTSELECT
reset => count.OUTPUTSELECT
reset => count.OUTPUTSELECT
reset => count.OUTPUTSELECT
init_val[0] => count.DATAB
init_val[1] => count.DATAB


|lab8|snakes_and_apples:snake|grid_light:center_grid_row[2].center_grid_col[7].light
green_light_on <= green_light_on.DB_MAX_OUTPUT_PORT_TYPE
head <= head.DB_MAX_OUTPUT_PORT_TYPE
game_over_out <= state_n.DB_MAX_OUTPUT_PORT_TYPE
eating => counter256:counter.inc
eating => always0.IN1
game_over_in => state_n.e_off.OUTPUTSELECT
game_over_in => state_n.e_countdown.OUTPUTSELECT
game_over_in => state_n.e_head.OUTPUTSELECT
game_over_in => state_n.OUTPUTSELECT
left => state_n.OUTPUTSELECT
left => state_n.OUTPUTSELECT
left => state_n.OUTPUTSELECT
left => state_n.OUTPUTSELECT
up => state_n.OUTPUTSELECT
up => state_n.OUTPUTSELECT
up => state_n.OUTPUTSELECT
up => state_n.OUTPUTSELECT
right => state_n.OUTPUTSELECT
right => state_n.OUTPUTSELECT
right => state_n.OUTPUTSELECT
right => state_n.OUTPUTSELECT
down => state_n.OUTPUTSELECT
down => state_n.OUTPUTSELECT
down => state_n.OUTPUTSELECT
down => state_n.OUTPUTSELECT
length[0] => counter256:counter.start_val[0]
length[1] => counter256:counter.start_val[1]
length[2] => counter256:counter.start_val[2]
length[3] => counter256:counter.start_val[3]
length[4] => counter256:counter.start_val[4]
length[5] => counter256:counter.start_val[5]
length[6] => counter256:counter.start_val[6]
length[7] => counter256:counter.start_val[7]
dir[0] => Mux0.IN5
dir[0] => Mux1.IN5
dir[0] => Mux2.IN5
dir[0] => Mux3.IN5
dir[1] => Mux0.IN4
dir[1] => Mux1.IN4
dir[1] => Mux2.IN4
dir[1] => Mux3.IN4
clk => counter256:counter.clk
clk => state_r~1.DATAIN
slow_edge => counter256:counter.slow_edge
slow_edge => state_r.OUTPUTSELECT
slow_edge => state_r.OUTPUTSELECT
slow_edge => state_r.OUTPUTSELECT
slow_edge => state_r.OUTPUTSELECT
reset => counter256:counter.reset
reset => state_r.OUTPUTSELECT
reset => state_r.OUTPUTSELECT
reset => state_r.OUTPUTSELECT
reset => state_r.OUTPUTSELECT
light_type[0] => counter256:counter.init_val[0]
light_type[0] => Equal1.IN1
light_type[0] => Equal2.IN1
light_type[1] => counter256:counter.init_val[1]
light_type[1] => Equal1.IN0
light_type[1] => Equal2.IN0


|lab8|snakes_and_apples:snake|grid_light:center_grid_row[2].center_grid_col[7].light|counter256:counter
count[0] <= count[0]~reg0.DB_MAX_OUTPUT_PORT_TYPE
count[1] <= count[1]~reg0.DB_MAX_OUTPUT_PORT_TYPE
count[2] <= count[2]~reg0.DB_MAX_OUTPUT_PORT_TYPE
count[3] <= count[3]~reg0.DB_MAX_OUTPUT_PORT_TYPE
count[4] <= count[4]~reg0.DB_MAX_OUTPUT_PORT_TYPE
count[5] <= count[5]~reg0.DB_MAX_OUTPUT_PORT_TYPE
count[6] <= count[6]~reg0.DB_MAX_OUTPUT_PORT_TYPE
count[7] <= count[7]~reg0.DB_MAX_OUTPUT_PORT_TYPE
start_val[0] => Add0.IN16
start_val[0] => count.DATAB
start_val[1] => Add0.IN15
start_val[1] => count.DATAB
start_val[2] => Add0.IN14
start_val[2] => count.DATAB
start_val[3] => Add0.IN13
start_val[3] => count.DATAB
start_val[4] => Add0.IN12
start_val[4] => count.DATAB
start_val[5] => Add0.IN11
start_val[5] => count.DATAB
start_val[6] => Add0.IN10
start_val[6] => count.DATAB
start_val[7] => Add0.IN9
start_val[7] => count.DATAB
inc => count.OUTPUTSELECT
inc => count.OUTPUTSELECT
inc => count.OUTPUTSELECT
inc => count.OUTPUTSELECT
inc => count.OUTPUTSELECT
inc => count.OUTPUTSELECT
inc => count.OUTPUTSELECT
inc => count.OUTPUTSELECT
inc => always0.IN0
enable => always0.IN1
enable => count.OUTPUTSELECT
enable => count.OUTPUTSELECT
enable => count.OUTPUTSELECT
enable => count.OUTPUTSELECT
enable => count.OUTPUTSELECT
enable => count.OUTPUTSELECT
enable => count.OUTPUTSELECT
enable => count.OUTPUTSELECT
clk => count[0]~reg0.CLK
clk => count[1]~reg0.CLK
clk => count[2]~reg0.CLK
clk => count[3]~reg0.CLK
clk => count[4]~reg0.CLK
clk => count[5]~reg0.CLK
clk => count[6]~reg0.CLK
clk => count[7]~reg0.CLK
slow_edge => count.OUTPUTSELECT
slow_edge => count.OUTPUTSELECT
slow_edge => count.OUTPUTSELECT
slow_edge => count.OUTPUTSELECT
slow_edge => count.OUTPUTSELECT
slow_edge => count.OUTPUTSELECT
slow_edge => count.OUTPUTSELECT
slow_edge => count.OUTPUTSELECT
reset => count.OUTPUTSELECT
reset => count.OUTPUTSELECT
reset => count.OUTPUTSELECT
reset => count.OUTPUTSELECT
reset => count.OUTPUTSELECT
reset => count.OUTPUTSELECT
reset => count.OUTPUTSELECT
reset => count.OUTPUTSELECT
init_val[0] => count.DATAB
init_val[1] => count.DATAB


|lab8|snakes_and_apples:snake|grid_light:center_grid_row[2].center_grid_col[8].light
green_light_on <= green_light_on.DB_MAX_OUTPUT_PORT_TYPE
head <= head.DB_MAX_OUTPUT_PORT_TYPE
game_over_out <= state_n.DB_MAX_OUTPUT_PORT_TYPE
eating => counter256:counter.inc
eating => always0.IN1
game_over_in => state_n.e_off.OUTPUTSELECT
game_over_in => state_n.e_countdown.OUTPUTSELECT
game_over_in => state_n.e_head.OUTPUTSELECT
game_over_in => state_n.OUTPUTSELECT
left => state_n.OUTPUTSELECT
left => state_n.OUTPUTSELECT
left => state_n.OUTPUTSELECT
left => state_n.OUTPUTSELECT
up => state_n.OUTPUTSELECT
up => state_n.OUTPUTSELECT
up => state_n.OUTPUTSELECT
up => state_n.OUTPUTSELECT
right => state_n.OUTPUTSELECT
right => state_n.OUTPUTSELECT
right => state_n.OUTPUTSELECT
right => state_n.OUTPUTSELECT
down => state_n.OUTPUTSELECT
down => state_n.OUTPUTSELECT
down => state_n.OUTPUTSELECT
down => state_n.OUTPUTSELECT
length[0] => counter256:counter.start_val[0]
length[1] => counter256:counter.start_val[1]
length[2] => counter256:counter.start_val[2]
length[3] => counter256:counter.start_val[3]
length[4] => counter256:counter.start_val[4]
length[5] => counter256:counter.start_val[5]
length[6] => counter256:counter.start_val[6]
length[7] => counter256:counter.start_val[7]
dir[0] => Mux0.IN5
dir[0] => Mux1.IN5
dir[0] => Mux2.IN5
dir[0] => Mux3.IN5
dir[1] => Mux0.IN4
dir[1] => Mux1.IN4
dir[1] => Mux2.IN4
dir[1] => Mux3.IN4
clk => counter256:counter.clk
clk => state_r~1.DATAIN
slow_edge => counter256:counter.slow_edge
slow_edge => state_r.OUTPUTSELECT
slow_edge => state_r.OUTPUTSELECT
slow_edge => state_r.OUTPUTSELECT
slow_edge => state_r.OUTPUTSELECT
reset => counter256:counter.reset
reset => state_r.OUTPUTSELECT
reset => state_r.OUTPUTSELECT
reset => state_r.OUTPUTSELECT
reset => state_r.OUTPUTSELECT
light_type[0] => counter256:counter.init_val[0]
light_type[0] => Equal1.IN1
light_type[0] => Equal2.IN1
light_type[1] => counter256:counter.init_val[1]
light_type[1] => Equal1.IN0
light_type[1] => Equal2.IN0


|lab8|snakes_and_apples:snake|grid_light:center_grid_row[2].center_grid_col[8].light|counter256:counter
count[0] <= count[0]~reg0.DB_MAX_OUTPUT_PORT_TYPE
count[1] <= count[1]~reg0.DB_MAX_OUTPUT_PORT_TYPE
count[2] <= count[2]~reg0.DB_MAX_OUTPUT_PORT_TYPE
count[3] <= count[3]~reg0.DB_MAX_OUTPUT_PORT_TYPE
count[4] <= count[4]~reg0.DB_MAX_OUTPUT_PORT_TYPE
count[5] <= count[5]~reg0.DB_MAX_OUTPUT_PORT_TYPE
count[6] <= count[6]~reg0.DB_MAX_OUTPUT_PORT_TYPE
count[7] <= count[7]~reg0.DB_MAX_OUTPUT_PORT_TYPE
start_val[0] => Add0.IN16
start_val[0] => count.DATAB
start_val[1] => Add0.IN15
start_val[1] => count.DATAB
start_val[2] => Add0.IN14
start_val[2] => count.DATAB
start_val[3] => Add0.IN13
start_val[3] => count.DATAB
start_val[4] => Add0.IN12
start_val[4] => count.DATAB
start_val[5] => Add0.IN11
start_val[5] => count.DATAB
start_val[6] => Add0.IN10
start_val[6] => count.DATAB
start_val[7] => Add0.IN9
start_val[7] => count.DATAB
inc => count.OUTPUTSELECT
inc => count.OUTPUTSELECT
inc => count.OUTPUTSELECT
inc => count.OUTPUTSELECT
inc => count.OUTPUTSELECT
inc => count.OUTPUTSELECT
inc => count.OUTPUTSELECT
inc => count.OUTPUTSELECT
inc => always0.IN0
enable => always0.IN1
enable => count.OUTPUTSELECT
enable => count.OUTPUTSELECT
enable => count.OUTPUTSELECT
enable => count.OUTPUTSELECT
enable => count.OUTPUTSELECT
enable => count.OUTPUTSELECT
enable => count.OUTPUTSELECT
enable => count.OUTPUTSELECT
clk => count[0]~reg0.CLK
clk => count[1]~reg0.CLK
clk => count[2]~reg0.CLK
clk => count[3]~reg0.CLK
clk => count[4]~reg0.CLK
clk => count[5]~reg0.CLK
clk => count[6]~reg0.CLK
clk => count[7]~reg0.CLK
slow_edge => count.OUTPUTSELECT
slow_edge => count.OUTPUTSELECT
slow_edge => count.OUTPUTSELECT
slow_edge => count.OUTPUTSELECT
slow_edge => count.OUTPUTSELECT
slow_edge => count.OUTPUTSELECT
slow_edge => count.OUTPUTSELECT
slow_edge => count.OUTPUTSELECT
reset => count.OUTPUTSELECT
reset => count.OUTPUTSELECT
reset => count.OUTPUTSELECT
reset => count.OUTPUTSELECT
reset => count.OUTPUTSELECT
reset => count.OUTPUTSELECT
reset => count.OUTPUTSELECT
reset => count.OUTPUTSELECT
init_val[0] => count.DATAB
init_val[1] => count.DATAB


|lab8|snakes_and_apples:snake|grid_light:center_grid_row[2].center_grid_col[9].light
green_light_on <= green_light_on.DB_MAX_OUTPUT_PORT_TYPE
head <= head.DB_MAX_OUTPUT_PORT_TYPE
game_over_out <= state_n.DB_MAX_OUTPUT_PORT_TYPE
eating => counter256:counter.inc
eating => always0.IN1
game_over_in => state_n.e_off.OUTPUTSELECT
game_over_in => state_n.e_countdown.OUTPUTSELECT
game_over_in => state_n.e_head.OUTPUTSELECT
game_over_in => state_n.OUTPUTSELECT
left => state_n.OUTPUTSELECT
left => state_n.OUTPUTSELECT
left => state_n.OUTPUTSELECT
left => state_n.OUTPUTSELECT
up => state_n.OUTPUTSELECT
up => state_n.OUTPUTSELECT
up => state_n.OUTPUTSELECT
up => state_n.OUTPUTSELECT
right => state_n.OUTPUTSELECT
right => state_n.OUTPUTSELECT
right => state_n.OUTPUTSELECT
right => state_n.OUTPUTSELECT
down => state_n.OUTPUTSELECT
down => state_n.OUTPUTSELECT
down => state_n.OUTPUTSELECT
down => state_n.OUTPUTSELECT
length[0] => counter256:counter.start_val[0]
length[1] => counter256:counter.start_val[1]
length[2] => counter256:counter.start_val[2]
length[3] => counter256:counter.start_val[3]
length[4] => counter256:counter.start_val[4]
length[5] => counter256:counter.start_val[5]
length[6] => counter256:counter.start_val[6]
length[7] => counter256:counter.start_val[7]
dir[0] => Mux0.IN5
dir[0] => Mux1.IN5
dir[0] => Mux2.IN5
dir[0] => Mux3.IN5
dir[1] => Mux0.IN4
dir[1] => Mux1.IN4
dir[1] => Mux2.IN4
dir[1] => Mux3.IN4
clk => counter256:counter.clk
clk => state_r~1.DATAIN
slow_edge => counter256:counter.slow_edge
slow_edge => state_r.OUTPUTSELECT
slow_edge => state_r.OUTPUTSELECT
slow_edge => state_r.OUTPUTSELECT
slow_edge => state_r.OUTPUTSELECT
reset => counter256:counter.reset
reset => state_r.OUTPUTSELECT
reset => state_r.OUTPUTSELECT
reset => state_r.OUTPUTSELECT
reset => state_r.OUTPUTSELECT
light_type[0] => counter256:counter.init_val[0]
light_type[0] => Equal1.IN1
light_type[0] => Equal2.IN1
light_type[1] => counter256:counter.init_val[1]
light_type[1] => Equal1.IN0
light_type[1] => Equal2.IN0


|lab8|snakes_and_apples:snake|grid_light:center_grid_row[2].center_grid_col[9].light|counter256:counter
count[0] <= count[0]~reg0.DB_MAX_OUTPUT_PORT_TYPE
count[1] <= count[1]~reg0.DB_MAX_OUTPUT_PORT_TYPE
count[2] <= count[2]~reg0.DB_MAX_OUTPUT_PORT_TYPE
count[3] <= count[3]~reg0.DB_MAX_OUTPUT_PORT_TYPE
count[4] <= count[4]~reg0.DB_MAX_OUTPUT_PORT_TYPE
count[5] <= count[5]~reg0.DB_MAX_OUTPUT_PORT_TYPE
count[6] <= count[6]~reg0.DB_MAX_OUTPUT_PORT_TYPE
count[7] <= count[7]~reg0.DB_MAX_OUTPUT_PORT_TYPE
start_val[0] => Add0.IN16
start_val[0] => count.DATAB
start_val[1] => Add0.IN15
start_val[1] => count.DATAB
start_val[2] => Add0.IN14
start_val[2] => count.DATAB
start_val[3] => Add0.IN13
start_val[3] => count.DATAB
start_val[4] => Add0.IN12
start_val[4] => count.DATAB
start_val[5] => Add0.IN11
start_val[5] => count.DATAB
start_val[6] => Add0.IN10
start_val[6] => count.DATAB
start_val[7] => Add0.IN9
start_val[7] => count.DATAB
inc => count.OUTPUTSELECT
inc => count.OUTPUTSELECT
inc => count.OUTPUTSELECT
inc => count.OUTPUTSELECT
inc => count.OUTPUTSELECT
inc => count.OUTPUTSELECT
inc => count.OUTPUTSELECT
inc => count.OUTPUTSELECT
inc => always0.IN0
enable => always0.IN1
enable => count.OUTPUTSELECT
enable => count.OUTPUTSELECT
enable => count.OUTPUTSELECT
enable => count.OUTPUTSELECT
enable => count.OUTPUTSELECT
enable => count.OUTPUTSELECT
enable => count.OUTPUTSELECT
enable => count.OUTPUTSELECT
clk => count[0]~reg0.CLK
clk => count[1]~reg0.CLK
clk => count[2]~reg0.CLK
clk => count[3]~reg0.CLK
clk => count[4]~reg0.CLK
clk => count[5]~reg0.CLK
clk => count[6]~reg0.CLK
clk => count[7]~reg0.CLK
slow_edge => count.OUTPUTSELECT
slow_edge => count.OUTPUTSELECT
slow_edge => count.OUTPUTSELECT
slow_edge => count.OUTPUTSELECT
slow_edge => count.OUTPUTSELECT
slow_edge => count.OUTPUTSELECT
slow_edge => count.OUTPUTSELECT
slow_edge => count.OUTPUTSELECT
reset => count.OUTPUTSELECT
reset => count.OUTPUTSELECT
reset => count.OUTPUTSELECT
reset => count.OUTPUTSELECT
reset => count.OUTPUTSELECT
reset => count.OUTPUTSELECT
reset => count.OUTPUTSELECT
reset => count.OUTPUTSELECT
init_val[0] => count.DATAB
init_val[1] => count.DATAB


|lab8|snakes_and_apples:snake|grid_light:center_grid_row[2].center_grid_col[10].light
green_light_on <= green_light_on.DB_MAX_OUTPUT_PORT_TYPE
head <= head.DB_MAX_OUTPUT_PORT_TYPE
game_over_out <= state_n.DB_MAX_OUTPUT_PORT_TYPE
eating => counter256:counter.inc
eating => always0.IN1
game_over_in => state_n.e_off.OUTPUTSELECT
game_over_in => state_n.e_countdown.OUTPUTSELECT
game_over_in => state_n.e_head.OUTPUTSELECT
game_over_in => state_n.OUTPUTSELECT
left => state_n.OUTPUTSELECT
left => state_n.OUTPUTSELECT
left => state_n.OUTPUTSELECT
left => state_n.OUTPUTSELECT
up => state_n.OUTPUTSELECT
up => state_n.OUTPUTSELECT
up => state_n.OUTPUTSELECT
up => state_n.OUTPUTSELECT
right => state_n.OUTPUTSELECT
right => state_n.OUTPUTSELECT
right => state_n.OUTPUTSELECT
right => state_n.OUTPUTSELECT
down => state_n.OUTPUTSELECT
down => state_n.OUTPUTSELECT
down => state_n.OUTPUTSELECT
down => state_n.OUTPUTSELECT
length[0] => counter256:counter.start_val[0]
length[1] => counter256:counter.start_val[1]
length[2] => counter256:counter.start_val[2]
length[3] => counter256:counter.start_val[3]
length[4] => counter256:counter.start_val[4]
length[5] => counter256:counter.start_val[5]
length[6] => counter256:counter.start_val[6]
length[7] => counter256:counter.start_val[7]
dir[0] => Mux0.IN5
dir[0] => Mux1.IN5
dir[0] => Mux2.IN5
dir[0] => Mux3.IN5
dir[1] => Mux0.IN4
dir[1] => Mux1.IN4
dir[1] => Mux2.IN4
dir[1] => Mux3.IN4
clk => counter256:counter.clk
clk => state_r~1.DATAIN
slow_edge => counter256:counter.slow_edge
slow_edge => state_r.OUTPUTSELECT
slow_edge => state_r.OUTPUTSELECT
slow_edge => state_r.OUTPUTSELECT
slow_edge => state_r.OUTPUTSELECT
reset => counter256:counter.reset
reset => state_r.OUTPUTSELECT
reset => state_r.OUTPUTSELECT
reset => state_r.OUTPUTSELECT
reset => state_r.OUTPUTSELECT
light_type[0] => counter256:counter.init_val[0]
light_type[0] => Equal1.IN1
light_type[0] => Equal2.IN1
light_type[1] => counter256:counter.init_val[1]
light_type[1] => Equal1.IN0
light_type[1] => Equal2.IN0


|lab8|snakes_and_apples:snake|grid_light:center_grid_row[2].center_grid_col[10].light|counter256:counter
count[0] <= count[0]~reg0.DB_MAX_OUTPUT_PORT_TYPE
count[1] <= count[1]~reg0.DB_MAX_OUTPUT_PORT_TYPE
count[2] <= count[2]~reg0.DB_MAX_OUTPUT_PORT_TYPE
count[3] <= count[3]~reg0.DB_MAX_OUTPUT_PORT_TYPE
count[4] <= count[4]~reg0.DB_MAX_OUTPUT_PORT_TYPE
count[5] <= count[5]~reg0.DB_MAX_OUTPUT_PORT_TYPE
count[6] <= count[6]~reg0.DB_MAX_OUTPUT_PORT_TYPE
count[7] <= count[7]~reg0.DB_MAX_OUTPUT_PORT_TYPE
start_val[0] => Add0.IN16
start_val[0] => count.DATAB
start_val[1] => Add0.IN15
start_val[1] => count.DATAB
start_val[2] => Add0.IN14
start_val[2] => count.DATAB
start_val[3] => Add0.IN13
start_val[3] => count.DATAB
start_val[4] => Add0.IN12
start_val[4] => count.DATAB
start_val[5] => Add0.IN11
start_val[5] => count.DATAB
start_val[6] => Add0.IN10
start_val[6] => count.DATAB
start_val[7] => Add0.IN9
start_val[7] => count.DATAB
inc => count.OUTPUTSELECT
inc => count.OUTPUTSELECT
inc => count.OUTPUTSELECT
inc => count.OUTPUTSELECT
inc => count.OUTPUTSELECT
inc => count.OUTPUTSELECT
inc => count.OUTPUTSELECT
inc => count.OUTPUTSELECT
inc => always0.IN0
enable => always0.IN1
enable => count.OUTPUTSELECT
enable => count.OUTPUTSELECT
enable => count.OUTPUTSELECT
enable => count.OUTPUTSELECT
enable => count.OUTPUTSELECT
enable => count.OUTPUTSELECT
enable => count.OUTPUTSELECT
enable => count.OUTPUTSELECT
clk => count[0]~reg0.CLK
clk => count[1]~reg0.CLK
clk => count[2]~reg0.CLK
clk => count[3]~reg0.CLK
clk => count[4]~reg0.CLK
clk => count[5]~reg0.CLK
clk => count[6]~reg0.CLK
clk => count[7]~reg0.CLK
slow_edge => count.OUTPUTSELECT
slow_edge => count.OUTPUTSELECT
slow_edge => count.OUTPUTSELECT
slow_edge => count.OUTPUTSELECT
slow_edge => count.OUTPUTSELECT
slow_edge => count.OUTPUTSELECT
slow_edge => count.OUTPUTSELECT
slow_edge => count.OUTPUTSELECT
reset => count.OUTPUTSELECT
reset => count.OUTPUTSELECT
reset => count.OUTPUTSELECT
reset => count.OUTPUTSELECT
reset => count.OUTPUTSELECT
reset => count.OUTPUTSELECT
reset => count.OUTPUTSELECT
reset => count.OUTPUTSELECT
init_val[0] => count.DATAB
init_val[1] => count.DATAB


|lab8|snakes_and_apples:snake|grid_light:center_grid_row[2].center_grid_col[11].light
green_light_on <= green_light_on.DB_MAX_OUTPUT_PORT_TYPE
head <= head.DB_MAX_OUTPUT_PORT_TYPE
game_over_out <= state_n.DB_MAX_OUTPUT_PORT_TYPE
eating => counter256:counter.inc
eating => always0.IN1
game_over_in => state_n.e_off.OUTPUTSELECT
game_over_in => state_n.e_countdown.OUTPUTSELECT
game_over_in => state_n.e_head.OUTPUTSELECT
game_over_in => state_n.OUTPUTSELECT
left => state_n.OUTPUTSELECT
left => state_n.OUTPUTSELECT
left => state_n.OUTPUTSELECT
left => state_n.OUTPUTSELECT
up => state_n.OUTPUTSELECT
up => state_n.OUTPUTSELECT
up => state_n.OUTPUTSELECT
up => state_n.OUTPUTSELECT
right => state_n.OUTPUTSELECT
right => state_n.OUTPUTSELECT
right => state_n.OUTPUTSELECT
right => state_n.OUTPUTSELECT
down => state_n.OUTPUTSELECT
down => state_n.OUTPUTSELECT
down => state_n.OUTPUTSELECT
down => state_n.OUTPUTSELECT
length[0] => counter256:counter.start_val[0]
length[1] => counter256:counter.start_val[1]
length[2] => counter256:counter.start_val[2]
length[3] => counter256:counter.start_val[3]
length[4] => counter256:counter.start_val[4]
length[5] => counter256:counter.start_val[5]
length[6] => counter256:counter.start_val[6]
length[7] => counter256:counter.start_val[7]
dir[0] => Mux0.IN5
dir[0] => Mux1.IN5
dir[0] => Mux2.IN5
dir[0] => Mux3.IN5
dir[1] => Mux0.IN4
dir[1] => Mux1.IN4
dir[1] => Mux2.IN4
dir[1] => Mux3.IN4
clk => counter256:counter.clk
clk => state_r~1.DATAIN
slow_edge => counter256:counter.slow_edge
slow_edge => state_r.OUTPUTSELECT
slow_edge => state_r.OUTPUTSELECT
slow_edge => state_r.OUTPUTSELECT
slow_edge => state_r.OUTPUTSELECT
reset => counter256:counter.reset
reset => state_r.OUTPUTSELECT
reset => state_r.OUTPUTSELECT
reset => state_r.OUTPUTSELECT
reset => state_r.OUTPUTSELECT
light_type[0] => counter256:counter.init_val[0]
light_type[0] => Equal1.IN1
light_type[0] => Equal2.IN1
light_type[1] => counter256:counter.init_val[1]
light_type[1] => Equal1.IN0
light_type[1] => Equal2.IN0


|lab8|snakes_and_apples:snake|grid_light:center_grid_row[2].center_grid_col[11].light|counter256:counter
count[0] <= count[0]~reg0.DB_MAX_OUTPUT_PORT_TYPE
count[1] <= count[1]~reg0.DB_MAX_OUTPUT_PORT_TYPE
count[2] <= count[2]~reg0.DB_MAX_OUTPUT_PORT_TYPE
count[3] <= count[3]~reg0.DB_MAX_OUTPUT_PORT_TYPE
count[4] <= count[4]~reg0.DB_MAX_OUTPUT_PORT_TYPE
count[5] <= count[5]~reg0.DB_MAX_OUTPUT_PORT_TYPE
count[6] <= count[6]~reg0.DB_MAX_OUTPUT_PORT_TYPE
count[7] <= count[7]~reg0.DB_MAX_OUTPUT_PORT_TYPE
start_val[0] => Add0.IN16
start_val[0] => count.DATAB
start_val[1] => Add0.IN15
start_val[1] => count.DATAB
start_val[2] => Add0.IN14
start_val[2] => count.DATAB
start_val[3] => Add0.IN13
start_val[3] => count.DATAB
start_val[4] => Add0.IN12
start_val[4] => count.DATAB
start_val[5] => Add0.IN11
start_val[5] => count.DATAB
start_val[6] => Add0.IN10
start_val[6] => count.DATAB
start_val[7] => Add0.IN9
start_val[7] => count.DATAB
inc => count.OUTPUTSELECT
inc => count.OUTPUTSELECT
inc => count.OUTPUTSELECT
inc => count.OUTPUTSELECT
inc => count.OUTPUTSELECT
inc => count.OUTPUTSELECT
inc => count.OUTPUTSELECT
inc => count.OUTPUTSELECT
inc => always0.IN0
enable => always0.IN1
enable => count.OUTPUTSELECT
enable => count.OUTPUTSELECT
enable => count.OUTPUTSELECT
enable => count.OUTPUTSELECT
enable => count.OUTPUTSELECT
enable => count.OUTPUTSELECT
enable => count.OUTPUTSELECT
enable => count.OUTPUTSELECT
clk => count[0]~reg0.CLK
clk => count[1]~reg0.CLK
clk => count[2]~reg0.CLK
clk => count[3]~reg0.CLK
clk => count[4]~reg0.CLK
clk => count[5]~reg0.CLK
clk => count[6]~reg0.CLK
clk => count[7]~reg0.CLK
slow_edge => count.OUTPUTSELECT
slow_edge => count.OUTPUTSELECT
slow_edge => count.OUTPUTSELECT
slow_edge => count.OUTPUTSELECT
slow_edge => count.OUTPUTSELECT
slow_edge => count.OUTPUTSELECT
slow_edge => count.OUTPUTSELECT
slow_edge => count.OUTPUTSELECT
reset => count.OUTPUTSELECT
reset => count.OUTPUTSELECT
reset => count.OUTPUTSELECT
reset => count.OUTPUTSELECT
reset => count.OUTPUTSELECT
reset => count.OUTPUTSELECT
reset => count.OUTPUTSELECT
reset => count.OUTPUTSELECT
init_val[0] => count.DATAB
init_val[1] => count.DATAB


|lab8|snakes_and_apples:snake|grid_light:center_grid_row[2].center_grid_col[12].light
green_light_on <= green_light_on.DB_MAX_OUTPUT_PORT_TYPE
head <= head.DB_MAX_OUTPUT_PORT_TYPE
game_over_out <= state_n.DB_MAX_OUTPUT_PORT_TYPE
eating => counter256:counter.inc
eating => always0.IN1
game_over_in => state_n.e_off.OUTPUTSELECT
game_over_in => state_n.e_countdown.OUTPUTSELECT
game_over_in => state_n.e_head.OUTPUTSELECT
game_over_in => state_n.OUTPUTSELECT
left => state_n.OUTPUTSELECT
left => state_n.OUTPUTSELECT
left => state_n.OUTPUTSELECT
left => state_n.OUTPUTSELECT
up => state_n.OUTPUTSELECT
up => state_n.OUTPUTSELECT
up => state_n.OUTPUTSELECT
up => state_n.OUTPUTSELECT
right => state_n.OUTPUTSELECT
right => state_n.OUTPUTSELECT
right => state_n.OUTPUTSELECT
right => state_n.OUTPUTSELECT
down => state_n.OUTPUTSELECT
down => state_n.OUTPUTSELECT
down => state_n.OUTPUTSELECT
down => state_n.OUTPUTSELECT
length[0] => counter256:counter.start_val[0]
length[1] => counter256:counter.start_val[1]
length[2] => counter256:counter.start_val[2]
length[3] => counter256:counter.start_val[3]
length[4] => counter256:counter.start_val[4]
length[5] => counter256:counter.start_val[5]
length[6] => counter256:counter.start_val[6]
length[7] => counter256:counter.start_val[7]
dir[0] => Mux0.IN5
dir[0] => Mux1.IN5
dir[0] => Mux2.IN5
dir[0] => Mux3.IN5
dir[1] => Mux0.IN4
dir[1] => Mux1.IN4
dir[1] => Mux2.IN4
dir[1] => Mux3.IN4
clk => counter256:counter.clk
clk => state_r~1.DATAIN
slow_edge => counter256:counter.slow_edge
slow_edge => state_r.OUTPUTSELECT
slow_edge => state_r.OUTPUTSELECT
slow_edge => state_r.OUTPUTSELECT
slow_edge => state_r.OUTPUTSELECT
reset => counter256:counter.reset
reset => state_r.OUTPUTSELECT
reset => state_r.OUTPUTSELECT
reset => state_r.OUTPUTSELECT
reset => state_r.OUTPUTSELECT
light_type[0] => counter256:counter.init_val[0]
light_type[0] => Equal1.IN1
light_type[0] => Equal2.IN1
light_type[1] => counter256:counter.init_val[1]
light_type[1] => Equal1.IN0
light_type[1] => Equal2.IN0


|lab8|snakes_and_apples:snake|grid_light:center_grid_row[2].center_grid_col[12].light|counter256:counter
count[0] <= count[0]~reg0.DB_MAX_OUTPUT_PORT_TYPE
count[1] <= count[1]~reg0.DB_MAX_OUTPUT_PORT_TYPE
count[2] <= count[2]~reg0.DB_MAX_OUTPUT_PORT_TYPE
count[3] <= count[3]~reg0.DB_MAX_OUTPUT_PORT_TYPE
count[4] <= count[4]~reg0.DB_MAX_OUTPUT_PORT_TYPE
count[5] <= count[5]~reg0.DB_MAX_OUTPUT_PORT_TYPE
count[6] <= count[6]~reg0.DB_MAX_OUTPUT_PORT_TYPE
count[7] <= count[7]~reg0.DB_MAX_OUTPUT_PORT_TYPE
start_val[0] => Add0.IN16
start_val[0] => count.DATAB
start_val[1] => Add0.IN15
start_val[1] => count.DATAB
start_val[2] => Add0.IN14
start_val[2] => count.DATAB
start_val[3] => Add0.IN13
start_val[3] => count.DATAB
start_val[4] => Add0.IN12
start_val[4] => count.DATAB
start_val[5] => Add0.IN11
start_val[5] => count.DATAB
start_val[6] => Add0.IN10
start_val[6] => count.DATAB
start_val[7] => Add0.IN9
start_val[7] => count.DATAB
inc => count.OUTPUTSELECT
inc => count.OUTPUTSELECT
inc => count.OUTPUTSELECT
inc => count.OUTPUTSELECT
inc => count.OUTPUTSELECT
inc => count.OUTPUTSELECT
inc => count.OUTPUTSELECT
inc => count.OUTPUTSELECT
inc => always0.IN0
enable => always0.IN1
enable => count.OUTPUTSELECT
enable => count.OUTPUTSELECT
enable => count.OUTPUTSELECT
enable => count.OUTPUTSELECT
enable => count.OUTPUTSELECT
enable => count.OUTPUTSELECT
enable => count.OUTPUTSELECT
enable => count.OUTPUTSELECT
clk => count[0]~reg0.CLK
clk => count[1]~reg0.CLK
clk => count[2]~reg0.CLK
clk => count[3]~reg0.CLK
clk => count[4]~reg0.CLK
clk => count[5]~reg0.CLK
clk => count[6]~reg0.CLK
clk => count[7]~reg0.CLK
slow_edge => count.OUTPUTSELECT
slow_edge => count.OUTPUTSELECT
slow_edge => count.OUTPUTSELECT
slow_edge => count.OUTPUTSELECT
slow_edge => count.OUTPUTSELECT
slow_edge => count.OUTPUTSELECT
slow_edge => count.OUTPUTSELECT
slow_edge => count.OUTPUTSELECT
reset => count.OUTPUTSELECT
reset => count.OUTPUTSELECT
reset => count.OUTPUTSELECT
reset => count.OUTPUTSELECT
reset => count.OUTPUTSELECT
reset => count.OUTPUTSELECT
reset => count.OUTPUTSELECT
reset => count.OUTPUTSELECT
init_val[0] => count.DATAB
init_val[1] => count.DATAB


|lab8|snakes_and_apples:snake|grid_light:center_grid_row[2].center_grid_col[13].light
green_light_on <= green_light_on.DB_MAX_OUTPUT_PORT_TYPE
head <= head.DB_MAX_OUTPUT_PORT_TYPE
game_over_out <= state_n.DB_MAX_OUTPUT_PORT_TYPE
eating => counter256:counter.inc
eating => always0.IN1
game_over_in => state_n.e_off.OUTPUTSELECT
game_over_in => state_n.e_countdown.OUTPUTSELECT
game_over_in => state_n.e_head.OUTPUTSELECT
game_over_in => state_n.OUTPUTSELECT
left => state_n.OUTPUTSELECT
left => state_n.OUTPUTSELECT
left => state_n.OUTPUTSELECT
left => state_n.OUTPUTSELECT
up => state_n.OUTPUTSELECT
up => state_n.OUTPUTSELECT
up => state_n.OUTPUTSELECT
up => state_n.OUTPUTSELECT
right => state_n.OUTPUTSELECT
right => state_n.OUTPUTSELECT
right => state_n.OUTPUTSELECT
right => state_n.OUTPUTSELECT
down => state_n.OUTPUTSELECT
down => state_n.OUTPUTSELECT
down => state_n.OUTPUTSELECT
down => state_n.OUTPUTSELECT
length[0] => counter256:counter.start_val[0]
length[1] => counter256:counter.start_val[1]
length[2] => counter256:counter.start_val[2]
length[3] => counter256:counter.start_val[3]
length[4] => counter256:counter.start_val[4]
length[5] => counter256:counter.start_val[5]
length[6] => counter256:counter.start_val[6]
length[7] => counter256:counter.start_val[7]
dir[0] => Mux0.IN5
dir[0] => Mux1.IN5
dir[0] => Mux2.IN5
dir[0] => Mux3.IN5
dir[1] => Mux0.IN4
dir[1] => Mux1.IN4
dir[1] => Mux2.IN4
dir[1] => Mux3.IN4
clk => counter256:counter.clk
clk => state_r~1.DATAIN
slow_edge => counter256:counter.slow_edge
slow_edge => state_r.OUTPUTSELECT
slow_edge => state_r.OUTPUTSELECT
slow_edge => state_r.OUTPUTSELECT
slow_edge => state_r.OUTPUTSELECT
reset => counter256:counter.reset
reset => state_r.OUTPUTSELECT
reset => state_r.OUTPUTSELECT
reset => state_r.OUTPUTSELECT
reset => state_r.OUTPUTSELECT
light_type[0] => counter256:counter.init_val[0]
light_type[0] => Equal1.IN1
light_type[0] => Equal2.IN1
light_type[1] => counter256:counter.init_val[1]
light_type[1] => Equal1.IN0
light_type[1] => Equal2.IN0


|lab8|snakes_and_apples:snake|grid_light:center_grid_row[2].center_grid_col[13].light|counter256:counter
count[0] <= count[0]~reg0.DB_MAX_OUTPUT_PORT_TYPE
count[1] <= count[1]~reg0.DB_MAX_OUTPUT_PORT_TYPE
count[2] <= count[2]~reg0.DB_MAX_OUTPUT_PORT_TYPE
count[3] <= count[3]~reg0.DB_MAX_OUTPUT_PORT_TYPE
count[4] <= count[4]~reg0.DB_MAX_OUTPUT_PORT_TYPE
count[5] <= count[5]~reg0.DB_MAX_OUTPUT_PORT_TYPE
count[6] <= count[6]~reg0.DB_MAX_OUTPUT_PORT_TYPE
count[7] <= count[7]~reg0.DB_MAX_OUTPUT_PORT_TYPE
start_val[0] => Add0.IN16
start_val[0] => count.DATAB
start_val[1] => Add0.IN15
start_val[1] => count.DATAB
start_val[2] => Add0.IN14
start_val[2] => count.DATAB
start_val[3] => Add0.IN13
start_val[3] => count.DATAB
start_val[4] => Add0.IN12
start_val[4] => count.DATAB
start_val[5] => Add0.IN11
start_val[5] => count.DATAB
start_val[6] => Add0.IN10
start_val[6] => count.DATAB
start_val[7] => Add0.IN9
start_val[7] => count.DATAB
inc => count.OUTPUTSELECT
inc => count.OUTPUTSELECT
inc => count.OUTPUTSELECT
inc => count.OUTPUTSELECT
inc => count.OUTPUTSELECT
inc => count.OUTPUTSELECT
inc => count.OUTPUTSELECT
inc => count.OUTPUTSELECT
inc => always0.IN0
enable => always0.IN1
enable => count.OUTPUTSELECT
enable => count.OUTPUTSELECT
enable => count.OUTPUTSELECT
enable => count.OUTPUTSELECT
enable => count.OUTPUTSELECT
enable => count.OUTPUTSELECT
enable => count.OUTPUTSELECT
enable => count.OUTPUTSELECT
clk => count[0]~reg0.CLK
clk => count[1]~reg0.CLK
clk => count[2]~reg0.CLK
clk => count[3]~reg0.CLK
clk => count[4]~reg0.CLK
clk => count[5]~reg0.CLK
clk => count[6]~reg0.CLK
clk => count[7]~reg0.CLK
slow_edge => count.OUTPUTSELECT
slow_edge => count.OUTPUTSELECT
slow_edge => count.OUTPUTSELECT
slow_edge => count.OUTPUTSELECT
slow_edge => count.OUTPUTSELECT
slow_edge => count.OUTPUTSELECT
slow_edge => count.OUTPUTSELECT
slow_edge => count.OUTPUTSELECT
reset => count.OUTPUTSELECT
reset => count.OUTPUTSELECT
reset => count.OUTPUTSELECT
reset => count.OUTPUTSELECT
reset => count.OUTPUTSELECT
reset => count.OUTPUTSELECT
reset => count.OUTPUTSELECT
reset => count.OUTPUTSELECT
init_val[0] => count.DATAB
init_val[1] => count.DATAB


|lab8|snakes_and_apples:snake|grid_light:center_grid_row[2].center_grid_col[14].light
green_light_on <= green_light_on.DB_MAX_OUTPUT_PORT_TYPE
head <= head.DB_MAX_OUTPUT_PORT_TYPE
game_over_out <= state_n.DB_MAX_OUTPUT_PORT_TYPE
eating => counter256:counter.inc
eating => always0.IN1
game_over_in => state_n.e_off.OUTPUTSELECT
game_over_in => state_n.e_countdown.OUTPUTSELECT
game_over_in => state_n.e_head.OUTPUTSELECT
game_over_in => state_n.OUTPUTSELECT
left => state_n.OUTPUTSELECT
left => state_n.OUTPUTSELECT
left => state_n.OUTPUTSELECT
left => state_n.OUTPUTSELECT
up => state_n.OUTPUTSELECT
up => state_n.OUTPUTSELECT
up => state_n.OUTPUTSELECT
up => state_n.OUTPUTSELECT
right => state_n.OUTPUTSELECT
right => state_n.OUTPUTSELECT
right => state_n.OUTPUTSELECT
right => state_n.OUTPUTSELECT
down => state_n.OUTPUTSELECT
down => state_n.OUTPUTSELECT
down => state_n.OUTPUTSELECT
down => state_n.OUTPUTSELECT
length[0] => counter256:counter.start_val[0]
length[1] => counter256:counter.start_val[1]
length[2] => counter256:counter.start_val[2]
length[3] => counter256:counter.start_val[3]
length[4] => counter256:counter.start_val[4]
length[5] => counter256:counter.start_val[5]
length[6] => counter256:counter.start_val[6]
length[7] => counter256:counter.start_val[7]
dir[0] => Mux0.IN5
dir[0] => Mux1.IN5
dir[0] => Mux2.IN5
dir[0] => Mux3.IN5
dir[1] => Mux0.IN4
dir[1] => Mux1.IN4
dir[1] => Mux2.IN4
dir[1] => Mux3.IN4
clk => counter256:counter.clk
clk => state_r~1.DATAIN
slow_edge => counter256:counter.slow_edge
slow_edge => state_r.OUTPUTSELECT
slow_edge => state_r.OUTPUTSELECT
slow_edge => state_r.OUTPUTSELECT
slow_edge => state_r.OUTPUTSELECT
reset => counter256:counter.reset
reset => state_r.OUTPUTSELECT
reset => state_r.OUTPUTSELECT
reset => state_r.OUTPUTSELECT
reset => state_r.OUTPUTSELECT
light_type[0] => counter256:counter.init_val[0]
light_type[0] => Equal1.IN1
light_type[0] => Equal2.IN1
light_type[1] => counter256:counter.init_val[1]
light_type[1] => Equal1.IN0
light_type[1] => Equal2.IN0


|lab8|snakes_and_apples:snake|grid_light:center_grid_row[2].center_grid_col[14].light|counter256:counter
count[0] <= count[0]~reg0.DB_MAX_OUTPUT_PORT_TYPE
count[1] <= count[1]~reg0.DB_MAX_OUTPUT_PORT_TYPE
count[2] <= count[2]~reg0.DB_MAX_OUTPUT_PORT_TYPE
count[3] <= count[3]~reg0.DB_MAX_OUTPUT_PORT_TYPE
count[4] <= count[4]~reg0.DB_MAX_OUTPUT_PORT_TYPE
count[5] <= count[5]~reg0.DB_MAX_OUTPUT_PORT_TYPE
count[6] <= count[6]~reg0.DB_MAX_OUTPUT_PORT_TYPE
count[7] <= count[7]~reg0.DB_MAX_OUTPUT_PORT_TYPE
start_val[0] => Add0.IN16
start_val[0] => count.DATAB
start_val[1] => Add0.IN15
start_val[1] => count.DATAB
start_val[2] => Add0.IN14
start_val[2] => count.DATAB
start_val[3] => Add0.IN13
start_val[3] => count.DATAB
start_val[4] => Add0.IN12
start_val[4] => count.DATAB
start_val[5] => Add0.IN11
start_val[5] => count.DATAB
start_val[6] => Add0.IN10
start_val[6] => count.DATAB
start_val[7] => Add0.IN9
start_val[7] => count.DATAB
inc => count.OUTPUTSELECT
inc => count.OUTPUTSELECT
inc => count.OUTPUTSELECT
inc => count.OUTPUTSELECT
inc => count.OUTPUTSELECT
inc => count.OUTPUTSELECT
inc => count.OUTPUTSELECT
inc => count.OUTPUTSELECT
inc => always0.IN0
enable => always0.IN1
enable => count.OUTPUTSELECT
enable => count.OUTPUTSELECT
enable => count.OUTPUTSELECT
enable => count.OUTPUTSELECT
enable => count.OUTPUTSELECT
enable => count.OUTPUTSELECT
enable => count.OUTPUTSELECT
enable => count.OUTPUTSELECT
clk => count[0]~reg0.CLK
clk => count[1]~reg0.CLK
clk => count[2]~reg0.CLK
clk => count[3]~reg0.CLK
clk => count[4]~reg0.CLK
clk => count[5]~reg0.CLK
clk => count[6]~reg0.CLK
clk => count[7]~reg0.CLK
slow_edge => count.OUTPUTSELECT
slow_edge => count.OUTPUTSELECT
slow_edge => count.OUTPUTSELECT
slow_edge => count.OUTPUTSELECT
slow_edge => count.OUTPUTSELECT
slow_edge => count.OUTPUTSELECT
slow_edge => count.OUTPUTSELECT
slow_edge => count.OUTPUTSELECT
reset => count.OUTPUTSELECT
reset => count.OUTPUTSELECT
reset => count.OUTPUTSELECT
reset => count.OUTPUTSELECT
reset => count.OUTPUTSELECT
reset => count.OUTPUTSELECT
reset => count.OUTPUTSELECT
reset => count.OUTPUTSELECT
init_val[0] => count.DATAB
init_val[1] => count.DATAB


|lab8|snakes_and_apples:snake|grid_light:center_grid_row[3].center_grid_col[1].light
green_light_on <= green_light_on.DB_MAX_OUTPUT_PORT_TYPE
head <= head.DB_MAX_OUTPUT_PORT_TYPE
game_over_out <= state_n.DB_MAX_OUTPUT_PORT_TYPE
eating => counter256:counter.inc
eating => always0.IN1
game_over_in => state_n.e_off.OUTPUTSELECT
game_over_in => state_n.e_countdown.OUTPUTSELECT
game_over_in => state_n.e_head.OUTPUTSELECT
game_over_in => state_n.OUTPUTSELECT
left => state_n.OUTPUTSELECT
left => state_n.OUTPUTSELECT
left => state_n.OUTPUTSELECT
left => state_n.OUTPUTSELECT
up => state_n.OUTPUTSELECT
up => state_n.OUTPUTSELECT
up => state_n.OUTPUTSELECT
up => state_n.OUTPUTSELECT
right => state_n.OUTPUTSELECT
right => state_n.OUTPUTSELECT
right => state_n.OUTPUTSELECT
right => state_n.OUTPUTSELECT
down => state_n.OUTPUTSELECT
down => state_n.OUTPUTSELECT
down => state_n.OUTPUTSELECT
down => state_n.OUTPUTSELECT
length[0] => counter256:counter.start_val[0]
length[1] => counter256:counter.start_val[1]
length[2] => counter256:counter.start_val[2]
length[3] => counter256:counter.start_val[3]
length[4] => counter256:counter.start_val[4]
length[5] => counter256:counter.start_val[5]
length[6] => counter256:counter.start_val[6]
length[7] => counter256:counter.start_val[7]
dir[0] => Mux0.IN5
dir[0] => Mux1.IN5
dir[0] => Mux2.IN5
dir[0] => Mux3.IN5
dir[1] => Mux0.IN4
dir[1] => Mux1.IN4
dir[1] => Mux2.IN4
dir[1] => Mux3.IN4
clk => counter256:counter.clk
clk => state_r~1.DATAIN
slow_edge => counter256:counter.slow_edge
slow_edge => state_r.OUTPUTSELECT
slow_edge => state_r.OUTPUTSELECT
slow_edge => state_r.OUTPUTSELECT
slow_edge => state_r.OUTPUTSELECT
reset => counter256:counter.reset
reset => state_r.OUTPUTSELECT
reset => state_r.OUTPUTSELECT
reset => state_r.OUTPUTSELECT
reset => state_r.OUTPUTSELECT
light_type[0] => counter256:counter.init_val[0]
light_type[0] => Equal1.IN1
light_type[0] => Equal2.IN1
light_type[1] => counter256:counter.init_val[1]
light_type[1] => Equal1.IN0
light_type[1] => Equal2.IN0


|lab8|snakes_and_apples:snake|grid_light:center_grid_row[3].center_grid_col[1].light|counter256:counter
count[0] <= count[0]~reg0.DB_MAX_OUTPUT_PORT_TYPE
count[1] <= count[1]~reg0.DB_MAX_OUTPUT_PORT_TYPE
count[2] <= count[2]~reg0.DB_MAX_OUTPUT_PORT_TYPE
count[3] <= count[3]~reg0.DB_MAX_OUTPUT_PORT_TYPE
count[4] <= count[4]~reg0.DB_MAX_OUTPUT_PORT_TYPE
count[5] <= count[5]~reg0.DB_MAX_OUTPUT_PORT_TYPE
count[6] <= count[6]~reg0.DB_MAX_OUTPUT_PORT_TYPE
count[7] <= count[7]~reg0.DB_MAX_OUTPUT_PORT_TYPE
start_val[0] => Add0.IN16
start_val[0] => count.DATAB
start_val[1] => Add0.IN15
start_val[1] => count.DATAB
start_val[2] => Add0.IN14
start_val[2] => count.DATAB
start_val[3] => Add0.IN13
start_val[3] => count.DATAB
start_val[4] => Add0.IN12
start_val[4] => count.DATAB
start_val[5] => Add0.IN11
start_val[5] => count.DATAB
start_val[6] => Add0.IN10
start_val[6] => count.DATAB
start_val[7] => Add0.IN9
start_val[7] => count.DATAB
inc => count.OUTPUTSELECT
inc => count.OUTPUTSELECT
inc => count.OUTPUTSELECT
inc => count.OUTPUTSELECT
inc => count.OUTPUTSELECT
inc => count.OUTPUTSELECT
inc => count.OUTPUTSELECT
inc => count.OUTPUTSELECT
inc => always0.IN0
enable => always0.IN1
enable => count.OUTPUTSELECT
enable => count.OUTPUTSELECT
enable => count.OUTPUTSELECT
enable => count.OUTPUTSELECT
enable => count.OUTPUTSELECT
enable => count.OUTPUTSELECT
enable => count.OUTPUTSELECT
enable => count.OUTPUTSELECT
clk => count[0]~reg0.CLK
clk => count[1]~reg0.CLK
clk => count[2]~reg0.CLK
clk => count[3]~reg0.CLK
clk => count[4]~reg0.CLK
clk => count[5]~reg0.CLK
clk => count[6]~reg0.CLK
clk => count[7]~reg0.CLK
slow_edge => count.OUTPUTSELECT
slow_edge => count.OUTPUTSELECT
slow_edge => count.OUTPUTSELECT
slow_edge => count.OUTPUTSELECT
slow_edge => count.OUTPUTSELECT
slow_edge => count.OUTPUTSELECT
slow_edge => count.OUTPUTSELECT
slow_edge => count.OUTPUTSELECT
reset => count.OUTPUTSELECT
reset => count.OUTPUTSELECT
reset => count.OUTPUTSELECT
reset => count.OUTPUTSELECT
reset => count.OUTPUTSELECT
reset => count.OUTPUTSELECT
reset => count.OUTPUTSELECT
reset => count.OUTPUTSELECT
init_val[0] => count.DATAB
init_val[1] => count.DATAB


|lab8|snakes_and_apples:snake|grid_light:center_grid_row[3].center_grid_col[2].light
green_light_on <= green_light_on.DB_MAX_OUTPUT_PORT_TYPE
head <= head.DB_MAX_OUTPUT_PORT_TYPE
game_over_out <= state_n.DB_MAX_OUTPUT_PORT_TYPE
eating => counter256:counter.inc
eating => always0.IN1
game_over_in => state_n.e_off.OUTPUTSELECT
game_over_in => state_n.e_countdown.OUTPUTSELECT
game_over_in => state_n.e_head.OUTPUTSELECT
game_over_in => state_n.OUTPUTSELECT
left => state_n.OUTPUTSELECT
left => state_n.OUTPUTSELECT
left => state_n.OUTPUTSELECT
left => state_n.OUTPUTSELECT
up => state_n.OUTPUTSELECT
up => state_n.OUTPUTSELECT
up => state_n.OUTPUTSELECT
up => state_n.OUTPUTSELECT
right => state_n.OUTPUTSELECT
right => state_n.OUTPUTSELECT
right => state_n.OUTPUTSELECT
right => state_n.OUTPUTSELECT
down => state_n.OUTPUTSELECT
down => state_n.OUTPUTSELECT
down => state_n.OUTPUTSELECT
down => state_n.OUTPUTSELECT
length[0] => counter256:counter.start_val[0]
length[1] => counter256:counter.start_val[1]
length[2] => counter256:counter.start_val[2]
length[3] => counter256:counter.start_val[3]
length[4] => counter256:counter.start_val[4]
length[5] => counter256:counter.start_val[5]
length[6] => counter256:counter.start_val[6]
length[7] => counter256:counter.start_val[7]
dir[0] => Mux0.IN5
dir[0] => Mux1.IN5
dir[0] => Mux2.IN5
dir[0] => Mux3.IN5
dir[1] => Mux0.IN4
dir[1] => Mux1.IN4
dir[1] => Mux2.IN4
dir[1] => Mux3.IN4
clk => counter256:counter.clk
clk => state_r~1.DATAIN
slow_edge => counter256:counter.slow_edge
slow_edge => state_r.OUTPUTSELECT
slow_edge => state_r.OUTPUTSELECT
slow_edge => state_r.OUTPUTSELECT
slow_edge => state_r.OUTPUTSELECT
reset => counter256:counter.reset
reset => state_r.OUTPUTSELECT
reset => state_r.OUTPUTSELECT
reset => state_r.OUTPUTSELECT
reset => state_r.OUTPUTSELECT
light_type[0] => counter256:counter.init_val[0]
light_type[0] => Equal1.IN1
light_type[0] => Equal2.IN1
light_type[1] => counter256:counter.init_val[1]
light_type[1] => Equal1.IN0
light_type[1] => Equal2.IN0


|lab8|snakes_and_apples:snake|grid_light:center_grid_row[3].center_grid_col[2].light|counter256:counter
count[0] <= count[0]~reg0.DB_MAX_OUTPUT_PORT_TYPE
count[1] <= count[1]~reg0.DB_MAX_OUTPUT_PORT_TYPE
count[2] <= count[2]~reg0.DB_MAX_OUTPUT_PORT_TYPE
count[3] <= count[3]~reg0.DB_MAX_OUTPUT_PORT_TYPE
count[4] <= count[4]~reg0.DB_MAX_OUTPUT_PORT_TYPE
count[5] <= count[5]~reg0.DB_MAX_OUTPUT_PORT_TYPE
count[6] <= count[6]~reg0.DB_MAX_OUTPUT_PORT_TYPE
count[7] <= count[7]~reg0.DB_MAX_OUTPUT_PORT_TYPE
start_val[0] => Add0.IN16
start_val[0] => count.DATAB
start_val[1] => Add0.IN15
start_val[1] => count.DATAB
start_val[2] => Add0.IN14
start_val[2] => count.DATAB
start_val[3] => Add0.IN13
start_val[3] => count.DATAB
start_val[4] => Add0.IN12
start_val[4] => count.DATAB
start_val[5] => Add0.IN11
start_val[5] => count.DATAB
start_val[6] => Add0.IN10
start_val[6] => count.DATAB
start_val[7] => Add0.IN9
start_val[7] => count.DATAB
inc => count.OUTPUTSELECT
inc => count.OUTPUTSELECT
inc => count.OUTPUTSELECT
inc => count.OUTPUTSELECT
inc => count.OUTPUTSELECT
inc => count.OUTPUTSELECT
inc => count.OUTPUTSELECT
inc => count.OUTPUTSELECT
inc => always0.IN0
enable => always0.IN1
enable => count.OUTPUTSELECT
enable => count.OUTPUTSELECT
enable => count.OUTPUTSELECT
enable => count.OUTPUTSELECT
enable => count.OUTPUTSELECT
enable => count.OUTPUTSELECT
enable => count.OUTPUTSELECT
enable => count.OUTPUTSELECT
clk => count[0]~reg0.CLK
clk => count[1]~reg0.CLK
clk => count[2]~reg0.CLK
clk => count[3]~reg0.CLK
clk => count[4]~reg0.CLK
clk => count[5]~reg0.CLK
clk => count[6]~reg0.CLK
clk => count[7]~reg0.CLK
slow_edge => count.OUTPUTSELECT
slow_edge => count.OUTPUTSELECT
slow_edge => count.OUTPUTSELECT
slow_edge => count.OUTPUTSELECT
slow_edge => count.OUTPUTSELECT
slow_edge => count.OUTPUTSELECT
slow_edge => count.OUTPUTSELECT
slow_edge => count.OUTPUTSELECT
reset => count.OUTPUTSELECT
reset => count.OUTPUTSELECT
reset => count.OUTPUTSELECT
reset => count.OUTPUTSELECT
reset => count.OUTPUTSELECT
reset => count.OUTPUTSELECT
reset => count.OUTPUTSELECT
reset => count.OUTPUTSELECT
init_val[0] => count.DATAB
init_val[1] => count.DATAB


|lab8|snakes_and_apples:snake|grid_light:center_grid_row[3].center_grid_col[3].light
green_light_on <= green_light_on.DB_MAX_OUTPUT_PORT_TYPE
head <= head.DB_MAX_OUTPUT_PORT_TYPE
game_over_out <= state_n.DB_MAX_OUTPUT_PORT_TYPE
eating => counter256:counter.inc
eating => always0.IN1
game_over_in => state_n.e_off.OUTPUTSELECT
game_over_in => state_n.e_countdown.OUTPUTSELECT
game_over_in => state_n.e_head.OUTPUTSELECT
game_over_in => state_n.OUTPUTSELECT
left => state_n.OUTPUTSELECT
left => state_n.OUTPUTSELECT
left => state_n.OUTPUTSELECT
left => state_n.OUTPUTSELECT
up => state_n.OUTPUTSELECT
up => state_n.OUTPUTSELECT
up => state_n.OUTPUTSELECT
up => state_n.OUTPUTSELECT
right => state_n.OUTPUTSELECT
right => state_n.OUTPUTSELECT
right => state_n.OUTPUTSELECT
right => state_n.OUTPUTSELECT
down => state_n.OUTPUTSELECT
down => state_n.OUTPUTSELECT
down => state_n.OUTPUTSELECT
down => state_n.OUTPUTSELECT
length[0] => counter256:counter.start_val[0]
length[1] => counter256:counter.start_val[1]
length[2] => counter256:counter.start_val[2]
length[3] => counter256:counter.start_val[3]
length[4] => counter256:counter.start_val[4]
length[5] => counter256:counter.start_val[5]
length[6] => counter256:counter.start_val[6]
length[7] => counter256:counter.start_val[7]
dir[0] => Mux0.IN5
dir[0] => Mux1.IN5
dir[0] => Mux2.IN5
dir[0] => Mux3.IN5
dir[1] => Mux0.IN4
dir[1] => Mux1.IN4
dir[1] => Mux2.IN4
dir[1] => Mux3.IN4
clk => counter256:counter.clk
clk => state_r~1.DATAIN
slow_edge => counter256:counter.slow_edge
slow_edge => state_r.OUTPUTSELECT
slow_edge => state_r.OUTPUTSELECT
slow_edge => state_r.OUTPUTSELECT
slow_edge => state_r.OUTPUTSELECT
reset => counter256:counter.reset
reset => state_r.OUTPUTSELECT
reset => state_r.OUTPUTSELECT
reset => state_r.OUTPUTSELECT
reset => state_r.OUTPUTSELECT
light_type[0] => counter256:counter.init_val[0]
light_type[0] => Equal1.IN1
light_type[0] => Equal2.IN1
light_type[1] => counter256:counter.init_val[1]
light_type[1] => Equal1.IN0
light_type[1] => Equal2.IN0


|lab8|snakes_and_apples:snake|grid_light:center_grid_row[3].center_grid_col[3].light|counter256:counter
count[0] <= count[0]~reg0.DB_MAX_OUTPUT_PORT_TYPE
count[1] <= count[1]~reg0.DB_MAX_OUTPUT_PORT_TYPE
count[2] <= count[2]~reg0.DB_MAX_OUTPUT_PORT_TYPE
count[3] <= count[3]~reg0.DB_MAX_OUTPUT_PORT_TYPE
count[4] <= count[4]~reg0.DB_MAX_OUTPUT_PORT_TYPE
count[5] <= count[5]~reg0.DB_MAX_OUTPUT_PORT_TYPE
count[6] <= count[6]~reg0.DB_MAX_OUTPUT_PORT_TYPE
count[7] <= count[7]~reg0.DB_MAX_OUTPUT_PORT_TYPE
start_val[0] => Add0.IN16
start_val[0] => count.DATAB
start_val[1] => Add0.IN15
start_val[1] => count.DATAB
start_val[2] => Add0.IN14
start_val[2] => count.DATAB
start_val[3] => Add0.IN13
start_val[3] => count.DATAB
start_val[4] => Add0.IN12
start_val[4] => count.DATAB
start_val[5] => Add0.IN11
start_val[5] => count.DATAB
start_val[6] => Add0.IN10
start_val[6] => count.DATAB
start_val[7] => Add0.IN9
start_val[7] => count.DATAB
inc => count.OUTPUTSELECT
inc => count.OUTPUTSELECT
inc => count.OUTPUTSELECT
inc => count.OUTPUTSELECT
inc => count.OUTPUTSELECT
inc => count.OUTPUTSELECT
inc => count.OUTPUTSELECT
inc => count.OUTPUTSELECT
inc => always0.IN0
enable => always0.IN1
enable => count.OUTPUTSELECT
enable => count.OUTPUTSELECT
enable => count.OUTPUTSELECT
enable => count.OUTPUTSELECT
enable => count.OUTPUTSELECT
enable => count.OUTPUTSELECT
enable => count.OUTPUTSELECT
enable => count.OUTPUTSELECT
clk => count[0]~reg0.CLK
clk => count[1]~reg0.CLK
clk => count[2]~reg0.CLK
clk => count[3]~reg0.CLK
clk => count[4]~reg0.CLK
clk => count[5]~reg0.CLK
clk => count[6]~reg0.CLK
clk => count[7]~reg0.CLK
slow_edge => count.OUTPUTSELECT
slow_edge => count.OUTPUTSELECT
slow_edge => count.OUTPUTSELECT
slow_edge => count.OUTPUTSELECT
slow_edge => count.OUTPUTSELECT
slow_edge => count.OUTPUTSELECT
slow_edge => count.OUTPUTSELECT
slow_edge => count.OUTPUTSELECT
reset => count.OUTPUTSELECT
reset => count.OUTPUTSELECT
reset => count.OUTPUTSELECT
reset => count.OUTPUTSELECT
reset => count.OUTPUTSELECT
reset => count.OUTPUTSELECT
reset => count.OUTPUTSELECT
reset => count.OUTPUTSELECT
init_val[0] => count.DATAB
init_val[1] => count.DATAB


|lab8|snakes_and_apples:snake|grid_light:center_grid_row[3].center_grid_col[4].light
green_light_on <= green_light_on.DB_MAX_OUTPUT_PORT_TYPE
head <= head.DB_MAX_OUTPUT_PORT_TYPE
game_over_out <= state_n.DB_MAX_OUTPUT_PORT_TYPE
eating => counter256:counter.inc
eating => always0.IN1
game_over_in => state_n.e_off.OUTPUTSELECT
game_over_in => state_n.e_countdown.OUTPUTSELECT
game_over_in => state_n.e_head.OUTPUTSELECT
game_over_in => state_n.OUTPUTSELECT
left => state_n.OUTPUTSELECT
left => state_n.OUTPUTSELECT
left => state_n.OUTPUTSELECT
left => state_n.OUTPUTSELECT
up => state_n.OUTPUTSELECT
up => state_n.OUTPUTSELECT
up => state_n.OUTPUTSELECT
up => state_n.OUTPUTSELECT
right => state_n.OUTPUTSELECT
right => state_n.OUTPUTSELECT
right => state_n.OUTPUTSELECT
right => state_n.OUTPUTSELECT
down => state_n.OUTPUTSELECT
down => state_n.OUTPUTSELECT
down => state_n.OUTPUTSELECT
down => state_n.OUTPUTSELECT
length[0] => counter256:counter.start_val[0]
length[1] => counter256:counter.start_val[1]
length[2] => counter256:counter.start_val[2]
length[3] => counter256:counter.start_val[3]
length[4] => counter256:counter.start_val[4]
length[5] => counter256:counter.start_val[5]
length[6] => counter256:counter.start_val[6]
length[7] => counter256:counter.start_val[7]
dir[0] => Mux0.IN5
dir[0] => Mux1.IN5
dir[0] => Mux2.IN5
dir[0] => Mux3.IN5
dir[1] => Mux0.IN4
dir[1] => Mux1.IN4
dir[1] => Mux2.IN4
dir[1] => Mux3.IN4
clk => counter256:counter.clk
clk => state_r~1.DATAIN
slow_edge => counter256:counter.slow_edge
slow_edge => state_r.OUTPUTSELECT
slow_edge => state_r.OUTPUTSELECT
slow_edge => state_r.OUTPUTSELECT
slow_edge => state_r.OUTPUTSELECT
reset => counter256:counter.reset
reset => state_r.OUTPUTSELECT
reset => state_r.OUTPUTSELECT
reset => state_r.OUTPUTSELECT
reset => state_r.OUTPUTSELECT
light_type[0] => counter256:counter.init_val[0]
light_type[0] => Equal1.IN1
light_type[0] => Equal2.IN1
light_type[1] => counter256:counter.init_val[1]
light_type[1] => Equal1.IN0
light_type[1] => Equal2.IN0


|lab8|snakes_and_apples:snake|grid_light:center_grid_row[3].center_grid_col[4].light|counter256:counter
count[0] <= count[0]~reg0.DB_MAX_OUTPUT_PORT_TYPE
count[1] <= count[1]~reg0.DB_MAX_OUTPUT_PORT_TYPE
count[2] <= count[2]~reg0.DB_MAX_OUTPUT_PORT_TYPE
count[3] <= count[3]~reg0.DB_MAX_OUTPUT_PORT_TYPE
count[4] <= count[4]~reg0.DB_MAX_OUTPUT_PORT_TYPE
count[5] <= count[5]~reg0.DB_MAX_OUTPUT_PORT_TYPE
count[6] <= count[6]~reg0.DB_MAX_OUTPUT_PORT_TYPE
count[7] <= count[7]~reg0.DB_MAX_OUTPUT_PORT_TYPE
start_val[0] => Add0.IN16
start_val[0] => count.DATAB
start_val[1] => Add0.IN15
start_val[1] => count.DATAB
start_val[2] => Add0.IN14
start_val[2] => count.DATAB
start_val[3] => Add0.IN13
start_val[3] => count.DATAB
start_val[4] => Add0.IN12
start_val[4] => count.DATAB
start_val[5] => Add0.IN11
start_val[5] => count.DATAB
start_val[6] => Add0.IN10
start_val[6] => count.DATAB
start_val[7] => Add0.IN9
start_val[7] => count.DATAB
inc => count.OUTPUTSELECT
inc => count.OUTPUTSELECT
inc => count.OUTPUTSELECT
inc => count.OUTPUTSELECT
inc => count.OUTPUTSELECT
inc => count.OUTPUTSELECT
inc => count.OUTPUTSELECT
inc => count.OUTPUTSELECT
inc => always0.IN0
enable => always0.IN1
enable => count.OUTPUTSELECT
enable => count.OUTPUTSELECT
enable => count.OUTPUTSELECT
enable => count.OUTPUTSELECT
enable => count.OUTPUTSELECT
enable => count.OUTPUTSELECT
enable => count.OUTPUTSELECT
enable => count.OUTPUTSELECT
clk => count[0]~reg0.CLK
clk => count[1]~reg0.CLK
clk => count[2]~reg0.CLK
clk => count[3]~reg0.CLK
clk => count[4]~reg0.CLK
clk => count[5]~reg0.CLK
clk => count[6]~reg0.CLK
clk => count[7]~reg0.CLK
slow_edge => count.OUTPUTSELECT
slow_edge => count.OUTPUTSELECT
slow_edge => count.OUTPUTSELECT
slow_edge => count.OUTPUTSELECT
slow_edge => count.OUTPUTSELECT
slow_edge => count.OUTPUTSELECT
slow_edge => count.OUTPUTSELECT
slow_edge => count.OUTPUTSELECT
reset => count.OUTPUTSELECT
reset => count.OUTPUTSELECT
reset => count.OUTPUTSELECT
reset => count.OUTPUTSELECT
reset => count.OUTPUTSELECT
reset => count.OUTPUTSELECT
reset => count.OUTPUTSELECT
reset => count.OUTPUTSELECT
init_val[0] => count.DATAB
init_val[1] => count.DATAB


|lab8|snakes_and_apples:snake|grid_light:center_grid_row[3].center_grid_col[5].light
green_light_on <= green_light_on.DB_MAX_OUTPUT_PORT_TYPE
head <= head.DB_MAX_OUTPUT_PORT_TYPE
game_over_out <= state_n.DB_MAX_OUTPUT_PORT_TYPE
eating => counter256:counter.inc
eating => always0.IN1
game_over_in => state_n.e_off.OUTPUTSELECT
game_over_in => state_n.e_countdown.OUTPUTSELECT
game_over_in => state_n.e_head.OUTPUTSELECT
game_over_in => state_n.OUTPUTSELECT
left => state_n.OUTPUTSELECT
left => state_n.OUTPUTSELECT
left => state_n.OUTPUTSELECT
left => state_n.OUTPUTSELECT
up => state_n.OUTPUTSELECT
up => state_n.OUTPUTSELECT
up => state_n.OUTPUTSELECT
up => state_n.OUTPUTSELECT
right => state_n.OUTPUTSELECT
right => state_n.OUTPUTSELECT
right => state_n.OUTPUTSELECT
right => state_n.OUTPUTSELECT
down => state_n.OUTPUTSELECT
down => state_n.OUTPUTSELECT
down => state_n.OUTPUTSELECT
down => state_n.OUTPUTSELECT
length[0] => counter256:counter.start_val[0]
length[1] => counter256:counter.start_val[1]
length[2] => counter256:counter.start_val[2]
length[3] => counter256:counter.start_val[3]
length[4] => counter256:counter.start_val[4]
length[5] => counter256:counter.start_val[5]
length[6] => counter256:counter.start_val[6]
length[7] => counter256:counter.start_val[7]
dir[0] => Mux0.IN5
dir[0] => Mux1.IN5
dir[0] => Mux2.IN5
dir[0] => Mux3.IN5
dir[1] => Mux0.IN4
dir[1] => Mux1.IN4
dir[1] => Mux2.IN4
dir[1] => Mux3.IN4
clk => counter256:counter.clk
clk => state_r~1.DATAIN
slow_edge => counter256:counter.slow_edge
slow_edge => state_r.OUTPUTSELECT
slow_edge => state_r.OUTPUTSELECT
slow_edge => state_r.OUTPUTSELECT
slow_edge => state_r.OUTPUTSELECT
reset => counter256:counter.reset
reset => state_r.OUTPUTSELECT
reset => state_r.OUTPUTSELECT
reset => state_r.OUTPUTSELECT
reset => state_r.OUTPUTSELECT
light_type[0] => counter256:counter.init_val[0]
light_type[0] => Equal1.IN1
light_type[0] => Equal2.IN1
light_type[1] => counter256:counter.init_val[1]
light_type[1] => Equal1.IN0
light_type[1] => Equal2.IN0


|lab8|snakes_and_apples:snake|grid_light:center_grid_row[3].center_grid_col[5].light|counter256:counter
count[0] <= count[0]~reg0.DB_MAX_OUTPUT_PORT_TYPE
count[1] <= count[1]~reg0.DB_MAX_OUTPUT_PORT_TYPE
count[2] <= count[2]~reg0.DB_MAX_OUTPUT_PORT_TYPE
count[3] <= count[3]~reg0.DB_MAX_OUTPUT_PORT_TYPE
count[4] <= count[4]~reg0.DB_MAX_OUTPUT_PORT_TYPE
count[5] <= count[5]~reg0.DB_MAX_OUTPUT_PORT_TYPE
count[6] <= count[6]~reg0.DB_MAX_OUTPUT_PORT_TYPE
count[7] <= count[7]~reg0.DB_MAX_OUTPUT_PORT_TYPE
start_val[0] => Add0.IN16
start_val[0] => count.DATAB
start_val[1] => Add0.IN15
start_val[1] => count.DATAB
start_val[2] => Add0.IN14
start_val[2] => count.DATAB
start_val[3] => Add0.IN13
start_val[3] => count.DATAB
start_val[4] => Add0.IN12
start_val[4] => count.DATAB
start_val[5] => Add0.IN11
start_val[5] => count.DATAB
start_val[6] => Add0.IN10
start_val[6] => count.DATAB
start_val[7] => Add0.IN9
start_val[7] => count.DATAB
inc => count.OUTPUTSELECT
inc => count.OUTPUTSELECT
inc => count.OUTPUTSELECT
inc => count.OUTPUTSELECT
inc => count.OUTPUTSELECT
inc => count.OUTPUTSELECT
inc => count.OUTPUTSELECT
inc => count.OUTPUTSELECT
inc => always0.IN0
enable => always0.IN1
enable => count.OUTPUTSELECT
enable => count.OUTPUTSELECT
enable => count.OUTPUTSELECT
enable => count.OUTPUTSELECT
enable => count.OUTPUTSELECT
enable => count.OUTPUTSELECT
enable => count.OUTPUTSELECT
enable => count.OUTPUTSELECT
clk => count[0]~reg0.CLK
clk => count[1]~reg0.CLK
clk => count[2]~reg0.CLK
clk => count[3]~reg0.CLK
clk => count[4]~reg0.CLK
clk => count[5]~reg0.CLK
clk => count[6]~reg0.CLK
clk => count[7]~reg0.CLK
slow_edge => count.OUTPUTSELECT
slow_edge => count.OUTPUTSELECT
slow_edge => count.OUTPUTSELECT
slow_edge => count.OUTPUTSELECT
slow_edge => count.OUTPUTSELECT
slow_edge => count.OUTPUTSELECT
slow_edge => count.OUTPUTSELECT
slow_edge => count.OUTPUTSELECT
reset => count.OUTPUTSELECT
reset => count.OUTPUTSELECT
reset => count.OUTPUTSELECT
reset => count.OUTPUTSELECT
reset => count.OUTPUTSELECT
reset => count.OUTPUTSELECT
reset => count.OUTPUTSELECT
reset => count.OUTPUTSELECT
init_val[0] => count.DATAB
init_val[1] => count.DATAB


|lab8|snakes_and_apples:snake|grid_light:center_grid_row[3].center_grid_col[6].light
green_light_on <= green_light_on.DB_MAX_OUTPUT_PORT_TYPE
head <= head.DB_MAX_OUTPUT_PORT_TYPE
game_over_out <= state_n.DB_MAX_OUTPUT_PORT_TYPE
eating => counter256:counter.inc
eating => always0.IN1
game_over_in => state_n.e_off.OUTPUTSELECT
game_over_in => state_n.e_countdown.OUTPUTSELECT
game_over_in => state_n.e_head.OUTPUTSELECT
game_over_in => state_n.OUTPUTSELECT
left => state_n.OUTPUTSELECT
left => state_n.OUTPUTSELECT
left => state_n.OUTPUTSELECT
left => state_n.OUTPUTSELECT
up => state_n.OUTPUTSELECT
up => state_n.OUTPUTSELECT
up => state_n.OUTPUTSELECT
up => state_n.OUTPUTSELECT
right => state_n.OUTPUTSELECT
right => state_n.OUTPUTSELECT
right => state_n.OUTPUTSELECT
right => state_n.OUTPUTSELECT
down => state_n.OUTPUTSELECT
down => state_n.OUTPUTSELECT
down => state_n.OUTPUTSELECT
down => state_n.OUTPUTSELECT
length[0] => counter256:counter.start_val[0]
length[1] => counter256:counter.start_val[1]
length[2] => counter256:counter.start_val[2]
length[3] => counter256:counter.start_val[3]
length[4] => counter256:counter.start_val[4]
length[5] => counter256:counter.start_val[5]
length[6] => counter256:counter.start_val[6]
length[7] => counter256:counter.start_val[7]
dir[0] => Mux0.IN5
dir[0] => Mux1.IN5
dir[0] => Mux2.IN5
dir[0] => Mux3.IN5
dir[1] => Mux0.IN4
dir[1] => Mux1.IN4
dir[1] => Mux2.IN4
dir[1] => Mux3.IN4
clk => counter256:counter.clk
clk => state_r~1.DATAIN
slow_edge => counter256:counter.slow_edge
slow_edge => state_r.OUTPUTSELECT
slow_edge => state_r.OUTPUTSELECT
slow_edge => state_r.OUTPUTSELECT
slow_edge => state_r.OUTPUTSELECT
reset => counter256:counter.reset
reset => state_r.OUTPUTSELECT
reset => state_r.OUTPUTSELECT
reset => state_r.OUTPUTSELECT
reset => state_r.OUTPUTSELECT
light_type[0] => counter256:counter.init_val[0]
light_type[0] => Equal1.IN1
light_type[0] => Equal2.IN1
light_type[1] => counter256:counter.init_val[1]
light_type[1] => Equal1.IN0
light_type[1] => Equal2.IN0


|lab8|snakes_and_apples:snake|grid_light:center_grid_row[3].center_grid_col[6].light|counter256:counter
count[0] <= count[0]~reg0.DB_MAX_OUTPUT_PORT_TYPE
count[1] <= count[1]~reg0.DB_MAX_OUTPUT_PORT_TYPE
count[2] <= count[2]~reg0.DB_MAX_OUTPUT_PORT_TYPE
count[3] <= count[3]~reg0.DB_MAX_OUTPUT_PORT_TYPE
count[4] <= count[4]~reg0.DB_MAX_OUTPUT_PORT_TYPE
count[5] <= count[5]~reg0.DB_MAX_OUTPUT_PORT_TYPE
count[6] <= count[6]~reg0.DB_MAX_OUTPUT_PORT_TYPE
count[7] <= count[7]~reg0.DB_MAX_OUTPUT_PORT_TYPE
start_val[0] => Add0.IN16
start_val[0] => count.DATAB
start_val[1] => Add0.IN15
start_val[1] => count.DATAB
start_val[2] => Add0.IN14
start_val[2] => count.DATAB
start_val[3] => Add0.IN13
start_val[3] => count.DATAB
start_val[4] => Add0.IN12
start_val[4] => count.DATAB
start_val[5] => Add0.IN11
start_val[5] => count.DATAB
start_val[6] => Add0.IN10
start_val[6] => count.DATAB
start_val[7] => Add0.IN9
start_val[7] => count.DATAB
inc => count.OUTPUTSELECT
inc => count.OUTPUTSELECT
inc => count.OUTPUTSELECT
inc => count.OUTPUTSELECT
inc => count.OUTPUTSELECT
inc => count.OUTPUTSELECT
inc => count.OUTPUTSELECT
inc => count.OUTPUTSELECT
inc => always0.IN0
enable => always0.IN1
enable => count.OUTPUTSELECT
enable => count.OUTPUTSELECT
enable => count.OUTPUTSELECT
enable => count.OUTPUTSELECT
enable => count.OUTPUTSELECT
enable => count.OUTPUTSELECT
enable => count.OUTPUTSELECT
enable => count.OUTPUTSELECT
clk => count[0]~reg0.CLK
clk => count[1]~reg0.CLK
clk => count[2]~reg0.CLK
clk => count[3]~reg0.CLK
clk => count[4]~reg0.CLK
clk => count[5]~reg0.CLK
clk => count[6]~reg0.CLK
clk => count[7]~reg0.CLK
slow_edge => count.OUTPUTSELECT
slow_edge => count.OUTPUTSELECT
slow_edge => count.OUTPUTSELECT
slow_edge => count.OUTPUTSELECT
slow_edge => count.OUTPUTSELECT
slow_edge => count.OUTPUTSELECT
slow_edge => count.OUTPUTSELECT
slow_edge => count.OUTPUTSELECT
reset => count.OUTPUTSELECT
reset => count.OUTPUTSELECT
reset => count.OUTPUTSELECT
reset => count.OUTPUTSELECT
reset => count.OUTPUTSELECT
reset => count.OUTPUTSELECT
reset => count.OUTPUTSELECT
reset => count.OUTPUTSELECT
init_val[0] => count.DATAB
init_val[1] => count.DATAB


|lab8|snakes_and_apples:snake|grid_light:center_grid_row[3].center_grid_col[7].light
green_light_on <= green_light_on.DB_MAX_OUTPUT_PORT_TYPE
head <= head.DB_MAX_OUTPUT_PORT_TYPE
game_over_out <= state_n.DB_MAX_OUTPUT_PORT_TYPE
eating => counter256:counter.inc
eating => always0.IN1
game_over_in => state_n.e_off.OUTPUTSELECT
game_over_in => state_n.e_countdown.OUTPUTSELECT
game_over_in => state_n.e_head.OUTPUTSELECT
game_over_in => state_n.OUTPUTSELECT
left => state_n.OUTPUTSELECT
left => state_n.OUTPUTSELECT
left => state_n.OUTPUTSELECT
left => state_n.OUTPUTSELECT
up => state_n.OUTPUTSELECT
up => state_n.OUTPUTSELECT
up => state_n.OUTPUTSELECT
up => state_n.OUTPUTSELECT
right => state_n.OUTPUTSELECT
right => state_n.OUTPUTSELECT
right => state_n.OUTPUTSELECT
right => state_n.OUTPUTSELECT
down => state_n.OUTPUTSELECT
down => state_n.OUTPUTSELECT
down => state_n.OUTPUTSELECT
down => state_n.OUTPUTSELECT
length[0] => counter256:counter.start_val[0]
length[1] => counter256:counter.start_val[1]
length[2] => counter256:counter.start_val[2]
length[3] => counter256:counter.start_val[3]
length[4] => counter256:counter.start_val[4]
length[5] => counter256:counter.start_val[5]
length[6] => counter256:counter.start_val[6]
length[7] => counter256:counter.start_val[7]
dir[0] => Mux0.IN5
dir[0] => Mux1.IN5
dir[0] => Mux2.IN5
dir[0] => Mux3.IN5
dir[1] => Mux0.IN4
dir[1] => Mux1.IN4
dir[1] => Mux2.IN4
dir[1] => Mux3.IN4
clk => counter256:counter.clk
clk => state_r~1.DATAIN
slow_edge => counter256:counter.slow_edge
slow_edge => state_r.OUTPUTSELECT
slow_edge => state_r.OUTPUTSELECT
slow_edge => state_r.OUTPUTSELECT
slow_edge => state_r.OUTPUTSELECT
reset => counter256:counter.reset
reset => state_r.OUTPUTSELECT
reset => state_r.OUTPUTSELECT
reset => state_r.OUTPUTSELECT
reset => state_r.OUTPUTSELECT
light_type[0] => counter256:counter.init_val[0]
light_type[0] => Equal1.IN1
light_type[0] => Equal2.IN1
light_type[1] => counter256:counter.init_val[1]
light_type[1] => Equal1.IN0
light_type[1] => Equal2.IN0


|lab8|snakes_and_apples:snake|grid_light:center_grid_row[3].center_grid_col[7].light|counter256:counter
count[0] <= count[0]~reg0.DB_MAX_OUTPUT_PORT_TYPE
count[1] <= count[1]~reg0.DB_MAX_OUTPUT_PORT_TYPE
count[2] <= count[2]~reg0.DB_MAX_OUTPUT_PORT_TYPE
count[3] <= count[3]~reg0.DB_MAX_OUTPUT_PORT_TYPE
count[4] <= count[4]~reg0.DB_MAX_OUTPUT_PORT_TYPE
count[5] <= count[5]~reg0.DB_MAX_OUTPUT_PORT_TYPE
count[6] <= count[6]~reg0.DB_MAX_OUTPUT_PORT_TYPE
count[7] <= count[7]~reg0.DB_MAX_OUTPUT_PORT_TYPE
start_val[0] => Add0.IN16
start_val[0] => count.DATAB
start_val[1] => Add0.IN15
start_val[1] => count.DATAB
start_val[2] => Add0.IN14
start_val[2] => count.DATAB
start_val[3] => Add0.IN13
start_val[3] => count.DATAB
start_val[4] => Add0.IN12
start_val[4] => count.DATAB
start_val[5] => Add0.IN11
start_val[5] => count.DATAB
start_val[6] => Add0.IN10
start_val[6] => count.DATAB
start_val[7] => Add0.IN9
start_val[7] => count.DATAB
inc => count.OUTPUTSELECT
inc => count.OUTPUTSELECT
inc => count.OUTPUTSELECT
inc => count.OUTPUTSELECT
inc => count.OUTPUTSELECT
inc => count.OUTPUTSELECT
inc => count.OUTPUTSELECT
inc => count.OUTPUTSELECT
inc => always0.IN0
enable => always0.IN1
enable => count.OUTPUTSELECT
enable => count.OUTPUTSELECT
enable => count.OUTPUTSELECT
enable => count.OUTPUTSELECT
enable => count.OUTPUTSELECT
enable => count.OUTPUTSELECT
enable => count.OUTPUTSELECT
enable => count.OUTPUTSELECT
clk => count[0]~reg0.CLK
clk => count[1]~reg0.CLK
clk => count[2]~reg0.CLK
clk => count[3]~reg0.CLK
clk => count[4]~reg0.CLK
clk => count[5]~reg0.CLK
clk => count[6]~reg0.CLK
clk => count[7]~reg0.CLK
slow_edge => count.OUTPUTSELECT
slow_edge => count.OUTPUTSELECT
slow_edge => count.OUTPUTSELECT
slow_edge => count.OUTPUTSELECT
slow_edge => count.OUTPUTSELECT
slow_edge => count.OUTPUTSELECT
slow_edge => count.OUTPUTSELECT
slow_edge => count.OUTPUTSELECT
reset => count.OUTPUTSELECT
reset => count.OUTPUTSELECT
reset => count.OUTPUTSELECT
reset => count.OUTPUTSELECT
reset => count.OUTPUTSELECT
reset => count.OUTPUTSELECT
reset => count.OUTPUTSELECT
reset => count.OUTPUTSELECT
init_val[0] => count.DATAB
init_val[1] => count.DATAB


|lab8|snakes_and_apples:snake|grid_light:center_grid_row[3].center_grid_col[8].light
green_light_on <= green_light_on.DB_MAX_OUTPUT_PORT_TYPE
head <= head.DB_MAX_OUTPUT_PORT_TYPE
game_over_out <= state_n.DB_MAX_OUTPUT_PORT_TYPE
eating => counter256:counter.inc
eating => always0.IN1
game_over_in => state_n.e_off.OUTPUTSELECT
game_over_in => state_n.e_countdown.OUTPUTSELECT
game_over_in => state_n.e_head.OUTPUTSELECT
game_over_in => state_n.OUTPUTSELECT
left => state_n.OUTPUTSELECT
left => state_n.OUTPUTSELECT
left => state_n.OUTPUTSELECT
left => state_n.OUTPUTSELECT
up => state_n.OUTPUTSELECT
up => state_n.OUTPUTSELECT
up => state_n.OUTPUTSELECT
up => state_n.OUTPUTSELECT
right => state_n.OUTPUTSELECT
right => state_n.OUTPUTSELECT
right => state_n.OUTPUTSELECT
right => state_n.OUTPUTSELECT
down => state_n.OUTPUTSELECT
down => state_n.OUTPUTSELECT
down => state_n.OUTPUTSELECT
down => state_n.OUTPUTSELECT
length[0] => counter256:counter.start_val[0]
length[1] => counter256:counter.start_val[1]
length[2] => counter256:counter.start_val[2]
length[3] => counter256:counter.start_val[3]
length[4] => counter256:counter.start_val[4]
length[5] => counter256:counter.start_val[5]
length[6] => counter256:counter.start_val[6]
length[7] => counter256:counter.start_val[7]
dir[0] => Mux0.IN5
dir[0] => Mux1.IN5
dir[0] => Mux2.IN5
dir[0] => Mux3.IN5
dir[1] => Mux0.IN4
dir[1] => Mux1.IN4
dir[1] => Mux2.IN4
dir[1] => Mux3.IN4
clk => counter256:counter.clk
clk => state_r~1.DATAIN
slow_edge => counter256:counter.slow_edge
slow_edge => state_r.OUTPUTSELECT
slow_edge => state_r.OUTPUTSELECT
slow_edge => state_r.OUTPUTSELECT
slow_edge => state_r.OUTPUTSELECT
reset => counter256:counter.reset
reset => state_r.OUTPUTSELECT
reset => state_r.OUTPUTSELECT
reset => state_r.OUTPUTSELECT
reset => state_r.OUTPUTSELECT
light_type[0] => counter256:counter.init_val[0]
light_type[0] => Equal1.IN1
light_type[0] => Equal2.IN1
light_type[1] => counter256:counter.init_val[1]
light_type[1] => Equal1.IN0
light_type[1] => Equal2.IN0


|lab8|snakes_and_apples:snake|grid_light:center_grid_row[3].center_grid_col[8].light|counter256:counter
count[0] <= count[0]~reg0.DB_MAX_OUTPUT_PORT_TYPE
count[1] <= count[1]~reg0.DB_MAX_OUTPUT_PORT_TYPE
count[2] <= count[2]~reg0.DB_MAX_OUTPUT_PORT_TYPE
count[3] <= count[3]~reg0.DB_MAX_OUTPUT_PORT_TYPE
count[4] <= count[4]~reg0.DB_MAX_OUTPUT_PORT_TYPE
count[5] <= count[5]~reg0.DB_MAX_OUTPUT_PORT_TYPE
count[6] <= count[6]~reg0.DB_MAX_OUTPUT_PORT_TYPE
count[7] <= count[7]~reg0.DB_MAX_OUTPUT_PORT_TYPE
start_val[0] => Add0.IN16
start_val[0] => count.DATAB
start_val[1] => Add0.IN15
start_val[1] => count.DATAB
start_val[2] => Add0.IN14
start_val[2] => count.DATAB
start_val[3] => Add0.IN13
start_val[3] => count.DATAB
start_val[4] => Add0.IN12
start_val[4] => count.DATAB
start_val[5] => Add0.IN11
start_val[5] => count.DATAB
start_val[6] => Add0.IN10
start_val[6] => count.DATAB
start_val[7] => Add0.IN9
start_val[7] => count.DATAB
inc => count.OUTPUTSELECT
inc => count.OUTPUTSELECT
inc => count.OUTPUTSELECT
inc => count.OUTPUTSELECT
inc => count.OUTPUTSELECT
inc => count.OUTPUTSELECT
inc => count.OUTPUTSELECT
inc => count.OUTPUTSELECT
inc => always0.IN0
enable => always0.IN1
enable => count.OUTPUTSELECT
enable => count.OUTPUTSELECT
enable => count.OUTPUTSELECT
enable => count.OUTPUTSELECT
enable => count.OUTPUTSELECT
enable => count.OUTPUTSELECT
enable => count.OUTPUTSELECT
enable => count.OUTPUTSELECT
clk => count[0]~reg0.CLK
clk => count[1]~reg0.CLK
clk => count[2]~reg0.CLK
clk => count[3]~reg0.CLK
clk => count[4]~reg0.CLK
clk => count[5]~reg0.CLK
clk => count[6]~reg0.CLK
clk => count[7]~reg0.CLK
slow_edge => count.OUTPUTSELECT
slow_edge => count.OUTPUTSELECT
slow_edge => count.OUTPUTSELECT
slow_edge => count.OUTPUTSELECT
slow_edge => count.OUTPUTSELECT
slow_edge => count.OUTPUTSELECT
slow_edge => count.OUTPUTSELECT
slow_edge => count.OUTPUTSELECT
reset => count.OUTPUTSELECT
reset => count.OUTPUTSELECT
reset => count.OUTPUTSELECT
reset => count.OUTPUTSELECT
reset => count.OUTPUTSELECT
reset => count.OUTPUTSELECT
reset => count.OUTPUTSELECT
reset => count.OUTPUTSELECT
init_val[0] => count.DATAB
init_val[1] => count.DATAB


|lab8|snakes_and_apples:snake|grid_light:center_grid_row[3].center_grid_col[9].light
green_light_on <= green_light_on.DB_MAX_OUTPUT_PORT_TYPE
head <= head.DB_MAX_OUTPUT_PORT_TYPE
game_over_out <= state_n.DB_MAX_OUTPUT_PORT_TYPE
eating => counter256:counter.inc
eating => always0.IN1
game_over_in => state_n.e_off.OUTPUTSELECT
game_over_in => state_n.e_countdown.OUTPUTSELECT
game_over_in => state_n.e_head.OUTPUTSELECT
game_over_in => state_n.OUTPUTSELECT
left => state_n.OUTPUTSELECT
left => state_n.OUTPUTSELECT
left => state_n.OUTPUTSELECT
left => state_n.OUTPUTSELECT
up => state_n.OUTPUTSELECT
up => state_n.OUTPUTSELECT
up => state_n.OUTPUTSELECT
up => state_n.OUTPUTSELECT
right => state_n.OUTPUTSELECT
right => state_n.OUTPUTSELECT
right => state_n.OUTPUTSELECT
right => state_n.OUTPUTSELECT
down => state_n.OUTPUTSELECT
down => state_n.OUTPUTSELECT
down => state_n.OUTPUTSELECT
down => state_n.OUTPUTSELECT
length[0] => counter256:counter.start_val[0]
length[1] => counter256:counter.start_val[1]
length[2] => counter256:counter.start_val[2]
length[3] => counter256:counter.start_val[3]
length[4] => counter256:counter.start_val[4]
length[5] => counter256:counter.start_val[5]
length[6] => counter256:counter.start_val[6]
length[7] => counter256:counter.start_val[7]
dir[0] => Mux0.IN5
dir[0] => Mux1.IN5
dir[0] => Mux2.IN5
dir[0] => Mux3.IN5
dir[1] => Mux0.IN4
dir[1] => Mux1.IN4
dir[1] => Mux2.IN4
dir[1] => Mux3.IN4
clk => counter256:counter.clk
clk => state_r~1.DATAIN
slow_edge => counter256:counter.slow_edge
slow_edge => state_r.OUTPUTSELECT
slow_edge => state_r.OUTPUTSELECT
slow_edge => state_r.OUTPUTSELECT
slow_edge => state_r.OUTPUTSELECT
reset => counter256:counter.reset
reset => state_r.OUTPUTSELECT
reset => state_r.OUTPUTSELECT
reset => state_r.OUTPUTSELECT
reset => state_r.OUTPUTSELECT
light_type[0] => counter256:counter.init_val[0]
light_type[0] => Equal1.IN1
light_type[0] => Equal2.IN1
light_type[1] => counter256:counter.init_val[1]
light_type[1] => Equal1.IN0
light_type[1] => Equal2.IN0


|lab8|snakes_and_apples:snake|grid_light:center_grid_row[3].center_grid_col[9].light|counter256:counter
count[0] <= count[0]~reg0.DB_MAX_OUTPUT_PORT_TYPE
count[1] <= count[1]~reg0.DB_MAX_OUTPUT_PORT_TYPE
count[2] <= count[2]~reg0.DB_MAX_OUTPUT_PORT_TYPE
count[3] <= count[3]~reg0.DB_MAX_OUTPUT_PORT_TYPE
count[4] <= count[4]~reg0.DB_MAX_OUTPUT_PORT_TYPE
count[5] <= count[5]~reg0.DB_MAX_OUTPUT_PORT_TYPE
count[6] <= count[6]~reg0.DB_MAX_OUTPUT_PORT_TYPE
count[7] <= count[7]~reg0.DB_MAX_OUTPUT_PORT_TYPE
start_val[0] => Add0.IN16
start_val[0] => count.DATAB
start_val[1] => Add0.IN15
start_val[1] => count.DATAB
start_val[2] => Add0.IN14
start_val[2] => count.DATAB
start_val[3] => Add0.IN13
start_val[3] => count.DATAB
start_val[4] => Add0.IN12
start_val[4] => count.DATAB
start_val[5] => Add0.IN11
start_val[5] => count.DATAB
start_val[6] => Add0.IN10
start_val[6] => count.DATAB
start_val[7] => Add0.IN9
start_val[7] => count.DATAB
inc => count.OUTPUTSELECT
inc => count.OUTPUTSELECT
inc => count.OUTPUTSELECT
inc => count.OUTPUTSELECT
inc => count.OUTPUTSELECT
inc => count.OUTPUTSELECT
inc => count.OUTPUTSELECT
inc => count.OUTPUTSELECT
inc => always0.IN0
enable => always0.IN1
enable => count.OUTPUTSELECT
enable => count.OUTPUTSELECT
enable => count.OUTPUTSELECT
enable => count.OUTPUTSELECT
enable => count.OUTPUTSELECT
enable => count.OUTPUTSELECT
enable => count.OUTPUTSELECT
enable => count.OUTPUTSELECT
clk => count[0]~reg0.CLK
clk => count[1]~reg0.CLK
clk => count[2]~reg0.CLK
clk => count[3]~reg0.CLK
clk => count[4]~reg0.CLK
clk => count[5]~reg0.CLK
clk => count[6]~reg0.CLK
clk => count[7]~reg0.CLK
slow_edge => count.OUTPUTSELECT
slow_edge => count.OUTPUTSELECT
slow_edge => count.OUTPUTSELECT
slow_edge => count.OUTPUTSELECT
slow_edge => count.OUTPUTSELECT
slow_edge => count.OUTPUTSELECT
slow_edge => count.OUTPUTSELECT
slow_edge => count.OUTPUTSELECT
reset => count.OUTPUTSELECT
reset => count.OUTPUTSELECT
reset => count.OUTPUTSELECT
reset => count.OUTPUTSELECT
reset => count.OUTPUTSELECT
reset => count.OUTPUTSELECT
reset => count.OUTPUTSELECT
reset => count.OUTPUTSELECT
init_val[0] => count.DATAB
init_val[1] => count.DATAB


|lab8|snakes_and_apples:snake|grid_light:center_grid_row[3].center_grid_col[10].light
green_light_on <= green_light_on.DB_MAX_OUTPUT_PORT_TYPE
head <= head.DB_MAX_OUTPUT_PORT_TYPE
game_over_out <= state_n.DB_MAX_OUTPUT_PORT_TYPE
eating => counter256:counter.inc
eating => always0.IN1
game_over_in => state_n.e_off.OUTPUTSELECT
game_over_in => state_n.e_countdown.OUTPUTSELECT
game_over_in => state_n.e_head.OUTPUTSELECT
game_over_in => state_n.OUTPUTSELECT
left => state_n.OUTPUTSELECT
left => state_n.OUTPUTSELECT
left => state_n.OUTPUTSELECT
left => state_n.OUTPUTSELECT
up => state_n.OUTPUTSELECT
up => state_n.OUTPUTSELECT
up => state_n.OUTPUTSELECT
up => state_n.OUTPUTSELECT
right => state_n.OUTPUTSELECT
right => state_n.OUTPUTSELECT
right => state_n.OUTPUTSELECT
right => state_n.OUTPUTSELECT
down => state_n.OUTPUTSELECT
down => state_n.OUTPUTSELECT
down => state_n.OUTPUTSELECT
down => state_n.OUTPUTSELECT
length[0] => counter256:counter.start_val[0]
length[1] => counter256:counter.start_val[1]
length[2] => counter256:counter.start_val[2]
length[3] => counter256:counter.start_val[3]
length[4] => counter256:counter.start_val[4]
length[5] => counter256:counter.start_val[5]
length[6] => counter256:counter.start_val[6]
length[7] => counter256:counter.start_val[7]
dir[0] => Mux0.IN5
dir[0] => Mux1.IN5
dir[0] => Mux2.IN5
dir[0] => Mux3.IN5
dir[1] => Mux0.IN4
dir[1] => Mux1.IN4
dir[1] => Mux2.IN4
dir[1] => Mux3.IN4
clk => counter256:counter.clk
clk => state_r~1.DATAIN
slow_edge => counter256:counter.slow_edge
slow_edge => state_r.OUTPUTSELECT
slow_edge => state_r.OUTPUTSELECT
slow_edge => state_r.OUTPUTSELECT
slow_edge => state_r.OUTPUTSELECT
reset => counter256:counter.reset
reset => state_r.OUTPUTSELECT
reset => state_r.OUTPUTSELECT
reset => state_r.OUTPUTSELECT
reset => state_r.OUTPUTSELECT
light_type[0] => counter256:counter.init_val[0]
light_type[0] => Equal1.IN1
light_type[0] => Equal2.IN1
light_type[1] => counter256:counter.init_val[1]
light_type[1] => Equal1.IN0
light_type[1] => Equal2.IN0


|lab8|snakes_and_apples:snake|grid_light:center_grid_row[3].center_grid_col[10].light|counter256:counter
count[0] <= count[0]~reg0.DB_MAX_OUTPUT_PORT_TYPE
count[1] <= count[1]~reg0.DB_MAX_OUTPUT_PORT_TYPE
count[2] <= count[2]~reg0.DB_MAX_OUTPUT_PORT_TYPE
count[3] <= count[3]~reg0.DB_MAX_OUTPUT_PORT_TYPE
count[4] <= count[4]~reg0.DB_MAX_OUTPUT_PORT_TYPE
count[5] <= count[5]~reg0.DB_MAX_OUTPUT_PORT_TYPE
count[6] <= count[6]~reg0.DB_MAX_OUTPUT_PORT_TYPE
count[7] <= count[7]~reg0.DB_MAX_OUTPUT_PORT_TYPE
start_val[0] => Add0.IN16
start_val[0] => count.DATAB
start_val[1] => Add0.IN15
start_val[1] => count.DATAB
start_val[2] => Add0.IN14
start_val[2] => count.DATAB
start_val[3] => Add0.IN13
start_val[3] => count.DATAB
start_val[4] => Add0.IN12
start_val[4] => count.DATAB
start_val[5] => Add0.IN11
start_val[5] => count.DATAB
start_val[6] => Add0.IN10
start_val[6] => count.DATAB
start_val[7] => Add0.IN9
start_val[7] => count.DATAB
inc => count.OUTPUTSELECT
inc => count.OUTPUTSELECT
inc => count.OUTPUTSELECT
inc => count.OUTPUTSELECT
inc => count.OUTPUTSELECT
inc => count.OUTPUTSELECT
inc => count.OUTPUTSELECT
inc => count.OUTPUTSELECT
inc => always0.IN0
enable => always0.IN1
enable => count.OUTPUTSELECT
enable => count.OUTPUTSELECT
enable => count.OUTPUTSELECT
enable => count.OUTPUTSELECT
enable => count.OUTPUTSELECT
enable => count.OUTPUTSELECT
enable => count.OUTPUTSELECT
enable => count.OUTPUTSELECT
clk => count[0]~reg0.CLK
clk => count[1]~reg0.CLK
clk => count[2]~reg0.CLK
clk => count[3]~reg0.CLK
clk => count[4]~reg0.CLK
clk => count[5]~reg0.CLK
clk => count[6]~reg0.CLK
clk => count[7]~reg0.CLK
slow_edge => count.OUTPUTSELECT
slow_edge => count.OUTPUTSELECT
slow_edge => count.OUTPUTSELECT
slow_edge => count.OUTPUTSELECT
slow_edge => count.OUTPUTSELECT
slow_edge => count.OUTPUTSELECT
slow_edge => count.OUTPUTSELECT
slow_edge => count.OUTPUTSELECT
reset => count.OUTPUTSELECT
reset => count.OUTPUTSELECT
reset => count.OUTPUTSELECT
reset => count.OUTPUTSELECT
reset => count.OUTPUTSELECT
reset => count.OUTPUTSELECT
reset => count.OUTPUTSELECT
reset => count.OUTPUTSELECT
init_val[0] => count.DATAB
init_val[1] => count.DATAB


|lab8|snakes_and_apples:snake|grid_light:center_grid_row[3].center_grid_col[11].light
green_light_on <= green_light_on.DB_MAX_OUTPUT_PORT_TYPE
head <= head.DB_MAX_OUTPUT_PORT_TYPE
game_over_out <= state_n.DB_MAX_OUTPUT_PORT_TYPE
eating => counter256:counter.inc
eating => always0.IN1
game_over_in => state_n.e_off.OUTPUTSELECT
game_over_in => state_n.e_countdown.OUTPUTSELECT
game_over_in => state_n.e_head.OUTPUTSELECT
game_over_in => state_n.OUTPUTSELECT
left => state_n.OUTPUTSELECT
left => state_n.OUTPUTSELECT
left => state_n.OUTPUTSELECT
left => state_n.OUTPUTSELECT
up => state_n.OUTPUTSELECT
up => state_n.OUTPUTSELECT
up => state_n.OUTPUTSELECT
up => state_n.OUTPUTSELECT
right => state_n.OUTPUTSELECT
right => state_n.OUTPUTSELECT
right => state_n.OUTPUTSELECT
right => state_n.OUTPUTSELECT
down => state_n.OUTPUTSELECT
down => state_n.OUTPUTSELECT
down => state_n.OUTPUTSELECT
down => state_n.OUTPUTSELECT
length[0] => counter256:counter.start_val[0]
length[1] => counter256:counter.start_val[1]
length[2] => counter256:counter.start_val[2]
length[3] => counter256:counter.start_val[3]
length[4] => counter256:counter.start_val[4]
length[5] => counter256:counter.start_val[5]
length[6] => counter256:counter.start_val[6]
length[7] => counter256:counter.start_val[7]
dir[0] => Mux0.IN5
dir[0] => Mux1.IN5
dir[0] => Mux2.IN5
dir[0] => Mux3.IN5
dir[1] => Mux0.IN4
dir[1] => Mux1.IN4
dir[1] => Mux2.IN4
dir[1] => Mux3.IN4
clk => counter256:counter.clk
clk => state_r~1.DATAIN
slow_edge => counter256:counter.slow_edge
slow_edge => state_r.OUTPUTSELECT
slow_edge => state_r.OUTPUTSELECT
slow_edge => state_r.OUTPUTSELECT
slow_edge => state_r.OUTPUTSELECT
reset => counter256:counter.reset
reset => state_r.OUTPUTSELECT
reset => state_r.OUTPUTSELECT
reset => state_r.OUTPUTSELECT
reset => state_r.OUTPUTSELECT
light_type[0] => counter256:counter.init_val[0]
light_type[0] => Equal1.IN1
light_type[0] => Equal2.IN1
light_type[1] => counter256:counter.init_val[1]
light_type[1] => Equal1.IN0
light_type[1] => Equal2.IN0


|lab8|snakes_and_apples:snake|grid_light:center_grid_row[3].center_grid_col[11].light|counter256:counter
count[0] <= count[0]~reg0.DB_MAX_OUTPUT_PORT_TYPE
count[1] <= count[1]~reg0.DB_MAX_OUTPUT_PORT_TYPE
count[2] <= count[2]~reg0.DB_MAX_OUTPUT_PORT_TYPE
count[3] <= count[3]~reg0.DB_MAX_OUTPUT_PORT_TYPE
count[4] <= count[4]~reg0.DB_MAX_OUTPUT_PORT_TYPE
count[5] <= count[5]~reg0.DB_MAX_OUTPUT_PORT_TYPE
count[6] <= count[6]~reg0.DB_MAX_OUTPUT_PORT_TYPE
count[7] <= count[7]~reg0.DB_MAX_OUTPUT_PORT_TYPE
start_val[0] => Add0.IN16
start_val[0] => count.DATAB
start_val[1] => Add0.IN15
start_val[1] => count.DATAB
start_val[2] => Add0.IN14
start_val[2] => count.DATAB
start_val[3] => Add0.IN13
start_val[3] => count.DATAB
start_val[4] => Add0.IN12
start_val[4] => count.DATAB
start_val[5] => Add0.IN11
start_val[5] => count.DATAB
start_val[6] => Add0.IN10
start_val[6] => count.DATAB
start_val[7] => Add0.IN9
start_val[7] => count.DATAB
inc => count.OUTPUTSELECT
inc => count.OUTPUTSELECT
inc => count.OUTPUTSELECT
inc => count.OUTPUTSELECT
inc => count.OUTPUTSELECT
inc => count.OUTPUTSELECT
inc => count.OUTPUTSELECT
inc => count.OUTPUTSELECT
inc => always0.IN0
enable => always0.IN1
enable => count.OUTPUTSELECT
enable => count.OUTPUTSELECT
enable => count.OUTPUTSELECT
enable => count.OUTPUTSELECT
enable => count.OUTPUTSELECT
enable => count.OUTPUTSELECT
enable => count.OUTPUTSELECT
enable => count.OUTPUTSELECT
clk => count[0]~reg0.CLK
clk => count[1]~reg0.CLK
clk => count[2]~reg0.CLK
clk => count[3]~reg0.CLK
clk => count[4]~reg0.CLK
clk => count[5]~reg0.CLK
clk => count[6]~reg0.CLK
clk => count[7]~reg0.CLK
slow_edge => count.OUTPUTSELECT
slow_edge => count.OUTPUTSELECT
slow_edge => count.OUTPUTSELECT
slow_edge => count.OUTPUTSELECT
slow_edge => count.OUTPUTSELECT
slow_edge => count.OUTPUTSELECT
slow_edge => count.OUTPUTSELECT
slow_edge => count.OUTPUTSELECT
reset => count.OUTPUTSELECT
reset => count.OUTPUTSELECT
reset => count.OUTPUTSELECT
reset => count.OUTPUTSELECT
reset => count.OUTPUTSELECT
reset => count.OUTPUTSELECT
reset => count.OUTPUTSELECT
reset => count.OUTPUTSELECT
init_val[0] => count.DATAB
init_val[1] => count.DATAB


|lab8|snakes_and_apples:snake|grid_light:center_grid_row[3].center_grid_col[12].light
green_light_on <= green_light_on.DB_MAX_OUTPUT_PORT_TYPE
head <= head.DB_MAX_OUTPUT_PORT_TYPE
game_over_out <= state_n.DB_MAX_OUTPUT_PORT_TYPE
eating => counter256:counter.inc
eating => always0.IN1
game_over_in => state_n.e_off.OUTPUTSELECT
game_over_in => state_n.e_countdown.OUTPUTSELECT
game_over_in => state_n.e_head.OUTPUTSELECT
game_over_in => state_n.OUTPUTSELECT
left => state_n.OUTPUTSELECT
left => state_n.OUTPUTSELECT
left => state_n.OUTPUTSELECT
left => state_n.OUTPUTSELECT
up => state_n.OUTPUTSELECT
up => state_n.OUTPUTSELECT
up => state_n.OUTPUTSELECT
up => state_n.OUTPUTSELECT
right => state_n.OUTPUTSELECT
right => state_n.OUTPUTSELECT
right => state_n.OUTPUTSELECT
right => state_n.OUTPUTSELECT
down => state_n.OUTPUTSELECT
down => state_n.OUTPUTSELECT
down => state_n.OUTPUTSELECT
down => state_n.OUTPUTSELECT
length[0] => counter256:counter.start_val[0]
length[1] => counter256:counter.start_val[1]
length[2] => counter256:counter.start_val[2]
length[3] => counter256:counter.start_val[3]
length[4] => counter256:counter.start_val[4]
length[5] => counter256:counter.start_val[5]
length[6] => counter256:counter.start_val[6]
length[7] => counter256:counter.start_val[7]
dir[0] => Mux0.IN5
dir[0] => Mux1.IN5
dir[0] => Mux2.IN5
dir[0] => Mux3.IN5
dir[1] => Mux0.IN4
dir[1] => Mux1.IN4
dir[1] => Mux2.IN4
dir[1] => Mux3.IN4
clk => counter256:counter.clk
clk => state_r~1.DATAIN
slow_edge => counter256:counter.slow_edge
slow_edge => state_r.OUTPUTSELECT
slow_edge => state_r.OUTPUTSELECT
slow_edge => state_r.OUTPUTSELECT
slow_edge => state_r.OUTPUTSELECT
reset => counter256:counter.reset
reset => state_r.OUTPUTSELECT
reset => state_r.OUTPUTSELECT
reset => state_r.OUTPUTSELECT
reset => state_r.OUTPUTSELECT
light_type[0] => counter256:counter.init_val[0]
light_type[0] => Equal1.IN1
light_type[0] => Equal2.IN1
light_type[1] => counter256:counter.init_val[1]
light_type[1] => Equal1.IN0
light_type[1] => Equal2.IN0


|lab8|snakes_and_apples:snake|grid_light:center_grid_row[3].center_grid_col[12].light|counter256:counter
count[0] <= count[0]~reg0.DB_MAX_OUTPUT_PORT_TYPE
count[1] <= count[1]~reg0.DB_MAX_OUTPUT_PORT_TYPE
count[2] <= count[2]~reg0.DB_MAX_OUTPUT_PORT_TYPE
count[3] <= count[3]~reg0.DB_MAX_OUTPUT_PORT_TYPE
count[4] <= count[4]~reg0.DB_MAX_OUTPUT_PORT_TYPE
count[5] <= count[5]~reg0.DB_MAX_OUTPUT_PORT_TYPE
count[6] <= count[6]~reg0.DB_MAX_OUTPUT_PORT_TYPE
count[7] <= count[7]~reg0.DB_MAX_OUTPUT_PORT_TYPE
start_val[0] => Add0.IN16
start_val[0] => count.DATAB
start_val[1] => Add0.IN15
start_val[1] => count.DATAB
start_val[2] => Add0.IN14
start_val[2] => count.DATAB
start_val[3] => Add0.IN13
start_val[3] => count.DATAB
start_val[4] => Add0.IN12
start_val[4] => count.DATAB
start_val[5] => Add0.IN11
start_val[5] => count.DATAB
start_val[6] => Add0.IN10
start_val[6] => count.DATAB
start_val[7] => Add0.IN9
start_val[7] => count.DATAB
inc => count.OUTPUTSELECT
inc => count.OUTPUTSELECT
inc => count.OUTPUTSELECT
inc => count.OUTPUTSELECT
inc => count.OUTPUTSELECT
inc => count.OUTPUTSELECT
inc => count.OUTPUTSELECT
inc => count.OUTPUTSELECT
inc => always0.IN0
enable => always0.IN1
enable => count.OUTPUTSELECT
enable => count.OUTPUTSELECT
enable => count.OUTPUTSELECT
enable => count.OUTPUTSELECT
enable => count.OUTPUTSELECT
enable => count.OUTPUTSELECT
enable => count.OUTPUTSELECT
enable => count.OUTPUTSELECT
clk => count[0]~reg0.CLK
clk => count[1]~reg0.CLK
clk => count[2]~reg0.CLK
clk => count[3]~reg0.CLK
clk => count[4]~reg0.CLK
clk => count[5]~reg0.CLK
clk => count[6]~reg0.CLK
clk => count[7]~reg0.CLK
slow_edge => count.OUTPUTSELECT
slow_edge => count.OUTPUTSELECT
slow_edge => count.OUTPUTSELECT
slow_edge => count.OUTPUTSELECT
slow_edge => count.OUTPUTSELECT
slow_edge => count.OUTPUTSELECT
slow_edge => count.OUTPUTSELECT
slow_edge => count.OUTPUTSELECT
reset => count.OUTPUTSELECT
reset => count.OUTPUTSELECT
reset => count.OUTPUTSELECT
reset => count.OUTPUTSELECT
reset => count.OUTPUTSELECT
reset => count.OUTPUTSELECT
reset => count.OUTPUTSELECT
reset => count.OUTPUTSELECT
init_val[0] => count.DATAB
init_val[1] => count.DATAB


|lab8|snakes_and_apples:snake|grid_light:center_grid_row[3].center_grid_col[13].light
green_light_on <= green_light_on.DB_MAX_OUTPUT_PORT_TYPE
head <= head.DB_MAX_OUTPUT_PORT_TYPE
game_over_out <= state_n.DB_MAX_OUTPUT_PORT_TYPE
eating => counter256:counter.inc
eating => always0.IN1
game_over_in => state_n.e_off.OUTPUTSELECT
game_over_in => state_n.e_countdown.OUTPUTSELECT
game_over_in => state_n.e_head.OUTPUTSELECT
game_over_in => state_n.OUTPUTSELECT
left => state_n.OUTPUTSELECT
left => state_n.OUTPUTSELECT
left => state_n.OUTPUTSELECT
left => state_n.OUTPUTSELECT
up => state_n.OUTPUTSELECT
up => state_n.OUTPUTSELECT
up => state_n.OUTPUTSELECT
up => state_n.OUTPUTSELECT
right => state_n.OUTPUTSELECT
right => state_n.OUTPUTSELECT
right => state_n.OUTPUTSELECT
right => state_n.OUTPUTSELECT
down => state_n.OUTPUTSELECT
down => state_n.OUTPUTSELECT
down => state_n.OUTPUTSELECT
down => state_n.OUTPUTSELECT
length[0] => counter256:counter.start_val[0]
length[1] => counter256:counter.start_val[1]
length[2] => counter256:counter.start_val[2]
length[3] => counter256:counter.start_val[3]
length[4] => counter256:counter.start_val[4]
length[5] => counter256:counter.start_val[5]
length[6] => counter256:counter.start_val[6]
length[7] => counter256:counter.start_val[7]
dir[0] => Mux0.IN5
dir[0] => Mux1.IN5
dir[0] => Mux2.IN5
dir[0] => Mux3.IN5
dir[1] => Mux0.IN4
dir[1] => Mux1.IN4
dir[1] => Mux2.IN4
dir[1] => Mux3.IN4
clk => counter256:counter.clk
clk => state_r~1.DATAIN
slow_edge => counter256:counter.slow_edge
slow_edge => state_r.OUTPUTSELECT
slow_edge => state_r.OUTPUTSELECT
slow_edge => state_r.OUTPUTSELECT
slow_edge => state_r.OUTPUTSELECT
reset => counter256:counter.reset
reset => state_r.OUTPUTSELECT
reset => state_r.OUTPUTSELECT
reset => state_r.OUTPUTSELECT
reset => state_r.OUTPUTSELECT
light_type[0] => counter256:counter.init_val[0]
light_type[0] => Equal1.IN1
light_type[0] => Equal2.IN1
light_type[1] => counter256:counter.init_val[1]
light_type[1] => Equal1.IN0
light_type[1] => Equal2.IN0


|lab8|snakes_and_apples:snake|grid_light:center_grid_row[3].center_grid_col[13].light|counter256:counter
count[0] <= count[0]~reg0.DB_MAX_OUTPUT_PORT_TYPE
count[1] <= count[1]~reg0.DB_MAX_OUTPUT_PORT_TYPE
count[2] <= count[2]~reg0.DB_MAX_OUTPUT_PORT_TYPE
count[3] <= count[3]~reg0.DB_MAX_OUTPUT_PORT_TYPE
count[4] <= count[4]~reg0.DB_MAX_OUTPUT_PORT_TYPE
count[5] <= count[5]~reg0.DB_MAX_OUTPUT_PORT_TYPE
count[6] <= count[6]~reg0.DB_MAX_OUTPUT_PORT_TYPE
count[7] <= count[7]~reg0.DB_MAX_OUTPUT_PORT_TYPE
start_val[0] => Add0.IN16
start_val[0] => count.DATAB
start_val[1] => Add0.IN15
start_val[1] => count.DATAB
start_val[2] => Add0.IN14
start_val[2] => count.DATAB
start_val[3] => Add0.IN13
start_val[3] => count.DATAB
start_val[4] => Add0.IN12
start_val[4] => count.DATAB
start_val[5] => Add0.IN11
start_val[5] => count.DATAB
start_val[6] => Add0.IN10
start_val[6] => count.DATAB
start_val[7] => Add0.IN9
start_val[7] => count.DATAB
inc => count.OUTPUTSELECT
inc => count.OUTPUTSELECT
inc => count.OUTPUTSELECT
inc => count.OUTPUTSELECT
inc => count.OUTPUTSELECT
inc => count.OUTPUTSELECT
inc => count.OUTPUTSELECT
inc => count.OUTPUTSELECT
inc => always0.IN0
enable => always0.IN1
enable => count.OUTPUTSELECT
enable => count.OUTPUTSELECT
enable => count.OUTPUTSELECT
enable => count.OUTPUTSELECT
enable => count.OUTPUTSELECT
enable => count.OUTPUTSELECT
enable => count.OUTPUTSELECT
enable => count.OUTPUTSELECT
clk => count[0]~reg0.CLK
clk => count[1]~reg0.CLK
clk => count[2]~reg0.CLK
clk => count[3]~reg0.CLK
clk => count[4]~reg0.CLK
clk => count[5]~reg0.CLK
clk => count[6]~reg0.CLK
clk => count[7]~reg0.CLK
slow_edge => count.OUTPUTSELECT
slow_edge => count.OUTPUTSELECT
slow_edge => count.OUTPUTSELECT
slow_edge => count.OUTPUTSELECT
slow_edge => count.OUTPUTSELECT
slow_edge => count.OUTPUTSELECT
slow_edge => count.OUTPUTSELECT
slow_edge => count.OUTPUTSELECT
reset => count.OUTPUTSELECT
reset => count.OUTPUTSELECT
reset => count.OUTPUTSELECT
reset => count.OUTPUTSELECT
reset => count.OUTPUTSELECT
reset => count.OUTPUTSELECT
reset => count.OUTPUTSELECT
reset => count.OUTPUTSELECT
init_val[0] => count.DATAB
init_val[1] => count.DATAB


|lab8|snakes_and_apples:snake|grid_light:center_grid_row[3].center_grid_col[14].light
green_light_on <= green_light_on.DB_MAX_OUTPUT_PORT_TYPE
head <= head.DB_MAX_OUTPUT_PORT_TYPE
game_over_out <= state_n.DB_MAX_OUTPUT_PORT_TYPE
eating => counter256:counter.inc
eating => always0.IN1
game_over_in => state_n.e_off.OUTPUTSELECT
game_over_in => state_n.e_countdown.OUTPUTSELECT
game_over_in => state_n.e_head.OUTPUTSELECT
game_over_in => state_n.OUTPUTSELECT
left => state_n.OUTPUTSELECT
left => state_n.OUTPUTSELECT
left => state_n.OUTPUTSELECT
left => state_n.OUTPUTSELECT
up => state_n.OUTPUTSELECT
up => state_n.OUTPUTSELECT
up => state_n.OUTPUTSELECT
up => state_n.OUTPUTSELECT
right => state_n.OUTPUTSELECT
right => state_n.OUTPUTSELECT
right => state_n.OUTPUTSELECT
right => state_n.OUTPUTSELECT
down => state_n.OUTPUTSELECT
down => state_n.OUTPUTSELECT
down => state_n.OUTPUTSELECT
down => state_n.OUTPUTSELECT
length[0] => counter256:counter.start_val[0]
length[1] => counter256:counter.start_val[1]
length[2] => counter256:counter.start_val[2]
length[3] => counter256:counter.start_val[3]
length[4] => counter256:counter.start_val[4]
length[5] => counter256:counter.start_val[5]
length[6] => counter256:counter.start_val[6]
length[7] => counter256:counter.start_val[7]
dir[0] => Mux0.IN5
dir[0] => Mux1.IN5
dir[0] => Mux2.IN5
dir[0] => Mux3.IN5
dir[1] => Mux0.IN4
dir[1] => Mux1.IN4
dir[1] => Mux2.IN4
dir[1] => Mux3.IN4
clk => counter256:counter.clk
clk => state_r~1.DATAIN
slow_edge => counter256:counter.slow_edge
slow_edge => state_r.OUTPUTSELECT
slow_edge => state_r.OUTPUTSELECT
slow_edge => state_r.OUTPUTSELECT
slow_edge => state_r.OUTPUTSELECT
reset => counter256:counter.reset
reset => state_r.OUTPUTSELECT
reset => state_r.OUTPUTSELECT
reset => state_r.OUTPUTSELECT
reset => state_r.OUTPUTSELECT
light_type[0] => counter256:counter.init_val[0]
light_type[0] => Equal1.IN1
light_type[0] => Equal2.IN1
light_type[1] => counter256:counter.init_val[1]
light_type[1] => Equal1.IN0
light_type[1] => Equal2.IN0


|lab8|snakes_and_apples:snake|grid_light:center_grid_row[3].center_grid_col[14].light|counter256:counter
count[0] <= count[0]~reg0.DB_MAX_OUTPUT_PORT_TYPE
count[1] <= count[1]~reg0.DB_MAX_OUTPUT_PORT_TYPE
count[2] <= count[2]~reg0.DB_MAX_OUTPUT_PORT_TYPE
count[3] <= count[3]~reg0.DB_MAX_OUTPUT_PORT_TYPE
count[4] <= count[4]~reg0.DB_MAX_OUTPUT_PORT_TYPE
count[5] <= count[5]~reg0.DB_MAX_OUTPUT_PORT_TYPE
count[6] <= count[6]~reg0.DB_MAX_OUTPUT_PORT_TYPE
count[7] <= count[7]~reg0.DB_MAX_OUTPUT_PORT_TYPE
start_val[0] => Add0.IN16
start_val[0] => count.DATAB
start_val[1] => Add0.IN15
start_val[1] => count.DATAB
start_val[2] => Add0.IN14
start_val[2] => count.DATAB
start_val[3] => Add0.IN13
start_val[3] => count.DATAB
start_val[4] => Add0.IN12
start_val[4] => count.DATAB
start_val[5] => Add0.IN11
start_val[5] => count.DATAB
start_val[6] => Add0.IN10
start_val[6] => count.DATAB
start_val[7] => Add0.IN9
start_val[7] => count.DATAB
inc => count.OUTPUTSELECT
inc => count.OUTPUTSELECT
inc => count.OUTPUTSELECT
inc => count.OUTPUTSELECT
inc => count.OUTPUTSELECT
inc => count.OUTPUTSELECT
inc => count.OUTPUTSELECT
inc => count.OUTPUTSELECT
inc => always0.IN0
enable => always0.IN1
enable => count.OUTPUTSELECT
enable => count.OUTPUTSELECT
enable => count.OUTPUTSELECT
enable => count.OUTPUTSELECT
enable => count.OUTPUTSELECT
enable => count.OUTPUTSELECT
enable => count.OUTPUTSELECT
enable => count.OUTPUTSELECT
clk => count[0]~reg0.CLK
clk => count[1]~reg0.CLK
clk => count[2]~reg0.CLK
clk => count[3]~reg0.CLK
clk => count[4]~reg0.CLK
clk => count[5]~reg0.CLK
clk => count[6]~reg0.CLK
clk => count[7]~reg0.CLK
slow_edge => count.OUTPUTSELECT
slow_edge => count.OUTPUTSELECT
slow_edge => count.OUTPUTSELECT
slow_edge => count.OUTPUTSELECT
slow_edge => count.OUTPUTSELECT
slow_edge => count.OUTPUTSELECT
slow_edge => count.OUTPUTSELECT
slow_edge => count.OUTPUTSELECT
reset => count.OUTPUTSELECT
reset => count.OUTPUTSELECT
reset => count.OUTPUTSELECT
reset => count.OUTPUTSELECT
reset => count.OUTPUTSELECT
reset => count.OUTPUTSELECT
reset => count.OUTPUTSELECT
reset => count.OUTPUTSELECT
init_val[0] => count.DATAB
init_val[1] => count.DATAB


|lab8|snakes_and_apples:snake|grid_light:center_grid_row[4].center_grid_col[1].light
green_light_on <= green_light_on.DB_MAX_OUTPUT_PORT_TYPE
head <= head.DB_MAX_OUTPUT_PORT_TYPE
game_over_out <= state_n.DB_MAX_OUTPUT_PORT_TYPE
eating => counter256:counter.inc
eating => always0.IN1
game_over_in => state_n.e_off.OUTPUTSELECT
game_over_in => state_n.e_countdown.OUTPUTSELECT
game_over_in => state_n.e_head.OUTPUTSELECT
game_over_in => state_n.OUTPUTSELECT
left => state_n.OUTPUTSELECT
left => state_n.OUTPUTSELECT
left => state_n.OUTPUTSELECT
left => state_n.OUTPUTSELECT
up => state_n.OUTPUTSELECT
up => state_n.OUTPUTSELECT
up => state_n.OUTPUTSELECT
up => state_n.OUTPUTSELECT
right => state_n.OUTPUTSELECT
right => state_n.OUTPUTSELECT
right => state_n.OUTPUTSELECT
right => state_n.OUTPUTSELECT
down => state_n.OUTPUTSELECT
down => state_n.OUTPUTSELECT
down => state_n.OUTPUTSELECT
down => state_n.OUTPUTSELECT
length[0] => counter256:counter.start_val[0]
length[1] => counter256:counter.start_val[1]
length[2] => counter256:counter.start_val[2]
length[3] => counter256:counter.start_val[3]
length[4] => counter256:counter.start_val[4]
length[5] => counter256:counter.start_val[5]
length[6] => counter256:counter.start_val[6]
length[7] => counter256:counter.start_val[7]
dir[0] => Mux0.IN5
dir[0] => Mux1.IN5
dir[0] => Mux2.IN5
dir[0] => Mux3.IN5
dir[1] => Mux0.IN4
dir[1] => Mux1.IN4
dir[1] => Mux2.IN4
dir[1] => Mux3.IN4
clk => counter256:counter.clk
clk => state_r~1.DATAIN
slow_edge => counter256:counter.slow_edge
slow_edge => state_r.OUTPUTSELECT
slow_edge => state_r.OUTPUTSELECT
slow_edge => state_r.OUTPUTSELECT
slow_edge => state_r.OUTPUTSELECT
reset => counter256:counter.reset
reset => state_r.OUTPUTSELECT
reset => state_r.OUTPUTSELECT
reset => state_r.OUTPUTSELECT
reset => state_r.OUTPUTSELECT
light_type[0] => counter256:counter.init_val[0]
light_type[0] => Equal1.IN1
light_type[0] => Equal2.IN1
light_type[1] => counter256:counter.init_val[1]
light_type[1] => Equal1.IN0
light_type[1] => Equal2.IN0


|lab8|snakes_and_apples:snake|grid_light:center_grid_row[4].center_grid_col[1].light|counter256:counter
count[0] <= count[0]~reg0.DB_MAX_OUTPUT_PORT_TYPE
count[1] <= count[1]~reg0.DB_MAX_OUTPUT_PORT_TYPE
count[2] <= count[2]~reg0.DB_MAX_OUTPUT_PORT_TYPE
count[3] <= count[3]~reg0.DB_MAX_OUTPUT_PORT_TYPE
count[4] <= count[4]~reg0.DB_MAX_OUTPUT_PORT_TYPE
count[5] <= count[5]~reg0.DB_MAX_OUTPUT_PORT_TYPE
count[6] <= count[6]~reg0.DB_MAX_OUTPUT_PORT_TYPE
count[7] <= count[7]~reg0.DB_MAX_OUTPUT_PORT_TYPE
start_val[0] => Add0.IN16
start_val[0] => count.DATAB
start_val[1] => Add0.IN15
start_val[1] => count.DATAB
start_val[2] => Add0.IN14
start_val[2] => count.DATAB
start_val[3] => Add0.IN13
start_val[3] => count.DATAB
start_val[4] => Add0.IN12
start_val[4] => count.DATAB
start_val[5] => Add0.IN11
start_val[5] => count.DATAB
start_val[6] => Add0.IN10
start_val[6] => count.DATAB
start_val[7] => Add0.IN9
start_val[7] => count.DATAB
inc => count.OUTPUTSELECT
inc => count.OUTPUTSELECT
inc => count.OUTPUTSELECT
inc => count.OUTPUTSELECT
inc => count.OUTPUTSELECT
inc => count.OUTPUTSELECT
inc => count.OUTPUTSELECT
inc => count.OUTPUTSELECT
inc => always0.IN0
enable => always0.IN1
enable => count.OUTPUTSELECT
enable => count.OUTPUTSELECT
enable => count.OUTPUTSELECT
enable => count.OUTPUTSELECT
enable => count.OUTPUTSELECT
enable => count.OUTPUTSELECT
enable => count.OUTPUTSELECT
enable => count.OUTPUTSELECT
clk => count[0]~reg0.CLK
clk => count[1]~reg0.CLK
clk => count[2]~reg0.CLK
clk => count[3]~reg0.CLK
clk => count[4]~reg0.CLK
clk => count[5]~reg0.CLK
clk => count[6]~reg0.CLK
clk => count[7]~reg0.CLK
slow_edge => count.OUTPUTSELECT
slow_edge => count.OUTPUTSELECT
slow_edge => count.OUTPUTSELECT
slow_edge => count.OUTPUTSELECT
slow_edge => count.OUTPUTSELECT
slow_edge => count.OUTPUTSELECT
slow_edge => count.OUTPUTSELECT
slow_edge => count.OUTPUTSELECT
reset => count.OUTPUTSELECT
reset => count.OUTPUTSELECT
reset => count.OUTPUTSELECT
reset => count.OUTPUTSELECT
reset => count.OUTPUTSELECT
reset => count.OUTPUTSELECT
reset => count.OUTPUTSELECT
reset => count.OUTPUTSELECT
init_val[0] => count.DATAB
init_val[1] => count.DATAB


|lab8|snakes_and_apples:snake|grid_light:center_grid_row[4].center_grid_col[2].light
green_light_on <= green_light_on.DB_MAX_OUTPUT_PORT_TYPE
head <= head.DB_MAX_OUTPUT_PORT_TYPE
game_over_out <= state_n.DB_MAX_OUTPUT_PORT_TYPE
eating => counter256:counter.inc
eating => always0.IN1
game_over_in => state_n.e_off.OUTPUTSELECT
game_over_in => state_n.e_countdown.OUTPUTSELECT
game_over_in => state_n.e_head.OUTPUTSELECT
game_over_in => state_n.OUTPUTSELECT
left => state_n.OUTPUTSELECT
left => state_n.OUTPUTSELECT
left => state_n.OUTPUTSELECT
left => state_n.OUTPUTSELECT
up => state_n.OUTPUTSELECT
up => state_n.OUTPUTSELECT
up => state_n.OUTPUTSELECT
up => state_n.OUTPUTSELECT
right => state_n.OUTPUTSELECT
right => state_n.OUTPUTSELECT
right => state_n.OUTPUTSELECT
right => state_n.OUTPUTSELECT
down => state_n.OUTPUTSELECT
down => state_n.OUTPUTSELECT
down => state_n.OUTPUTSELECT
down => state_n.OUTPUTSELECT
length[0] => counter256:counter.start_val[0]
length[1] => counter256:counter.start_val[1]
length[2] => counter256:counter.start_val[2]
length[3] => counter256:counter.start_val[3]
length[4] => counter256:counter.start_val[4]
length[5] => counter256:counter.start_val[5]
length[6] => counter256:counter.start_val[6]
length[7] => counter256:counter.start_val[7]
dir[0] => Mux0.IN5
dir[0] => Mux1.IN5
dir[0] => Mux2.IN5
dir[0] => Mux3.IN5
dir[1] => Mux0.IN4
dir[1] => Mux1.IN4
dir[1] => Mux2.IN4
dir[1] => Mux3.IN4
clk => counter256:counter.clk
clk => state_r~1.DATAIN
slow_edge => counter256:counter.slow_edge
slow_edge => state_r.OUTPUTSELECT
slow_edge => state_r.OUTPUTSELECT
slow_edge => state_r.OUTPUTSELECT
slow_edge => state_r.OUTPUTSELECT
reset => counter256:counter.reset
reset => state_r.OUTPUTSELECT
reset => state_r.OUTPUTSELECT
reset => state_r.OUTPUTSELECT
reset => state_r.OUTPUTSELECT
light_type[0] => counter256:counter.init_val[0]
light_type[0] => Equal1.IN1
light_type[0] => Equal2.IN1
light_type[1] => counter256:counter.init_val[1]
light_type[1] => Equal1.IN0
light_type[1] => Equal2.IN0


|lab8|snakes_and_apples:snake|grid_light:center_grid_row[4].center_grid_col[2].light|counter256:counter
count[0] <= count[0]~reg0.DB_MAX_OUTPUT_PORT_TYPE
count[1] <= count[1]~reg0.DB_MAX_OUTPUT_PORT_TYPE
count[2] <= count[2]~reg0.DB_MAX_OUTPUT_PORT_TYPE
count[3] <= count[3]~reg0.DB_MAX_OUTPUT_PORT_TYPE
count[4] <= count[4]~reg0.DB_MAX_OUTPUT_PORT_TYPE
count[5] <= count[5]~reg0.DB_MAX_OUTPUT_PORT_TYPE
count[6] <= count[6]~reg0.DB_MAX_OUTPUT_PORT_TYPE
count[7] <= count[7]~reg0.DB_MAX_OUTPUT_PORT_TYPE
start_val[0] => Add0.IN16
start_val[0] => count.DATAB
start_val[1] => Add0.IN15
start_val[1] => count.DATAB
start_val[2] => Add0.IN14
start_val[2] => count.DATAB
start_val[3] => Add0.IN13
start_val[3] => count.DATAB
start_val[4] => Add0.IN12
start_val[4] => count.DATAB
start_val[5] => Add0.IN11
start_val[5] => count.DATAB
start_val[6] => Add0.IN10
start_val[6] => count.DATAB
start_val[7] => Add0.IN9
start_val[7] => count.DATAB
inc => count.OUTPUTSELECT
inc => count.OUTPUTSELECT
inc => count.OUTPUTSELECT
inc => count.OUTPUTSELECT
inc => count.OUTPUTSELECT
inc => count.OUTPUTSELECT
inc => count.OUTPUTSELECT
inc => count.OUTPUTSELECT
inc => always0.IN0
enable => always0.IN1
enable => count.OUTPUTSELECT
enable => count.OUTPUTSELECT
enable => count.OUTPUTSELECT
enable => count.OUTPUTSELECT
enable => count.OUTPUTSELECT
enable => count.OUTPUTSELECT
enable => count.OUTPUTSELECT
enable => count.OUTPUTSELECT
clk => count[0]~reg0.CLK
clk => count[1]~reg0.CLK
clk => count[2]~reg0.CLK
clk => count[3]~reg0.CLK
clk => count[4]~reg0.CLK
clk => count[5]~reg0.CLK
clk => count[6]~reg0.CLK
clk => count[7]~reg0.CLK
slow_edge => count.OUTPUTSELECT
slow_edge => count.OUTPUTSELECT
slow_edge => count.OUTPUTSELECT
slow_edge => count.OUTPUTSELECT
slow_edge => count.OUTPUTSELECT
slow_edge => count.OUTPUTSELECT
slow_edge => count.OUTPUTSELECT
slow_edge => count.OUTPUTSELECT
reset => count.OUTPUTSELECT
reset => count.OUTPUTSELECT
reset => count.OUTPUTSELECT
reset => count.OUTPUTSELECT
reset => count.OUTPUTSELECT
reset => count.OUTPUTSELECT
reset => count.OUTPUTSELECT
reset => count.OUTPUTSELECT
init_val[0] => count.DATAB
init_val[1] => count.DATAB


|lab8|snakes_and_apples:snake|grid_light:center_grid_row[4].center_grid_col[3].light
green_light_on <= green_light_on.DB_MAX_OUTPUT_PORT_TYPE
head <= head.DB_MAX_OUTPUT_PORT_TYPE
game_over_out <= state_n.DB_MAX_OUTPUT_PORT_TYPE
eating => counter256:counter.inc
eating => always0.IN1
game_over_in => state_n.e_off.OUTPUTSELECT
game_over_in => state_n.e_countdown.OUTPUTSELECT
game_over_in => state_n.e_head.OUTPUTSELECT
game_over_in => state_n.OUTPUTSELECT
left => state_n.OUTPUTSELECT
left => state_n.OUTPUTSELECT
left => state_n.OUTPUTSELECT
left => state_n.OUTPUTSELECT
up => state_n.OUTPUTSELECT
up => state_n.OUTPUTSELECT
up => state_n.OUTPUTSELECT
up => state_n.OUTPUTSELECT
right => state_n.OUTPUTSELECT
right => state_n.OUTPUTSELECT
right => state_n.OUTPUTSELECT
right => state_n.OUTPUTSELECT
down => state_n.OUTPUTSELECT
down => state_n.OUTPUTSELECT
down => state_n.OUTPUTSELECT
down => state_n.OUTPUTSELECT
length[0] => counter256:counter.start_val[0]
length[1] => counter256:counter.start_val[1]
length[2] => counter256:counter.start_val[2]
length[3] => counter256:counter.start_val[3]
length[4] => counter256:counter.start_val[4]
length[5] => counter256:counter.start_val[5]
length[6] => counter256:counter.start_val[6]
length[7] => counter256:counter.start_val[7]
dir[0] => Mux0.IN5
dir[0] => Mux1.IN5
dir[0] => Mux2.IN5
dir[0] => Mux3.IN5
dir[1] => Mux0.IN4
dir[1] => Mux1.IN4
dir[1] => Mux2.IN4
dir[1] => Mux3.IN4
clk => counter256:counter.clk
clk => state_r~1.DATAIN
slow_edge => counter256:counter.slow_edge
slow_edge => state_r.OUTPUTSELECT
slow_edge => state_r.OUTPUTSELECT
slow_edge => state_r.OUTPUTSELECT
slow_edge => state_r.OUTPUTSELECT
reset => counter256:counter.reset
reset => state_r.OUTPUTSELECT
reset => state_r.OUTPUTSELECT
reset => state_r.OUTPUTSELECT
reset => state_r.OUTPUTSELECT
light_type[0] => counter256:counter.init_val[0]
light_type[0] => Equal1.IN1
light_type[0] => Equal2.IN1
light_type[1] => counter256:counter.init_val[1]
light_type[1] => Equal1.IN0
light_type[1] => Equal2.IN0


|lab8|snakes_and_apples:snake|grid_light:center_grid_row[4].center_grid_col[3].light|counter256:counter
count[0] <= count[0]~reg0.DB_MAX_OUTPUT_PORT_TYPE
count[1] <= count[1]~reg0.DB_MAX_OUTPUT_PORT_TYPE
count[2] <= count[2]~reg0.DB_MAX_OUTPUT_PORT_TYPE
count[3] <= count[3]~reg0.DB_MAX_OUTPUT_PORT_TYPE
count[4] <= count[4]~reg0.DB_MAX_OUTPUT_PORT_TYPE
count[5] <= count[5]~reg0.DB_MAX_OUTPUT_PORT_TYPE
count[6] <= count[6]~reg0.DB_MAX_OUTPUT_PORT_TYPE
count[7] <= count[7]~reg0.DB_MAX_OUTPUT_PORT_TYPE
start_val[0] => Add0.IN16
start_val[0] => count.DATAB
start_val[1] => Add0.IN15
start_val[1] => count.DATAB
start_val[2] => Add0.IN14
start_val[2] => count.DATAB
start_val[3] => Add0.IN13
start_val[3] => count.DATAB
start_val[4] => Add0.IN12
start_val[4] => count.DATAB
start_val[5] => Add0.IN11
start_val[5] => count.DATAB
start_val[6] => Add0.IN10
start_val[6] => count.DATAB
start_val[7] => Add0.IN9
start_val[7] => count.DATAB
inc => count.OUTPUTSELECT
inc => count.OUTPUTSELECT
inc => count.OUTPUTSELECT
inc => count.OUTPUTSELECT
inc => count.OUTPUTSELECT
inc => count.OUTPUTSELECT
inc => count.OUTPUTSELECT
inc => count.OUTPUTSELECT
inc => always0.IN0
enable => always0.IN1
enable => count.OUTPUTSELECT
enable => count.OUTPUTSELECT
enable => count.OUTPUTSELECT
enable => count.OUTPUTSELECT
enable => count.OUTPUTSELECT
enable => count.OUTPUTSELECT
enable => count.OUTPUTSELECT
enable => count.OUTPUTSELECT
clk => count[0]~reg0.CLK
clk => count[1]~reg0.CLK
clk => count[2]~reg0.CLK
clk => count[3]~reg0.CLK
clk => count[4]~reg0.CLK
clk => count[5]~reg0.CLK
clk => count[6]~reg0.CLK
clk => count[7]~reg0.CLK
slow_edge => count.OUTPUTSELECT
slow_edge => count.OUTPUTSELECT
slow_edge => count.OUTPUTSELECT
slow_edge => count.OUTPUTSELECT
slow_edge => count.OUTPUTSELECT
slow_edge => count.OUTPUTSELECT
slow_edge => count.OUTPUTSELECT
slow_edge => count.OUTPUTSELECT
reset => count.OUTPUTSELECT
reset => count.OUTPUTSELECT
reset => count.OUTPUTSELECT
reset => count.OUTPUTSELECT
reset => count.OUTPUTSELECT
reset => count.OUTPUTSELECT
reset => count.OUTPUTSELECT
reset => count.OUTPUTSELECT
init_val[0] => count.DATAB
init_val[1] => count.DATAB


|lab8|snakes_and_apples:snake|grid_light:center_grid_row[4].center_grid_col[4].light
green_light_on <= green_light_on.DB_MAX_OUTPUT_PORT_TYPE
head <= head.DB_MAX_OUTPUT_PORT_TYPE
game_over_out <= state_n.DB_MAX_OUTPUT_PORT_TYPE
eating => counter256:counter.inc
eating => always0.IN1
game_over_in => state_n.e_off.OUTPUTSELECT
game_over_in => state_n.e_countdown.OUTPUTSELECT
game_over_in => state_n.e_head.OUTPUTSELECT
game_over_in => state_n.OUTPUTSELECT
left => state_n.OUTPUTSELECT
left => state_n.OUTPUTSELECT
left => state_n.OUTPUTSELECT
left => state_n.OUTPUTSELECT
up => state_n.OUTPUTSELECT
up => state_n.OUTPUTSELECT
up => state_n.OUTPUTSELECT
up => state_n.OUTPUTSELECT
right => state_n.OUTPUTSELECT
right => state_n.OUTPUTSELECT
right => state_n.OUTPUTSELECT
right => state_n.OUTPUTSELECT
down => state_n.OUTPUTSELECT
down => state_n.OUTPUTSELECT
down => state_n.OUTPUTSELECT
down => state_n.OUTPUTSELECT
length[0] => counter256:counter.start_val[0]
length[1] => counter256:counter.start_val[1]
length[2] => counter256:counter.start_val[2]
length[3] => counter256:counter.start_val[3]
length[4] => counter256:counter.start_val[4]
length[5] => counter256:counter.start_val[5]
length[6] => counter256:counter.start_val[6]
length[7] => counter256:counter.start_val[7]
dir[0] => Mux0.IN5
dir[0] => Mux1.IN5
dir[0] => Mux2.IN5
dir[0] => Mux3.IN5
dir[1] => Mux0.IN4
dir[1] => Mux1.IN4
dir[1] => Mux2.IN4
dir[1] => Mux3.IN4
clk => counter256:counter.clk
clk => state_r~1.DATAIN
slow_edge => counter256:counter.slow_edge
slow_edge => state_r.OUTPUTSELECT
slow_edge => state_r.OUTPUTSELECT
slow_edge => state_r.OUTPUTSELECT
slow_edge => state_r.OUTPUTSELECT
reset => counter256:counter.reset
reset => state_r.OUTPUTSELECT
reset => state_r.OUTPUTSELECT
reset => state_r.OUTPUTSELECT
reset => state_r.OUTPUTSELECT
light_type[0] => counter256:counter.init_val[0]
light_type[0] => Equal1.IN1
light_type[0] => Equal2.IN1
light_type[1] => counter256:counter.init_val[1]
light_type[1] => Equal1.IN0
light_type[1] => Equal2.IN0


|lab8|snakes_and_apples:snake|grid_light:center_grid_row[4].center_grid_col[4].light|counter256:counter
count[0] <= count[0]~reg0.DB_MAX_OUTPUT_PORT_TYPE
count[1] <= count[1]~reg0.DB_MAX_OUTPUT_PORT_TYPE
count[2] <= count[2]~reg0.DB_MAX_OUTPUT_PORT_TYPE
count[3] <= count[3]~reg0.DB_MAX_OUTPUT_PORT_TYPE
count[4] <= count[4]~reg0.DB_MAX_OUTPUT_PORT_TYPE
count[5] <= count[5]~reg0.DB_MAX_OUTPUT_PORT_TYPE
count[6] <= count[6]~reg0.DB_MAX_OUTPUT_PORT_TYPE
count[7] <= count[7]~reg0.DB_MAX_OUTPUT_PORT_TYPE
start_val[0] => Add0.IN16
start_val[0] => count.DATAB
start_val[1] => Add0.IN15
start_val[1] => count.DATAB
start_val[2] => Add0.IN14
start_val[2] => count.DATAB
start_val[3] => Add0.IN13
start_val[3] => count.DATAB
start_val[4] => Add0.IN12
start_val[4] => count.DATAB
start_val[5] => Add0.IN11
start_val[5] => count.DATAB
start_val[6] => Add0.IN10
start_val[6] => count.DATAB
start_val[7] => Add0.IN9
start_val[7] => count.DATAB
inc => count.OUTPUTSELECT
inc => count.OUTPUTSELECT
inc => count.OUTPUTSELECT
inc => count.OUTPUTSELECT
inc => count.OUTPUTSELECT
inc => count.OUTPUTSELECT
inc => count.OUTPUTSELECT
inc => count.OUTPUTSELECT
inc => always0.IN0
enable => always0.IN1
enable => count.OUTPUTSELECT
enable => count.OUTPUTSELECT
enable => count.OUTPUTSELECT
enable => count.OUTPUTSELECT
enable => count.OUTPUTSELECT
enable => count.OUTPUTSELECT
enable => count.OUTPUTSELECT
enable => count.OUTPUTSELECT
clk => count[0]~reg0.CLK
clk => count[1]~reg0.CLK
clk => count[2]~reg0.CLK
clk => count[3]~reg0.CLK
clk => count[4]~reg0.CLK
clk => count[5]~reg0.CLK
clk => count[6]~reg0.CLK
clk => count[7]~reg0.CLK
slow_edge => count.OUTPUTSELECT
slow_edge => count.OUTPUTSELECT
slow_edge => count.OUTPUTSELECT
slow_edge => count.OUTPUTSELECT
slow_edge => count.OUTPUTSELECT
slow_edge => count.OUTPUTSELECT
slow_edge => count.OUTPUTSELECT
slow_edge => count.OUTPUTSELECT
reset => count.OUTPUTSELECT
reset => count.OUTPUTSELECT
reset => count.OUTPUTSELECT
reset => count.OUTPUTSELECT
reset => count.OUTPUTSELECT
reset => count.OUTPUTSELECT
reset => count.OUTPUTSELECT
reset => count.OUTPUTSELECT
init_val[0] => count.DATAB
init_val[1] => count.DATAB


|lab8|snakes_and_apples:snake|grid_light:center_grid_row[4].center_grid_col[5].light
green_light_on <= green_light_on.DB_MAX_OUTPUT_PORT_TYPE
head <= head.DB_MAX_OUTPUT_PORT_TYPE
game_over_out <= state_n.DB_MAX_OUTPUT_PORT_TYPE
eating => counter256:counter.inc
eating => always0.IN1
game_over_in => state_n.e_off.OUTPUTSELECT
game_over_in => state_n.e_countdown.OUTPUTSELECT
game_over_in => state_n.e_head.OUTPUTSELECT
game_over_in => state_n.OUTPUTSELECT
left => state_n.OUTPUTSELECT
left => state_n.OUTPUTSELECT
left => state_n.OUTPUTSELECT
left => state_n.OUTPUTSELECT
up => state_n.OUTPUTSELECT
up => state_n.OUTPUTSELECT
up => state_n.OUTPUTSELECT
up => state_n.OUTPUTSELECT
right => state_n.OUTPUTSELECT
right => state_n.OUTPUTSELECT
right => state_n.OUTPUTSELECT
right => state_n.OUTPUTSELECT
down => state_n.OUTPUTSELECT
down => state_n.OUTPUTSELECT
down => state_n.OUTPUTSELECT
down => state_n.OUTPUTSELECT
length[0] => counter256:counter.start_val[0]
length[1] => counter256:counter.start_val[1]
length[2] => counter256:counter.start_val[2]
length[3] => counter256:counter.start_val[3]
length[4] => counter256:counter.start_val[4]
length[5] => counter256:counter.start_val[5]
length[6] => counter256:counter.start_val[6]
length[7] => counter256:counter.start_val[7]
dir[0] => Mux0.IN5
dir[0] => Mux1.IN5
dir[0] => Mux2.IN5
dir[0] => Mux3.IN5
dir[1] => Mux0.IN4
dir[1] => Mux1.IN4
dir[1] => Mux2.IN4
dir[1] => Mux3.IN4
clk => counter256:counter.clk
clk => state_r~1.DATAIN
slow_edge => counter256:counter.slow_edge
slow_edge => state_r.OUTPUTSELECT
slow_edge => state_r.OUTPUTSELECT
slow_edge => state_r.OUTPUTSELECT
slow_edge => state_r.OUTPUTSELECT
reset => counter256:counter.reset
reset => state_r.OUTPUTSELECT
reset => state_r.OUTPUTSELECT
reset => state_r.OUTPUTSELECT
reset => state_r.OUTPUTSELECT
light_type[0] => counter256:counter.init_val[0]
light_type[0] => Equal1.IN1
light_type[0] => Equal2.IN1
light_type[1] => counter256:counter.init_val[1]
light_type[1] => Equal1.IN0
light_type[1] => Equal2.IN0


|lab8|snakes_and_apples:snake|grid_light:center_grid_row[4].center_grid_col[5].light|counter256:counter
count[0] <= count[0]~reg0.DB_MAX_OUTPUT_PORT_TYPE
count[1] <= count[1]~reg0.DB_MAX_OUTPUT_PORT_TYPE
count[2] <= count[2]~reg0.DB_MAX_OUTPUT_PORT_TYPE
count[3] <= count[3]~reg0.DB_MAX_OUTPUT_PORT_TYPE
count[4] <= count[4]~reg0.DB_MAX_OUTPUT_PORT_TYPE
count[5] <= count[5]~reg0.DB_MAX_OUTPUT_PORT_TYPE
count[6] <= count[6]~reg0.DB_MAX_OUTPUT_PORT_TYPE
count[7] <= count[7]~reg0.DB_MAX_OUTPUT_PORT_TYPE
start_val[0] => Add0.IN16
start_val[0] => count.DATAB
start_val[1] => Add0.IN15
start_val[1] => count.DATAB
start_val[2] => Add0.IN14
start_val[2] => count.DATAB
start_val[3] => Add0.IN13
start_val[3] => count.DATAB
start_val[4] => Add0.IN12
start_val[4] => count.DATAB
start_val[5] => Add0.IN11
start_val[5] => count.DATAB
start_val[6] => Add0.IN10
start_val[6] => count.DATAB
start_val[7] => Add0.IN9
start_val[7] => count.DATAB
inc => count.OUTPUTSELECT
inc => count.OUTPUTSELECT
inc => count.OUTPUTSELECT
inc => count.OUTPUTSELECT
inc => count.OUTPUTSELECT
inc => count.OUTPUTSELECT
inc => count.OUTPUTSELECT
inc => count.OUTPUTSELECT
inc => always0.IN0
enable => always0.IN1
enable => count.OUTPUTSELECT
enable => count.OUTPUTSELECT
enable => count.OUTPUTSELECT
enable => count.OUTPUTSELECT
enable => count.OUTPUTSELECT
enable => count.OUTPUTSELECT
enable => count.OUTPUTSELECT
enable => count.OUTPUTSELECT
clk => count[0]~reg0.CLK
clk => count[1]~reg0.CLK
clk => count[2]~reg0.CLK
clk => count[3]~reg0.CLK
clk => count[4]~reg0.CLK
clk => count[5]~reg0.CLK
clk => count[6]~reg0.CLK
clk => count[7]~reg0.CLK
slow_edge => count.OUTPUTSELECT
slow_edge => count.OUTPUTSELECT
slow_edge => count.OUTPUTSELECT
slow_edge => count.OUTPUTSELECT
slow_edge => count.OUTPUTSELECT
slow_edge => count.OUTPUTSELECT
slow_edge => count.OUTPUTSELECT
slow_edge => count.OUTPUTSELECT
reset => count.OUTPUTSELECT
reset => count.OUTPUTSELECT
reset => count.OUTPUTSELECT
reset => count.OUTPUTSELECT
reset => count.OUTPUTSELECT
reset => count.OUTPUTSELECT
reset => count.OUTPUTSELECT
reset => count.OUTPUTSELECT
init_val[0] => count.DATAB
init_val[1] => count.DATAB


|lab8|snakes_and_apples:snake|grid_light:center_grid_row[4].center_grid_col[6].light
green_light_on <= green_light_on.DB_MAX_OUTPUT_PORT_TYPE
head <= head.DB_MAX_OUTPUT_PORT_TYPE
game_over_out <= state_n.DB_MAX_OUTPUT_PORT_TYPE
eating => counter256:counter.inc
eating => always0.IN1
game_over_in => state_n.e_off.OUTPUTSELECT
game_over_in => state_n.e_countdown.OUTPUTSELECT
game_over_in => state_n.e_head.OUTPUTSELECT
game_over_in => state_n.OUTPUTSELECT
left => state_n.OUTPUTSELECT
left => state_n.OUTPUTSELECT
left => state_n.OUTPUTSELECT
left => state_n.OUTPUTSELECT
up => state_n.OUTPUTSELECT
up => state_n.OUTPUTSELECT
up => state_n.OUTPUTSELECT
up => state_n.OUTPUTSELECT
right => state_n.OUTPUTSELECT
right => state_n.OUTPUTSELECT
right => state_n.OUTPUTSELECT
right => state_n.OUTPUTSELECT
down => state_n.OUTPUTSELECT
down => state_n.OUTPUTSELECT
down => state_n.OUTPUTSELECT
down => state_n.OUTPUTSELECT
length[0] => counter256:counter.start_val[0]
length[1] => counter256:counter.start_val[1]
length[2] => counter256:counter.start_val[2]
length[3] => counter256:counter.start_val[3]
length[4] => counter256:counter.start_val[4]
length[5] => counter256:counter.start_val[5]
length[6] => counter256:counter.start_val[6]
length[7] => counter256:counter.start_val[7]
dir[0] => Mux0.IN5
dir[0] => Mux1.IN5
dir[0] => Mux2.IN5
dir[0] => Mux3.IN5
dir[1] => Mux0.IN4
dir[1] => Mux1.IN4
dir[1] => Mux2.IN4
dir[1] => Mux3.IN4
clk => counter256:counter.clk
clk => state_r~1.DATAIN
slow_edge => counter256:counter.slow_edge
slow_edge => state_r.OUTPUTSELECT
slow_edge => state_r.OUTPUTSELECT
slow_edge => state_r.OUTPUTSELECT
slow_edge => state_r.OUTPUTSELECT
reset => counter256:counter.reset
reset => state_r.OUTPUTSELECT
reset => state_r.OUTPUTSELECT
reset => state_r.OUTPUTSELECT
reset => state_r.OUTPUTSELECT
light_type[0] => counter256:counter.init_val[0]
light_type[0] => Equal1.IN1
light_type[0] => Equal2.IN1
light_type[1] => counter256:counter.init_val[1]
light_type[1] => Equal1.IN0
light_type[1] => Equal2.IN0


|lab8|snakes_and_apples:snake|grid_light:center_grid_row[4].center_grid_col[6].light|counter256:counter
count[0] <= count[0]~reg0.DB_MAX_OUTPUT_PORT_TYPE
count[1] <= count[1]~reg0.DB_MAX_OUTPUT_PORT_TYPE
count[2] <= count[2]~reg0.DB_MAX_OUTPUT_PORT_TYPE
count[3] <= count[3]~reg0.DB_MAX_OUTPUT_PORT_TYPE
count[4] <= count[4]~reg0.DB_MAX_OUTPUT_PORT_TYPE
count[5] <= count[5]~reg0.DB_MAX_OUTPUT_PORT_TYPE
count[6] <= count[6]~reg0.DB_MAX_OUTPUT_PORT_TYPE
count[7] <= count[7]~reg0.DB_MAX_OUTPUT_PORT_TYPE
start_val[0] => Add0.IN16
start_val[0] => count.DATAB
start_val[1] => Add0.IN15
start_val[1] => count.DATAB
start_val[2] => Add0.IN14
start_val[2] => count.DATAB
start_val[3] => Add0.IN13
start_val[3] => count.DATAB
start_val[4] => Add0.IN12
start_val[4] => count.DATAB
start_val[5] => Add0.IN11
start_val[5] => count.DATAB
start_val[6] => Add0.IN10
start_val[6] => count.DATAB
start_val[7] => Add0.IN9
start_val[7] => count.DATAB
inc => count.OUTPUTSELECT
inc => count.OUTPUTSELECT
inc => count.OUTPUTSELECT
inc => count.OUTPUTSELECT
inc => count.OUTPUTSELECT
inc => count.OUTPUTSELECT
inc => count.OUTPUTSELECT
inc => count.OUTPUTSELECT
inc => always0.IN0
enable => always0.IN1
enable => count.OUTPUTSELECT
enable => count.OUTPUTSELECT
enable => count.OUTPUTSELECT
enable => count.OUTPUTSELECT
enable => count.OUTPUTSELECT
enable => count.OUTPUTSELECT
enable => count.OUTPUTSELECT
enable => count.OUTPUTSELECT
clk => count[0]~reg0.CLK
clk => count[1]~reg0.CLK
clk => count[2]~reg0.CLK
clk => count[3]~reg0.CLK
clk => count[4]~reg0.CLK
clk => count[5]~reg0.CLK
clk => count[6]~reg0.CLK
clk => count[7]~reg0.CLK
slow_edge => count.OUTPUTSELECT
slow_edge => count.OUTPUTSELECT
slow_edge => count.OUTPUTSELECT
slow_edge => count.OUTPUTSELECT
slow_edge => count.OUTPUTSELECT
slow_edge => count.OUTPUTSELECT
slow_edge => count.OUTPUTSELECT
slow_edge => count.OUTPUTSELECT
reset => count.OUTPUTSELECT
reset => count.OUTPUTSELECT
reset => count.OUTPUTSELECT
reset => count.OUTPUTSELECT
reset => count.OUTPUTSELECT
reset => count.OUTPUTSELECT
reset => count.OUTPUTSELECT
reset => count.OUTPUTSELECT
init_val[0] => count.DATAB
init_val[1] => count.DATAB


|lab8|snakes_and_apples:snake|grid_light:center_grid_row[4].center_grid_col[7].light
green_light_on <= green_light_on.DB_MAX_OUTPUT_PORT_TYPE
head <= head.DB_MAX_OUTPUT_PORT_TYPE
game_over_out <= state_n.DB_MAX_OUTPUT_PORT_TYPE
eating => counter256:counter.inc
eating => always0.IN1
game_over_in => state_n.e_off.OUTPUTSELECT
game_over_in => state_n.e_countdown.OUTPUTSELECT
game_over_in => state_n.e_head.OUTPUTSELECT
game_over_in => state_n.OUTPUTSELECT
left => state_n.OUTPUTSELECT
left => state_n.OUTPUTSELECT
left => state_n.OUTPUTSELECT
left => state_n.OUTPUTSELECT
up => state_n.OUTPUTSELECT
up => state_n.OUTPUTSELECT
up => state_n.OUTPUTSELECT
up => state_n.OUTPUTSELECT
right => state_n.OUTPUTSELECT
right => state_n.OUTPUTSELECT
right => state_n.OUTPUTSELECT
right => state_n.OUTPUTSELECT
down => state_n.OUTPUTSELECT
down => state_n.OUTPUTSELECT
down => state_n.OUTPUTSELECT
down => state_n.OUTPUTSELECT
length[0] => counter256:counter.start_val[0]
length[1] => counter256:counter.start_val[1]
length[2] => counter256:counter.start_val[2]
length[3] => counter256:counter.start_val[3]
length[4] => counter256:counter.start_val[4]
length[5] => counter256:counter.start_val[5]
length[6] => counter256:counter.start_val[6]
length[7] => counter256:counter.start_val[7]
dir[0] => Mux0.IN5
dir[0] => Mux1.IN5
dir[0] => Mux2.IN5
dir[0] => Mux3.IN5
dir[1] => Mux0.IN4
dir[1] => Mux1.IN4
dir[1] => Mux2.IN4
dir[1] => Mux3.IN4
clk => counter256:counter.clk
clk => state_r~1.DATAIN
slow_edge => counter256:counter.slow_edge
slow_edge => state_r.OUTPUTSELECT
slow_edge => state_r.OUTPUTSELECT
slow_edge => state_r.OUTPUTSELECT
slow_edge => state_r.OUTPUTSELECT
reset => counter256:counter.reset
reset => state_r.OUTPUTSELECT
reset => state_r.OUTPUTSELECT
reset => state_r.OUTPUTSELECT
reset => state_r.OUTPUTSELECT
light_type[0] => counter256:counter.init_val[0]
light_type[0] => Equal1.IN1
light_type[0] => Equal2.IN1
light_type[1] => counter256:counter.init_val[1]
light_type[1] => Equal1.IN0
light_type[1] => Equal2.IN0


|lab8|snakes_and_apples:snake|grid_light:center_grid_row[4].center_grid_col[7].light|counter256:counter
count[0] <= count[0]~reg0.DB_MAX_OUTPUT_PORT_TYPE
count[1] <= count[1]~reg0.DB_MAX_OUTPUT_PORT_TYPE
count[2] <= count[2]~reg0.DB_MAX_OUTPUT_PORT_TYPE
count[3] <= count[3]~reg0.DB_MAX_OUTPUT_PORT_TYPE
count[4] <= count[4]~reg0.DB_MAX_OUTPUT_PORT_TYPE
count[5] <= count[5]~reg0.DB_MAX_OUTPUT_PORT_TYPE
count[6] <= count[6]~reg0.DB_MAX_OUTPUT_PORT_TYPE
count[7] <= count[7]~reg0.DB_MAX_OUTPUT_PORT_TYPE
start_val[0] => Add0.IN16
start_val[0] => count.DATAB
start_val[1] => Add0.IN15
start_val[1] => count.DATAB
start_val[2] => Add0.IN14
start_val[2] => count.DATAB
start_val[3] => Add0.IN13
start_val[3] => count.DATAB
start_val[4] => Add0.IN12
start_val[4] => count.DATAB
start_val[5] => Add0.IN11
start_val[5] => count.DATAB
start_val[6] => Add0.IN10
start_val[6] => count.DATAB
start_val[7] => Add0.IN9
start_val[7] => count.DATAB
inc => count.OUTPUTSELECT
inc => count.OUTPUTSELECT
inc => count.OUTPUTSELECT
inc => count.OUTPUTSELECT
inc => count.OUTPUTSELECT
inc => count.OUTPUTSELECT
inc => count.OUTPUTSELECT
inc => count.OUTPUTSELECT
inc => always0.IN0
enable => always0.IN1
enable => count.OUTPUTSELECT
enable => count.OUTPUTSELECT
enable => count.OUTPUTSELECT
enable => count.OUTPUTSELECT
enable => count.OUTPUTSELECT
enable => count.OUTPUTSELECT
enable => count.OUTPUTSELECT
enable => count.OUTPUTSELECT
clk => count[0]~reg0.CLK
clk => count[1]~reg0.CLK
clk => count[2]~reg0.CLK
clk => count[3]~reg0.CLK
clk => count[4]~reg0.CLK
clk => count[5]~reg0.CLK
clk => count[6]~reg0.CLK
clk => count[7]~reg0.CLK
slow_edge => count.OUTPUTSELECT
slow_edge => count.OUTPUTSELECT
slow_edge => count.OUTPUTSELECT
slow_edge => count.OUTPUTSELECT
slow_edge => count.OUTPUTSELECT
slow_edge => count.OUTPUTSELECT
slow_edge => count.OUTPUTSELECT
slow_edge => count.OUTPUTSELECT
reset => count.OUTPUTSELECT
reset => count.OUTPUTSELECT
reset => count.OUTPUTSELECT
reset => count.OUTPUTSELECT
reset => count.OUTPUTSELECT
reset => count.OUTPUTSELECT
reset => count.OUTPUTSELECT
reset => count.OUTPUTSELECT
init_val[0] => count.DATAB
init_val[1] => count.DATAB


|lab8|snakes_and_apples:snake|grid_light:center_grid_row[4].center_grid_col[8].light
green_light_on <= green_light_on.DB_MAX_OUTPUT_PORT_TYPE
head <= head.DB_MAX_OUTPUT_PORT_TYPE
game_over_out <= state_n.DB_MAX_OUTPUT_PORT_TYPE
eating => counter256:counter.inc
eating => always0.IN1
game_over_in => state_n.e_off.OUTPUTSELECT
game_over_in => state_n.e_countdown.OUTPUTSELECT
game_over_in => state_n.e_head.OUTPUTSELECT
game_over_in => state_n.OUTPUTSELECT
left => state_n.OUTPUTSELECT
left => state_n.OUTPUTSELECT
left => state_n.OUTPUTSELECT
left => state_n.OUTPUTSELECT
up => state_n.OUTPUTSELECT
up => state_n.OUTPUTSELECT
up => state_n.OUTPUTSELECT
up => state_n.OUTPUTSELECT
right => state_n.OUTPUTSELECT
right => state_n.OUTPUTSELECT
right => state_n.OUTPUTSELECT
right => state_n.OUTPUTSELECT
down => state_n.OUTPUTSELECT
down => state_n.OUTPUTSELECT
down => state_n.OUTPUTSELECT
down => state_n.OUTPUTSELECT
length[0] => counter256:counter.start_val[0]
length[1] => counter256:counter.start_val[1]
length[2] => counter256:counter.start_val[2]
length[3] => counter256:counter.start_val[3]
length[4] => counter256:counter.start_val[4]
length[5] => counter256:counter.start_val[5]
length[6] => counter256:counter.start_val[6]
length[7] => counter256:counter.start_val[7]
dir[0] => Mux0.IN5
dir[0] => Mux1.IN5
dir[0] => Mux2.IN5
dir[0] => Mux3.IN5
dir[1] => Mux0.IN4
dir[1] => Mux1.IN4
dir[1] => Mux2.IN4
dir[1] => Mux3.IN4
clk => counter256:counter.clk
clk => state_r~1.DATAIN
slow_edge => counter256:counter.slow_edge
slow_edge => state_r.OUTPUTSELECT
slow_edge => state_r.OUTPUTSELECT
slow_edge => state_r.OUTPUTSELECT
slow_edge => state_r.OUTPUTSELECT
reset => counter256:counter.reset
reset => state_r.OUTPUTSELECT
reset => state_r.OUTPUTSELECT
reset => state_r.OUTPUTSELECT
reset => state_r.OUTPUTSELECT
light_type[0] => counter256:counter.init_val[0]
light_type[0] => Equal1.IN1
light_type[0] => Equal2.IN1
light_type[1] => counter256:counter.init_val[1]
light_type[1] => Equal1.IN0
light_type[1] => Equal2.IN0


|lab8|snakes_and_apples:snake|grid_light:center_grid_row[4].center_grid_col[8].light|counter256:counter
count[0] <= count[0]~reg0.DB_MAX_OUTPUT_PORT_TYPE
count[1] <= count[1]~reg0.DB_MAX_OUTPUT_PORT_TYPE
count[2] <= count[2]~reg0.DB_MAX_OUTPUT_PORT_TYPE
count[3] <= count[3]~reg0.DB_MAX_OUTPUT_PORT_TYPE
count[4] <= count[4]~reg0.DB_MAX_OUTPUT_PORT_TYPE
count[5] <= count[5]~reg0.DB_MAX_OUTPUT_PORT_TYPE
count[6] <= count[6]~reg0.DB_MAX_OUTPUT_PORT_TYPE
count[7] <= count[7]~reg0.DB_MAX_OUTPUT_PORT_TYPE
start_val[0] => Add0.IN16
start_val[0] => count.DATAB
start_val[1] => Add0.IN15
start_val[1] => count.DATAB
start_val[2] => Add0.IN14
start_val[2] => count.DATAB
start_val[3] => Add0.IN13
start_val[3] => count.DATAB
start_val[4] => Add0.IN12
start_val[4] => count.DATAB
start_val[5] => Add0.IN11
start_val[5] => count.DATAB
start_val[6] => Add0.IN10
start_val[6] => count.DATAB
start_val[7] => Add0.IN9
start_val[7] => count.DATAB
inc => count.OUTPUTSELECT
inc => count.OUTPUTSELECT
inc => count.OUTPUTSELECT
inc => count.OUTPUTSELECT
inc => count.OUTPUTSELECT
inc => count.OUTPUTSELECT
inc => count.OUTPUTSELECT
inc => count.OUTPUTSELECT
inc => always0.IN0
enable => always0.IN1
enable => count.OUTPUTSELECT
enable => count.OUTPUTSELECT
enable => count.OUTPUTSELECT
enable => count.OUTPUTSELECT
enable => count.OUTPUTSELECT
enable => count.OUTPUTSELECT
enable => count.OUTPUTSELECT
enable => count.OUTPUTSELECT
clk => count[0]~reg0.CLK
clk => count[1]~reg0.CLK
clk => count[2]~reg0.CLK
clk => count[3]~reg0.CLK
clk => count[4]~reg0.CLK
clk => count[5]~reg0.CLK
clk => count[6]~reg0.CLK
clk => count[7]~reg0.CLK
slow_edge => count.OUTPUTSELECT
slow_edge => count.OUTPUTSELECT
slow_edge => count.OUTPUTSELECT
slow_edge => count.OUTPUTSELECT
slow_edge => count.OUTPUTSELECT
slow_edge => count.OUTPUTSELECT
slow_edge => count.OUTPUTSELECT
slow_edge => count.OUTPUTSELECT
reset => count.OUTPUTSELECT
reset => count.OUTPUTSELECT
reset => count.OUTPUTSELECT
reset => count.OUTPUTSELECT
reset => count.OUTPUTSELECT
reset => count.OUTPUTSELECT
reset => count.OUTPUTSELECT
reset => count.OUTPUTSELECT
init_val[0] => count.DATAB
init_val[1] => count.DATAB


|lab8|snakes_and_apples:snake|grid_light:center_grid_row[4].center_grid_col[9].light
green_light_on <= green_light_on.DB_MAX_OUTPUT_PORT_TYPE
head <= head.DB_MAX_OUTPUT_PORT_TYPE
game_over_out <= state_n.DB_MAX_OUTPUT_PORT_TYPE
eating => counter256:counter.inc
eating => always0.IN1
game_over_in => state_n.e_off.OUTPUTSELECT
game_over_in => state_n.e_countdown.OUTPUTSELECT
game_over_in => state_n.e_head.OUTPUTSELECT
game_over_in => state_n.OUTPUTSELECT
left => state_n.OUTPUTSELECT
left => state_n.OUTPUTSELECT
left => state_n.OUTPUTSELECT
left => state_n.OUTPUTSELECT
up => state_n.OUTPUTSELECT
up => state_n.OUTPUTSELECT
up => state_n.OUTPUTSELECT
up => state_n.OUTPUTSELECT
right => state_n.OUTPUTSELECT
right => state_n.OUTPUTSELECT
right => state_n.OUTPUTSELECT
right => state_n.OUTPUTSELECT
down => state_n.OUTPUTSELECT
down => state_n.OUTPUTSELECT
down => state_n.OUTPUTSELECT
down => state_n.OUTPUTSELECT
length[0] => counter256:counter.start_val[0]
length[1] => counter256:counter.start_val[1]
length[2] => counter256:counter.start_val[2]
length[3] => counter256:counter.start_val[3]
length[4] => counter256:counter.start_val[4]
length[5] => counter256:counter.start_val[5]
length[6] => counter256:counter.start_val[6]
length[7] => counter256:counter.start_val[7]
dir[0] => Mux0.IN5
dir[0] => Mux1.IN5
dir[0] => Mux2.IN5
dir[0] => Mux3.IN5
dir[1] => Mux0.IN4
dir[1] => Mux1.IN4
dir[1] => Mux2.IN4
dir[1] => Mux3.IN4
clk => counter256:counter.clk
clk => state_r~1.DATAIN
slow_edge => counter256:counter.slow_edge
slow_edge => state_r.OUTPUTSELECT
slow_edge => state_r.OUTPUTSELECT
slow_edge => state_r.OUTPUTSELECT
slow_edge => state_r.OUTPUTSELECT
reset => counter256:counter.reset
reset => state_r.OUTPUTSELECT
reset => state_r.OUTPUTSELECT
reset => state_r.OUTPUTSELECT
reset => state_r.OUTPUTSELECT
light_type[0] => counter256:counter.init_val[0]
light_type[0] => Equal1.IN1
light_type[0] => Equal2.IN1
light_type[1] => counter256:counter.init_val[1]
light_type[1] => Equal1.IN0
light_type[1] => Equal2.IN0


|lab8|snakes_and_apples:snake|grid_light:center_grid_row[4].center_grid_col[9].light|counter256:counter
count[0] <= count[0]~reg0.DB_MAX_OUTPUT_PORT_TYPE
count[1] <= count[1]~reg0.DB_MAX_OUTPUT_PORT_TYPE
count[2] <= count[2]~reg0.DB_MAX_OUTPUT_PORT_TYPE
count[3] <= count[3]~reg0.DB_MAX_OUTPUT_PORT_TYPE
count[4] <= count[4]~reg0.DB_MAX_OUTPUT_PORT_TYPE
count[5] <= count[5]~reg0.DB_MAX_OUTPUT_PORT_TYPE
count[6] <= count[6]~reg0.DB_MAX_OUTPUT_PORT_TYPE
count[7] <= count[7]~reg0.DB_MAX_OUTPUT_PORT_TYPE
start_val[0] => Add0.IN16
start_val[0] => count.DATAB
start_val[1] => Add0.IN15
start_val[1] => count.DATAB
start_val[2] => Add0.IN14
start_val[2] => count.DATAB
start_val[3] => Add0.IN13
start_val[3] => count.DATAB
start_val[4] => Add0.IN12
start_val[4] => count.DATAB
start_val[5] => Add0.IN11
start_val[5] => count.DATAB
start_val[6] => Add0.IN10
start_val[6] => count.DATAB
start_val[7] => Add0.IN9
start_val[7] => count.DATAB
inc => count.OUTPUTSELECT
inc => count.OUTPUTSELECT
inc => count.OUTPUTSELECT
inc => count.OUTPUTSELECT
inc => count.OUTPUTSELECT
inc => count.OUTPUTSELECT
inc => count.OUTPUTSELECT
inc => count.OUTPUTSELECT
inc => always0.IN0
enable => always0.IN1
enable => count.OUTPUTSELECT
enable => count.OUTPUTSELECT
enable => count.OUTPUTSELECT
enable => count.OUTPUTSELECT
enable => count.OUTPUTSELECT
enable => count.OUTPUTSELECT
enable => count.OUTPUTSELECT
enable => count.OUTPUTSELECT
clk => count[0]~reg0.CLK
clk => count[1]~reg0.CLK
clk => count[2]~reg0.CLK
clk => count[3]~reg0.CLK
clk => count[4]~reg0.CLK
clk => count[5]~reg0.CLK
clk => count[6]~reg0.CLK
clk => count[7]~reg0.CLK
slow_edge => count.OUTPUTSELECT
slow_edge => count.OUTPUTSELECT
slow_edge => count.OUTPUTSELECT
slow_edge => count.OUTPUTSELECT
slow_edge => count.OUTPUTSELECT
slow_edge => count.OUTPUTSELECT
slow_edge => count.OUTPUTSELECT
slow_edge => count.OUTPUTSELECT
reset => count.OUTPUTSELECT
reset => count.OUTPUTSELECT
reset => count.OUTPUTSELECT
reset => count.OUTPUTSELECT
reset => count.OUTPUTSELECT
reset => count.OUTPUTSELECT
reset => count.OUTPUTSELECT
reset => count.OUTPUTSELECT
init_val[0] => count.DATAB
init_val[1] => count.DATAB


|lab8|snakes_and_apples:snake|grid_light:center_grid_row[4].center_grid_col[10].light
green_light_on <= green_light_on.DB_MAX_OUTPUT_PORT_TYPE
head <= head.DB_MAX_OUTPUT_PORT_TYPE
game_over_out <= state_n.DB_MAX_OUTPUT_PORT_TYPE
eating => counter256:counter.inc
eating => always0.IN1
game_over_in => state_n.e_off.OUTPUTSELECT
game_over_in => state_n.e_countdown.OUTPUTSELECT
game_over_in => state_n.e_head.OUTPUTSELECT
game_over_in => state_n.OUTPUTSELECT
left => state_n.OUTPUTSELECT
left => state_n.OUTPUTSELECT
left => state_n.OUTPUTSELECT
left => state_n.OUTPUTSELECT
up => state_n.OUTPUTSELECT
up => state_n.OUTPUTSELECT
up => state_n.OUTPUTSELECT
up => state_n.OUTPUTSELECT
right => state_n.OUTPUTSELECT
right => state_n.OUTPUTSELECT
right => state_n.OUTPUTSELECT
right => state_n.OUTPUTSELECT
down => state_n.OUTPUTSELECT
down => state_n.OUTPUTSELECT
down => state_n.OUTPUTSELECT
down => state_n.OUTPUTSELECT
length[0] => counter256:counter.start_val[0]
length[1] => counter256:counter.start_val[1]
length[2] => counter256:counter.start_val[2]
length[3] => counter256:counter.start_val[3]
length[4] => counter256:counter.start_val[4]
length[5] => counter256:counter.start_val[5]
length[6] => counter256:counter.start_val[6]
length[7] => counter256:counter.start_val[7]
dir[0] => Mux0.IN5
dir[0] => Mux1.IN5
dir[0] => Mux2.IN5
dir[0] => Mux3.IN5
dir[1] => Mux0.IN4
dir[1] => Mux1.IN4
dir[1] => Mux2.IN4
dir[1] => Mux3.IN4
clk => counter256:counter.clk
clk => state_r~1.DATAIN
slow_edge => counter256:counter.slow_edge
slow_edge => state_r.OUTPUTSELECT
slow_edge => state_r.OUTPUTSELECT
slow_edge => state_r.OUTPUTSELECT
slow_edge => state_r.OUTPUTSELECT
reset => counter256:counter.reset
reset => state_r.OUTPUTSELECT
reset => state_r.OUTPUTSELECT
reset => state_r.OUTPUTSELECT
reset => state_r.OUTPUTSELECT
light_type[0] => counter256:counter.init_val[0]
light_type[0] => Equal1.IN1
light_type[0] => Equal2.IN1
light_type[1] => counter256:counter.init_val[1]
light_type[1] => Equal1.IN0
light_type[1] => Equal2.IN0


|lab8|snakes_and_apples:snake|grid_light:center_grid_row[4].center_grid_col[10].light|counter256:counter
count[0] <= count[0]~reg0.DB_MAX_OUTPUT_PORT_TYPE
count[1] <= count[1]~reg0.DB_MAX_OUTPUT_PORT_TYPE
count[2] <= count[2]~reg0.DB_MAX_OUTPUT_PORT_TYPE
count[3] <= count[3]~reg0.DB_MAX_OUTPUT_PORT_TYPE
count[4] <= count[4]~reg0.DB_MAX_OUTPUT_PORT_TYPE
count[5] <= count[5]~reg0.DB_MAX_OUTPUT_PORT_TYPE
count[6] <= count[6]~reg0.DB_MAX_OUTPUT_PORT_TYPE
count[7] <= count[7]~reg0.DB_MAX_OUTPUT_PORT_TYPE
start_val[0] => Add0.IN16
start_val[0] => count.DATAB
start_val[1] => Add0.IN15
start_val[1] => count.DATAB
start_val[2] => Add0.IN14
start_val[2] => count.DATAB
start_val[3] => Add0.IN13
start_val[3] => count.DATAB
start_val[4] => Add0.IN12
start_val[4] => count.DATAB
start_val[5] => Add0.IN11
start_val[5] => count.DATAB
start_val[6] => Add0.IN10
start_val[6] => count.DATAB
start_val[7] => Add0.IN9
start_val[7] => count.DATAB
inc => count.OUTPUTSELECT
inc => count.OUTPUTSELECT
inc => count.OUTPUTSELECT
inc => count.OUTPUTSELECT
inc => count.OUTPUTSELECT
inc => count.OUTPUTSELECT
inc => count.OUTPUTSELECT
inc => count.OUTPUTSELECT
inc => always0.IN0
enable => always0.IN1
enable => count.OUTPUTSELECT
enable => count.OUTPUTSELECT
enable => count.OUTPUTSELECT
enable => count.OUTPUTSELECT
enable => count.OUTPUTSELECT
enable => count.OUTPUTSELECT
enable => count.OUTPUTSELECT
enable => count.OUTPUTSELECT
clk => count[0]~reg0.CLK
clk => count[1]~reg0.CLK
clk => count[2]~reg0.CLK
clk => count[3]~reg0.CLK
clk => count[4]~reg0.CLK
clk => count[5]~reg0.CLK
clk => count[6]~reg0.CLK
clk => count[7]~reg0.CLK
slow_edge => count.OUTPUTSELECT
slow_edge => count.OUTPUTSELECT
slow_edge => count.OUTPUTSELECT
slow_edge => count.OUTPUTSELECT
slow_edge => count.OUTPUTSELECT
slow_edge => count.OUTPUTSELECT
slow_edge => count.OUTPUTSELECT
slow_edge => count.OUTPUTSELECT
reset => count.OUTPUTSELECT
reset => count.OUTPUTSELECT
reset => count.OUTPUTSELECT
reset => count.OUTPUTSELECT
reset => count.OUTPUTSELECT
reset => count.OUTPUTSELECT
reset => count.OUTPUTSELECT
reset => count.OUTPUTSELECT
init_val[0] => count.DATAB
init_val[1] => count.DATAB


|lab8|snakes_and_apples:snake|grid_light:center_grid_row[4].center_grid_col[11].light
green_light_on <= green_light_on.DB_MAX_OUTPUT_PORT_TYPE
head <= head.DB_MAX_OUTPUT_PORT_TYPE
game_over_out <= state_n.DB_MAX_OUTPUT_PORT_TYPE
eating => counter256:counter.inc
eating => always0.IN1
game_over_in => state_n.e_off.OUTPUTSELECT
game_over_in => state_n.e_countdown.OUTPUTSELECT
game_over_in => state_n.e_head.OUTPUTSELECT
game_over_in => state_n.OUTPUTSELECT
left => state_n.OUTPUTSELECT
left => state_n.OUTPUTSELECT
left => state_n.OUTPUTSELECT
left => state_n.OUTPUTSELECT
up => state_n.OUTPUTSELECT
up => state_n.OUTPUTSELECT
up => state_n.OUTPUTSELECT
up => state_n.OUTPUTSELECT
right => state_n.OUTPUTSELECT
right => state_n.OUTPUTSELECT
right => state_n.OUTPUTSELECT
right => state_n.OUTPUTSELECT
down => state_n.OUTPUTSELECT
down => state_n.OUTPUTSELECT
down => state_n.OUTPUTSELECT
down => state_n.OUTPUTSELECT
length[0] => counter256:counter.start_val[0]
length[1] => counter256:counter.start_val[1]
length[2] => counter256:counter.start_val[2]
length[3] => counter256:counter.start_val[3]
length[4] => counter256:counter.start_val[4]
length[5] => counter256:counter.start_val[5]
length[6] => counter256:counter.start_val[6]
length[7] => counter256:counter.start_val[7]
dir[0] => Mux0.IN5
dir[0] => Mux1.IN5
dir[0] => Mux2.IN5
dir[0] => Mux3.IN5
dir[1] => Mux0.IN4
dir[1] => Mux1.IN4
dir[1] => Mux2.IN4
dir[1] => Mux3.IN4
clk => counter256:counter.clk
clk => state_r~1.DATAIN
slow_edge => counter256:counter.slow_edge
slow_edge => state_r.OUTPUTSELECT
slow_edge => state_r.OUTPUTSELECT
slow_edge => state_r.OUTPUTSELECT
slow_edge => state_r.OUTPUTSELECT
reset => counter256:counter.reset
reset => state_r.OUTPUTSELECT
reset => state_r.OUTPUTSELECT
reset => state_r.OUTPUTSELECT
reset => state_r.OUTPUTSELECT
light_type[0] => counter256:counter.init_val[0]
light_type[0] => Equal1.IN1
light_type[0] => Equal2.IN1
light_type[1] => counter256:counter.init_val[1]
light_type[1] => Equal1.IN0
light_type[1] => Equal2.IN0


|lab8|snakes_and_apples:snake|grid_light:center_grid_row[4].center_grid_col[11].light|counter256:counter
count[0] <= count[0]~reg0.DB_MAX_OUTPUT_PORT_TYPE
count[1] <= count[1]~reg0.DB_MAX_OUTPUT_PORT_TYPE
count[2] <= count[2]~reg0.DB_MAX_OUTPUT_PORT_TYPE
count[3] <= count[3]~reg0.DB_MAX_OUTPUT_PORT_TYPE
count[4] <= count[4]~reg0.DB_MAX_OUTPUT_PORT_TYPE
count[5] <= count[5]~reg0.DB_MAX_OUTPUT_PORT_TYPE
count[6] <= count[6]~reg0.DB_MAX_OUTPUT_PORT_TYPE
count[7] <= count[7]~reg0.DB_MAX_OUTPUT_PORT_TYPE
start_val[0] => Add0.IN16
start_val[0] => count.DATAB
start_val[1] => Add0.IN15
start_val[1] => count.DATAB
start_val[2] => Add0.IN14
start_val[2] => count.DATAB
start_val[3] => Add0.IN13
start_val[3] => count.DATAB
start_val[4] => Add0.IN12
start_val[4] => count.DATAB
start_val[5] => Add0.IN11
start_val[5] => count.DATAB
start_val[6] => Add0.IN10
start_val[6] => count.DATAB
start_val[7] => Add0.IN9
start_val[7] => count.DATAB
inc => count.OUTPUTSELECT
inc => count.OUTPUTSELECT
inc => count.OUTPUTSELECT
inc => count.OUTPUTSELECT
inc => count.OUTPUTSELECT
inc => count.OUTPUTSELECT
inc => count.OUTPUTSELECT
inc => count.OUTPUTSELECT
inc => always0.IN0
enable => always0.IN1
enable => count.OUTPUTSELECT
enable => count.OUTPUTSELECT
enable => count.OUTPUTSELECT
enable => count.OUTPUTSELECT
enable => count.OUTPUTSELECT
enable => count.OUTPUTSELECT
enable => count.OUTPUTSELECT
enable => count.OUTPUTSELECT
clk => count[0]~reg0.CLK
clk => count[1]~reg0.CLK
clk => count[2]~reg0.CLK
clk => count[3]~reg0.CLK
clk => count[4]~reg0.CLK
clk => count[5]~reg0.CLK
clk => count[6]~reg0.CLK
clk => count[7]~reg0.CLK
slow_edge => count.OUTPUTSELECT
slow_edge => count.OUTPUTSELECT
slow_edge => count.OUTPUTSELECT
slow_edge => count.OUTPUTSELECT
slow_edge => count.OUTPUTSELECT
slow_edge => count.OUTPUTSELECT
slow_edge => count.OUTPUTSELECT
slow_edge => count.OUTPUTSELECT
reset => count.OUTPUTSELECT
reset => count.OUTPUTSELECT
reset => count.OUTPUTSELECT
reset => count.OUTPUTSELECT
reset => count.OUTPUTSELECT
reset => count.OUTPUTSELECT
reset => count.OUTPUTSELECT
reset => count.OUTPUTSELECT
init_val[0] => count.DATAB
init_val[1] => count.DATAB


|lab8|snakes_and_apples:snake|grid_light:center_grid_row[4].center_grid_col[12].light
green_light_on <= green_light_on.DB_MAX_OUTPUT_PORT_TYPE
head <= head.DB_MAX_OUTPUT_PORT_TYPE
game_over_out <= state_n.DB_MAX_OUTPUT_PORT_TYPE
eating => counter256:counter.inc
eating => always0.IN1
game_over_in => state_n.e_off.OUTPUTSELECT
game_over_in => state_n.e_countdown.OUTPUTSELECT
game_over_in => state_n.e_head.OUTPUTSELECT
game_over_in => state_n.OUTPUTSELECT
left => state_n.OUTPUTSELECT
left => state_n.OUTPUTSELECT
left => state_n.OUTPUTSELECT
left => state_n.OUTPUTSELECT
up => state_n.OUTPUTSELECT
up => state_n.OUTPUTSELECT
up => state_n.OUTPUTSELECT
up => state_n.OUTPUTSELECT
right => state_n.OUTPUTSELECT
right => state_n.OUTPUTSELECT
right => state_n.OUTPUTSELECT
right => state_n.OUTPUTSELECT
down => state_n.OUTPUTSELECT
down => state_n.OUTPUTSELECT
down => state_n.OUTPUTSELECT
down => state_n.OUTPUTSELECT
length[0] => counter256:counter.start_val[0]
length[1] => counter256:counter.start_val[1]
length[2] => counter256:counter.start_val[2]
length[3] => counter256:counter.start_val[3]
length[4] => counter256:counter.start_val[4]
length[5] => counter256:counter.start_val[5]
length[6] => counter256:counter.start_val[6]
length[7] => counter256:counter.start_val[7]
dir[0] => Mux0.IN5
dir[0] => Mux1.IN5
dir[0] => Mux2.IN5
dir[0] => Mux3.IN5
dir[1] => Mux0.IN4
dir[1] => Mux1.IN4
dir[1] => Mux2.IN4
dir[1] => Mux3.IN4
clk => counter256:counter.clk
clk => state_r~1.DATAIN
slow_edge => counter256:counter.slow_edge
slow_edge => state_r.OUTPUTSELECT
slow_edge => state_r.OUTPUTSELECT
slow_edge => state_r.OUTPUTSELECT
slow_edge => state_r.OUTPUTSELECT
reset => counter256:counter.reset
reset => state_r.OUTPUTSELECT
reset => state_r.OUTPUTSELECT
reset => state_r.OUTPUTSELECT
reset => state_r.OUTPUTSELECT
light_type[0] => counter256:counter.init_val[0]
light_type[0] => Equal1.IN1
light_type[0] => Equal2.IN1
light_type[1] => counter256:counter.init_val[1]
light_type[1] => Equal1.IN0
light_type[1] => Equal2.IN0


|lab8|snakes_and_apples:snake|grid_light:center_grid_row[4].center_grid_col[12].light|counter256:counter
count[0] <= count[0]~reg0.DB_MAX_OUTPUT_PORT_TYPE
count[1] <= count[1]~reg0.DB_MAX_OUTPUT_PORT_TYPE
count[2] <= count[2]~reg0.DB_MAX_OUTPUT_PORT_TYPE
count[3] <= count[3]~reg0.DB_MAX_OUTPUT_PORT_TYPE
count[4] <= count[4]~reg0.DB_MAX_OUTPUT_PORT_TYPE
count[5] <= count[5]~reg0.DB_MAX_OUTPUT_PORT_TYPE
count[6] <= count[6]~reg0.DB_MAX_OUTPUT_PORT_TYPE
count[7] <= count[7]~reg0.DB_MAX_OUTPUT_PORT_TYPE
start_val[0] => Add0.IN16
start_val[0] => count.DATAB
start_val[1] => Add0.IN15
start_val[1] => count.DATAB
start_val[2] => Add0.IN14
start_val[2] => count.DATAB
start_val[3] => Add0.IN13
start_val[3] => count.DATAB
start_val[4] => Add0.IN12
start_val[4] => count.DATAB
start_val[5] => Add0.IN11
start_val[5] => count.DATAB
start_val[6] => Add0.IN10
start_val[6] => count.DATAB
start_val[7] => Add0.IN9
start_val[7] => count.DATAB
inc => count.OUTPUTSELECT
inc => count.OUTPUTSELECT
inc => count.OUTPUTSELECT
inc => count.OUTPUTSELECT
inc => count.OUTPUTSELECT
inc => count.OUTPUTSELECT
inc => count.OUTPUTSELECT
inc => count.OUTPUTSELECT
inc => always0.IN0
enable => always0.IN1
enable => count.OUTPUTSELECT
enable => count.OUTPUTSELECT
enable => count.OUTPUTSELECT
enable => count.OUTPUTSELECT
enable => count.OUTPUTSELECT
enable => count.OUTPUTSELECT
enable => count.OUTPUTSELECT
enable => count.OUTPUTSELECT
clk => count[0]~reg0.CLK
clk => count[1]~reg0.CLK
clk => count[2]~reg0.CLK
clk => count[3]~reg0.CLK
clk => count[4]~reg0.CLK
clk => count[5]~reg0.CLK
clk => count[6]~reg0.CLK
clk => count[7]~reg0.CLK
slow_edge => count.OUTPUTSELECT
slow_edge => count.OUTPUTSELECT
slow_edge => count.OUTPUTSELECT
slow_edge => count.OUTPUTSELECT
slow_edge => count.OUTPUTSELECT
slow_edge => count.OUTPUTSELECT
slow_edge => count.OUTPUTSELECT
slow_edge => count.OUTPUTSELECT
reset => count.OUTPUTSELECT
reset => count.OUTPUTSELECT
reset => count.OUTPUTSELECT
reset => count.OUTPUTSELECT
reset => count.OUTPUTSELECT
reset => count.OUTPUTSELECT
reset => count.OUTPUTSELECT
reset => count.OUTPUTSELECT
init_val[0] => count.DATAB
init_val[1] => count.DATAB


|lab8|snakes_and_apples:snake|grid_light:center_grid_row[4].center_grid_col[13].light
green_light_on <= green_light_on.DB_MAX_OUTPUT_PORT_TYPE
head <= head.DB_MAX_OUTPUT_PORT_TYPE
game_over_out <= state_n.DB_MAX_OUTPUT_PORT_TYPE
eating => counter256:counter.inc
eating => always0.IN1
game_over_in => state_n.e_off.OUTPUTSELECT
game_over_in => state_n.e_countdown.OUTPUTSELECT
game_over_in => state_n.e_head.OUTPUTSELECT
game_over_in => state_n.OUTPUTSELECT
left => state_n.OUTPUTSELECT
left => state_n.OUTPUTSELECT
left => state_n.OUTPUTSELECT
left => state_n.OUTPUTSELECT
up => state_n.OUTPUTSELECT
up => state_n.OUTPUTSELECT
up => state_n.OUTPUTSELECT
up => state_n.OUTPUTSELECT
right => state_n.OUTPUTSELECT
right => state_n.OUTPUTSELECT
right => state_n.OUTPUTSELECT
right => state_n.OUTPUTSELECT
down => state_n.OUTPUTSELECT
down => state_n.OUTPUTSELECT
down => state_n.OUTPUTSELECT
down => state_n.OUTPUTSELECT
length[0] => counter256:counter.start_val[0]
length[1] => counter256:counter.start_val[1]
length[2] => counter256:counter.start_val[2]
length[3] => counter256:counter.start_val[3]
length[4] => counter256:counter.start_val[4]
length[5] => counter256:counter.start_val[5]
length[6] => counter256:counter.start_val[6]
length[7] => counter256:counter.start_val[7]
dir[0] => Mux0.IN5
dir[0] => Mux1.IN5
dir[0] => Mux2.IN5
dir[0] => Mux3.IN5
dir[1] => Mux0.IN4
dir[1] => Mux1.IN4
dir[1] => Mux2.IN4
dir[1] => Mux3.IN4
clk => counter256:counter.clk
clk => state_r~1.DATAIN
slow_edge => counter256:counter.slow_edge
slow_edge => state_r.OUTPUTSELECT
slow_edge => state_r.OUTPUTSELECT
slow_edge => state_r.OUTPUTSELECT
slow_edge => state_r.OUTPUTSELECT
reset => counter256:counter.reset
reset => state_r.OUTPUTSELECT
reset => state_r.OUTPUTSELECT
reset => state_r.OUTPUTSELECT
reset => state_r.OUTPUTSELECT
light_type[0] => counter256:counter.init_val[0]
light_type[0] => Equal1.IN1
light_type[0] => Equal2.IN1
light_type[1] => counter256:counter.init_val[1]
light_type[1] => Equal1.IN0
light_type[1] => Equal2.IN0


|lab8|snakes_and_apples:snake|grid_light:center_grid_row[4].center_grid_col[13].light|counter256:counter
count[0] <= count[0]~reg0.DB_MAX_OUTPUT_PORT_TYPE
count[1] <= count[1]~reg0.DB_MAX_OUTPUT_PORT_TYPE
count[2] <= count[2]~reg0.DB_MAX_OUTPUT_PORT_TYPE
count[3] <= count[3]~reg0.DB_MAX_OUTPUT_PORT_TYPE
count[4] <= count[4]~reg0.DB_MAX_OUTPUT_PORT_TYPE
count[5] <= count[5]~reg0.DB_MAX_OUTPUT_PORT_TYPE
count[6] <= count[6]~reg0.DB_MAX_OUTPUT_PORT_TYPE
count[7] <= count[7]~reg0.DB_MAX_OUTPUT_PORT_TYPE
start_val[0] => Add0.IN16
start_val[0] => count.DATAB
start_val[1] => Add0.IN15
start_val[1] => count.DATAB
start_val[2] => Add0.IN14
start_val[2] => count.DATAB
start_val[3] => Add0.IN13
start_val[3] => count.DATAB
start_val[4] => Add0.IN12
start_val[4] => count.DATAB
start_val[5] => Add0.IN11
start_val[5] => count.DATAB
start_val[6] => Add0.IN10
start_val[6] => count.DATAB
start_val[7] => Add0.IN9
start_val[7] => count.DATAB
inc => count.OUTPUTSELECT
inc => count.OUTPUTSELECT
inc => count.OUTPUTSELECT
inc => count.OUTPUTSELECT
inc => count.OUTPUTSELECT
inc => count.OUTPUTSELECT
inc => count.OUTPUTSELECT
inc => count.OUTPUTSELECT
inc => always0.IN0
enable => always0.IN1
enable => count.OUTPUTSELECT
enable => count.OUTPUTSELECT
enable => count.OUTPUTSELECT
enable => count.OUTPUTSELECT
enable => count.OUTPUTSELECT
enable => count.OUTPUTSELECT
enable => count.OUTPUTSELECT
enable => count.OUTPUTSELECT
clk => count[0]~reg0.CLK
clk => count[1]~reg0.CLK
clk => count[2]~reg0.CLK
clk => count[3]~reg0.CLK
clk => count[4]~reg0.CLK
clk => count[5]~reg0.CLK
clk => count[6]~reg0.CLK
clk => count[7]~reg0.CLK
slow_edge => count.OUTPUTSELECT
slow_edge => count.OUTPUTSELECT
slow_edge => count.OUTPUTSELECT
slow_edge => count.OUTPUTSELECT
slow_edge => count.OUTPUTSELECT
slow_edge => count.OUTPUTSELECT
slow_edge => count.OUTPUTSELECT
slow_edge => count.OUTPUTSELECT
reset => count.OUTPUTSELECT
reset => count.OUTPUTSELECT
reset => count.OUTPUTSELECT
reset => count.OUTPUTSELECT
reset => count.OUTPUTSELECT
reset => count.OUTPUTSELECT
reset => count.OUTPUTSELECT
reset => count.OUTPUTSELECT
init_val[0] => count.DATAB
init_val[1] => count.DATAB


|lab8|snakes_and_apples:snake|grid_light:center_grid_row[4].center_grid_col[14].light
green_light_on <= green_light_on.DB_MAX_OUTPUT_PORT_TYPE
head <= head.DB_MAX_OUTPUT_PORT_TYPE
game_over_out <= state_n.DB_MAX_OUTPUT_PORT_TYPE
eating => counter256:counter.inc
eating => always0.IN1
game_over_in => state_n.e_off.OUTPUTSELECT
game_over_in => state_n.e_countdown.OUTPUTSELECT
game_over_in => state_n.e_head.OUTPUTSELECT
game_over_in => state_n.OUTPUTSELECT
left => state_n.OUTPUTSELECT
left => state_n.OUTPUTSELECT
left => state_n.OUTPUTSELECT
left => state_n.OUTPUTSELECT
up => state_n.OUTPUTSELECT
up => state_n.OUTPUTSELECT
up => state_n.OUTPUTSELECT
up => state_n.OUTPUTSELECT
right => state_n.OUTPUTSELECT
right => state_n.OUTPUTSELECT
right => state_n.OUTPUTSELECT
right => state_n.OUTPUTSELECT
down => state_n.OUTPUTSELECT
down => state_n.OUTPUTSELECT
down => state_n.OUTPUTSELECT
down => state_n.OUTPUTSELECT
length[0] => counter256:counter.start_val[0]
length[1] => counter256:counter.start_val[1]
length[2] => counter256:counter.start_val[2]
length[3] => counter256:counter.start_val[3]
length[4] => counter256:counter.start_val[4]
length[5] => counter256:counter.start_val[5]
length[6] => counter256:counter.start_val[6]
length[7] => counter256:counter.start_val[7]
dir[0] => Mux0.IN5
dir[0] => Mux1.IN5
dir[0] => Mux2.IN5
dir[0] => Mux3.IN5
dir[1] => Mux0.IN4
dir[1] => Mux1.IN4
dir[1] => Mux2.IN4
dir[1] => Mux3.IN4
clk => counter256:counter.clk
clk => state_r~1.DATAIN
slow_edge => counter256:counter.slow_edge
slow_edge => state_r.OUTPUTSELECT
slow_edge => state_r.OUTPUTSELECT
slow_edge => state_r.OUTPUTSELECT
slow_edge => state_r.OUTPUTSELECT
reset => counter256:counter.reset
reset => state_r.OUTPUTSELECT
reset => state_r.OUTPUTSELECT
reset => state_r.OUTPUTSELECT
reset => state_r.OUTPUTSELECT
light_type[0] => counter256:counter.init_val[0]
light_type[0] => Equal1.IN1
light_type[0] => Equal2.IN1
light_type[1] => counter256:counter.init_val[1]
light_type[1] => Equal1.IN0
light_type[1] => Equal2.IN0


|lab8|snakes_and_apples:snake|grid_light:center_grid_row[4].center_grid_col[14].light|counter256:counter
count[0] <= count[0]~reg0.DB_MAX_OUTPUT_PORT_TYPE
count[1] <= count[1]~reg0.DB_MAX_OUTPUT_PORT_TYPE
count[2] <= count[2]~reg0.DB_MAX_OUTPUT_PORT_TYPE
count[3] <= count[3]~reg0.DB_MAX_OUTPUT_PORT_TYPE
count[4] <= count[4]~reg0.DB_MAX_OUTPUT_PORT_TYPE
count[5] <= count[5]~reg0.DB_MAX_OUTPUT_PORT_TYPE
count[6] <= count[6]~reg0.DB_MAX_OUTPUT_PORT_TYPE
count[7] <= count[7]~reg0.DB_MAX_OUTPUT_PORT_TYPE
start_val[0] => Add0.IN16
start_val[0] => count.DATAB
start_val[1] => Add0.IN15
start_val[1] => count.DATAB
start_val[2] => Add0.IN14
start_val[2] => count.DATAB
start_val[3] => Add0.IN13
start_val[3] => count.DATAB
start_val[4] => Add0.IN12
start_val[4] => count.DATAB
start_val[5] => Add0.IN11
start_val[5] => count.DATAB
start_val[6] => Add0.IN10
start_val[6] => count.DATAB
start_val[7] => Add0.IN9
start_val[7] => count.DATAB
inc => count.OUTPUTSELECT
inc => count.OUTPUTSELECT
inc => count.OUTPUTSELECT
inc => count.OUTPUTSELECT
inc => count.OUTPUTSELECT
inc => count.OUTPUTSELECT
inc => count.OUTPUTSELECT
inc => count.OUTPUTSELECT
inc => always0.IN0
enable => always0.IN1
enable => count.OUTPUTSELECT
enable => count.OUTPUTSELECT
enable => count.OUTPUTSELECT
enable => count.OUTPUTSELECT
enable => count.OUTPUTSELECT
enable => count.OUTPUTSELECT
enable => count.OUTPUTSELECT
enable => count.OUTPUTSELECT
clk => count[0]~reg0.CLK
clk => count[1]~reg0.CLK
clk => count[2]~reg0.CLK
clk => count[3]~reg0.CLK
clk => count[4]~reg0.CLK
clk => count[5]~reg0.CLK
clk => count[6]~reg0.CLK
clk => count[7]~reg0.CLK
slow_edge => count.OUTPUTSELECT
slow_edge => count.OUTPUTSELECT
slow_edge => count.OUTPUTSELECT
slow_edge => count.OUTPUTSELECT
slow_edge => count.OUTPUTSELECT
slow_edge => count.OUTPUTSELECT
slow_edge => count.OUTPUTSELECT
slow_edge => count.OUTPUTSELECT
reset => count.OUTPUTSELECT
reset => count.OUTPUTSELECT
reset => count.OUTPUTSELECT
reset => count.OUTPUTSELECT
reset => count.OUTPUTSELECT
reset => count.OUTPUTSELECT
reset => count.OUTPUTSELECT
reset => count.OUTPUTSELECT
init_val[0] => count.DATAB
init_val[1] => count.DATAB


|lab8|snakes_and_apples:snake|grid_light:center_grid_row[5].center_grid_col[1].light
green_light_on <= green_light_on.DB_MAX_OUTPUT_PORT_TYPE
head <= head.DB_MAX_OUTPUT_PORT_TYPE
game_over_out <= state_n.DB_MAX_OUTPUT_PORT_TYPE
eating => counter256:counter.inc
eating => always0.IN1
game_over_in => state_n.e_off.OUTPUTSELECT
game_over_in => state_n.e_countdown.OUTPUTSELECT
game_over_in => state_n.e_head.OUTPUTSELECT
game_over_in => state_n.OUTPUTSELECT
left => state_n.OUTPUTSELECT
left => state_n.OUTPUTSELECT
left => state_n.OUTPUTSELECT
left => state_n.OUTPUTSELECT
up => state_n.OUTPUTSELECT
up => state_n.OUTPUTSELECT
up => state_n.OUTPUTSELECT
up => state_n.OUTPUTSELECT
right => state_n.OUTPUTSELECT
right => state_n.OUTPUTSELECT
right => state_n.OUTPUTSELECT
right => state_n.OUTPUTSELECT
down => state_n.OUTPUTSELECT
down => state_n.OUTPUTSELECT
down => state_n.OUTPUTSELECT
down => state_n.OUTPUTSELECT
length[0] => counter256:counter.start_val[0]
length[1] => counter256:counter.start_val[1]
length[2] => counter256:counter.start_val[2]
length[3] => counter256:counter.start_val[3]
length[4] => counter256:counter.start_val[4]
length[5] => counter256:counter.start_val[5]
length[6] => counter256:counter.start_val[6]
length[7] => counter256:counter.start_val[7]
dir[0] => Mux0.IN5
dir[0] => Mux1.IN5
dir[0] => Mux2.IN5
dir[0] => Mux3.IN5
dir[1] => Mux0.IN4
dir[1] => Mux1.IN4
dir[1] => Mux2.IN4
dir[1] => Mux3.IN4
clk => counter256:counter.clk
clk => state_r~1.DATAIN
slow_edge => counter256:counter.slow_edge
slow_edge => state_r.OUTPUTSELECT
slow_edge => state_r.OUTPUTSELECT
slow_edge => state_r.OUTPUTSELECT
slow_edge => state_r.OUTPUTSELECT
reset => counter256:counter.reset
reset => state_r.OUTPUTSELECT
reset => state_r.OUTPUTSELECT
reset => state_r.OUTPUTSELECT
reset => state_r.OUTPUTSELECT
light_type[0] => counter256:counter.init_val[0]
light_type[0] => Equal1.IN1
light_type[0] => Equal2.IN1
light_type[1] => counter256:counter.init_val[1]
light_type[1] => Equal1.IN0
light_type[1] => Equal2.IN0


|lab8|snakes_and_apples:snake|grid_light:center_grid_row[5].center_grid_col[1].light|counter256:counter
count[0] <= count[0]~reg0.DB_MAX_OUTPUT_PORT_TYPE
count[1] <= count[1]~reg0.DB_MAX_OUTPUT_PORT_TYPE
count[2] <= count[2]~reg0.DB_MAX_OUTPUT_PORT_TYPE
count[3] <= count[3]~reg0.DB_MAX_OUTPUT_PORT_TYPE
count[4] <= count[4]~reg0.DB_MAX_OUTPUT_PORT_TYPE
count[5] <= count[5]~reg0.DB_MAX_OUTPUT_PORT_TYPE
count[6] <= count[6]~reg0.DB_MAX_OUTPUT_PORT_TYPE
count[7] <= count[7]~reg0.DB_MAX_OUTPUT_PORT_TYPE
start_val[0] => Add0.IN16
start_val[0] => count.DATAB
start_val[1] => Add0.IN15
start_val[1] => count.DATAB
start_val[2] => Add0.IN14
start_val[2] => count.DATAB
start_val[3] => Add0.IN13
start_val[3] => count.DATAB
start_val[4] => Add0.IN12
start_val[4] => count.DATAB
start_val[5] => Add0.IN11
start_val[5] => count.DATAB
start_val[6] => Add0.IN10
start_val[6] => count.DATAB
start_val[7] => Add0.IN9
start_val[7] => count.DATAB
inc => count.OUTPUTSELECT
inc => count.OUTPUTSELECT
inc => count.OUTPUTSELECT
inc => count.OUTPUTSELECT
inc => count.OUTPUTSELECT
inc => count.OUTPUTSELECT
inc => count.OUTPUTSELECT
inc => count.OUTPUTSELECT
inc => always0.IN0
enable => always0.IN1
enable => count.OUTPUTSELECT
enable => count.OUTPUTSELECT
enable => count.OUTPUTSELECT
enable => count.OUTPUTSELECT
enable => count.OUTPUTSELECT
enable => count.OUTPUTSELECT
enable => count.OUTPUTSELECT
enable => count.OUTPUTSELECT
clk => count[0]~reg0.CLK
clk => count[1]~reg0.CLK
clk => count[2]~reg0.CLK
clk => count[3]~reg0.CLK
clk => count[4]~reg0.CLK
clk => count[5]~reg0.CLK
clk => count[6]~reg0.CLK
clk => count[7]~reg0.CLK
slow_edge => count.OUTPUTSELECT
slow_edge => count.OUTPUTSELECT
slow_edge => count.OUTPUTSELECT
slow_edge => count.OUTPUTSELECT
slow_edge => count.OUTPUTSELECT
slow_edge => count.OUTPUTSELECT
slow_edge => count.OUTPUTSELECT
slow_edge => count.OUTPUTSELECT
reset => count.OUTPUTSELECT
reset => count.OUTPUTSELECT
reset => count.OUTPUTSELECT
reset => count.OUTPUTSELECT
reset => count.OUTPUTSELECT
reset => count.OUTPUTSELECT
reset => count.OUTPUTSELECT
reset => count.OUTPUTSELECT
init_val[0] => count.DATAB
init_val[1] => count.DATAB


|lab8|snakes_and_apples:snake|grid_light:center_grid_row[5].center_grid_col[2].light
green_light_on <= green_light_on.DB_MAX_OUTPUT_PORT_TYPE
head <= head.DB_MAX_OUTPUT_PORT_TYPE
game_over_out <= state_n.DB_MAX_OUTPUT_PORT_TYPE
eating => counter256:counter.inc
eating => always0.IN1
game_over_in => state_n.e_off.OUTPUTSELECT
game_over_in => state_n.e_countdown.OUTPUTSELECT
game_over_in => state_n.e_head.OUTPUTSELECT
game_over_in => state_n.OUTPUTSELECT
left => state_n.OUTPUTSELECT
left => state_n.OUTPUTSELECT
left => state_n.OUTPUTSELECT
left => state_n.OUTPUTSELECT
up => state_n.OUTPUTSELECT
up => state_n.OUTPUTSELECT
up => state_n.OUTPUTSELECT
up => state_n.OUTPUTSELECT
right => state_n.OUTPUTSELECT
right => state_n.OUTPUTSELECT
right => state_n.OUTPUTSELECT
right => state_n.OUTPUTSELECT
down => state_n.OUTPUTSELECT
down => state_n.OUTPUTSELECT
down => state_n.OUTPUTSELECT
down => state_n.OUTPUTSELECT
length[0] => counter256:counter.start_val[0]
length[1] => counter256:counter.start_val[1]
length[2] => counter256:counter.start_val[2]
length[3] => counter256:counter.start_val[3]
length[4] => counter256:counter.start_val[4]
length[5] => counter256:counter.start_val[5]
length[6] => counter256:counter.start_val[6]
length[7] => counter256:counter.start_val[7]
dir[0] => Mux0.IN5
dir[0] => Mux1.IN5
dir[0] => Mux2.IN5
dir[0] => Mux3.IN5
dir[1] => Mux0.IN4
dir[1] => Mux1.IN4
dir[1] => Mux2.IN4
dir[1] => Mux3.IN4
clk => counter256:counter.clk
clk => state_r~1.DATAIN
slow_edge => counter256:counter.slow_edge
slow_edge => state_r.OUTPUTSELECT
slow_edge => state_r.OUTPUTSELECT
slow_edge => state_r.OUTPUTSELECT
slow_edge => state_r.OUTPUTSELECT
reset => counter256:counter.reset
reset => state_r.OUTPUTSELECT
reset => state_r.OUTPUTSELECT
reset => state_r.OUTPUTSELECT
reset => state_r.OUTPUTSELECT
light_type[0] => counter256:counter.init_val[0]
light_type[0] => Equal1.IN1
light_type[0] => Equal2.IN1
light_type[1] => counter256:counter.init_val[1]
light_type[1] => Equal1.IN0
light_type[1] => Equal2.IN0


|lab8|snakes_and_apples:snake|grid_light:center_grid_row[5].center_grid_col[2].light|counter256:counter
count[0] <= count[0]~reg0.DB_MAX_OUTPUT_PORT_TYPE
count[1] <= count[1]~reg0.DB_MAX_OUTPUT_PORT_TYPE
count[2] <= count[2]~reg0.DB_MAX_OUTPUT_PORT_TYPE
count[3] <= count[3]~reg0.DB_MAX_OUTPUT_PORT_TYPE
count[4] <= count[4]~reg0.DB_MAX_OUTPUT_PORT_TYPE
count[5] <= count[5]~reg0.DB_MAX_OUTPUT_PORT_TYPE
count[6] <= count[6]~reg0.DB_MAX_OUTPUT_PORT_TYPE
count[7] <= count[7]~reg0.DB_MAX_OUTPUT_PORT_TYPE
start_val[0] => Add0.IN16
start_val[0] => count.DATAB
start_val[1] => Add0.IN15
start_val[1] => count.DATAB
start_val[2] => Add0.IN14
start_val[2] => count.DATAB
start_val[3] => Add0.IN13
start_val[3] => count.DATAB
start_val[4] => Add0.IN12
start_val[4] => count.DATAB
start_val[5] => Add0.IN11
start_val[5] => count.DATAB
start_val[6] => Add0.IN10
start_val[6] => count.DATAB
start_val[7] => Add0.IN9
start_val[7] => count.DATAB
inc => count.OUTPUTSELECT
inc => count.OUTPUTSELECT
inc => count.OUTPUTSELECT
inc => count.OUTPUTSELECT
inc => count.OUTPUTSELECT
inc => count.OUTPUTSELECT
inc => count.OUTPUTSELECT
inc => count.OUTPUTSELECT
inc => always0.IN0
enable => always0.IN1
enable => count.OUTPUTSELECT
enable => count.OUTPUTSELECT
enable => count.OUTPUTSELECT
enable => count.OUTPUTSELECT
enable => count.OUTPUTSELECT
enable => count.OUTPUTSELECT
enable => count.OUTPUTSELECT
enable => count.OUTPUTSELECT
clk => count[0]~reg0.CLK
clk => count[1]~reg0.CLK
clk => count[2]~reg0.CLK
clk => count[3]~reg0.CLK
clk => count[4]~reg0.CLK
clk => count[5]~reg0.CLK
clk => count[6]~reg0.CLK
clk => count[7]~reg0.CLK
slow_edge => count.OUTPUTSELECT
slow_edge => count.OUTPUTSELECT
slow_edge => count.OUTPUTSELECT
slow_edge => count.OUTPUTSELECT
slow_edge => count.OUTPUTSELECT
slow_edge => count.OUTPUTSELECT
slow_edge => count.OUTPUTSELECT
slow_edge => count.OUTPUTSELECT
reset => count.OUTPUTSELECT
reset => count.OUTPUTSELECT
reset => count.OUTPUTSELECT
reset => count.OUTPUTSELECT
reset => count.OUTPUTSELECT
reset => count.OUTPUTSELECT
reset => count.OUTPUTSELECT
reset => count.OUTPUTSELECT
init_val[0] => count.DATAB
init_val[1] => count.DATAB


|lab8|snakes_and_apples:snake|grid_light:center_grid_row[5].center_grid_col[3].light
green_light_on <= green_light_on.DB_MAX_OUTPUT_PORT_TYPE
head <= head.DB_MAX_OUTPUT_PORT_TYPE
game_over_out <= state_n.DB_MAX_OUTPUT_PORT_TYPE
eating => counter256:counter.inc
eating => always0.IN1
game_over_in => state_n.e_off.OUTPUTSELECT
game_over_in => state_n.e_countdown.OUTPUTSELECT
game_over_in => state_n.e_head.OUTPUTSELECT
game_over_in => state_n.OUTPUTSELECT
left => state_n.OUTPUTSELECT
left => state_n.OUTPUTSELECT
left => state_n.OUTPUTSELECT
left => state_n.OUTPUTSELECT
up => state_n.OUTPUTSELECT
up => state_n.OUTPUTSELECT
up => state_n.OUTPUTSELECT
up => state_n.OUTPUTSELECT
right => state_n.OUTPUTSELECT
right => state_n.OUTPUTSELECT
right => state_n.OUTPUTSELECT
right => state_n.OUTPUTSELECT
down => state_n.OUTPUTSELECT
down => state_n.OUTPUTSELECT
down => state_n.OUTPUTSELECT
down => state_n.OUTPUTSELECT
length[0] => counter256:counter.start_val[0]
length[1] => counter256:counter.start_val[1]
length[2] => counter256:counter.start_val[2]
length[3] => counter256:counter.start_val[3]
length[4] => counter256:counter.start_val[4]
length[5] => counter256:counter.start_val[5]
length[6] => counter256:counter.start_val[6]
length[7] => counter256:counter.start_val[7]
dir[0] => Mux0.IN5
dir[0] => Mux1.IN5
dir[0] => Mux2.IN5
dir[0] => Mux3.IN5
dir[1] => Mux0.IN4
dir[1] => Mux1.IN4
dir[1] => Mux2.IN4
dir[1] => Mux3.IN4
clk => counter256:counter.clk
clk => state_r~1.DATAIN
slow_edge => counter256:counter.slow_edge
slow_edge => state_r.OUTPUTSELECT
slow_edge => state_r.OUTPUTSELECT
slow_edge => state_r.OUTPUTSELECT
slow_edge => state_r.OUTPUTSELECT
reset => counter256:counter.reset
reset => state_r.OUTPUTSELECT
reset => state_r.OUTPUTSELECT
reset => state_r.OUTPUTSELECT
reset => state_r.OUTPUTSELECT
light_type[0] => counter256:counter.init_val[0]
light_type[0] => Equal1.IN1
light_type[0] => Equal2.IN1
light_type[1] => counter256:counter.init_val[1]
light_type[1] => Equal1.IN0
light_type[1] => Equal2.IN0


|lab8|snakes_and_apples:snake|grid_light:center_grid_row[5].center_grid_col[3].light|counter256:counter
count[0] <= count[0]~reg0.DB_MAX_OUTPUT_PORT_TYPE
count[1] <= count[1]~reg0.DB_MAX_OUTPUT_PORT_TYPE
count[2] <= count[2]~reg0.DB_MAX_OUTPUT_PORT_TYPE
count[3] <= count[3]~reg0.DB_MAX_OUTPUT_PORT_TYPE
count[4] <= count[4]~reg0.DB_MAX_OUTPUT_PORT_TYPE
count[5] <= count[5]~reg0.DB_MAX_OUTPUT_PORT_TYPE
count[6] <= count[6]~reg0.DB_MAX_OUTPUT_PORT_TYPE
count[7] <= count[7]~reg0.DB_MAX_OUTPUT_PORT_TYPE
start_val[0] => Add0.IN16
start_val[0] => count.DATAB
start_val[1] => Add0.IN15
start_val[1] => count.DATAB
start_val[2] => Add0.IN14
start_val[2] => count.DATAB
start_val[3] => Add0.IN13
start_val[3] => count.DATAB
start_val[4] => Add0.IN12
start_val[4] => count.DATAB
start_val[5] => Add0.IN11
start_val[5] => count.DATAB
start_val[6] => Add0.IN10
start_val[6] => count.DATAB
start_val[7] => Add0.IN9
start_val[7] => count.DATAB
inc => count.OUTPUTSELECT
inc => count.OUTPUTSELECT
inc => count.OUTPUTSELECT
inc => count.OUTPUTSELECT
inc => count.OUTPUTSELECT
inc => count.OUTPUTSELECT
inc => count.OUTPUTSELECT
inc => count.OUTPUTSELECT
inc => always0.IN0
enable => always0.IN1
enable => count.OUTPUTSELECT
enable => count.OUTPUTSELECT
enable => count.OUTPUTSELECT
enable => count.OUTPUTSELECT
enable => count.OUTPUTSELECT
enable => count.OUTPUTSELECT
enable => count.OUTPUTSELECT
enable => count.OUTPUTSELECT
clk => count[0]~reg0.CLK
clk => count[1]~reg0.CLK
clk => count[2]~reg0.CLK
clk => count[3]~reg0.CLK
clk => count[4]~reg0.CLK
clk => count[5]~reg0.CLK
clk => count[6]~reg0.CLK
clk => count[7]~reg0.CLK
slow_edge => count.OUTPUTSELECT
slow_edge => count.OUTPUTSELECT
slow_edge => count.OUTPUTSELECT
slow_edge => count.OUTPUTSELECT
slow_edge => count.OUTPUTSELECT
slow_edge => count.OUTPUTSELECT
slow_edge => count.OUTPUTSELECT
slow_edge => count.OUTPUTSELECT
reset => count.OUTPUTSELECT
reset => count.OUTPUTSELECT
reset => count.OUTPUTSELECT
reset => count.OUTPUTSELECT
reset => count.OUTPUTSELECT
reset => count.OUTPUTSELECT
reset => count.OUTPUTSELECT
reset => count.OUTPUTSELECT
init_val[0] => count.DATAB
init_val[1] => count.DATAB


|lab8|snakes_and_apples:snake|grid_light:center_grid_row[5].center_grid_col[4].light
green_light_on <= green_light_on.DB_MAX_OUTPUT_PORT_TYPE
head <= head.DB_MAX_OUTPUT_PORT_TYPE
game_over_out <= state_n.DB_MAX_OUTPUT_PORT_TYPE
eating => counter256:counter.inc
eating => always0.IN1
game_over_in => state_n.e_off.OUTPUTSELECT
game_over_in => state_n.e_countdown.OUTPUTSELECT
game_over_in => state_n.e_head.OUTPUTSELECT
game_over_in => state_n.OUTPUTSELECT
left => state_n.OUTPUTSELECT
left => state_n.OUTPUTSELECT
left => state_n.OUTPUTSELECT
left => state_n.OUTPUTSELECT
up => state_n.OUTPUTSELECT
up => state_n.OUTPUTSELECT
up => state_n.OUTPUTSELECT
up => state_n.OUTPUTSELECT
right => state_n.OUTPUTSELECT
right => state_n.OUTPUTSELECT
right => state_n.OUTPUTSELECT
right => state_n.OUTPUTSELECT
down => state_n.OUTPUTSELECT
down => state_n.OUTPUTSELECT
down => state_n.OUTPUTSELECT
down => state_n.OUTPUTSELECT
length[0] => counter256:counter.start_val[0]
length[1] => counter256:counter.start_val[1]
length[2] => counter256:counter.start_val[2]
length[3] => counter256:counter.start_val[3]
length[4] => counter256:counter.start_val[4]
length[5] => counter256:counter.start_val[5]
length[6] => counter256:counter.start_val[6]
length[7] => counter256:counter.start_val[7]
dir[0] => Mux0.IN5
dir[0] => Mux1.IN5
dir[0] => Mux2.IN5
dir[0] => Mux3.IN5
dir[1] => Mux0.IN4
dir[1] => Mux1.IN4
dir[1] => Mux2.IN4
dir[1] => Mux3.IN4
clk => counter256:counter.clk
clk => state_r~1.DATAIN
slow_edge => counter256:counter.slow_edge
slow_edge => state_r.OUTPUTSELECT
slow_edge => state_r.OUTPUTSELECT
slow_edge => state_r.OUTPUTSELECT
slow_edge => state_r.OUTPUTSELECT
reset => counter256:counter.reset
reset => state_r.OUTPUTSELECT
reset => state_r.OUTPUTSELECT
reset => state_r.OUTPUTSELECT
reset => state_r.OUTPUTSELECT
light_type[0] => counter256:counter.init_val[0]
light_type[0] => Equal1.IN1
light_type[0] => Equal2.IN1
light_type[1] => counter256:counter.init_val[1]
light_type[1] => Equal1.IN0
light_type[1] => Equal2.IN0


|lab8|snakes_and_apples:snake|grid_light:center_grid_row[5].center_grid_col[4].light|counter256:counter
count[0] <= count[0]~reg0.DB_MAX_OUTPUT_PORT_TYPE
count[1] <= count[1]~reg0.DB_MAX_OUTPUT_PORT_TYPE
count[2] <= count[2]~reg0.DB_MAX_OUTPUT_PORT_TYPE
count[3] <= count[3]~reg0.DB_MAX_OUTPUT_PORT_TYPE
count[4] <= count[4]~reg0.DB_MAX_OUTPUT_PORT_TYPE
count[5] <= count[5]~reg0.DB_MAX_OUTPUT_PORT_TYPE
count[6] <= count[6]~reg0.DB_MAX_OUTPUT_PORT_TYPE
count[7] <= count[7]~reg0.DB_MAX_OUTPUT_PORT_TYPE
start_val[0] => Add0.IN16
start_val[0] => count.DATAB
start_val[1] => Add0.IN15
start_val[1] => count.DATAB
start_val[2] => Add0.IN14
start_val[2] => count.DATAB
start_val[3] => Add0.IN13
start_val[3] => count.DATAB
start_val[4] => Add0.IN12
start_val[4] => count.DATAB
start_val[5] => Add0.IN11
start_val[5] => count.DATAB
start_val[6] => Add0.IN10
start_val[6] => count.DATAB
start_val[7] => Add0.IN9
start_val[7] => count.DATAB
inc => count.OUTPUTSELECT
inc => count.OUTPUTSELECT
inc => count.OUTPUTSELECT
inc => count.OUTPUTSELECT
inc => count.OUTPUTSELECT
inc => count.OUTPUTSELECT
inc => count.OUTPUTSELECT
inc => count.OUTPUTSELECT
inc => always0.IN0
enable => always0.IN1
enable => count.OUTPUTSELECT
enable => count.OUTPUTSELECT
enable => count.OUTPUTSELECT
enable => count.OUTPUTSELECT
enable => count.OUTPUTSELECT
enable => count.OUTPUTSELECT
enable => count.OUTPUTSELECT
enable => count.OUTPUTSELECT
clk => count[0]~reg0.CLK
clk => count[1]~reg0.CLK
clk => count[2]~reg0.CLK
clk => count[3]~reg0.CLK
clk => count[4]~reg0.CLK
clk => count[5]~reg0.CLK
clk => count[6]~reg0.CLK
clk => count[7]~reg0.CLK
slow_edge => count.OUTPUTSELECT
slow_edge => count.OUTPUTSELECT
slow_edge => count.OUTPUTSELECT
slow_edge => count.OUTPUTSELECT
slow_edge => count.OUTPUTSELECT
slow_edge => count.OUTPUTSELECT
slow_edge => count.OUTPUTSELECT
slow_edge => count.OUTPUTSELECT
reset => count.OUTPUTSELECT
reset => count.OUTPUTSELECT
reset => count.OUTPUTSELECT
reset => count.OUTPUTSELECT
reset => count.OUTPUTSELECT
reset => count.OUTPUTSELECT
reset => count.OUTPUTSELECT
reset => count.OUTPUTSELECT
init_val[0] => count.DATAB
init_val[1] => count.DATAB


|lab8|snakes_and_apples:snake|grid_light:center_grid_row[5].center_grid_col[5].light
green_light_on <= green_light_on.DB_MAX_OUTPUT_PORT_TYPE
head <= head.DB_MAX_OUTPUT_PORT_TYPE
game_over_out <= state_n.DB_MAX_OUTPUT_PORT_TYPE
eating => counter256:counter.inc
eating => always0.IN1
game_over_in => state_n.e_off.OUTPUTSELECT
game_over_in => state_n.e_countdown.OUTPUTSELECT
game_over_in => state_n.e_head.OUTPUTSELECT
game_over_in => state_n.OUTPUTSELECT
left => state_n.OUTPUTSELECT
left => state_n.OUTPUTSELECT
left => state_n.OUTPUTSELECT
left => state_n.OUTPUTSELECT
up => state_n.OUTPUTSELECT
up => state_n.OUTPUTSELECT
up => state_n.OUTPUTSELECT
up => state_n.OUTPUTSELECT
right => state_n.OUTPUTSELECT
right => state_n.OUTPUTSELECT
right => state_n.OUTPUTSELECT
right => state_n.OUTPUTSELECT
down => state_n.OUTPUTSELECT
down => state_n.OUTPUTSELECT
down => state_n.OUTPUTSELECT
down => state_n.OUTPUTSELECT
length[0] => counter256:counter.start_val[0]
length[1] => counter256:counter.start_val[1]
length[2] => counter256:counter.start_val[2]
length[3] => counter256:counter.start_val[3]
length[4] => counter256:counter.start_val[4]
length[5] => counter256:counter.start_val[5]
length[6] => counter256:counter.start_val[6]
length[7] => counter256:counter.start_val[7]
dir[0] => Mux0.IN5
dir[0] => Mux1.IN5
dir[0] => Mux2.IN5
dir[0] => Mux3.IN5
dir[1] => Mux0.IN4
dir[1] => Mux1.IN4
dir[1] => Mux2.IN4
dir[1] => Mux3.IN4
clk => counter256:counter.clk
clk => state_r~1.DATAIN
slow_edge => counter256:counter.slow_edge
slow_edge => state_r.OUTPUTSELECT
slow_edge => state_r.OUTPUTSELECT
slow_edge => state_r.OUTPUTSELECT
slow_edge => state_r.OUTPUTSELECT
reset => counter256:counter.reset
reset => state_r.OUTPUTSELECT
reset => state_r.OUTPUTSELECT
reset => state_r.OUTPUTSELECT
reset => state_r.OUTPUTSELECT
light_type[0] => counter256:counter.init_val[0]
light_type[0] => Equal1.IN1
light_type[0] => Equal2.IN1
light_type[1] => counter256:counter.init_val[1]
light_type[1] => Equal1.IN0
light_type[1] => Equal2.IN0


|lab8|snakes_and_apples:snake|grid_light:center_grid_row[5].center_grid_col[5].light|counter256:counter
count[0] <= count[0]~reg0.DB_MAX_OUTPUT_PORT_TYPE
count[1] <= count[1]~reg0.DB_MAX_OUTPUT_PORT_TYPE
count[2] <= count[2]~reg0.DB_MAX_OUTPUT_PORT_TYPE
count[3] <= count[3]~reg0.DB_MAX_OUTPUT_PORT_TYPE
count[4] <= count[4]~reg0.DB_MAX_OUTPUT_PORT_TYPE
count[5] <= count[5]~reg0.DB_MAX_OUTPUT_PORT_TYPE
count[6] <= count[6]~reg0.DB_MAX_OUTPUT_PORT_TYPE
count[7] <= count[7]~reg0.DB_MAX_OUTPUT_PORT_TYPE
start_val[0] => Add0.IN16
start_val[0] => count.DATAB
start_val[1] => Add0.IN15
start_val[1] => count.DATAB
start_val[2] => Add0.IN14
start_val[2] => count.DATAB
start_val[3] => Add0.IN13
start_val[3] => count.DATAB
start_val[4] => Add0.IN12
start_val[4] => count.DATAB
start_val[5] => Add0.IN11
start_val[5] => count.DATAB
start_val[6] => Add0.IN10
start_val[6] => count.DATAB
start_val[7] => Add0.IN9
start_val[7] => count.DATAB
inc => count.OUTPUTSELECT
inc => count.OUTPUTSELECT
inc => count.OUTPUTSELECT
inc => count.OUTPUTSELECT
inc => count.OUTPUTSELECT
inc => count.OUTPUTSELECT
inc => count.OUTPUTSELECT
inc => count.OUTPUTSELECT
inc => always0.IN0
enable => always0.IN1
enable => count.OUTPUTSELECT
enable => count.OUTPUTSELECT
enable => count.OUTPUTSELECT
enable => count.OUTPUTSELECT
enable => count.OUTPUTSELECT
enable => count.OUTPUTSELECT
enable => count.OUTPUTSELECT
enable => count.OUTPUTSELECT
clk => count[0]~reg0.CLK
clk => count[1]~reg0.CLK
clk => count[2]~reg0.CLK
clk => count[3]~reg0.CLK
clk => count[4]~reg0.CLK
clk => count[5]~reg0.CLK
clk => count[6]~reg0.CLK
clk => count[7]~reg0.CLK
slow_edge => count.OUTPUTSELECT
slow_edge => count.OUTPUTSELECT
slow_edge => count.OUTPUTSELECT
slow_edge => count.OUTPUTSELECT
slow_edge => count.OUTPUTSELECT
slow_edge => count.OUTPUTSELECT
slow_edge => count.OUTPUTSELECT
slow_edge => count.OUTPUTSELECT
reset => count.OUTPUTSELECT
reset => count.OUTPUTSELECT
reset => count.OUTPUTSELECT
reset => count.OUTPUTSELECT
reset => count.OUTPUTSELECT
reset => count.OUTPUTSELECT
reset => count.OUTPUTSELECT
reset => count.OUTPUTSELECT
init_val[0] => count.DATAB
init_val[1] => count.DATAB


|lab8|snakes_and_apples:snake|grid_light:center_grid_row[5].center_grid_col[6].light
green_light_on <= green_light_on.DB_MAX_OUTPUT_PORT_TYPE
head <= head.DB_MAX_OUTPUT_PORT_TYPE
game_over_out <= state_n.DB_MAX_OUTPUT_PORT_TYPE
eating => counter256:counter.inc
eating => always0.IN1
game_over_in => state_n.e_off.OUTPUTSELECT
game_over_in => state_n.e_countdown.OUTPUTSELECT
game_over_in => state_n.e_head.OUTPUTSELECT
game_over_in => state_n.OUTPUTSELECT
left => state_n.OUTPUTSELECT
left => state_n.OUTPUTSELECT
left => state_n.OUTPUTSELECT
left => state_n.OUTPUTSELECT
up => state_n.OUTPUTSELECT
up => state_n.OUTPUTSELECT
up => state_n.OUTPUTSELECT
up => state_n.OUTPUTSELECT
right => state_n.OUTPUTSELECT
right => state_n.OUTPUTSELECT
right => state_n.OUTPUTSELECT
right => state_n.OUTPUTSELECT
down => state_n.OUTPUTSELECT
down => state_n.OUTPUTSELECT
down => state_n.OUTPUTSELECT
down => state_n.OUTPUTSELECT
length[0] => counter256:counter.start_val[0]
length[1] => counter256:counter.start_val[1]
length[2] => counter256:counter.start_val[2]
length[3] => counter256:counter.start_val[3]
length[4] => counter256:counter.start_val[4]
length[5] => counter256:counter.start_val[5]
length[6] => counter256:counter.start_val[6]
length[7] => counter256:counter.start_val[7]
dir[0] => Mux0.IN5
dir[0] => Mux1.IN5
dir[0] => Mux2.IN5
dir[0] => Mux3.IN5
dir[1] => Mux0.IN4
dir[1] => Mux1.IN4
dir[1] => Mux2.IN4
dir[1] => Mux3.IN4
clk => counter256:counter.clk
clk => state_r~1.DATAIN
slow_edge => counter256:counter.slow_edge
slow_edge => state_r.OUTPUTSELECT
slow_edge => state_r.OUTPUTSELECT
slow_edge => state_r.OUTPUTSELECT
slow_edge => state_r.OUTPUTSELECT
reset => counter256:counter.reset
reset => state_r.OUTPUTSELECT
reset => state_r.OUTPUTSELECT
reset => state_r.OUTPUTSELECT
reset => state_r.OUTPUTSELECT
light_type[0] => counter256:counter.init_val[0]
light_type[0] => Equal1.IN1
light_type[0] => Equal2.IN1
light_type[1] => counter256:counter.init_val[1]
light_type[1] => Equal1.IN0
light_type[1] => Equal2.IN0


|lab8|snakes_and_apples:snake|grid_light:center_grid_row[5].center_grid_col[6].light|counter256:counter
count[0] <= count[0]~reg0.DB_MAX_OUTPUT_PORT_TYPE
count[1] <= count[1]~reg0.DB_MAX_OUTPUT_PORT_TYPE
count[2] <= count[2]~reg0.DB_MAX_OUTPUT_PORT_TYPE
count[3] <= count[3]~reg0.DB_MAX_OUTPUT_PORT_TYPE
count[4] <= count[4]~reg0.DB_MAX_OUTPUT_PORT_TYPE
count[5] <= count[5]~reg0.DB_MAX_OUTPUT_PORT_TYPE
count[6] <= count[6]~reg0.DB_MAX_OUTPUT_PORT_TYPE
count[7] <= count[7]~reg0.DB_MAX_OUTPUT_PORT_TYPE
start_val[0] => Add0.IN16
start_val[0] => count.DATAB
start_val[1] => Add0.IN15
start_val[1] => count.DATAB
start_val[2] => Add0.IN14
start_val[2] => count.DATAB
start_val[3] => Add0.IN13
start_val[3] => count.DATAB
start_val[4] => Add0.IN12
start_val[4] => count.DATAB
start_val[5] => Add0.IN11
start_val[5] => count.DATAB
start_val[6] => Add0.IN10
start_val[6] => count.DATAB
start_val[7] => Add0.IN9
start_val[7] => count.DATAB
inc => count.OUTPUTSELECT
inc => count.OUTPUTSELECT
inc => count.OUTPUTSELECT
inc => count.OUTPUTSELECT
inc => count.OUTPUTSELECT
inc => count.OUTPUTSELECT
inc => count.OUTPUTSELECT
inc => count.OUTPUTSELECT
inc => always0.IN0
enable => always0.IN1
enable => count.OUTPUTSELECT
enable => count.OUTPUTSELECT
enable => count.OUTPUTSELECT
enable => count.OUTPUTSELECT
enable => count.OUTPUTSELECT
enable => count.OUTPUTSELECT
enable => count.OUTPUTSELECT
enable => count.OUTPUTSELECT
clk => count[0]~reg0.CLK
clk => count[1]~reg0.CLK
clk => count[2]~reg0.CLK
clk => count[3]~reg0.CLK
clk => count[4]~reg0.CLK
clk => count[5]~reg0.CLK
clk => count[6]~reg0.CLK
clk => count[7]~reg0.CLK
slow_edge => count.OUTPUTSELECT
slow_edge => count.OUTPUTSELECT
slow_edge => count.OUTPUTSELECT
slow_edge => count.OUTPUTSELECT
slow_edge => count.OUTPUTSELECT
slow_edge => count.OUTPUTSELECT
slow_edge => count.OUTPUTSELECT
slow_edge => count.OUTPUTSELECT
reset => count.OUTPUTSELECT
reset => count.OUTPUTSELECT
reset => count.OUTPUTSELECT
reset => count.OUTPUTSELECT
reset => count.OUTPUTSELECT
reset => count.OUTPUTSELECT
reset => count.OUTPUTSELECT
reset => count.OUTPUTSELECT
init_val[0] => count.DATAB
init_val[1] => count.DATAB


|lab8|snakes_and_apples:snake|grid_light:center_grid_row[5].center_grid_col[7].light
green_light_on <= green_light_on.DB_MAX_OUTPUT_PORT_TYPE
head <= head.DB_MAX_OUTPUT_PORT_TYPE
game_over_out <= state_n.DB_MAX_OUTPUT_PORT_TYPE
eating => counter256:counter.inc
eating => always0.IN1
game_over_in => state_n.e_off.OUTPUTSELECT
game_over_in => state_n.e_countdown.OUTPUTSELECT
game_over_in => state_n.e_head.OUTPUTSELECT
game_over_in => state_n.OUTPUTSELECT
left => state_n.OUTPUTSELECT
left => state_n.OUTPUTSELECT
left => state_n.OUTPUTSELECT
left => state_n.OUTPUTSELECT
up => state_n.OUTPUTSELECT
up => state_n.OUTPUTSELECT
up => state_n.OUTPUTSELECT
up => state_n.OUTPUTSELECT
right => state_n.OUTPUTSELECT
right => state_n.OUTPUTSELECT
right => state_n.OUTPUTSELECT
right => state_n.OUTPUTSELECT
down => state_n.OUTPUTSELECT
down => state_n.OUTPUTSELECT
down => state_n.OUTPUTSELECT
down => state_n.OUTPUTSELECT
length[0] => counter256:counter.start_val[0]
length[1] => counter256:counter.start_val[1]
length[2] => counter256:counter.start_val[2]
length[3] => counter256:counter.start_val[3]
length[4] => counter256:counter.start_val[4]
length[5] => counter256:counter.start_val[5]
length[6] => counter256:counter.start_val[6]
length[7] => counter256:counter.start_val[7]
dir[0] => Mux0.IN5
dir[0] => Mux1.IN5
dir[0] => Mux2.IN5
dir[0] => Mux3.IN5
dir[1] => Mux0.IN4
dir[1] => Mux1.IN4
dir[1] => Mux2.IN4
dir[1] => Mux3.IN4
clk => counter256:counter.clk
clk => state_r~1.DATAIN
slow_edge => counter256:counter.slow_edge
slow_edge => state_r.OUTPUTSELECT
slow_edge => state_r.OUTPUTSELECT
slow_edge => state_r.OUTPUTSELECT
slow_edge => state_r.OUTPUTSELECT
reset => counter256:counter.reset
reset => state_r.OUTPUTSELECT
reset => state_r.OUTPUTSELECT
reset => state_r.OUTPUTSELECT
reset => state_r.OUTPUTSELECT
light_type[0] => counter256:counter.init_val[0]
light_type[0] => Equal1.IN1
light_type[0] => Equal2.IN1
light_type[1] => counter256:counter.init_val[1]
light_type[1] => Equal1.IN0
light_type[1] => Equal2.IN0


|lab8|snakes_and_apples:snake|grid_light:center_grid_row[5].center_grid_col[7].light|counter256:counter
count[0] <= count[0]~reg0.DB_MAX_OUTPUT_PORT_TYPE
count[1] <= count[1]~reg0.DB_MAX_OUTPUT_PORT_TYPE
count[2] <= count[2]~reg0.DB_MAX_OUTPUT_PORT_TYPE
count[3] <= count[3]~reg0.DB_MAX_OUTPUT_PORT_TYPE
count[4] <= count[4]~reg0.DB_MAX_OUTPUT_PORT_TYPE
count[5] <= count[5]~reg0.DB_MAX_OUTPUT_PORT_TYPE
count[6] <= count[6]~reg0.DB_MAX_OUTPUT_PORT_TYPE
count[7] <= count[7]~reg0.DB_MAX_OUTPUT_PORT_TYPE
start_val[0] => Add0.IN16
start_val[0] => count.DATAB
start_val[1] => Add0.IN15
start_val[1] => count.DATAB
start_val[2] => Add0.IN14
start_val[2] => count.DATAB
start_val[3] => Add0.IN13
start_val[3] => count.DATAB
start_val[4] => Add0.IN12
start_val[4] => count.DATAB
start_val[5] => Add0.IN11
start_val[5] => count.DATAB
start_val[6] => Add0.IN10
start_val[6] => count.DATAB
start_val[7] => Add0.IN9
start_val[7] => count.DATAB
inc => count.OUTPUTSELECT
inc => count.OUTPUTSELECT
inc => count.OUTPUTSELECT
inc => count.OUTPUTSELECT
inc => count.OUTPUTSELECT
inc => count.OUTPUTSELECT
inc => count.OUTPUTSELECT
inc => count.OUTPUTSELECT
inc => always0.IN0
enable => always0.IN1
enable => count.OUTPUTSELECT
enable => count.OUTPUTSELECT
enable => count.OUTPUTSELECT
enable => count.OUTPUTSELECT
enable => count.OUTPUTSELECT
enable => count.OUTPUTSELECT
enable => count.OUTPUTSELECT
enable => count.OUTPUTSELECT
clk => count[0]~reg0.CLK
clk => count[1]~reg0.CLK
clk => count[2]~reg0.CLK
clk => count[3]~reg0.CLK
clk => count[4]~reg0.CLK
clk => count[5]~reg0.CLK
clk => count[6]~reg0.CLK
clk => count[7]~reg0.CLK
slow_edge => count.OUTPUTSELECT
slow_edge => count.OUTPUTSELECT
slow_edge => count.OUTPUTSELECT
slow_edge => count.OUTPUTSELECT
slow_edge => count.OUTPUTSELECT
slow_edge => count.OUTPUTSELECT
slow_edge => count.OUTPUTSELECT
slow_edge => count.OUTPUTSELECT
reset => count.OUTPUTSELECT
reset => count.OUTPUTSELECT
reset => count.OUTPUTSELECT
reset => count.OUTPUTSELECT
reset => count.OUTPUTSELECT
reset => count.OUTPUTSELECT
reset => count.OUTPUTSELECT
reset => count.OUTPUTSELECT
init_val[0] => count.DATAB
init_val[1] => count.DATAB


|lab8|snakes_and_apples:snake|grid_light:center_grid_row[5].center_grid_col[8].light
green_light_on <= green_light_on.DB_MAX_OUTPUT_PORT_TYPE
head <= head.DB_MAX_OUTPUT_PORT_TYPE
game_over_out <= state_n.DB_MAX_OUTPUT_PORT_TYPE
eating => counter256:counter.inc
eating => always0.IN1
game_over_in => state_n.e_off.OUTPUTSELECT
game_over_in => state_n.e_countdown.OUTPUTSELECT
game_over_in => state_n.e_head.OUTPUTSELECT
game_over_in => state_n.OUTPUTSELECT
left => state_n.OUTPUTSELECT
left => state_n.OUTPUTSELECT
left => state_n.OUTPUTSELECT
left => state_n.OUTPUTSELECT
up => state_n.OUTPUTSELECT
up => state_n.OUTPUTSELECT
up => state_n.OUTPUTSELECT
up => state_n.OUTPUTSELECT
right => state_n.OUTPUTSELECT
right => state_n.OUTPUTSELECT
right => state_n.OUTPUTSELECT
right => state_n.OUTPUTSELECT
down => state_n.OUTPUTSELECT
down => state_n.OUTPUTSELECT
down => state_n.OUTPUTSELECT
down => state_n.OUTPUTSELECT
length[0] => counter256:counter.start_val[0]
length[1] => counter256:counter.start_val[1]
length[2] => counter256:counter.start_val[2]
length[3] => counter256:counter.start_val[3]
length[4] => counter256:counter.start_val[4]
length[5] => counter256:counter.start_val[5]
length[6] => counter256:counter.start_val[6]
length[7] => counter256:counter.start_val[7]
dir[0] => Mux0.IN5
dir[0] => Mux1.IN5
dir[0] => Mux2.IN5
dir[0] => Mux3.IN5
dir[1] => Mux0.IN4
dir[1] => Mux1.IN4
dir[1] => Mux2.IN4
dir[1] => Mux3.IN4
clk => counter256:counter.clk
clk => state_r~1.DATAIN
slow_edge => counter256:counter.slow_edge
slow_edge => state_r.OUTPUTSELECT
slow_edge => state_r.OUTPUTSELECT
slow_edge => state_r.OUTPUTSELECT
slow_edge => state_r.OUTPUTSELECT
reset => counter256:counter.reset
reset => state_r.OUTPUTSELECT
reset => state_r.OUTPUTSELECT
reset => state_r.OUTPUTSELECT
reset => state_r.OUTPUTSELECT
light_type[0] => counter256:counter.init_val[0]
light_type[0] => Equal1.IN1
light_type[0] => Equal2.IN1
light_type[1] => counter256:counter.init_val[1]
light_type[1] => Equal1.IN0
light_type[1] => Equal2.IN0


|lab8|snakes_and_apples:snake|grid_light:center_grid_row[5].center_grid_col[8].light|counter256:counter
count[0] <= count[0]~reg0.DB_MAX_OUTPUT_PORT_TYPE
count[1] <= count[1]~reg0.DB_MAX_OUTPUT_PORT_TYPE
count[2] <= count[2]~reg0.DB_MAX_OUTPUT_PORT_TYPE
count[3] <= count[3]~reg0.DB_MAX_OUTPUT_PORT_TYPE
count[4] <= count[4]~reg0.DB_MAX_OUTPUT_PORT_TYPE
count[5] <= count[5]~reg0.DB_MAX_OUTPUT_PORT_TYPE
count[6] <= count[6]~reg0.DB_MAX_OUTPUT_PORT_TYPE
count[7] <= count[7]~reg0.DB_MAX_OUTPUT_PORT_TYPE
start_val[0] => Add0.IN16
start_val[0] => count.DATAB
start_val[1] => Add0.IN15
start_val[1] => count.DATAB
start_val[2] => Add0.IN14
start_val[2] => count.DATAB
start_val[3] => Add0.IN13
start_val[3] => count.DATAB
start_val[4] => Add0.IN12
start_val[4] => count.DATAB
start_val[5] => Add0.IN11
start_val[5] => count.DATAB
start_val[6] => Add0.IN10
start_val[6] => count.DATAB
start_val[7] => Add0.IN9
start_val[7] => count.DATAB
inc => count.OUTPUTSELECT
inc => count.OUTPUTSELECT
inc => count.OUTPUTSELECT
inc => count.OUTPUTSELECT
inc => count.OUTPUTSELECT
inc => count.OUTPUTSELECT
inc => count.OUTPUTSELECT
inc => count.OUTPUTSELECT
inc => always0.IN0
enable => always0.IN1
enable => count.OUTPUTSELECT
enable => count.OUTPUTSELECT
enable => count.OUTPUTSELECT
enable => count.OUTPUTSELECT
enable => count.OUTPUTSELECT
enable => count.OUTPUTSELECT
enable => count.OUTPUTSELECT
enable => count.OUTPUTSELECT
clk => count[0]~reg0.CLK
clk => count[1]~reg0.CLK
clk => count[2]~reg0.CLK
clk => count[3]~reg0.CLK
clk => count[4]~reg0.CLK
clk => count[5]~reg0.CLK
clk => count[6]~reg0.CLK
clk => count[7]~reg0.CLK
slow_edge => count.OUTPUTSELECT
slow_edge => count.OUTPUTSELECT
slow_edge => count.OUTPUTSELECT
slow_edge => count.OUTPUTSELECT
slow_edge => count.OUTPUTSELECT
slow_edge => count.OUTPUTSELECT
slow_edge => count.OUTPUTSELECT
slow_edge => count.OUTPUTSELECT
reset => count.OUTPUTSELECT
reset => count.OUTPUTSELECT
reset => count.OUTPUTSELECT
reset => count.OUTPUTSELECT
reset => count.OUTPUTSELECT
reset => count.OUTPUTSELECT
reset => count.OUTPUTSELECT
reset => count.OUTPUTSELECT
init_val[0] => count.DATAB
init_val[1] => count.DATAB


|lab8|snakes_and_apples:snake|grid_light:center_grid_row[5].center_grid_col[9].light
green_light_on <= green_light_on.DB_MAX_OUTPUT_PORT_TYPE
head <= head.DB_MAX_OUTPUT_PORT_TYPE
game_over_out <= state_n.DB_MAX_OUTPUT_PORT_TYPE
eating => counter256:counter.inc
eating => always0.IN1
game_over_in => state_n.e_off.OUTPUTSELECT
game_over_in => state_n.e_countdown.OUTPUTSELECT
game_over_in => state_n.e_head.OUTPUTSELECT
game_over_in => state_n.OUTPUTSELECT
left => state_n.OUTPUTSELECT
left => state_n.OUTPUTSELECT
left => state_n.OUTPUTSELECT
left => state_n.OUTPUTSELECT
up => state_n.OUTPUTSELECT
up => state_n.OUTPUTSELECT
up => state_n.OUTPUTSELECT
up => state_n.OUTPUTSELECT
right => state_n.OUTPUTSELECT
right => state_n.OUTPUTSELECT
right => state_n.OUTPUTSELECT
right => state_n.OUTPUTSELECT
down => state_n.OUTPUTSELECT
down => state_n.OUTPUTSELECT
down => state_n.OUTPUTSELECT
down => state_n.OUTPUTSELECT
length[0] => counter256:counter.start_val[0]
length[1] => counter256:counter.start_val[1]
length[2] => counter256:counter.start_val[2]
length[3] => counter256:counter.start_val[3]
length[4] => counter256:counter.start_val[4]
length[5] => counter256:counter.start_val[5]
length[6] => counter256:counter.start_val[6]
length[7] => counter256:counter.start_val[7]
dir[0] => Mux0.IN5
dir[0] => Mux1.IN5
dir[0] => Mux2.IN5
dir[0] => Mux3.IN5
dir[1] => Mux0.IN4
dir[1] => Mux1.IN4
dir[1] => Mux2.IN4
dir[1] => Mux3.IN4
clk => counter256:counter.clk
clk => state_r~1.DATAIN
slow_edge => counter256:counter.slow_edge
slow_edge => state_r.OUTPUTSELECT
slow_edge => state_r.OUTPUTSELECT
slow_edge => state_r.OUTPUTSELECT
slow_edge => state_r.OUTPUTSELECT
reset => counter256:counter.reset
reset => state_r.OUTPUTSELECT
reset => state_r.OUTPUTSELECT
reset => state_r.OUTPUTSELECT
reset => state_r.OUTPUTSELECT
light_type[0] => counter256:counter.init_val[0]
light_type[0] => Equal1.IN1
light_type[0] => Equal2.IN1
light_type[1] => counter256:counter.init_val[1]
light_type[1] => Equal1.IN0
light_type[1] => Equal2.IN0


|lab8|snakes_and_apples:snake|grid_light:center_grid_row[5].center_grid_col[9].light|counter256:counter
count[0] <= count[0]~reg0.DB_MAX_OUTPUT_PORT_TYPE
count[1] <= count[1]~reg0.DB_MAX_OUTPUT_PORT_TYPE
count[2] <= count[2]~reg0.DB_MAX_OUTPUT_PORT_TYPE
count[3] <= count[3]~reg0.DB_MAX_OUTPUT_PORT_TYPE
count[4] <= count[4]~reg0.DB_MAX_OUTPUT_PORT_TYPE
count[5] <= count[5]~reg0.DB_MAX_OUTPUT_PORT_TYPE
count[6] <= count[6]~reg0.DB_MAX_OUTPUT_PORT_TYPE
count[7] <= count[7]~reg0.DB_MAX_OUTPUT_PORT_TYPE
start_val[0] => Add0.IN16
start_val[0] => count.DATAB
start_val[1] => Add0.IN15
start_val[1] => count.DATAB
start_val[2] => Add0.IN14
start_val[2] => count.DATAB
start_val[3] => Add0.IN13
start_val[3] => count.DATAB
start_val[4] => Add0.IN12
start_val[4] => count.DATAB
start_val[5] => Add0.IN11
start_val[5] => count.DATAB
start_val[6] => Add0.IN10
start_val[6] => count.DATAB
start_val[7] => Add0.IN9
start_val[7] => count.DATAB
inc => count.OUTPUTSELECT
inc => count.OUTPUTSELECT
inc => count.OUTPUTSELECT
inc => count.OUTPUTSELECT
inc => count.OUTPUTSELECT
inc => count.OUTPUTSELECT
inc => count.OUTPUTSELECT
inc => count.OUTPUTSELECT
inc => always0.IN0
enable => always0.IN1
enable => count.OUTPUTSELECT
enable => count.OUTPUTSELECT
enable => count.OUTPUTSELECT
enable => count.OUTPUTSELECT
enable => count.OUTPUTSELECT
enable => count.OUTPUTSELECT
enable => count.OUTPUTSELECT
enable => count.OUTPUTSELECT
clk => count[0]~reg0.CLK
clk => count[1]~reg0.CLK
clk => count[2]~reg0.CLK
clk => count[3]~reg0.CLK
clk => count[4]~reg0.CLK
clk => count[5]~reg0.CLK
clk => count[6]~reg0.CLK
clk => count[7]~reg0.CLK
slow_edge => count.OUTPUTSELECT
slow_edge => count.OUTPUTSELECT
slow_edge => count.OUTPUTSELECT
slow_edge => count.OUTPUTSELECT
slow_edge => count.OUTPUTSELECT
slow_edge => count.OUTPUTSELECT
slow_edge => count.OUTPUTSELECT
slow_edge => count.OUTPUTSELECT
reset => count.OUTPUTSELECT
reset => count.OUTPUTSELECT
reset => count.OUTPUTSELECT
reset => count.OUTPUTSELECT
reset => count.OUTPUTSELECT
reset => count.OUTPUTSELECT
reset => count.OUTPUTSELECT
reset => count.OUTPUTSELECT
init_val[0] => count.DATAB
init_val[1] => count.DATAB


|lab8|snakes_and_apples:snake|grid_light:center_grid_row[5].center_grid_col[10].light
green_light_on <= green_light_on.DB_MAX_OUTPUT_PORT_TYPE
head <= head.DB_MAX_OUTPUT_PORT_TYPE
game_over_out <= state_n.DB_MAX_OUTPUT_PORT_TYPE
eating => counter256:counter.inc
eating => always0.IN1
game_over_in => state_n.e_off.OUTPUTSELECT
game_over_in => state_n.e_countdown.OUTPUTSELECT
game_over_in => state_n.e_head.OUTPUTSELECT
game_over_in => state_n.OUTPUTSELECT
left => state_n.OUTPUTSELECT
left => state_n.OUTPUTSELECT
left => state_n.OUTPUTSELECT
left => state_n.OUTPUTSELECT
up => state_n.OUTPUTSELECT
up => state_n.OUTPUTSELECT
up => state_n.OUTPUTSELECT
up => state_n.OUTPUTSELECT
right => state_n.OUTPUTSELECT
right => state_n.OUTPUTSELECT
right => state_n.OUTPUTSELECT
right => state_n.OUTPUTSELECT
down => state_n.OUTPUTSELECT
down => state_n.OUTPUTSELECT
down => state_n.OUTPUTSELECT
down => state_n.OUTPUTSELECT
length[0] => counter256:counter.start_val[0]
length[1] => counter256:counter.start_val[1]
length[2] => counter256:counter.start_val[2]
length[3] => counter256:counter.start_val[3]
length[4] => counter256:counter.start_val[4]
length[5] => counter256:counter.start_val[5]
length[6] => counter256:counter.start_val[6]
length[7] => counter256:counter.start_val[7]
dir[0] => Mux0.IN5
dir[0] => Mux1.IN5
dir[0] => Mux2.IN5
dir[0] => Mux3.IN5
dir[1] => Mux0.IN4
dir[1] => Mux1.IN4
dir[1] => Mux2.IN4
dir[1] => Mux3.IN4
clk => counter256:counter.clk
clk => state_r~1.DATAIN
slow_edge => counter256:counter.slow_edge
slow_edge => state_r.OUTPUTSELECT
slow_edge => state_r.OUTPUTSELECT
slow_edge => state_r.OUTPUTSELECT
slow_edge => state_r.OUTPUTSELECT
reset => counter256:counter.reset
reset => state_r.OUTPUTSELECT
reset => state_r.OUTPUTSELECT
reset => state_r.OUTPUTSELECT
reset => state_r.OUTPUTSELECT
light_type[0] => counter256:counter.init_val[0]
light_type[0] => Equal1.IN1
light_type[0] => Equal2.IN1
light_type[1] => counter256:counter.init_val[1]
light_type[1] => Equal1.IN0
light_type[1] => Equal2.IN0


|lab8|snakes_and_apples:snake|grid_light:center_grid_row[5].center_grid_col[10].light|counter256:counter
count[0] <= count[0]~reg0.DB_MAX_OUTPUT_PORT_TYPE
count[1] <= count[1]~reg0.DB_MAX_OUTPUT_PORT_TYPE
count[2] <= count[2]~reg0.DB_MAX_OUTPUT_PORT_TYPE
count[3] <= count[3]~reg0.DB_MAX_OUTPUT_PORT_TYPE
count[4] <= count[4]~reg0.DB_MAX_OUTPUT_PORT_TYPE
count[5] <= count[5]~reg0.DB_MAX_OUTPUT_PORT_TYPE
count[6] <= count[6]~reg0.DB_MAX_OUTPUT_PORT_TYPE
count[7] <= count[7]~reg0.DB_MAX_OUTPUT_PORT_TYPE
start_val[0] => Add0.IN16
start_val[0] => count.DATAB
start_val[1] => Add0.IN15
start_val[1] => count.DATAB
start_val[2] => Add0.IN14
start_val[2] => count.DATAB
start_val[3] => Add0.IN13
start_val[3] => count.DATAB
start_val[4] => Add0.IN12
start_val[4] => count.DATAB
start_val[5] => Add0.IN11
start_val[5] => count.DATAB
start_val[6] => Add0.IN10
start_val[6] => count.DATAB
start_val[7] => Add0.IN9
start_val[7] => count.DATAB
inc => count.OUTPUTSELECT
inc => count.OUTPUTSELECT
inc => count.OUTPUTSELECT
inc => count.OUTPUTSELECT
inc => count.OUTPUTSELECT
inc => count.OUTPUTSELECT
inc => count.OUTPUTSELECT
inc => count.OUTPUTSELECT
inc => always0.IN0
enable => always0.IN1
enable => count.OUTPUTSELECT
enable => count.OUTPUTSELECT
enable => count.OUTPUTSELECT
enable => count.OUTPUTSELECT
enable => count.OUTPUTSELECT
enable => count.OUTPUTSELECT
enable => count.OUTPUTSELECT
enable => count.OUTPUTSELECT
clk => count[0]~reg0.CLK
clk => count[1]~reg0.CLK
clk => count[2]~reg0.CLK
clk => count[3]~reg0.CLK
clk => count[4]~reg0.CLK
clk => count[5]~reg0.CLK
clk => count[6]~reg0.CLK
clk => count[7]~reg0.CLK
slow_edge => count.OUTPUTSELECT
slow_edge => count.OUTPUTSELECT
slow_edge => count.OUTPUTSELECT
slow_edge => count.OUTPUTSELECT
slow_edge => count.OUTPUTSELECT
slow_edge => count.OUTPUTSELECT
slow_edge => count.OUTPUTSELECT
slow_edge => count.OUTPUTSELECT
reset => count.OUTPUTSELECT
reset => count.OUTPUTSELECT
reset => count.OUTPUTSELECT
reset => count.OUTPUTSELECT
reset => count.OUTPUTSELECT
reset => count.OUTPUTSELECT
reset => count.OUTPUTSELECT
reset => count.OUTPUTSELECT
init_val[0] => count.DATAB
init_val[1] => count.DATAB


|lab8|snakes_and_apples:snake|grid_light:center_grid_row[5].center_grid_col[11].light
green_light_on <= green_light_on.DB_MAX_OUTPUT_PORT_TYPE
head <= head.DB_MAX_OUTPUT_PORT_TYPE
game_over_out <= state_n.DB_MAX_OUTPUT_PORT_TYPE
eating => counter256:counter.inc
eating => always0.IN1
game_over_in => state_n.e_off.OUTPUTSELECT
game_over_in => state_n.e_countdown.OUTPUTSELECT
game_over_in => state_n.e_head.OUTPUTSELECT
game_over_in => state_n.OUTPUTSELECT
left => state_n.OUTPUTSELECT
left => state_n.OUTPUTSELECT
left => state_n.OUTPUTSELECT
left => state_n.OUTPUTSELECT
up => state_n.OUTPUTSELECT
up => state_n.OUTPUTSELECT
up => state_n.OUTPUTSELECT
up => state_n.OUTPUTSELECT
right => state_n.OUTPUTSELECT
right => state_n.OUTPUTSELECT
right => state_n.OUTPUTSELECT
right => state_n.OUTPUTSELECT
down => state_n.OUTPUTSELECT
down => state_n.OUTPUTSELECT
down => state_n.OUTPUTSELECT
down => state_n.OUTPUTSELECT
length[0] => counter256:counter.start_val[0]
length[1] => counter256:counter.start_val[1]
length[2] => counter256:counter.start_val[2]
length[3] => counter256:counter.start_val[3]
length[4] => counter256:counter.start_val[4]
length[5] => counter256:counter.start_val[5]
length[6] => counter256:counter.start_val[6]
length[7] => counter256:counter.start_val[7]
dir[0] => Mux0.IN5
dir[0] => Mux1.IN5
dir[0] => Mux2.IN5
dir[0] => Mux3.IN5
dir[1] => Mux0.IN4
dir[1] => Mux1.IN4
dir[1] => Mux2.IN4
dir[1] => Mux3.IN4
clk => counter256:counter.clk
clk => state_r~1.DATAIN
slow_edge => counter256:counter.slow_edge
slow_edge => state_r.OUTPUTSELECT
slow_edge => state_r.OUTPUTSELECT
slow_edge => state_r.OUTPUTSELECT
slow_edge => state_r.OUTPUTSELECT
reset => counter256:counter.reset
reset => state_r.OUTPUTSELECT
reset => state_r.OUTPUTSELECT
reset => state_r.OUTPUTSELECT
reset => state_r.OUTPUTSELECT
light_type[0] => counter256:counter.init_val[0]
light_type[0] => Equal1.IN1
light_type[0] => Equal2.IN1
light_type[1] => counter256:counter.init_val[1]
light_type[1] => Equal1.IN0
light_type[1] => Equal2.IN0


|lab8|snakes_and_apples:snake|grid_light:center_grid_row[5].center_grid_col[11].light|counter256:counter
count[0] <= count[0]~reg0.DB_MAX_OUTPUT_PORT_TYPE
count[1] <= count[1]~reg0.DB_MAX_OUTPUT_PORT_TYPE
count[2] <= count[2]~reg0.DB_MAX_OUTPUT_PORT_TYPE
count[3] <= count[3]~reg0.DB_MAX_OUTPUT_PORT_TYPE
count[4] <= count[4]~reg0.DB_MAX_OUTPUT_PORT_TYPE
count[5] <= count[5]~reg0.DB_MAX_OUTPUT_PORT_TYPE
count[6] <= count[6]~reg0.DB_MAX_OUTPUT_PORT_TYPE
count[7] <= count[7]~reg0.DB_MAX_OUTPUT_PORT_TYPE
start_val[0] => Add0.IN16
start_val[0] => count.DATAB
start_val[1] => Add0.IN15
start_val[1] => count.DATAB
start_val[2] => Add0.IN14
start_val[2] => count.DATAB
start_val[3] => Add0.IN13
start_val[3] => count.DATAB
start_val[4] => Add0.IN12
start_val[4] => count.DATAB
start_val[5] => Add0.IN11
start_val[5] => count.DATAB
start_val[6] => Add0.IN10
start_val[6] => count.DATAB
start_val[7] => Add0.IN9
start_val[7] => count.DATAB
inc => count.OUTPUTSELECT
inc => count.OUTPUTSELECT
inc => count.OUTPUTSELECT
inc => count.OUTPUTSELECT
inc => count.OUTPUTSELECT
inc => count.OUTPUTSELECT
inc => count.OUTPUTSELECT
inc => count.OUTPUTSELECT
inc => always0.IN0
enable => always0.IN1
enable => count.OUTPUTSELECT
enable => count.OUTPUTSELECT
enable => count.OUTPUTSELECT
enable => count.OUTPUTSELECT
enable => count.OUTPUTSELECT
enable => count.OUTPUTSELECT
enable => count.OUTPUTSELECT
enable => count.OUTPUTSELECT
clk => count[0]~reg0.CLK
clk => count[1]~reg0.CLK
clk => count[2]~reg0.CLK
clk => count[3]~reg0.CLK
clk => count[4]~reg0.CLK
clk => count[5]~reg0.CLK
clk => count[6]~reg0.CLK
clk => count[7]~reg0.CLK
slow_edge => count.OUTPUTSELECT
slow_edge => count.OUTPUTSELECT
slow_edge => count.OUTPUTSELECT
slow_edge => count.OUTPUTSELECT
slow_edge => count.OUTPUTSELECT
slow_edge => count.OUTPUTSELECT
slow_edge => count.OUTPUTSELECT
slow_edge => count.OUTPUTSELECT
reset => count.OUTPUTSELECT
reset => count.OUTPUTSELECT
reset => count.OUTPUTSELECT
reset => count.OUTPUTSELECT
reset => count.OUTPUTSELECT
reset => count.OUTPUTSELECT
reset => count.OUTPUTSELECT
reset => count.OUTPUTSELECT
init_val[0] => count.DATAB
init_val[1] => count.DATAB


|lab8|snakes_and_apples:snake|grid_light:center_grid_row[5].center_grid_col[12].light
green_light_on <= green_light_on.DB_MAX_OUTPUT_PORT_TYPE
head <= head.DB_MAX_OUTPUT_PORT_TYPE
game_over_out <= state_n.DB_MAX_OUTPUT_PORT_TYPE
eating => counter256:counter.inc
eating => always0.IN1
game_over_in => state_n.e_off.OUTPUTSELECT
game_over_in => state_n.e_countdown.OUTPUTSELECT
game_over_in => state_n.e_head.OUTPUTSELECT
game_over_in => state_n.OUTPUTSELECT
left => state_n.OUTPUTSELECT
left => state_n.OUTPUTSELECT
left => state_n.OUTPUTSELECT
left => state_n.OUTPUTSELECT
up => state_n.OUTPUTSELECT
up => state_n.OUTPUTSELECT
up => state_n.OUTPUTSELECT
up => state_n.OUTPUTSELECT
right => state_n.OUTPUTSELECT
right => state_n.OUTPUTSELECT
right => state_n.OUTPUTSELECT
right => state_n.OUTPUTSELECT
down => state_n.OUTPUTSELECT
down => state_n.OUTPUTSELECT
down => state_n.OUTPUTSELECT
down => state_n.OUTPUTSELECT
length[0] => counter256:counter.start_val[0]
length[1] => counter256:counter.start_val[1]
length[2] => counter256:counter.start_val[2]
length[3] => counter256:counter.start_val[3]
length[4] => counter256:counter.start_val[4]
length[5] => counter256:counter.start_val[5]
length[6] => counter256:counter.start_val[6]
length[7] => counter256:counter.start_val[7]
dir[0] => Mux0.IN5
dir[0] => Mux1.IN5
dir[0] => Mux2.IN5
dir[0] => Mux3.IN5
dir[1] => Mux0.IN4
dir[1] => Mux1.IN4
dir[1] => Mux2.IN4
dir[1] => Mux3.IN4
clk => counter256:counter.clk
clk => state_r~1.DATAIN
slow_edge => counter256:counter.slow_edge
slow_edge => state_r.OUTPUTSELECT
slow_edge => state_r.OUTPUTSELECT
slow_edge => state_r.OUTPUTSELECT
slow_edge => state_r.OUTPUTSELECT
reset => counter256:counter.reset
reset => state_r.OUTPUTSELECT
reset => state_r.OUTPUTSELECT
reset => state_r.OUTPUTSELECT
reset => state_r.OUTPUTSELECT
light_type[0] => counter256:counter.init_val[0]
light_type[0] => Equal1.IN1
light_type[0] => Equal2.IN1
light_type[1] => counter256:counter.init_val[1]
light_type[1] => Equal1.IN0
light_type[1] => Equal2.IN0


|lab8|snakes_and_apples:snake|grid_light:center_grid_row[5].center_grid_col[12].light|counter256:counter
count[0] <= count[0]~reg0.DB_MAX_OUTPUT_PORT_TYPE
count[1] <= count[1]~reg0.DB_MAX_OUTPUT_PORT_TYPE
count[2] <= count[2]~reg0.DB_MAX_OUTPUT_PORT_TYPE
count[3] <= count[3]~reg0.DB_MAX_OUTPUT_PORT_TYPE
count[4] <= count[4]~reg0.DB_MAX_OUTPUT_PORT_TYPE
count[5] <= count[5]~reg0.DB_MAX_OUTPUT_PORT_TYPE
count[6] <= count[6]~reg0.DB_MAX_OUTPUT_PORT_TYPE
count[7] <= count[7]~reg0.DB_MAX_OUTPUT_PORT_TYPE
start_val[0] => Add0.IN16
start_val[0] => count.DATAB
start_val[1] => Add0.IN15
start_val[1] => count.DATAB
start_val[2] => Add0.IN14
start_val[2] => count.DATAB
start_val[3] => Add0.IN13
start_val[3] => count.DATAB
start_val[4] => Add0.IN12
start_val[4] => count.DATAB
start_val[5] => Add0.IN11
start_val[5] => count.DATAB
start_val[6] => Add0.IN10
start_val[6] => count.DATAB
start_val[7] => Add0.IN9
start_val[7] => count.DATAB
inc => count.OUTPUTSELECT
inc => count.OUTPUTSELECT
inc => count.OUTPUTSELECT
inc => count.OUTPUTSELECT
inc => count.OUTPUTSELECT
inc => count.OUTPUTSELECT
inc => count.OUTPUTSELECT
inc => count.OUTPUTSELECT
inc => always0.IN0
enable => always0.IN1
enable => count.OUTPUTSELECT
enable => count.OUTPUTSELECT
enable => count.OUTPUTSELECT
enable => count.OUTPUTSELECT
enable => count.OUTPUTSELECT
enable => count.OUTPUTSELECT
enable => count.OUTPUTSELECT
enable => count.OUTPUTSELECT
clk => count[0]~reg0.CLK
clk => count[1]~reg0.CLK
clk => count[2]~reg0.CLK
clk => count[3]~reg0.CLK
clk => count[4]~reg0.CLK
clk => count[5]~reg0.CLK
clk => count[6]~reg0.CLK
clk => count[7]~reg0.CLK
slow_edge => count.OUTPUTSELECT
slow_edge => count.OUTPUTSELECT
slow_edge => count.OUTPUTSELECT
slow_edge => count.OUTPUTSELECT
slow_edge => count.OUTPUTSELECT
slow_edge => count.OUTPUTSELECT
slow_edge => count.OUTPUTSELECT
slow_edge => count.OUTPUTSELECT
reset => count.OUTPUTSELECT
reset => count.OUTPUTSELECT
reset => count.OUTPUTSELECT
reset => count.OUTPUTSELECT
reset => count.OUTPUTSELECT
reset => count.OUTPUTSELECT
reset => count.OUTPUTSELECT
reset => count.OUTPUTSELECT
init_val[0] => count.DATAB
init_val[1] => count.DATAB


|lab8|snakes_and_apples:snake|grid_light:center_grid_row[5].center_grid_col[13].light
green_light_on <= green_light_on.DB_MAX_OUTPUT_PORT_TYPE
head <= head.DB_MAX_OUTPUT_PORT_TYPE
game_over_out <= state_n.DB_MAX_OUTPUT_PORT_TYPE
eating => counter256:counter.inc
eating => always0.IN1
game_over_in => state_n.e_off.OUTPUTSELECT
game_over_in => state_n.e_countdown.OUTPUTSELECT
game_over_in => state_n.e_head.OUTPUTSELECT
game_over_in => state_n.OUTPUTSELECT
left => state_n.OUTPUTSELECT
left => state_n.OUTPUTSELECT
left => state_n.OUTPUTSELECT
left => state_n.OUTPUTSELECT
up => state_n.OUTPUTSELECT
up => state_n.OUTPUTSELECT
up => state_n.OUTPUTSELECT
up => state_n.OUTPUTSELECT
right => state_n.OUTPUTSELECT
right => state_n.OUTPUTSELECT
right => state_n.OUTPUTSELECT
right => state_n.OUTPUTSELECT
down => state_n.OUTPUTSELECT
down => state_n.OUTPUTSELECT
down => state_n.OUTPUTSELECT
down => state_n.OUTPUTSELECT
length[0] => counter256:counter.start_val[0]
length[1] => counter256:counter.start_val[1]
length[2] => counter256:counter.start_val[2]
length[3] => counter256:counter.start_val[3]
length[4] => counter256:counter.start_val[4]
length[5] => counter256:counter.start_val[5]
length[6] => counter256:counter.start_val[6]
length[7] => counter256:counter.start_val[7]
dir[0] => Mux0.IN5
dir[0] => Mux1.IN5
dir[0] => Mux2.IN5
dir[0] => Mux3.IN5
dir[1] => Mux0.IN4
dir[1] => Mux1.IN4
dir[1] => Mux2.IN4
dir[1] => Mux3.IN4
clk => counter256:counter.clk
clk => state_r~1.DATAIN
slow_edge => counter256:counter.slow_edge
slow_edge => state_r.OUTPUTSELECT
slow_edge => state_r.OUTPUTSELECT
slow_edge => state_r.OUTPUTSELECT
slow_edge => state_r.OUTPUTSELECT
reset => counter256:counter.reset
reset => state_r.OUTPUTSELECT
reset => state_r.OUTPUTSELECT
reset => state_r.OUTPUTSELECT
reset => state_r.OUTPUTSELECT
light_type[0] => counter256:counter.init_val[0]
light_type[0] => Equal1.IN1
light_type[0] => Equal2.IN1
light_type[1] => counter256:counter.init_val[1]
light_type[1] => Equal1.IN0
light_type[1] => Equal2.IN0


|lab8|snakes_and_apples:snake|grid_light:center_grid_row[5].center_grid_col[13].light|counter256:counter
count[0] <= count[0]~reg0.DB_MAX_OUTPUT_PORT_TYPE
count[1] <= count[1]~reg0.DB_MAX_OUTPUT_PORT_TYPE
count[2] <= count[2]~reg0.DB_MAX_OUTPUT_PORT_TYPE
count[3] <= count[3]~reg0.DB_MAX_OUTPUT_PORT_TYPE
count[4] <= count[4]~reg0.DB_MAX_OUTPUT_PORT_TYPE
count[5] <= count[5]~reg0.DB_MAX_OUTPUT_PORT_TYPE
count[6] <= count[6]~reg0.DB_MAX_OUTPUT_PORT_TYPE
count[7] <= count[7]~reg0.DB_MAX_OUTPUT_PORT_TYPE
start_val[0] => Add0.IN16
start_val[0] => count.DATAB
start_val[1] => Add0.IN15
start_val[1] => count.DATAB
start_val[2] => Add0.IN14
start_val[2] => count.DATAB
start_val[3] => Add0.IN13
start_val[3] => count.DATAB
start_val[4] => Add0.IN12
start_val[4] => count.DATAB
start_val[5] => Add0.IN11
start_val[5] => count.DATAB
start_val[6] => Add0.IN10
start_val[6] => count.DATAB
start_val[7] => Add0.IN9
start_val[7] => count.DATAB
inc => count.OUTPUTSELECT
inc => count.OUTPUTSELECT
inc => count.OUTPUTSELECT
inc => count.OUTPUTSELECT
inc => count.OUTPUTSELECT
inc => count.OUTPUTSELECT
inc => count.OUTPUTSELECT
inc => count.OUTPUTSELECT
inc => always0.IN0
enable => always0.IN1
enable => count.OUTPUTSELECT
enable => count.OUTPUTSELECT
enable => count.OUTPUTSELECT
enable => count.OUTPUTSELECT
enable => count.OUTPUTSELECT
enable => count.OUTPUTSELECT
enable => count.OUTPUTSELECT
enable => count.OUTPUTSELECT
clk => count[0]~reg0.CLK
clk => count[1]~reg0.CLK
clk => count[2]~reg0.CLK
clk => count[3]~reg0.CLK
clk => count[4]~reg0.CLK
clk => count[5]~reg0.CLK
clk => count[6]~reg0.CLK
clk => count[7]~reg0.CLK
slow_edge => count.OUTPUTSELECT
slow_edge => count.OUTPUTSELECT
slow_edge => count.OUTPUTSELECT
slow_edge => count.OUTPUTSELECT
slow_edge => count.OUTPUTSELECT
slow_edge => count.OUTPUTSELECT
slow_edge => count.OUTPUTSELECT
slow_edge => count.OUTPUTSELECT
reset => count.OUTPUTSELECT
reset => count.OUTPUTSELECT
reset => count.OUTPUTSELECT
reset => count.OUTPUTSELECT
reset => count.OUTPUTSELECT
reset => count.OUTPUTSELECT
reset => count.OUTPUTSELECT
reset => count.OUTPUTSELECT
init_val[0] => count.DATAB
init_val[1] => count.DATAB


|lab8|snakes_and_apples:snake|grid_light:center_grid_row[5].center_grid_col[14].light
green_light_on <= green_light_on.DB_MAX_OUTPUT_PORT_TYPE
head <= head.DB_MAX_OUTPUT_PORT_TYPE
game_over_out <= state_n.DB_MAX_OUTPUT_PORT_TYPE
eating => counter256:counter.inc
eating => always0.IN1
game_over_in => state_n.e_off.OUTPUTSELECT
game_over_in => state_n.e_countdown.OUTPUTSELECT
game_over_in => state_n.e_head.OUTPUTSELECT
game_over_in => state_n.OUTPUTSELECT
left => state_n.OUTPUTSELECT
left => state_n.OUTPUTSELECT
left => state_n.OUTPUTSELECT
left => state_n.OUTPUTSELECT
up => state_n.OUTPUTSELECT
up => state_n.OUTPUTSELECT
up => state_n.OUTPUTSELECT
up => state_n.OUTPUTSELECT
right => state_n.OUTPUTSELECT
right => state_n.OUTPUTSELECT
right => state_n.OUTPUTSELECT
right => state_n.OUTPUTSELECT
down => state_n.OUTPUTSELECT
down => state_n.OUTPUTSELECT
down => state_n.OUTPUTSELECT
down => state_n.OUTPUTSELECT
length[0] => counter256:counter.start_val[0]
length[1] => counter256:counter.start_val[1]
length[2] => counter256:counter.start_val[2]
length[3] => counter256:counter.start_val[3]
length[4] => counter256:counter.start_val[4]
length[5] => counter256:counter.start_val[5]
length[6] => counter256:counter.start_val[6]
length[7] => counter256:counter.start_val[7]
dir[0] => Mux0.IN5
dir[0] => Mux1.IN5
dir[0] => Mux2.IN5
dir[0] => Mux3.IN5
dir[1] => Mux0.IN4
dir[1] => Mux1.IN4
dir[1] => Mux2.IN4
dir[1] => Mux3.IN4
clk => counter256:counter.clk
clk => state_r~1.DATAIN
slow_edge => counter256:counter.slow_edge
slow_edge => state_r.OUTPUTSELECT
slow_edge => state_r.OUTPUTSELECT
slow_edge => state_r.OUTPUTSELECT
slow_edge => state_r.OUTPUTSELECT
reset => counter256:counter.reset
reset => state_r.OUTPUTSELECT
reset => state_r.OUTPUTSELECT
reset => state_r.OUTPUTSELECT
reset => state_r.OUTPUTSELECT
light_type[0] => counter256:counter.init_val[0]
light_type[0] => Equal1.IN1
light_type[0] => Equal2.IN1
light_type[1] => counter256:counter.init_val[1]
light_type[1] => Equal1.IN0
light_type[1] => Equal2.IN0


|lab8|snakes_and_apples:snake|grid_light:center_grid_row[5].center_grid_col[14].light|counter256:counter
count[0] <= count[0]~reg0.DB_MAX_OUTPUT_PORT_TYPE
count[1] <= count[1]~reg0.DB_MAX_OUTPUT_PORT_TYPE
count[2] <= count[2]~reg0.DB_MAX_OUTPUT_PORT_TYPE
count[3] <= count[3]~reg0.DB_MAX_OUTPUT_PORT_TYPE
count[4] <= count[4]~reg0.DB_MAX_OUTPUT_PORT_TYPE
count[5] <= count[5]~reg0.DB_MAX_OUTPUT_PORT_TYPE
count[6] <= count[6]~reg0.DB_MAX_OUTPUT_PORT_TYPE
count[7] <= count[7]~reg0.DB_MAX_OUTPUT_PORT_TYPE
start_val[0] => Add0.IN16
start_val[0] => count.DATAB
start_val[1] => Add0.IN15
start_val[1] => count.DATAB
start_val[2] => Add0.IN14
start_val[2] => count.DATAB
start_val[3] => Add0.IN13
start_val[3] => count.DATAB
start_val[4] => Add0.IN12
start_val[4] => count.DATAB
start_val[5] => Add0.IN11
start_val[5] => count.DATAB
start_val[6] => Add0.IN10
start_val[6] => count.DATAB
start_val[7] => Add0.IN9
start_val[7] => count.DATAB
inc => count.OUTPUTSELECT
inc => count.OUTPUTSELECT
inc => count.OUTPUTSELECT
inc => count.OUTPUTSELECT
inc => count.OUTPUTSELECT
inc => count.OUTPUTSELECT
inc => count.OUTPUTSELECT
inc => count.OUTPUTSELECT
inc => always0.IN0
enable => always0.IN1
enable => count.OUTPUTSELECT
enable => count.OUTPUTSELECT
enable => count.OUTPUTSELECT
enable => count.OUTPUTSELECT
enable => count.OUTPUTSELECT
enable => count.OUTPUTSELECT
enable => count.OUTPUTSELECT
enable => count.OUTPUTSELECT
clk => count[0]~reg0.CLK
clk => count[1]~reg0.CLK
clk => count[2]~reg0.CLK
clk => count[3]~reg0.CLK
clk => count[4]~reg0.CLK
clk => count[5]~reg0.CLK
clk => count[6]~reg0.CLK
clk => count[7]~reg0.CLK
slow_edge => count.OUTPUTSELECT
slow_edge => count.OUTPUTSELECT
slow_edge => count.OUTPUTSELECT
slow_edge => count.OUTPUTSELECT
slow_edge => count.OUTPUTSELECT
slow_edge => count.OUTPUTSELECT
slow_edge => count.OUTPUTSELECT
slow_edge => count.OUTPUTSELECT
reset => count.OUTPUTSELECT
reset => count.OUTPUTSELECT
reset => count.OUTPUTSELECT
reset => count.OUTPUTSELECT
reset => count.OUTPUTSELECT
reset => count.OUTPUTSELECT
reset => count.OUTPUTSELECT
reset => count.OUTPUTSELECT
init_val[0] => count.DATAB
init_val[1] => count.DATAB


|lab8|snakes_and_apples:snake|grid_light:center_grid_row[6].center_grid_col[1].light
green_light_on <= green_light_on.DB_MAX_OUTPUT_PORT_TYPE
head <= head.DB_MAX_OUTPUT_PORT_TYPE
game_over_out <= state_n.DB_MAX_OUTPUT_PORT_TYPE
eating => counter256:counter.inc
eating => always0.IN1
game_over_in => state_n.e_off.OUTPUTSELECT
game_over_in => state_n.e_countdown.OUTPUTSELECT
game_over_in => state_n.e_head.OUTPUTSELECT
game_over_in => state_n.OUTPUTSELECT
left => state_n.OUTPUTSELECT
left => state_n.OUTPUTSELECT
left => state_n.OUTPUTSELECT
left => state_n.OUTPUTSELECT
up => state_n.OUTPUTSELECT
up => state_n.OUTPUTSELECT
up => state_n.OUTPUTSELECT
up => state_n.OUTPUTSELECT
right => state_n.OUTPUTSELECT
right => state_n.OUTPUTSELECT
right => state_n.OUTPUTSELECT
right => state_n.OUTPUTSELECT
down => state_n.OUTPUTSELECT
down => state_n.OUTPUTSELECT
down => state_n.OUTPUTSELECT
down => state_n.OUTPUTSELECT
length[0] => counter256:counter.start_val[0]
length[1] => counter256:counter.start_val[1]
length[2] => counter256:counter.start_val[2]
length[3] => counter256:counter.start_val[3]
length[4] => counter256:counter.start_val[4]
length[5] => counter256:counter.start_val[5]
length[6] => counter256:counter.start_val[6]
length[7] => counter256:counter.start_val[7]
dir[0] => Mux0.IN5
dir[0] => Mux1.IN5
dir[0] => Mux2.IN5
dir[0] => Mux3.IN5
dir[1] => Mux0.IN4
dir[1] => Mux1.IN4
dir[1] => Mux2.IN4
dir[1] => Mux3.IN4
clk => counter256:counter.clk
clk => state_r~1.DATAIN
slow_edge => counter256:counter.slow_edge
slow_edge => state_r.OUTPUTSELECT
slow_edge => state_r.OUTPUTSELECT
slow_edge => state_r.OUTPUTSELECT
slow_edge => state_r.OUTPUTSELECT
reset => counter256:counter.reset
reset => state_r.OUTPUTSELECT
reset => state_r.OUTPUTSELECT
reset => state_r.OUTPUTSELECT
reset => state_r.OUTPUTSELECT
light_type[0] => counter256:counter.init_val[0]
light_type[0] => Equal1.IN1
light_type[0] => Equal2.IN1
light_type[1] => counter256:counter.init_val[1]
light_type[1] => Equal1.IN0
light_type[1] => Equal2.IN0


|lab8|snakes_and_apples:snake|grid_light:center_grid_row[6].center_grid_col[1].light|counter256:counter
count[0] <= count[0]~reg0.DB_MAX_OUTPUT_PORT_TYPE
count[1] <= count[1]~reg0.DB_MAX_OUTPUT_PORT_TYPE
count[2] <= count[2]~reg0.DB_MAX_OUTPUT_PORT_TYPE
count[3] <= count[3]~reg0.DB_MAX_OUTPUT_PORT_TYPE
count[4] <= count[4]~reg0.DB_MAX_OUTPUT_PORT_TYPE
count[5] <= count[5]~reg0.DB_MAX_OUTPUT_PORT_TYPE
count[6] <= count[6]~reg0.DB_MAX_OUTPUT_PORT_TYPE
count[7] <= count[7]~reg0.DB_MAX_OUTPUT_PORT_TYPE
start_val[0] => Add0.IN16
start_val[0] => count.DATAB
start_val[1] => Add0.IN15
start_val[1] => count.DATAB
start_val[2] => Add0.IN14
start_val[2] => count.DATAB
start_val[3] => Add0.IN13
start_val[3] => count.DATAB
start_val[4] => Add0.IN12
start_val[4] => count.DATAB
start_val[5] => Add0.IN11
start_val[5] => count.DATAB
start_val[6] => Add0.IN10
start_val[6] => count.DATAB
start_val[7] => Add0.IN9
start_val[7] => count.DATAB
inc => count.OUTPUTSELECT
inc => count.OUTPUTSELECT
inc => count.OUTPUTSELECT
inc => count.OUTPUTSELECT
inc => count.OUTPUTSELECT
inc => count.OUTPUTSELECT
inc => count.OUTPUTSELECT
inc => count.OUTPUTSELECT
inc => always0.IN0
enable => always0.IN1
enable => count.OUTPUTSELECT
enable => count.OUTPUTSELECT
enable => count.OUTPUTSELECT
enable => count.OUTPUTSELECT
enable => count.OUTPUTSELECT
enable => count.OUTPUTSELECT
enable => count.OUTPUTSELECT
enable => count.OUTPUTSELECT
clk => count[0]~reg0.CLK
clk => count[1]~reg0.CLK
clk => count[2]~reg0.CLK
clk => count[3]~reg0.CLK
clk => count[4]~reg0.CLK
clk => count[5]~reg0.CLK
clk => count[6]~reg0.CLK
clk => count[7]~reg0.CLK
slow_edge => count.OUTPUTSELECT
slow_edge => count.OUTPUTSELECT
slow_edge => count.OUTPUTSELECT
slow_edge => count.OUTPUTSELECT
slow_edge => count.OUTPUTSELECT
slow_edge => count.OUTPUTSELECT
slow_edge => count.OUTPUTSELECT
slow_edge => count.OUTPUTSELECT
reset => count.OUTPUTSELECT
reset => count.OUTPUTSELECT
reset => count.OUTPUTSELECT
reset => count.OUTPUTSELECT
reset => count.OUTPUTSELECT
reset => count.OUTPUTSELECT
reset => count.OUTPUTSELECT
reset => count.OUTPUTSELECT
init_val[0] => count.DATAB
init_val[1] => count.DATAB


|lab8|snakes_and_apples:snake|grid_light:center_grid_row[6].center_grid_col[2].light
green_light_on <= green_light_on.DB_MAX_OUTPUT_PORT_TYPE
head <= head.DB_MAX_OUTPUT_PORT_TYPE
game_over_out <= state_n.DB_MAX_OUTPUT_PORT_TYPE
eating => counter256:counter.inc
eating => always0.IN1
game_over_in => state_n.e_off.OUTPUTSELECT
game_over_in => state_n.e_countdown.OUTPUTSELECT
game_over_in => state_n.e_head.OUTPUTSELECT
game_over_in => state_n.OUTPUTSELECT
left => state_n.OUTPUTSELECT
left => state_n.OUTPUTSELECT
left => state_n.OUTPUTSELECT
left => state_n.OUTPUTSELECT
up => state_n.OUTPUTSELECT
up => state_n.OUTPUTSELECT
up => state_n.OUTPUTSELECT
up => state_n.OUTPUTSELECT
right => state_n.OUTPUTSELECT
right => state_n.OUTPUTSELECT
right => state_n.OUTPUTSELECT
right => state_n.OUTPUTSELECT
down => state_n.OUTPUTSELECT
down => state_n.OUTPUTSELECT
down => state_n.OUTPUTSELECT
down => state_n.OUTPUTSELECT
length[0] => counter256:counter.start_val[0]
length[1] => counter256:counter.start_val[1]
length[2] => counter256:counter.start_val[2]
length[3] => counter256:counter.start_val[3]
length[4] => counter256:counter.start_val[4]
length[5] => counter256:counter.start_val[5]
length[6] => counter256:counter.start_val[6]
length[7] => counter256:counter.start_val[7]
dir[0] => Mux0.IN5
dir[0] => Mux1.IN5
dir[0] => Mux2.IN5
dir[0] => Mux3.IN5
dir[1] => Mux0.IN4
dir[1] => Mux1.IN4
dir[1] => Mux2.IN4
dir[1] => Mux3.IN4
clk => counter256:counter.clk
clk => state_r~1.DATAIN
slow_edge => counter256:counter.slow_edge
slow_edge => state_r.OUTPUTSELECT
slow_edge => state_r.OUTPUTSELECT
slow_edge => state_r.OUTPUTSELECT
slow_edge => state_r.OUTPUTSELECT
reset => counter256:counter.reset
reset => state_r.OUTPUTSELECT
reset => state_r.OUTPUTSELECT
reset => state_r.OUTPUTSELECT
reset => state_r.OUTPUTSELECT
light_type[0] => counter256:counter.init_val[0]
light_type[0] => Equal1.IN1
light_type[0] => Equal2.IN1
light_type[1] => counter256:counter.init_val[1]
light_type[1] => Equal1.IN0
light_type[1] => Equal2.IN0


|lab8|snakes_and_apples:snake|grid_light:center_grid_row[6].center_grid_col[2].light|counter256:counter
count[0] <= count[0]~reg0.DB_MAX_OUTPUT_PORT_TYPE
count[1] <= count[1]~reg0.DB_MAX_OUTPUT_PORT_TYPE
count[2] <= count[2]~reg0.DB_MAX_OUTPUT_PORT_TYPE
count[3] <= count[3]~reg0.DB_MAX_OUTPUT_PORT_TYPE
count[4] <= count[4]~reg0.DB_MAX_OUTPUT_PORT_TYPE
count[5] <= count[5]~reg0.DB_MAX_OUTPUT_PORT_TYPE
count[6] <= count[6]~reg0.DB_MAX_OUTPUT_PORT_TYPE
count[7] <= count[7]~reg0.DB_MAX_OUTPUT_PORT_TYPE
start_val[0] => Add0.IN16
start_val[0] => count.DATAB
start_val[1] => Add0.IN15
start_val[1] => count.DATAB
start_val[2] => Add0.IN14
start_val[2] => count.DATAB
start_val[3] => Add0.IN13
start_val[3] => count.DATAB
start_val[4] => Add0.IN12
start_val[4] => count.DATAB
start_val[5] => Add0.IN11
start_val[5] => count.DATAB
start_val[6] => Add0.IN10
start_val[6] => count.DATAB
start_val[7] => Add0.IN9
start_val[7] => count.DATAB
inc => count.OUTPUTSELECT
inc => count.OUTPUTSELECT
inc => count.OUTPUTSELECT
inc => count.OUTPUTSELECT
inc => count.OUTPUTSELECT
inc => count.OUTPUTSELECT
inc => count.OUTPUTSELECT
inc => count.OUTPUTSELECT
inc => always0.IN0
enable => always0.IN1
enable => count.OUTPUTSELECT
enable => count.OUTPUTSELECT
enable => count.OUTPUTSELECT
enable => count.OUTPUTSELECT
enable => count.OUTPUTSELECT
enable => count.OUTPUTSELECT
enable => count.OUTPUTSELECT
enable => count.OUTPUTSELECT
clk => count[0]~reg0.CLK
clk => count[1]~reg0.CLK
clk => count[2]~reg0.CLK
clk => count[3]~reg0.CLK
clk => count[4]~reg0.CLK
clk => count[5]~reg0.CLK
clk => count[6]~reg0.CLK
clk => count[7]~reg0.CLK
slow_edge => count.OUTPUTSELECT
slow_edge => count.OUTPUTSELECT
slow_edge => count.OUTPUTSELECT
slow_edge => count.OUTPUTSELECT
slow_edge => count.OUTPUTSELECT
slow_edge => count.OUTPUTSELECT
slow_edge => count.OUTPUTSELECT
slow_edge => count.OUTPUTSELECT
reset => count.OUTPUTSELECT
reset => count.OUTPUTSELECT
reset => count.OUTPUTSELECT
reset => count.OUTPUTSELECT
reset => count.OUTPUTSELECT
reset => count.OUTPUTSELECT
reset => count.OUTPUTSELECT
reset => count.OUTPUTSELECT
init_val[0] => count.DATAB
init_val[1] => count.DATAB


|lab8|snakes_and_apples:snake|grid_light:center_grid_row[6].center_grid_col[3].light
green_light_on <= green_light_on.DB_MAX_OUTPUT_PORT_TYPE
head <= head.DB_MAX_OUTPUT_PORT_TYPE
game_over_out <= state_n.DB_MAX_OUTPUT_PORT_TYPE
eating => counter256:counter.inc
eating => always0.IN1
game_over_in => state_n.e_off.OUTPUTSELECT
game_over_in => state_n.e_countdown.OUTPUTSELECT
game_over_in => state_n.e_head.OUTPUTSELECT
game_over_in => state_n.OUTPUTSELECT
left => state_n.OUTPUTSELECT
left => state_n.OUTPUTSELECT
left => state_n.OUTPUTSELECT
left => state_n.OUTPUTSELECT
up => state_n.OUTPUTSELECT
up => state_n.OUTPUTSELECT
up => state_n.OUTPUTSELECT
up => state_n.OUTPUTSELECT
right => state_n.OUTPUTSELECT
right => state_n.OUTPUTSELECT
right => state_n.OUTPUTSELECT
right => state_n.OUTPUTSELECT
down => state_n.OUTPUTSELECT
down => state_n.OUTPUTSELECT
down => state_n.OUTPUTSELECT
down => state_n.OUTPUTSELECT
length[0] => counter256:counter.start_val[0]
length[1] => counter256:counter.start_val[1]
length[2] => counter256:counter.start_val[2]
length[3] => counter256:counter.start_val[3]
length[4] => counter256:counter.start_val[4]
length[5] => counter256:counter.start_val[5]
length[6] => counter256:counter.start_val[6]
length[7] => counter256:counter.start_val[7]
dir[0] => Mux0.IN5
dir[0] => Mux1.IN5
dir[0] => Mux2.IN5
dir[0] => Mux3.IN5
dir[1] => Mux0.IN4
dir[1] => Mux1.IN4
dir[1] => Mux2.IN4
dir[1] => Mux3.IN4
clk => counter256:counter.clk
clk => state_r~1.DATAIN
slow_edge => counter256:counter.slow_edge
slow_edge => state_r.OUTPUTSELECT
slow_edge => state_r.OUTPUTSELECT
slow_edge => state_r.OUTPUTSELECT
slow_edge => state_r.OUTPUTSELECT
reset => counter256:counter.reset
reset => state_r.OUTPUTSELECT
reset => state_r.OUTPUTSELECT
reset => state_r.OUTPUTSELECT
reset => state_r.OUTPUTSELECT
light_type[0] => counter256:counter.init_val[0]
light_type[0] => Equal1.IN1
light_type[0] => Equal2.IN1
light_type[1] => counter256:counter.init_val[1]
light_type[1] => Equal1.IN0
light_type[1] => Equal2.IN0


|lab8|snakes_and_apples:snake|grid_light:center_grid_row[6].center_grid_col[3].light|counter256:counter
count[0] <= count[0]~reg0.DB_MAX_OUTPUT_PORT_TYPE
count[1] <= count[1]~reg0.DB_MAX_OUTPUT_PORT_TYPE
count[2] <= count[2]~reg0.DB_MAX_OUTPUT_PORT_TYPE
count[3] <= count[3]~reg0.DB_MAX_OUTPUT_PORT_TYPE
count[4] <= count[4]~reg0.DB_MAX_OUTPUT_PORT_TYPE
count[5] <= count[5]~reg0.DB_MAX_OUTPUT_PORT_TYPE
count[6] <= count[6]~reg0.DB_MAX_OUTPUT_PORT_TYPE
count[7] <= count[7]~reg0.DB_MAX_OUTPUT_PORT_TYPE
start_val[0] => Add0.IN16
start_val[0] => count.DATAB
start_val[1] => Add0.IN15
start_val[1] => count.DATAB
start_val[2] => Add0.IN14
start_val[2] => count.DATAB
start_val[3] => Add0.IN13
start_val[3] => count.DATAB
start_val[4] => Add0.IN12
start_val[4] => count.DATAB
start_val[5] => Add0.IN11
start_val[5] => count.DATAB
start_val[6] => Add0.IN10
start_val[6] => count.DATAB
start_val[7] => Add0.IN9
start_val[7] => count.DATAB
inc => count.OUTPUTSELECT
inc => count.OUTPUTSELECT
inc => count.OUTPUTSELECT
inc => count.OUTPUTSELECT
inc => count.OUTPUTSELECT
inc => count.OUTPUTSELECT
inc => count.OUTPUTSELECT
inc => count.OUTPUTSELECT
inc => always0.IN0
enable => always0.IN1
enable => count.OUTPUTSELECT
enable => count.OUTPUTSELECT
enable => count.OUTPUTSELECT
enable => count.OUTPUTSELECT
enable => count.OUTPUTSELECT
enable => count.OUTPUTSELECT
enable => count.OUTPUTSELECT
enable => count.OUTPUTSELECT
clk => count[0]~reg0.CLK
clk => count[1]~reg0.CLK
clk => count[2]~reg0.CLK
clk => count[3]~reg0.CLK
clk => count[4]~reg0.CLK
clk => count[5]~reg0.CLK
clk => count[6]~reg0.CLK
clk => count[7]~reg0.CLK
slow_edge => count.OUTPUTSELECT
slow_edge => count.OUTPUTSELECT
slow_edge => count.OUTPUTSELECT
slow_edge => count.OUTPUTSELECT
slow_edge => count.OUTPUTSELECT
slow_edge => count.OUTPUTSELECT
slow_edge => count.OUTPUTSELECT
slow_edge => count.OUTPUTSELECT
reset => count.OUTPUTSELECT
reset => count.OUTPUTSELECT
reset => count.OUTPUTSELECT
reset => count.OUTPUTSELECT
reset => count.OUTPUTSELECT
reset => count.OUTPUTSELECT
reset => count.OUTPUTSELECT
reset => count.OUTPUTSELECT
init_val[0] => count.DATAB
init_val[1] => count.DATAB


|lab8|snakes_and_apples:snake|grid_light:center_grid_row[6].center_grid_col[4].light
green_light_on <= green_light_on.DB_MAX_OUTPUT_PORT_TYPE
head <= head.DB_MAX_OUTPUT_PORT_TYPE
game_over_out <= state_n.DB_MAX_OUTPUT_PORT_TYPE
eating => counter256:counter.inc
eating => always0.IN1
game_over_in => state_n.e_off.OUTPUTSELECT
game_over_in => state_n.e_countdown.OUTPUTSELECT
game_over_in => state_n.e_head.OUTPUTSELECT
game_over_in => state_n.OUTPUTSELECT
left => state_n.OUTPUTSELECT
left => state_n.OUTPUTSELECT
left => state_n.OUTPUTSELECT
left => state_n.OUTPUTSELECT
up => state_n.OUTPUTSELECT
up => state_n.OUTPUTSELECT
up => state_n.OUTPUTSELECT
up => state_n.OUTPUTSELECT
right => state_n.OUTPUTSELECT
right => state_n.OUTPUTSELECT
right => state_n.OUTPUTSELECT
right => state_n.OUTPUTSELECT
down => state_n.OUTPUTSELECT
down => state_n.OUTPUTSELECT
down => state_n.OUTPUTSELECT
down => state_n.OUTPUTSELECT
length[0] => counter256:counter.start_val[0]
length[1] => counter256:counter.start_val[1]
length[2] => counter256:counter.start_val[2]
length[3] => counter256:counter.start_val[3]
length[4] => counter256:counter.start_val[4]
length[5] => counter256:counter.start_val[5]
length[6] => counter256:counter.start_val[6]
length[7] => counter256:counter.start_val[7]
dir[0] => Mux0.IN5
dir[0] => Mux1.IN5
dir[0] => Mux2.IN5
dir[0] => Mux3.IN5
dir[1] => Mux0.IN4
dir[1] => Mux1.IN4
dir[1] => Mux2.IN4
dir[1] => Mux3.IN4
clk => counter256:counter.clk
clk => state_r~1.DATAIN
slow_edge => counter256:counter.slow_edge
slow_edge => state_r.OUTPUTSELECT
slow_edge => state_r.OUTPUTSELECT
slow_edge => state_r.OUTPUTSELECT
slow_edge => state_r.OUTPUTSELECT
reset => counter256:counter.reset
reset => state_r.OUTPUTSELECT
reset => state_r.OUTPUTSELECT
reset => state_r.OUTPUTSELECT
reset => state_r.OUTPUTSELECT
light_type[0] => counter256:counter.init_val[0]
light_type[0] => Equal1.IN1
light_type[0] => Equal2.IN1
light_type[1] => counter256:counter.init_val[1]
light_type[1] => Equal1.IN0
light_type[1] => Equal2.IN0


|lab8|snakes_and_apples:snake|grid_light:center_grid_row[6].center_grid_col[4].light|counter256:counter
count[0] <= count[0]~reg0.DB_MAX_OUTPUT_PORT_TYPE
count[1] <= count[1]~reg0.DB_MAX_OUTPUT_PORT_TYPE
count[2] <= count[2]~reg0.DB_MAX_OUTPUT_PORT_TYPE
count[3] <= count[3]~reg0.DB_MAX_OUTPUT_PORT_TYPE
count[4] <= count[4]~reg0.DB_MAX_OUTPUT_PORT_TYPE
count[5] <= count[5]~reg0.DB_MAX_OUTPUT_PORT_TYPE
count[6] <= count[6]~reg0.DB_MAX_OUTPUT_PORT_TYPE
count[7] <= count[7]~reg0.DB_MAX_OUTPUT_PORT_TYPE
start_val[0] => Add0.IN16
start_val[0] => count.DATAB
start_val[1] => Add0.IN15
start_val[1] => count.DATAB
start_val[2] => Add0.IN14
start_val[2] => count.DATAB
start_val[3] => Add0.IN13
start_val[3] => count.DATAB
start_val[4] => Add0.IN12
start_val[4] => count.DATAB
start_val[5] => Add0.IN11
start_val[5] => count.DATAB
start_val[6] => Add0.IN10
start_val[6] => count.DATAB
start_val[7] => Add0.IN9
start_val[7] => count.DATAB
inc => count.OUTPUTSELECT
inc => count.OUTPUTSELECT
inc => count.OUTPUTSELECT
inc => count.OUTPUTSELECT
inc => count.OUTPUTSELECT
inc => count.OUTPUTSELECT
inc => count.OUTPUTSELECT
inc => count.OUTPUTSELECT
inc => always0.IN0
enable => always0.IN1
enable => count.OUTPUTSELECT
enable => count.OUTPUTSELECT
enable => count.OUTPUTSELECT
enable => count.OUTPUTSELECT
enable => count.OUTPUTSELECT
enable => count.OUTPUTSELECT
enable => count.OUTPUTSELECT
enable => count.OUTPUTSELECT
clk => count[0]~reg0.CLK
clk => count[1]~reg0.CLK
clk => count[2]~reg0.CLK
clk => count[3]~reg0.CLK
clk => count[4]~reg0.CLK
clk => count[5]~reg0.CLK
clk => count[6]~reg0.CLK
clk => count[7]~reg0.CLK
slow_edge => count.OUTPUTSELECT
slow_edge => count.OUTPUTSELECT
slow_edge => count.OUTPUTSELECT
slow_edge => count.OUTPUTSELECT
slow_edge => count.OUTPUTSELECT
slow_edge => count.OUTPUTSELECT
slow_edge => count.OUTPUTSELECT
slow_edge => count.OUTPUTSELECT
reset => count.OUTPUTSELECT
reset => count.OUTPUTSELECT
reset => count.OUTPUTSELECT
reset => count.OUTPUTSELECT
reset => count.OUTPUTSELECT
reset => count.OUTPUTSELECT
reset => count.OUTPUTSELECT
reset => count.OUTPUTSELECT
init_val[0] => count.DATAB
init_val[1] => count.DATAB


|lab8|snakes_and_apples:snake|grid_light:center_grid_row[6].center_grid_col[5].light
green_light_on <= green_light_on.DB_MAX_OUTPUT_PORT_TYPE
head <= head.DB_MAX_OUTPUT_PORT_TYPE
game_over_out <= state_n.DB_MAX_OUTPUT_PORT_TYPE
eating => counter256:counter.inc
eating => always0.IN1
game_over_in => state_n.e_off.OUTPUTSELECT
game_over_in => state_n.e_countdown.OUTPUTSELECT
game_over_in => state_n.e_head.OUTPUTSELECT
game_over_in => state_n.OUTPUTSELECT
left => state_n.OUTPUTSELECT
left => state_n.OUTPUTSELECT
left => state_n.OUTPUTSELECT
left => state_n.OUTPUTSELECT
up => state_n.OUTPUTSELECT
up => state_n.OUTPUTSELECT
up => state_n.OUTPUTSELECT
up => state_n.OUTPUTSELECT
right => state_n.OUTPUTSELECT
right => state_n.OUTPUTSELECT
right => state_n.OUTPUTSELECT
right => state_n.OUTPUTSELECT
down => state_n.OUTPUTSELECT
down => state_n.OUTPUTSELECT
down => state_n.OUTPUTSELECT
down => state_n.OUTPUTSELECT
length[0] => counter256:counter.start_val[0]
length[1] => counter256:counter.start_val[1]
length[2] => counter256:counter.start_val[2]
length[3] => counter256:counter.start_val[3]
length[4] => counter256:counter.start_val[4]
length[5] => counter256:counter.start_val[5]
length[6] => counter256:counter.start_val[6]
length[7] => counter256:counter.start_val[7]
dir[0] => Mux0.IN5
dir[0] => Mux1.IN5
dir[0] => Mux2.IN5
dir[0] => Mux3.IN5
dir[1] => Mux0.IN4
dir[1] => Mux1.IN4
dir[1] => Mux2.IN4
dir[1] => Mux3.IN4
clk => counter256:counter.clk
clk => state_r~1.DATAIN
slow_edge => counter256:counter.slow_edge
slow_edge => state_r.OUTPUTSELECT
slow_edge => state_r.OUTPUTSELECT
slow_edge => state_r.OUTPUTSELECT
slow_edge => state_r.OUTPUTSELECT
reset => counter256:counter.reset
reset => state_r.OUTPUTSELECT
reset => state_r.OUTPUTSELECT
reset => state_r.OUTPUTSELECT
reset => state_r.OUTPUTSELECT
light_type[0] => counter256:counter.init_val[0]
light_type[0] => Equal1.IN1
light_type[0] => Equal2.IN1
light_type[1] => counter256:counter.init_val[1]
light_type[1] => Equal1.IN0
light_type[1] => Equal2.IN0


|lab8|snakes_and_apples:snake|grid_light:center_grid_row[6].center_grid_col[5].light|counter256:counter
count[0] <= count[0]~reg0.DB_MAX_OUTPUT_PORT_TYPE
count[1] <= count[1]~reg0.DB_MAX_OUTPUT_PORT_TYPE
count[2] <= count[2]~reg0.DB_MAX_OUTPUT_PORT_TYPE
count[3] <= count[3]~reg0.DB_MAX_OUTPUT_PORT_TYPE
count[4] <= count[4]~reg0.DB_MAX_OUTPUT_PORT_TYPE
count[5] <= count[5]~reg0.DB_MAX_OUTPUT_PORT_TYPE
count[6] <= count[6]~reg0.DB_MAX_OUTPUT_PORT_TYPE
count[7] <= count[7]~reg0.DB_MAX_OUTPUT_PORT_TYPE
start_val[0] => Add0.IN16
start_val[0] => count.DATAB
start_val[1] => Add0.IN15
start_val[1] => count.DATAB
start_val[2] => Add0.IN14
start_val[2] => count.DATAB
start_val[3] => Add0.IN13
start_val[3] => count.DATAB
start_val[4] => Add0.IN12
start_val[4] => count.DATAB
start_val[5] => Add0.IN11
start_val[5] => count.DATAB
start_val[6] => Add0.IN10
start_val[6] => count.DATAB
start_val[7] => Add0.IN9
start_val[7] => count.DATAB
inc => count.OUTPUTSELECT
inc => count.OUTPUTSELECT
inc => count.OUTPUTSELECT
inc => count.OUTPUTSELECT
inc => count.OUTPUTSELECT
inc => count.OUTPUTSELECT
inc => count.OUTPUTSELECT
inc => count.OUTPUTSELECT
inc => always0.IN0
enable => always0.IN1
enable => count.OUTPUTSELECT
enable => count.OUTPUTSELECT
enable => count.OUTPUTSELECT
enable => count.OUTPUTSELECT
enable => count.OUTPUTSELECT
enable => count.OUTPUTSELECT
enable => count.OUTPUTSELECT
enable => count.OUTPUTSELECT
clk => count[0]~reg0.CLK
clk => count[1]~reg0.CLK
clk => count[2]~reg0.CLK
clk => count[3]~reg0.CLK
clk => count[4]~reg0.CLK
clk => count[5]~reg0.CLK
clk => count[6]~reg0.CLK
clk => count[7]~reg0.CLK
slow_edge => count.OUTPUTSELECT
slow_edge => count.OUTPUTSELECT
slow_edge => count.OUTPUTSELECT
slow_edge => count.OUTPUTSELECT
slow_edge => count.OUTPUTSELECT
slow_edge => count.OUTPUTSELECT
slow_edge => count.OUTPUTSELECT
slow_edge => count.OUTPUTSELECT
reset => count.OUTPUTSELECT
reset => count.OUTPUTSELECT
reset => count.OUTPUTSELECT
reset => count.OUTPUTSELECT
reset => count.OUTPUTSELECT
reset => count.OUTPUTSELECT
reset => count.OUTPUTSELECT
reset => count.OUTPUTSELECT
init_val[0] => count.DATAB
init_val[1] => count.DATAB


|lab8|snakes_and_apples:snake|grid_light:center_grid_row[6].center_grid_col[6].light
green_light_on <= green_light_on.DB_MAX_OUTPUT_PORT_TYPE
head <= head.DB_MAX_OUTPUT_PORT_TYPE
game_over_out <= state_n.DB_MAX_OUTPUT_PORT_TYPE
eating => counter256:counter.inc
eating => always0.IN1
game_over_in => state_n.e_off.OUTPUTSELECT
game_over_in => state_n.e_countdown.OUTPUTSELECT
game_over_in => state_n.e_head.OUTPUTSELECT
game_over_in => state_n.OUTPUTSELECT
left => state_n.OUTPUTSELECT
left => state_n.OUTPUTSELECT
left => state_n.OUTPUTSELECT
left => state_n.OUTPUTSELECT
up => state_n.OUTPUTSELECT
up => state_n.OUTPUTSELECT
up => state_n.OUTPUTSELECT
up => state_n.OUTPUTSELECT
right => state_n.OUTPUTSELECT
right => state_n.OUTPUTSELECT
right => state_n.OUTPUTSELECT
right => state_n.OUTPUTSELECT
down => state_n.OUTPUTSELECT
down => state_n.OUTPUTSELECT
down => state_n.OUTPUTSELECT
down => state_n.OUTPUTSELECT
length[0] => counter256:counter.start_val[0]
length[1] => counter256:counter.start_val[1]
length[2] => counter256:counter.start_val[2]
length[3] => counter256:counter.start_val[3]
length[4] => counter256:counter.start_val[4]
length[5] => counter256:counter.start_val[5]
length[6] => counter256:counter.start_val[6]
length[7] => counter256:counter.start_val[7]
dir[0] => Mux0.IN5
dir[0] => Mux1.IN5
dir[0] => Mux2.IN5
dir[0] => Mux3.IN5
dir[1] => Mux0.IN4
dir[1] => Mux1.IN4
dir[1] => Mux2.IN4
dir[1] => Mux3.IN4
clk => counter256:counter.clk
clk => state_r~1.DATAIN
slow_edge => counter256:counter.slow_edge
slow_edge => state_r.OUTPUTSELECT
slow_edge => state_r.OUTPUTSELECT
slow_edge => state_r.OUTPUTSELECT
slow_edge => state_r.OUTPUTSELECT
reset => counter256:counter.reset
reset => state_r.OUTPUTSELECT
reset => state_r.OUTPUTSELECT
reset => state_r.OUTPUTSELECT
reset => state_r.OUTPUTSELECT
light_type[0] => counter256:counter.init_val[0]
light_type[0] => Equal1.IN1
light_type[0] => Equal2.IN1
light_type[1] => counter256:counter.init_val[1]
light_type[1] => Equal1.IN0
light_type[1] => Equal2.IN0


|lab8|snakes_and_apples:snake|grid_light:center_grid_row[6].center_grid_col[6].light|counter256:counter
count[0] <= count[0]~reg0.DB_MAX_OUTPUT_PORT_TYPE
count[1] <= count[1]~reg0.DB_MAX_OUTPUT_PORT_TYPE
count[2] <= count[2]~reg0.DB_MAX_OUTPUT_PORT_TYPE
count[3] <= count[3]~reg0.DB_MAX_OUTPUT_PORT_TYPE
count[4] <= count[4]~reg0.DB_MAX_OUTPUT_PORT_TYPE
count[5] <= count[5]~reg0.DB_MAX_OUTPUT_PORT_TYPE
count[6] <= count[6]~reg0.DB_MAX_OUTPUT_PORT_TYPE
count[7] <= count[7]~reg0.DB_MAX_OUTPUT_PORT_TYPE
start_val[0] => Add0.IN16
start_val[0] => count.DATAB
start_val[1] => Add0.IN15
start_val[1] => count.DATAB
start_val[2] => Add0.IN14
start_val[2] => count.DATAB
start_val[3] => Add0.IN13
start_val[3] => count.DATAB
start_val[4] => Add0.IN12
start_val[4] => count.DATAB
start_val[5] => Add0.IN11
start_val[5] => count.DATAB
start_val[6] => Add0.IN10
start_val[6] => count.DATAB
start_val[7] => Add0.IN9
start_val[7] => count.DATAB
inc => count.OUTPUTSELECT
inc => count.OUTPUTSELECT
inc => count.OUTPUTSELECT
inc => count.OUTPUTSELECT
inc => count.OUTPUTSELECT
inc => count.OUTPUTSELECT
inc => count.OUTPUTSELECT
inc => count.OUTPUTSELECT
inc => always0.IN0
enable => always0.IN1
enable => count.OUTPUTSELECT
enable => count.OUTPUTSELECT
enable => count.OUTPUTSELECT
enable => count.OUTPUTSELECT
enable => count.OUTPUTSELECT
enable => count.OUTPUTSELECT
enable => count.OUTPUTSELECT
enable => count.OUTPUTSELECT
clk => count[0]~reg0.CLK
clk => count[1]~reg0.CLK
clk => count[2]~reg0.CLK
clk => count[3]~reg0.CLK
clk => count[4]~reg0.CLK
clk => count[5]~reg0.CLK
clk => count[6]~reg0.CLK
clk => count[7]~reg0.CLK
slow_edge => count.OUTPUTSELECT
slow_edge => count.OUTPUTSELECT
slow_edge => count.OUTPUTSELECT
slow_edge => count.OUTPUTSELECT
slow_edge => count.OUTPUTSELECT
slow_edge => count.OUTPUTSELECT
slow_edge => count.OUTPUTSELECT
slow_edge => count.OUTPUTSELECT
reset => count.OUTPUTSELECT
reset => count.OUTPUTSELECT
reset => count.OUTPUTSELECT
reset => count.OUTPUTSELECT
reset => count.OUTPUTSELECT
reset => count.OUTPUTSELECT
reset => count.OUTPUTSELECT
reset => count.OUTPUTSELECT
init_val[0] => count.DATAB
init_val[1] => count.DATAB


|lab8|snakes_and_apples:snake|grid_light:center_grid_row[6].center_grid_col[7].light
green_light_on <= green_light_on.DB_MAX_OUTPUT_PORT_TYPE
head <= head.DB_MAX_OUTPUT_PORT_TYPE
game_over_out <= state_n.DB_MAX_OUTPUT_PORT_TYPE
eating => counter256:counter.inc
eating => always0.IN1
game_over_in => state_n.e_off.OUTPUTSELECT
game_over_in => state_n.e_countdown.OUTPUTSELECT
game_over_in => state_n.e_head.OUTPUTSELECT
game_over_in => state_n.OUTPUTSELECT
left => state_n.OUTPUTSELECT
left => state_n.OUTPUTSELECT
left => state_n.OUTPUTSELECT
left => state_n.OUTPUTSELECT
up => state_n.OUTPUTSELECT
up => state_n.OUTPUTSELECT
up => state_n.OUTPUTSELECT
up => state_n.OUTPUTSELECT
right => state_n.OUTPUTSELECT
right => state_n.OUTPUTSELECT
right => state_n.OUTPUTSELECT
right => state_n.OUTPUTSELECT
down => state_n.OUTPUTSELECT
down => state_n.OUTPUTSELECT
down => state_n.OUTPUTSELECT
down => state_n.OUTPUTSELECT
length[0] => counter256:counter.start_val[0]
length[1] => counter256:counter.start_val[1]
length[2] => counter256:counter.start_val[2]
length[3] => counter256:counter.start_val[3]
length[4] => counter256:counter.start_val[4]
length[5] => counter256:counter.start_val[5]
length[6] => counter256:counter.start_val[6]
length[7] => counter256:counter.start_val[7]
dir[0] => Mux0.IN5
dir[0] => Mux1.IN5
dir[0] => Mux2.IN5
dir[0] => Mux3.IN5
dir[1] => Mux0.IN4
dir[1] => Mux1.IN4
dir[1] => Mux2.IN4
dir[1] => Mux3.IN4
clk => counter256:counter.clk
clk => state_r~1.DATAIN
slow_edge => counter256:counter.slow_edge
slow_edge => state_r.OUTPUTSELECT
slow_edge => state_r.OUTPUTSELECT
slow_edge => state_r.OUTPUTSELECT
slow_edge => state_r.OUTPUTSELECT
reset => counter256:counter.reset
reset => state_r.OUTPUTSELECT
reset => state_r.OUTPUTSELECT
reset => state_r.OUTPUTSELECT
reset => state_r.OUTPUTSELECT
light_type[0] => counter256:counter.init_val[0]
light_type[0] => Equal1.IN1
light_type[0] => Equal2.IN1
light_type[1] => counter256:counter.init_val[1]
light_type[1] => Equal1.IN0
light_type[1] => Equal2.IN0


|lab8|snakes_and_apples:snake|grid_light:center_grid_row[6].center_grid_col[7].light|counter256:counter
count[0] <= count[0]~reg0.DB_MAX_OUTPUT_PORT_TYPE
count[1] <= count[1]~reg0.DB_MAX_OUTPUT_PORT_TYPE
count[2] <= count[2]~reg0.DB_MAX_OUTPUT_PORT_TYPE
count[3] <= count[3]~reg0.DB_MAX_OUTPUT_PORT_TYPE
count[4] <= count[4]~reg0.DB_MAX_OUTPUT_PORT_TYPE
count[5] <= count[5]~reg0.DB_MAX_OUTPUT_PORT_TYPE
count[6] <= count[6]~reg0.DB_MAX_OUTPUT_PORT_TYPE
count[7] <= count[7]~reg0.DB_MAX_OUTPUT_PORT_TYPE
start_val[0] => Add0.IN16
start_val[0] => count.DATAB
start_val[1] => Add0.IN15
start_val[1] => count.DATAB
start_val[2] => Add0.IN14
start_val[2] => count.DATAB
start_val[3] => Add0.IN13
start_val[3] => count.DATAB
start_val[4] => Add0.IN12
start_val[4] => count.DATAB
start_val[5] => Add0.IN11
start_val[5] => count.DATAB
start_val[6] => Add0.IN10
start_val[6] => count.DATAB
start_val[7] => Add0.IN9
start_val[7] => count.DATAB
inc => count.OUTPUTSELECT
inc => count.OUTPUTSELECT
inc => count.OUTPUTSELECT
inc => count.OUTPUTSELECT
inc => count.OUTPUTSELECT
inc => count.OUTPUTSELECT
inc => count.OUTPUTSELECT
inc => count.OUTPUTSELECT
inc => always0.IN0
enable => always0.IN1
enable => count.OUTPUTSELECT
enable => count.OUTPUTSELECT
enable => count.OUTPUTSELECT
enable => count.OUTPUTSELECT
enable => count.OUTPUTSELECT
enable => count.OUTPUTSELECT
enable => count.OUTPUTSELECT
enable => count.OUTPUTSELECT
clk => count[0]~reg0.CLK
clk => count[1]~reg0.CLK
clk => count[2]~reg0.CLK
clk => count[3]~reg0.CLK
clk => count[4]~reg0.CLK
clk => count[5]~reg0.CLK
clk => count[6]~reg0.CLK
clk => count[7]~reg0.CLK
slow_edge => count.OUTPUTSELECT
slow_edge => count.OUTPUTSELECT
slow_edge => count.OUTPUTSELECT
slow_edge => count.OUTPUTSELECT
slow_edge => count.OUTPUTSELECT
slow_edge => count.OUTPUTSELECT
slow_edge => count.OUTPUTSELECT
slow_edge => count.OUTPUTSELECT
reset => count.OUTPUTSELECT
reset => count.OUTPUTSELECT
reset => count.OUTPUTSELECT
reset => count.OUTPUTSELECT
reset => count.OUTPUTSELECT
reset => count.OUTPUTSELECT
reset => count.OUTPUTSELECT
reset => count.OUTPUTSELECT
init_val[0] => count.DATAB
init_val[1] => count.DATAB


|lab8|snakes_and_apples:snake|grid_light:center_grid_row[6].center_grid_col[8].light
green_light_on <= green_light_on.DB_MAX_OUTPUT_PORT_TYPE
head <= head.DB_MAX_OUTPUT_PORT_TYPE
game_over_out <= state_n.DB_MAX_OUTPUT_PORT_TYPE
eating => counter256:counter.inc
eating => always0.IN1
game_over_in => state_n.e_off.OUTPUTSELECT
game_over_in => state_n.e_countdown.OUTPUTSELECT
game_over_in => state_n.e_head.OUTPUTSELECT
game_over_in => state_n.OUTPUTSELECT
left => state_n.OUTPUTSELECT
left => state_n.OUTPUTSELECT
left => state_n.OUTPUTSELECT
left => state_n.OUTPUTSELECT
up => state_n.OUTPUTSELECT
up => state_n.OUTPUTSELECT
up => state_n.OUTPUTSELECT
up => state_n.OUTPUTSELECT
right => state_n.OUTPUTSELECT
right => state_n.OUTPUTSELECT
right => state_n.OUTPUTSELECT
right => state_n.OUTPUTSELECT
down => state_n.OUTPUTSELECT
down => state_n.OUTPUTSELECT
down => state_n.OUTPUTSELECT
down => state_n.OUTPUTSELECT
length[0] => counter256:counter.start_val[0]
length[1] => counter256:counter.start_val[1]
length[2] => counter256:counter.start_val[2]
length[3] => counter256:counter.start_val[3]
length[4] => counter256:counter.start_val[4]
length[5] => counter256:counter.start_val[5]
length[6] => counter256:counter.start_val[6]
length[7] => counter256:counter.start_val[7]
dir[0] => Mux0.IN5
dir[0] => Mux1.IN5
dir[0] => Mux2.IN5
dir[0] => Mux3.IN5
dir[1] => Mux0.IN4
dir[1] => Mux1.IN4
dir[1] => Mux2.IN4
dir[1] => Mux3.IN4
clk => counter256:counter.clk
clk => state_r~1.DATAIN
slow_edge => counter256:counter.slow_edge
slow_edge => state_r.OUTPUTSELECT
slow_edge => state_r.OUTPUTSELECT
slow_edge => state_r.OUTPUTSELECT
slow_edge => state_r.OUTPUTSELECT
reset => counter256:counter.reset
reset => state_r.OUTPUTSELECT
reset => state_r.OUTPUTSELECT
reset => state_r.OUTPUTSELECT
reset => state_r.OUTPUTSELECT
light_type[0] => counter256:counter.init_val[0]
light_type[0] => Equal1.IN1
light_type[0] => Equal2.IN1
light_type[1] => counter256:counter.init_val[1]
light_type[1] => Equal1.IN0
light_type[1] => Equal2.IN0


|lab8|snakes_and_apples:snake|grid_light:center_grid_row[6].center_grid_col[8].light|counter256:counter
count[0] <= count[0]~reg0.DB_MAX_OUTPUT_PORT_TYPE
count[1] <= count[1]~reg0.DB_MAX_OUTPUT_PORT_TYPE
count[2] <= count[2]~reg0.DB_MAX_OUTPUT_PORT_TYPE
count[3] <= count[3]~reg0.DB_MAX_OUTPUT_PORT_TYPE
count[4] <= count[4]~reg0.DB_MAX_OUTPUT_PORT_TYPE
count[5] <= count[5]~reg0.DB_MAX_OUTPUT_PORT_TYPE
count[6] <= count[6]~reg0.DB_MAX_OUTPUT_PORT_TYPE
count[7] <= count[7]~reg0.DB_MAX_OUTPUT_PORT_TYPE
start_val[0] => Add0.IN16
start_val[0] => count.DATAB
start_val[1] => Add0.IN15
start_val[1] => count.DATAB
start_val[2] => Add0.IN14
start_val[2] => count.DATAB
start_val[3] => Add0.IN13
start_val[3] => count.DATAB
start_val[4] => Add0.IN12
start_val[4] => count.DATAB
start_val[5] => Add0.IN11
start_val[5] => count.DATAB
start_val[6] => Add0.IN10
start_val[6] => count.DATAB
start_val[7] => Add0.IN9
start_val[7] => count.DATAB
inc => count.OUTPUTSELECT
inc => count.OUTPUTSELECT
inc => count.OUTPUTSELECT
inc => count.OUTPUTSELECT
inc => count.OUTPUTSELECT
inc => count.OUTPUTSELECT
inc => count.OUTPUTSELECT
inc => count.OUTPUTSELECT
inc => always0.IN0
enable => always0.IN1
enable => count.OUTPUTSELECT
enable => count.OUTPUTSELECT
enable => count.OUTPUTSELECT
enable => count.OUTPUTSELECT
enable => count.OUTPUTSELECT
enable => count.OUTPUTSELECT
enable => count.OUTPUTSELECT
enable => count.OUTPUTSELECT
clk => count[0]~reg0.CLK
clk => count[1]~reg0.CLK
clk => count[2]~reg0.CLK
clk => count[3]~reg0.CLK
clk => count[4]~reg0.CLK
clk => count[5]~reg0.CLK
clk => count[6]~reg0.CLK
clk => count[7]~reg0.CLK
slow_edge => count.OUTPUTSELECT
slow_edge => count.OUTPUTSELECT
slow_edge => count.OUTPUTSELECT
slow_edge => count.OUTPUTSELECT
slow_edge => count.OUTPUTSELECT
slow_edge => count.OUTPUTSELECT
slow_edge => count.OUTPUTSELECT
slow_edge => count.OUTPUTSELECT
reset => count.OUTPUTSELECT
reset => count.OUTPUTSELECT
reset => count.OUTPUTSELECT
reset => count.OUTPUTSELECT
reset => count.OUTPUTSELECT
reset => count.OUTPUTSELECT
reset => count.OUTPUTSELECT
reset => count.OUTPUTSELECT
init_val[0] => count.DATAB
init_val[1] => count.DATAB


|lab8|snakes_and_apples:snake|grid_light:center_grid_row[6].center_grid_col[9].light
green_light_on <= green_light_on.DB_MAX_OUTPUT_PORT_TYPE
head <= head.DB_MAX_OUTPUT_PORT_TYPE
game_over_out <= state_n.DB_MAX_OUTPUT_PORT_TYPE
eating => counter256:counter.inc
eating => always0.IN1
game_over_in => state_n.e_off.OUTPUTSELECT
game_over_in => state_n.e_countdown.OUTPUTSELECT
game_over_in => state_n.e_head.OUTPUTSELECT
game_over_in => state_n.OUTPUTSELECT
left => state_n.OUTPUTSELECT
left => state_n.OUTPUTSELECT
left => state_n.OUTPUTSELECT
left => state_n.OUTPUTSELECT
up => state_n.OUTPUTSELECT
up => state_n.OUTPUTSELECT
up => state_n.OUTPUTSELECT
up => state_n.OUTPUTSELECT
right => state_n.OUTPUTSELECT
right => state_n.OUTPUTSELECT
right => state_n.OUTPUTSELECT
right => state_n.OUTPUTSELECT
down => state_n.OUTPUTSELECT
down => state_n.OUTPUTSELECT
down => state_n.OUTPUTSELECT
down => state_n.OUTPUTSELECT
length[0] => counter256:counter.start_val[0]
length[1] => counter256:counter.start_val[1]
length[2] => counter256:counter.start_val[2]
length[3] => counter256:counter.start_val[3]
length[4] => counter256:counter.start_val[4]
length[5] => counter256:counter.start_val[5]
length[6] => counter256:counter.start_val[6]
length[7] => counter256:counter.start_val[7]
dir[0] => Mux0.IN5
dir[0] => Mux1.IN5
dir[0] => Mux2.IN5
dir[0] => Mux3.IN5
dir[1] => Mux0.IN4
dir[1] => Mux1.IN4
dir[1] => Mux2.IN4
dir[1] => Mux3.IN4
clk => counter256:counter.clk
clk => state_r~1.DATAIN
slow_edge => counter256:counter.slow_edge
slow_edge => state_r.OUTPUTSELECT
slow_edge => state_r.OUTPUTSELECT
slow_edge => state_r.OUTPUTSELECT
slow_edge => state_r.OUTPUTSELECT
reset => counter256:counter.reset
reset => state_r.OUTPUTSELECT
reset => state_r.OUTPUTSELECT
reset => state_r.OUTPUTSELECT
reset => state_r.OUTPUTSELECT
light_type[0] => counter256:counter.init_val[0]
light_type[0] => Equal1.IN1
light_type[0] => Equal2.IN1
light_type[1] => counter256:counter.init_val[1]
light_type[1] => Equal1.IN0
light_type[1] => Equal2.IN0


|lab8|snakes_and_apples:snake|grid_light:center_grid_row[6].center_grid_col[9].light|counter256:counter
count[0] <= count[0]~reg0.DB_MAX_OUTPUT_PORT_TYPE
count[1] <= count[1]~reg0.DB_MAX_OUTPUT_PORT_TYPE
count[2] <= count[2]~reg0.DB_MAX_OUTPUT_PORT_TYPE
count[3] <= count[3]~reg0.DB_MAX_OUTPUT_PORT_TYPE
count[4] <= count[4]~reg0.DB_MAX_OUTPUT_PORT_TYPE
count[5] <= count[5]~reg0.DB_MAX_OUTPUT_PORT_TYPE
count[6] <= count[6]~reg0.DB_MAX_OUTPUT_PORT_TYPE
count[7] <= count[7]~reg0.DB_MAX_OUTPUT_PORT_TYPE
start_val[0] => Add0.IN16
start_val[0] => count.DATAB
start_val[1] => Add0.IN15
start_val[1] => count.DATAB
start_val[2] => Add0.IN14
start_val[2] => count.DATAB
start_val[3] => Add0.IN13
start_val[3] => count.DATAB
start_val[4] => Add0.IN12
start_val[4] => count.DATAB
start_val[5] => Add0.IN11
start_val[5] => count.DATAB
start_val[6] => Add0.IN10
start_val[6] => count.DATAB
start_val[7] => Add0.IN9
start_val[7] => count.DATAB
inc => count.OUTPUTSELECT
inc => count.OUTPUTSELECT
inc => count.OUTPUTSELECT
inc => count.OUTPUTSELECT
inc => count.OUTPUTSELECT
inc => count.OUTPUTSELECT
inc => count.OUTPUTSELECT
inc => count.OUTPUTSELECT
inc => always0.IN0
enable => always0.IN1
enable => count.OUTPUTSELECT
enable => count.OUTPUTSELECT
enable => count.OUTPUTSELECT
enable => count.OUTPUTSELECT
enable => count.OUTPUTSELECT
enable => count.OUTPUTSELECT
enable => count.OUTPUTSELECT
enable => count.OUTPUTSELECT
clk => count[0]~reg0.CLK
clk => count[1]~reg0.CLK
clk => count[2]~reg0.CLK
clk => count[3]~reg0.CLK
clk => count[4]~reg0.CLK
clk => count[5]~reg0.CLK
clk => count[6]~reg0.CLK
clk => count[7]~reg0.CLK
slow_edge => count.OUTPUTSELECT
slow_edge => count.OUTPUTSELECT
slow_edge => count.OUTPUTSELECT
slow_edge => count.OUTPUTSELECT
slow_edge => count.OUTPUTSELECT
slow_edge => count.OUTPUTSELECT
slow_edge => count.OUTPUTSELECT
slow_edge => count.OUTPUTSELECT
reset => count.OUTPUTSELECT
reset => count.OUTPUTSELECT
reset => count.OUTPUTSELECT
reset => count.OUTPUTSELECT
reset => count.OUTPUTSELECT
reset => count.OUTPUTSELECT
reset => count.OUTPUTSELECT
reset => count.OUTPUTSELECT
init_val[0] => count.DATAB
init_val[1] => count.DATAB


|lab8|snakes_and_apples:snake|grid_light:center_grid_row[6].center_grid_col[10].light
green_light_on <= green_light_on.DB_MAX_OUTPUT_PORT_TYPE
head <= head.DB_MAX_OUTPUT_PORT_TYPE
game_over_out <= state_n.DB_MAX_OUTPUT_PORT_TYPE
eating => counter256:counter.inc
eating => always0.IN1
game_over_in => state_n.e_off.OUTPUTSELECT
game_over_in => state_n.e_countdown.OUTPUTSELECT
game_over_in => state_n.e_head.OUTPUTSELECT
game_over_in => state_n.OUTPUTSELECT
left => state_n.OUTPUTSELECT
left => state_n.OUTPUTSELECT
left => state_n.OUTPUTSELECT
left => state_n.OUTPUTSELECT
up => state_n.OUTPUTSELECT
up => state_n.OUTPUTSELECT
up => state_n.OUTPUTSELECT
up => state_n.OUTPUTSELECT
right => state_n.OUTPUTSELECT
right => state_n.OUTPUTSELECT
right => state_n.OUTPUTSELECT
right => state_n.OUTPUTSELECT
down => state_n.OUTPUTSELECT
down => state_n.OUTPUTSELECT
down => state_n.OUTPUTSELECT
down => state_n.OUTPUTSELECT
length[0] => counter256:counter.start_val[0]
length[1] => counter256:counter.start_val[1]
length[2] => counter256:counter.start_val[2]
length[3] => counter256:counter.start_val[3]
length[4] => counter256:counter.start_val[4]
length[5] => counter256:counter.start_val[5]
length[6] => counter256:counter.start_val[6]
length[7] => counter256:counter.start_val[7]
dir[0] => Mux0.IN5
dir[0] => Mux1.IN5
dir[0] => Mux2.IN5
dir[0] => Mux3.IN5
dir[1] => Mux0.IN4
dir[1] => Mux1.IN4
dir[1] => Mux2.IN4
dir[1] => Mux3.IN4
clk => counter256:counter.clk
clk => state_r~1.DATAIN
slow_edge => counter256:counter.slow_edge
slow_edge => state_r.OUTPUTSELECT
slow_edge => state_r.OUTPUTSELECT
slow_edge => state_r.OUTPUTSELECT
slow_edge => state_r.OUTPUTSELECT
reset => counter256:counter.reset
reset => state_r.OUTPUTSELECT
reset => state_r.OUTPUTSELECT
reset => state_r.OUTPUTSELECT
reset => state_r.OUTPUTSELECT
light_type[0] => counter256:counter.init_val[0]
light_type[0] => Equal1.IN1
light_type[0] => Equal2.IN1
light_type[1] => counter256:counter.init_val[1]
light_type[1] => Equal1.IN0
light_type[1] => Equal2.IN0


|lab8|snakes_and_apples:snake|grid_light:center_grid_row[6].center_grid_col[10].light|counter256:counter
count[0] <= count[0]~reg0.DB_MAX_OUTPUT_PORT_TYPE
count[1] <= count[1]~reg0.DB_MAX_OUTPUT_PORT_TYPE
count[2] <= count[2]~reg0.DB_MAX_OUTPUT_PORT_TYPE
count[3] <= count[3]~reg0.DB_MAX_OUTPUT_PORT_TYPE
count[4] <= count[4]~reg0.DB_MAX_OUTPUT_PORT_TYPE
count[5] <= count[5]~reg0.DB_MAX_OUTPUT_PORT_TYPE
count[6] <= count[6]~reg0.DB_MAX_OUTPUT_PORT_TYPE
count[7] <= count[7]~reg0.DB_MAX_OUTPUT_PORT_TYPE
start_val[0] => Add0.IN16
start_val[0] => count.DATAB
start_val[1] => Add0.IN15
start_val[1] => count.DATAB
start_val[2] => Add0.IN14
start_val[2] => count.DATAB
start_val[3] => Add0.IN13
start_val[3] => count.DATAB
start_val[4] => Add0.IN12
start_val[4] => count.DATAB
start_val[5] => Add0.IN11
start_val[5] => count.DATAB
start_val[6] => Add0.IN10
start_val[6] => count.DATAB
start_val[7] => Add0.IN9
start_val[7] => count.DATAB
inc => count.OUTPUTSELECT
inc => count.OUTPUTSELECT
inc => count.OUTPUTSELECT
inc => count.OUTPUTSELECT
inc => count.OUTPUTSELECT
inc => count.OUTPUTSELECT
inc => count.OUTPUTSELECT
inc => count.OUTPUTSELECT
inc => always0.IN0
enable => always0.IN1
enable => count.OUTPUTSELECT
enable => count.OUTPUTSELECT
enable => count.OUTPUTSELECT
enable => count.OUTPUTSELECT
enable => count.OUTPUTSELECT
enable => count.OUTPUTSELECT
enable => count.OUTPUTSELECT
enable => count.OUTPUTSELECT
clk => count[0]~reg0.CLK
clk => count[1]~reg0.CLK
clk => count[2]~reg0.CLK
clk => count[3]~reg0.CLK
clk => count[4]~reg0.CLK
clk => count[5]~reg0.CLK
clk => count[6]~reg0.CLK
clk => count[7]~reg0.CLK
slow_edge => count.OUTPUTSELECT
slow_edge => count.OUTPUTSELECT
slow_edge => count.OUTPUTSELECT
slow_edge => count.OUTPUTSELECT
slow_edge => count.OUTPUTSELECT
slow_edge => count.OUTPUTSELECT
slow_edge => count.OUTPUTSELECT
slow_edge => count.OUTPUTSELECT
reset => count.OUTPUTSELECT
reset => count.OUTPUTSELECT
reset => count.OUTPUTSELECT
reset => count.OUTPUTSELECT
reset => count.OUTPUTSELECT
reset => count.OUTPUTSELECT
reset => count.OUTPUTSELECT
reset => count.OUTPUTSELECT
init_val[0] => count.DATAB
init_val[1] => count.DATAB


|lab8|snakes_and_apples:snake|grid_light:center_grid_row[6].center_grid_col[11].light
green_light_on <= green_light_on.DB_MAX_OUTPUT_PORT_TYPE
head <= head.DB_MAX_OUTPUT_PORT_TYPE
game_over_out <= state_n.DB_MAX_OUTPUT_PORT_TYPE
eating => counter256:counter.inc
eating => always0.IN1
game_over_in => state_n.e_off.OUTPUTSELECT
game_over_in => state_n.e_countdown.OUTPUTSELECT
game_over_in => state_n.e_head.OUTPUTSELECT
game_over_in => state_n.OUTPUTSELECT
left => state_n.OUTPUTSELECT
left => state_n.OUTPUTSELECT
left => state_n.OUTPUTSELECT
left => state_n.OUTPUTSELECT
up => state_n.OUTPUTSELECT
up => state_n.OUTPUTSELECT
up => state_n.OUTPUTSELECT
up => state_n.OUTPUTSELECT
right => state_n.OUTPUTSELECT
right => state_n.OUTPUTSELECT
right => state_n.OUTPUTSELECT
right => state_n.OUTPUTSELECT
down => state_n.OUTPUTSELECT
down => state_n.OUTPUTSELECT
down => state_n.OUTPUTSELECT
down => state_n.OUTPUTSELECT
length[0] => counter256:counter.start_val[0]
length[1] => counter256:counter.start_val[1]
length[2] => counter256:counter.start_val[2]
length[3] => counter256:counter.start_val[3]
length[4] => counter256:counter.start_val[4]
length[5] => counter256:counter.start_val[5]
length[6] => counter256:counter.start_val[6]
length[7] => counter256:counter.start_val[7]
dir[0] => Mux0.IN5
dir[0] => Mux1.IN5
dir[0] => Mux2.IN5
dir[0] => Mux3.IN5
dir[1] => Mux0.IN4
dir[1] => Mux1.IN4
dir[1] => Mux2.IN4
dir[1] => Mux3.IN4
clk => counter256:counter.clk
clk => state_r~1.DATAIN
slow_edge => counter256:counter.slow_edge
slow_edge => state_r.OUTPUTSELECT
slow_edge => state_r.OUTPUTSELECT
slow_edge => state_r.OUTPUTSELECT
slow_edge => state_r.OUTPUTSELECT
reset => counter256:counter.reset
reset => state_r.OUTPUTSELECT
reset => state_r.OUTPUTSELECT
reset => state_r.OUTPUTSELECT
reset => state_r.OUTPUTSELECT
light_type[0] => counter256:counter.init_val[0]
light_type[0] => Equal1.IN1
light_type[0] => Equal2.IN1
light_type[1] => counter256:counter.init_val[1]
light_type[1] => Equal1.IN0
light_type[1] => Equal2.IN0


|lab8|snakes_and_apples:snake|grid_light:center_grid_row[6].center_grid_col[11].light|counter256:counter
count[0] <= count[0]~reg0.DB_MAX_OUTPUT_PORT_TYPE
count[1] <= count[1]~reg0.DB_MAX_OUTPUT_PORT_TYPE
count[2] <= count[2]~reg0.DB_MAX_OUTPUT_PORT_TYPE
count[3] <= count[3]~reg0.DB_MAX_OUTPUT_PORT_TYPE
count[4] <= count[4]~reg0.DB_MAX_OUTPUT_PORT_TYPE
count[5] <= count[5]~reg0.DB_MAX_OUTPUT_PORT_TYPE
count[6] <= count[6]~reg0.DB_MAX_OUTPUT_PORT_TYPE
count[7] <= count[7]~reg0.DB_MAX_OUTPUT_PORT_TYPE
start_val[0] => Add0.IN16
start_val[0] => count.DATAB
start_val[1] => Add0.IN15
start_val[1] => count.DATAB
start_val[2] => Add0.IN14
start_val[2] => count.DATAB
start_val[3] => Add0.IN13
start_val[3] => count.DATAB
start_val[4] => Add0.IN12
start_val[4] => count.DATAB
start_val[5] => Add0.IN11
start_val[5] => count.DATAB
start_val[6] => Add0.IN10
start_val[6] => count.DATAB
start_val[7] => Add0.IN9
start_val[7] => count.DATAB
inc => count.OUTPUTSELECT
inc => count.OUTPUTSELECT
inc => count.OUTPUTSELECT
inc => count.OUTPUTSELECT
inc => count.OUTPUTSELECT
inc => count.OUTPUTSELECT
inc => count.OUTPUTSELECT
inc => count.OUTPUTSELECT
inc => always0.IN0
enable => always0.IN1
enable => count.OUTPUTSELECT
enable => count.OUTPUTSELECT
enable => count.OUTPUTSELECT
enable => count.OUTPUTSELECT
enable => count.OUTPUTSELECT
enable => count.OUTPUTSELECT
enable => count.OUTPUTSELECT
enable => count.OUTPUTSELECT
clk => count[0]~reg0.CLK
clk => count[1]~reg0.CLK
clk => count[2]~reg0.CLK
clk => count[3]~reg0.CLK
clk => count[4]~reg0.CLK
clk => count[5]~reg0.CLK
clk => count[6]~reg0.CLK
clk => count[7]~reg0.CLK
slow_edge => count.OUTPUTSELECT
slow_edge => count.OUTPUTSELECT
slow_edge => count.OUTPUTSELECT
slow_edge => count.OUTPUTSELECT
slow_edge => count.OUTPUTSELECT
slow_edge => count.OUTPUTSELECT
slow_edge => count.OUTPUTSELECT
slow_edge => count.OUTPUTSELECT
reset => count.OUTPUTSELECT
reset => count.OUTPUTSELECT
reset => count.OUTPUTSELECT
reset => count.OUTPUTSELECT
reset => count.OUTPUTSELECT
reset => count.OUTPUTSELECT
reset => count.OUTPUTSELECT
reset => count.OUTPUTSELECT
init_val[0] => count.DATAB
init_val[1] => count.DATAB


|lab8|snakes_and_apples:snake|grid_light:center_grid_row[6].center_grid_col[12].light
green_light_on <= green_light_on.DB_MAX_OUTPUT_PORT_TYPE
head <= head.DB_MAX_OUTPUT_PORT_TYPE
game_over_out <= state_n.DB_MAX_OUTPUT_PORT_TYPE
eating => counter256:counter.inc
eating => always0.IN1
game_over_in => state_n.e_off.OUTPUTSELECT
game_over_in => state_n.e_countdown.OUTPUTSELECT
game_over_in => state_n.e_head.OUTPUTSELECT
game_over_in => state_n.OUTPUTSELECT
left => state_n.OUTPUTSELECT
left => state_n.OUTPUTSELECT
left => state_n.OUTPUTSELECT
left => state_n.OUTPUTSELECT
up => state_n.OUTPUTSELECT
up => state_n.OUTPUTSELECT
up => state_n.OUTPUTSELECT
up => state_n.OUTPUTSELECT
right => state_n.OUTPUTSELECT
right => state_n.OUTPUTSELECT
right => state_n.OUTPUTSELECT
right => state_n.OUTPUTSELECT
down => state_n.OUTPUTSELECT
down => state_n.OUTPUTSELECT
down => state_n.OUTPUTSELECT
down => state_n.OUTPUTSELECT
length[0] => counter256:counter.start_val[0]
length[1] => counter256:counter.start_val[1]
length[2] => counter256:counter.start_val[2]
length[3] => counter256:counter.start_val[3]
length[4] => counter256:counter.start_val[4]
length[5] => counter256:counter.start_val[5]
length[6] => counter256:counter.start_val[6]
length[7] => counter256:counter.start_val[7]
dir[0] => Mux0.IN5
dir[0] => Mux1.IN5
dir[0] => Mux2.IN5
dir[0] => Mux3.IN5
dir[1] => Mux0.IN4
dir[1] => Mux1.IN4
dir[1] => Mux2.IN4
dir[1] => Mux3.IN4
clk => counter256:counter.clk
clk => state_r~1.DATAIN
slow_edge => counter256:counter.slow_edge
slow_edge => state_r.OUTPUTSELECT
slow_edge => state_r.OUTPUTSELECT
slow_edge => state_r.OUTPUTSELECT
slow_edge => state_r.OUTPUTSELECT
reset => counter256:counter.reset
reset => state_r.OUTPUTSELECT
reset => state_r.OUTPUTSELECT
reset => state_r.OUTPUTSELECT
reset => state_r.OUTPUTSELECT
light_type[0] => counter256:counter.init_val[0]
light_type[0] => Equal1.IN1
light_type[0] => Equal2.IN1
light_type[1] => counter256:counter.init_val[1]
light_type[1] => Equal1.IN0
light_type[1] => Equal2.IN0


|lab8|snakes_and_apples:snake|grid_light:center_grid_row[6].center_grid_col[12].light|counter256:counter
count[0] <= count[0]~reg0.DB_MAX_OUTPUT_PORT_TYPE
count[1] <= count[1]~reg0.DB_MAX_OUTPUT_PORT_TYPE
count[2] <= count[2]~reg0.DB_MAX_OUTPUT_PORT_TYPE
count[3] <= count[3]~reg0.DB_MAX_OUTPUT_PORT_TYPE
count[4] <= count[4]~reg0.DB_MAX_OUTPUT_PORT_TYPE
count[5] <= count[5]~reg0.DB_MAX_OUTPUT_PORT_TYPE
count[6] <= count[6]~reg0.DB_MAX_OUTPUT_PORT_TYPE
count[7] <= count[7]~reg0.DB_MAX_OUTPUT_PORT_TYPE
start_val[0] => Add0.IN16
start_val[0] => count.DATAB
start_val[1] => Add0.IN15
start_val[1] => count.DATAB
start_val[2] => Add0.IN14
start_val[2] => count.DATAB
start_val[3] => Add0.IN13
start_val[3] => count.DATAB
start_val[4] => Add0.IN12
start_val[4] => count.DATAB
start_val[5] => Add0.IN11
start_val[5] => count.DATAB
start_val[6] => Add0.IN10
start_val[6] => count.DATAB
start_val[7] => Add0.IN9
start_val[7] => count.DATAB
inc => count.OUTPUTSELECT
inc => count.OUTPUTSELECT
inc => count.OUTPUTSELECT
inc => count.OUTPUTSELECT
inc => count.OUTPUTSELECT
inc => count.OUTPUTSELECT
inc => count.OUTPUTSELECT
inc => count.OUTPUTSELECT
inc => always0.IN0
enable => always0.IN1
enable => count.OUTPUTSELECT
enable => count.OUTPUTSELECT
enable => count.OUTPUTSELECT
enable => count.OUTPUTSELECT
enable => count.OUTPUTSELECT
enable => count.OUTPUTSELECT
enable => count.OUTPUTSELECT
enable => count.OUTPUTSELECT
clk => count[0]~reg0.CLK
clk => count[1]~reg0.CLK
clk => count[2]~reg0.CLK
clk => count[3]~reg0.CLK
clk => count[4]~reg0.CLK
clk => count[5]~reg0.CLK
clk => count[6]~reg0.CLK
clk => count[7]~reg0.CLK
slow_edge => count.OUTPUTSELECT
slow_edge => count.OUTPUTSELECT
slow_edge => count.OUTPUTSELECT
slow_edge => count.OUTPUTSELECT
slow_edge => count.OUTPUTSELECT
slow_edge => count.OUTPUTSELECT
slow_edge => count.OUTPUTSELECT
slow_edge => count.OUTPUTSELECT
reset => count.OUTPUTSELECT
reset => count.OUTPUTSELECT
reset => count.OUTPUTSELECT
reset => count.OUTPUTSELECT
reset => count.OUTPUTSELECT
reset => count.OUTPUTSELECT
reset => count.OUTPUTSELECT
reset => count.OUTPUTSELECT
init_val[0] => count.DATAB
init_val[1] => count.DATAB


|lab8|snakes_and_apples:snake|grid_light:center_grid_row[6].center_grid_col[13].light
green_light_on <= green_light_on.DB_MAX_OUTPUT_PORT_TYPE
head <= head.DB_MAX_OUTPUT_PORT_TYPE
game_over_out <= state_n.DB_MAX_OUTPUT_PORT_TYPE
eating => counter256:counter.inc
eating => always0.IN1
game_over_in => state_n.e_off.OUTPUTSELECT
game_over_in => state_n.e_countdown.OUTPUTSELECT
game_over_in => state_n.e_head.OUTPUTSELECT
game_over_in => state_n.OUTPUTSELECT
left => state_n.OUTPUTSELECT
left => state_n.OUTPUTSELECT
left => state_n.OUTPUTSELECT
left => state_n.OUTPUTSELECT
up => state_n.OUTPUTSELECT
up => state_n.OUTPUTSELECT
up => state_n.OUTPUTSELECT
up => state_n.OUTPUTSELECT
right => state_n.OUTPUTSELECT
right => state_n.OUTPUTSELECT
right => state_n.OUTPUTSELECT
right => state_n.OUTPUTSELECT
down => state_n.OUTPUTSELECT
down => state_n.OUTPUTSELECT
down => state_n.OUTPUTSELECT
down => state_n.OUTPUTSELECT
length[0] => counter256:counter.start_val[0]
length[1] => counter256:counter.start_val[1]
length[2] => counter256:counter.start_val[2]
length[3] => counter256:counter.start_val[3]
length[4] => counter256:counter.start_val[4]
length[5] => counter256:counter.start_val[5]
length[6] => counter256:counter.start_val[6]
length[7] => counter256:counter.start_val[7]
dir[0] => Mux0.IN5
dir[0] => Mux1.IN5
dir[0] => Mux2.IN5
dir[0] => Mux3.IN5
dir[1] => Mux0.IN4
dir[1] => Mux1.IN4
dir[1] => Mux2.IN4
dir[1] => Mux3.IN4
clk => counter256:counter.clk
clk => state_r~1.DATAIN
slow_edge => counter256:counter.slow_edge
slow_edge => state_r.OUTPUTSELECT
slow_edge => state_r.OUTPUTSELECT
slow_edge => state_r.OUTPUTSELECT
slow_edge => state_r.OUTPUTSELECT
reset => counter256:counter.reset
reset => state_r.OUTPUTSELECT
reset => state_r.OUTPUTSELECT
reset => state_r.OUTPUTSELECT
reset => state_r.OUTPUTSELECT
light_type[0] => counter256:counter.init_val[0]
light_type[0] => Equal1.IN1
light_type[0] => Equal2.IN1
light_type[1] => counter256:counter.init_val[1]
light_type[1] => Equal1.IN0
light_type[1] => Equal2.IN0


|lab8|snakes_and_apples:snake|grid_light:center_grid_row[6].center_grid_col[13].light|counter256:counter
count[0] <= count[0]~reg0.DB_MAX_OUTPUT_PORT_TYPE
count[1] <= count[1]~reg0.DB_MAX_OUTPUT_PORT_TYPE
count[2] <= count[2]~reg0.DB_MAX_OUTPUT_PORT_TYPE
count[3] <= count[3]~reg0.DB_MAX_OUTPUT_PORT_TYPE
count[4] <= count[4]~reg0.DB_MAX_OUTPUT_PORT_TYPE
count[5] <= count[5]~reg0.DB_MAX_OUTPUT_PORT_TYPE
count[6] <= count[6]~reg0.DB_MAX_OUTPUT_PORT_TYPE
count[7] <= count[7]~reg0.DB_MAX_OUTPUT_PORT_TYPE
start_val[0] => Add0.IN16
start_val[0] => count.DATAB
start_val[1] => Add0.IN15
start_val[1] => count.DATAB
start_val[2] => Add0.IN14
start_val[2] => count.DATAB
start_val[3] => Add0.IN13
start_val[3] => count.DATAB
start_val[4] => Add0.IN12
start_val[4] => count.DATAB
start_val[5] => Add0.IN11
start_val[5] => count.DATAB
start_val[6] => Add0.IN10
start_val[6] => count.DATAB
start_val[7] => Add0.IN9
start_val[7] => count.DATAB
inc => count.OUTPUTSELECT
inc => count.OUTPUTSELECT
inc => count.OUTPUTSELECT
inc => count.OUTPUTSELECT
inc => count.OUTPUTSELECT
inc => count.OUTPUTSELECT
inc => count.OUTPUTSELECT
inc => count.OUTPUTSELECT
inc => always0.IN0
enable => always0.IN1
enable => count.OUTPUTSELECT
enable => count.OUTPUTSELECT
enable => count.OUTPUTSELECT
enable => count.OUTPUTSELECT
enable => count.OUTPUTSELECT
enable => count.OUTPUTSELECT
enable => count.OUTPUTSELECT
enable => count.OUTPUTSELECT
clk => count[0]~reg0.CLK
clk => count[1]~reg0.CLK
clk => count[2]~reg0.CLK
clk => count[3]~reg0.CLK
clk => count[4]~reg0.CLK
clk => count[5]~reg0.CLK
clk => count[6]~reg0.CLK
clk => count[7]~reg0.CLK
slow_edge => count.OUTPUTSELECT
slow_edge => count.OUTPUTSELECT
slow_edge => count.OUTPUTSELECT
slow_edge => count.OUTPUTSELECT
slow_edge => count.OUTPUTSELECT
slow_edge => count.OUTPUTSELECT
slow_edge => count.OUTPUTSELECT
slow_edge => count.OUTPUTSELECT
reset => count.OUTPUTSELECT
reset => count.OUTPUTSELECT
reset => count.OUTPUTSELECT
reset => count.OUTPUTSELECT
reset => count.OUTPUTSELECT
reset => count.OUTPUTSELECT
reset => count.OUTPUTSELECT
reset => count.OUTPUTSELECT
init_val[0] => count.DATAB
init_val[1] => count.DATAB


|lab8|snakes_and_apples:snake|grid_light:center_grid_row[6].center_grid_col[14].light
green_light_on <= green_light_on.DB_MAX_OUTPUT_PORT_TYPE
head <= head.DB_MAX_OUTPUT_PORT_TYPE
game_over_out <= state_n.DB_MAX_OUTPUT_PORT_TYPE
eating => counter256:counter.inc
eating => always0.IN1
game_over_in => state_n.e_off.OUTPUTSELECT
game_over_in => state_n.e_countdown.OUTPUTSELECT
game_over_in => state_n.e_head.OUTPUTSELECT
game_over_in => state_n.OUTPUTSELECT
left => state_n.OUTPUTSELECT
left => state_n.OUTPUTSELECT
left => state_n.OUTPUTSELECT
left => state_n.OUTPUTSELECT
up => state_n.OUTPUTSELECT
up => state_n.OUTPUTSELECT
up => state_n.OUTPUTSELECT
up => state_n.OUTPUTSELECT
right => state_n.OUTPUTSELECT
right => state_n.OUTPUTSELECT
right => state_n.OUTPUTSELECT
right => state_n.OUTPUTSELECT
down => state_n.OUTPUTSELECT
down => state_n.OUTPUTSELECT
down => state_n.OUTPUTSELECT
down => state_n.OUTPUTSELECT
length[0] => counter256:counter.start_val[0]
length[1] => counter256:counter.start_val[1]
length[2] => counter256:counter.start_val[2]
length[3] => counter256:counter.start_val[3]
length[4] => counter256:counter.start_val[4]
length[5] => counter256:counter.start_val[5]
length[6] => counter256:counter.start_val[6]
length[7] => counter256:counter.start_val[7]
dir[0] => Mux0.IN5
dir[0] => Mux1.IN5
dir[0] => Mux2.IN5
dir[0] => Mux3.IN5
dir[1] => Mux0.IN4
dir[1] => Mux1.IN4
dir[1] => Mux2.IN4
dir[1] => Mux3.IN4
clk => counter256:counter.clk
clk => state_r~1.DATAIN
slow_edge => counter256:counter.slow_edge
slow_edge => state_r.OUTPUTSELECT
slow_edge => state_r.OUTPUTSELECT
slow_edge => state_r.OUTPUTSELECT
slow_edge => state_r.OUTPUTSELECT
reset => counter256:counter.reset
reset => state_r.OUTPUTSELECT
reset => state_r.OUTPUTSELECT
reset => state_r.OUTPUTSELECT
reset => state_r.OUTPUTSELECT
light_type[0] => counter256:counter.init_val[0]
light_type[0] => Equal1.IN1
light_type[0] => Equal2.IN1
light_type[1] => counter256:counter.init_val[1]
light_type[1] => Equal1.IN0
light_type[1] => Equal2.IN0


|lab8|snakes_and_apples:snake|grid_light:center_grid_row[6].center_grid_col[14].light|counter256:counter
count[0] <= count[0]~reg0.DB_MAX_OUTPUT_PORT_TYPE
count[1] <= count[1]~reg0.DB_MAX_OUTPUT_PORT_TYPE
count[2] <= count[2]~reg0.DB_MAX_OUTPUT_PORT_TYPE
count[3] <= count[3]~reg0.DB_MAX_OUTPUT_PORT_TYPE
count[4] <= count[4]~reg0.DB_MAX_OUTPUT_PORT_TYPE
count[5] <= count[5]~reg0.DB_MAX_OUTPUT_PORT_TYPE
count[6] <= count[6]~reg0.DB_MAX_OUTPUT_PORT_TYPE
count[7] <= count[7]~reg0.DB_MAX_OUTPUT_PORT_TYPE
start_val[0] => Add0.IN16
start_val[0] => count.DATAB
start_val[1] => Add0.IN15
start_val[1] => count.DATAB
start_val[2] => Add0.IN14
start_val[2] => count.DATAB
start_val[3] => Add0.IN13
start_val[3] => count.DATAB
start_val[4] => Add0.IN12
start_val[4] => count.DATAB
start_val[5] => Add0.IN11
start_val[5] => count.DATAB
start_val[6] => Add0.IN10
start_val[6] => count.DATAB
start_val[7] => Add0.IN9
start_val[7] => count.DATAB
inc => count.OUTPUTSELECT
inc => count.OUTPUTSELECT
inc => count.OUTPUTSELECT
inc => count.OUTPUTSELECT
inc => count.OUTPUTSELECT
inc => count.OUTPUTSELECT
inc => count.OUTPUTSELECT
inc => count.OUTPUTSELECT
inc => always0.IN0
enable => always0.IN1
enable => count.OUTPUTSELECT
enable => count.OUTPUTSELECT
enable => count.OUTPUTSELECT
enable => count.OUTPUTSELECT
enable => count.OUTPUTSELECT
enable => count.OUTPUTSELECT
enable => count.OUTPUTSELECT
enable => count.OUTPUTSELECT
clk => count[0]~reg0.CLK
clk => count[1]~reg0.CLK
clk => count[2]~reg0.CLK
clk => count[3]~reg0.CLK
clk => count[4]~reg0.CLK
clk => count[5]~reg0.CLK
clk => count[6]~reg0.CLK
clk => count[7]~reg0.CLK
slow_edge => count.OUTPUTSELECT
slow_edge => count.OUTPUTSELECT
slow_edge => count.OUTPUTSELECT
slow_edge => count.OUTPUTSELECT
slow_edge => count.OUTPUTSELECT
slow_edge => count.OUTPUTSELECT
slow_edge => count.OUTPUTSELECT
slow_edge => count.OUTPUTSELECT
reset => count.OUTPUTSELECT
reset => count.OUTPUTSELECT
reset => count.OUTPUTSELECT
reset => count.OUTPUTSELECT
reset => count.OUTPUTSELECT
reset => count.OUTPUTSELECT
reset => count.OUTPUTSELECT
reset => count.OUTPUTSELECT
init_val[0] => count.DATAB
init_val[1] => count.DATAB


|lab8|snakes_and_apples:snake|grid_light:center_grid_row[7].center_grid_col[1].light
green_light_on <= green_light_on.DB_MAX_OUTPUT_PORT_TYPE
head <= head.DB_MAX_OUTPUT_PORT_TYPE
game_over_out <= state_n.DB_MAX_OUTPUT_PORT_TYPE
eating => counter256:counter.inc
eating => always0.IN1
game_over_in => state_n.e_off.OUTPUTSELECT
game_over_in => state_n.e_countdown.OUTPUTSELECT
game_over_in => state_n.e_head.OUTPUTSELECT
game_over_in => state_n.OUTPUTSELECT
left => state_n.OUTPUTSELECT
left => state_n.OUTPUTSELECT
left => state_n.OUTPUTSELECT
left => state_n.OUTPUTSELECT
up => state_n.OUTPUTSELECT
up => state_n.OUTPUTSELECT
up => state_n.OUTPUTSELECT
up => state_n.OUTPUTSELECT
right => state_n.OUTPUTSELECT
right => state_n.OUTPUTSELECT
right => state_n.OUTPUTSELECT
right => state_n.OUTPUTSELECT
down => state_n.OUTPUTSELECT
down => state_n.OUTPUTSELECT
down => state_n.OUTPUTSELECT
down => state_n.OUTPUTSELECT
length[0] => counter256:counter.start_val[0]
length[1] => counter256:counter.start_val[1]
length[2] => counter256:counter.start_val[2]
length[3] => counter256:counter.start_val[3]
length[4] => counter256:counter.start_val[4]
length[5] => counter256:counter.start_val[5]
length[6] => counter256:counter.start_val[6]
length[7] => counter256:counter.start_val[7]
dir[0] => Mux0.IN5
dir[0] => Mux1.IN5
dir[0] => Mux2.IN5
dir[0] => Mux3.IN5
dir[1] => Mux0.IN4
dir[1] => Mux1.IN4
dir[1] => Mux2.IN4
dir[1] => Mux3.IN4
clk => counter256:counter.clk
clk => state_r~1.DATAIN
slow_edge => counter256:counter.slow_edge
slow_edge => state_r.OUTPUTSELECT
slow_edge => state_r.OUTPUTSELECT
slow_edge => state_r.OUTPUTSELECT
slow_edge => state_r.OUTPUTSELECT
reset => counter256:counter.reset
reset => state_r.OUTPUTSELECT
reset => state_r.OUTPUTSELECT
reset => state_r.OUTPUTSELECT
reset => state_r.OUTPUTSELECT
light_type[0] => counter256:counter.init_val[0]
light_type[0] => Equal1.IN1
light_type[0] => Equal2.IN1
light_type[1] => counter256:counter.init_val[1]
light_type[1] => Equal1.IN0
light_type[1] => Equal2.IN0


|lab8|snakes_and_apples:snake|grid_light:center_grid_row[7].center_grid_col[1].light|counter256:counter
count[0] <= count[0]~reg0.DB_MAX_OUTPUT_PORT_TYPE
count[1] <= count[1]~reg0.DB_MAX_OUTPUT_PORT_TYPE
count[2] <= count[2]~reg0.DB_MAX_OUTPUT_PORT_TYPE
count[3] <= count[3]~reg0.DB_MAX_OUTPUT_PORT_TYPE
count[4] <= count[4]~reg0.DB_MAX_OUTPUT_PORT_TYPE
count[5] <= count[5]~reg0.DB_MAX_OUTPUT_PORT_TYPE
count[6] <= count[6]~reg0.DB_MAX_OUTPUT_PORT_TYPE
count[7] <= count[7]~reg0.DB_MAX_OUTPUT_PORT_TYPE
start_val[0] => Add0.IN16
start_val[0] => count.DATAB
start_val[1] => Add0.IN15
start_val[1] => count.DATAB
start_val[2] => Add0.IN14
start_val[2] => count.DATAB
start_val[3] => Add0.IN13
start_val[3] => count.DATAB
start_val[4] => Add0.IN12
start_val[4] => count.DATAB
start_val[5] => Add0.IN11
start_val[5] => count.DATAB
start_val[6] => Add0.IN10
start_val[6] => count.DATAB
start_val[7] => Add0.IN9
start_val[7] => count.DATAB
inc => count.OUTPUTSELECT
inc => count.OUTPUTSELECT
inc => count.OUTPUTSELECT
inc => count.OUTPUTSELECT
inc => count.OUTPUTSELECT
inc => count.OUTPUTSELECT
inc => count.OUTPUTSELECT
inc => count.OUTPUTSELECT
inc => always0.IN0
enable => always0.IN1
enable => count.OUTPUTSELECT
enable => count.OUTPUTSELECT
enable => count.OUTPUTSELECT
enable => count.OUTPUTSELECT
enable => count.OUTPUTSELECT
enable => count.OUTPUTSELECT
enable => count.OUTPUTSELECT
enable => count.OUTPUTSELECT
clk => count[0]~reg0.CLK
clk => count[1]~reg0.CLK
clk => count[2]~reg0.CLK
clk => count[3]~reg0.CLK
clk => count[4]~reg0.CLK
clk => count[5]~reg0.CLK
clk => count[6]~reg0.CLK
clk => count[7]~reg0.CLK
slow_edge => count.OUTPUTSELECT
slow_edge => count.OUTPUTSELECT
slow_edge => count.OUTPUTSELECT
slow_edge => count.OUTPUTSELECT
slow_edge => count.OUTPUTSELECT
slow_edge => count.OUTPUTSELECT
slow_edge => count.OUTPUTSELECT
slow_edge => count.OUTPUTSELECT
reset => count.OUTPUTSELECT
reset => count.OUTPUTSELECT
reset => count.OUTPUTSELECT
reset => count.OUTPUTSELECT
reset => count.OUTPUTSELECT
reset => count.OUTPUTSELECT
reset => count.OUTPUTSELECT
reset => count.OUTPUTSELECT
init_val[0] => count.DATAB
init_val[1] => count.DATAB


|lab8|snakes_and_apples:snake|grid_light:center_grid_row[7].center_grid_col[2].light
green_light_on <= green_light_on.DB_MAX_OUTPUT_PORT_TYPE
head <= head.DB_MAX_OUTPUT_PORT_TYPE
game_over_out <= state_n.DB_MAX_OUTPUT_PORT_TYPE
eating => counter256:counter.inc
eating => always0.IN1
game_over_in => state_n.e_off.OUTPUTSELECT
game_over_in => state_n.e_countdown.OUTPUTSELECT
game_over_in => state_n.e_head.OUTPUTSELECT
game_over_in => state_n.OUTPUTSELECT
left => state_n.OUTPUTSELECT
left => state_n.OUTPUTSELECT
left => state_n.OUTPUTSELECT
left => state_n.OUTPUTSELECT
up => state_n.OUTPUTSELECT
up => state_n.OUTPUTSELECT
up => state_n.OUTPUTSELECT
up => state_n.OUTPUTSELECT
right => state_n.OUTPUTSELECT
right => state_n.OUTPUTSELECT
right => state_n.OUTPUTSELECT
right => state_n.OUTPUTSELECT
down => state_n.OUTPUTSELECT
down => state_n.OUTPUTSELECT
down => state_n.OUTPUTSELECT
down => state_n.OUTPUTSELECT
length[0] => counter256:counter.start_val[0]
length[1] => counter256:counter.start_val[1]
length[2] => counter256:counter.start_val[2]
length[3] => counter256:counter.start_val[3]
length[4] => counter256:counter.start_val[4]
length[5] => counter256:counter.start_val[5]
length[6] => counter256:counter.start_val[6]
length[7] => counter256:counter.start_val[7]
dir[0] => Mux0.IN5
dir[0] => Mux1.IN5
dir[0] => Mux2.IN5
dir[0] => Mux3.IN5
dir[1] => Mux0.IN4
dir[1] => Mux1.IN4
dir[1] => Mux2.IN4
dir[1] => Mux3.IN4
clk => counter256:counter.clk
clk => state_r~1.DATAIN
slow_edge => counter256:counter.slow_edge
slow_edge => state_r.OUTPUTSELECT
slow_edge => state_r.OUTPUTSELECT
slow_edge => state_r.OUTPUTSELECT
slow_edge => state_r.OUTPUTSELECT
reset => counter256:counter.reset
reset => state_r.OUTPUTSELECT
reset => state_r.OUTPUTSELECT
reset => state_r.OUTPUTSELECT
reset => state_r.OUTPUTSELECT
light_type[0] => counter256:counter.init_val[0]
light_type[0] => Equal1.IN1
light_type[0] => Equal2.IN1
light_type[1] => counter256:counter.init_val[1]
light_type[1] => Equal1.IN0
light_type[1] => Equal2.IN0


|lab8|snakes_and_apples:snake|grid_light:center_grid_row[7].center_grid_col[2].light|counter256:counter
count[0] <= count[0]~reg0.DB_MAX_OUTPUT_PORT_TYPE
count[1] <= count[1]~reg0.DB_MAX_OUTPUT_PORT_TYPE
count[2] <= count[2]~reg0.DB_MAX_OUTPUT_PORT_TYPE
count[3] <= count[3]~reg0.DB_MAX_OUTPUT_PORT_TYPE
count[4] <= count[4]~reg0.DB_MAX_OUTPUT_PORT_TYPE
count[5] <= count[5]~reg0.DB_MAX_OUTPUT_PORT_TYPE
count[6] <= count[6]~reg0.DB_MAX_OUTPUT_PORT_TYPE
count[7] <= count[7]~reg0.DB_MAX_OUTPUT_PORT_TYPE
start_val[0] => Add0.IN16
start_val[0] => count.DATAB
start_val[1] => Add0.IN15
start_val[1] => count.DATAB
start_val[2] => Add0.IN14
start_val[2] => count.DATAB
start_val[3] => Add0.IN13
start_val[3] => count.DATAB
start_val[4] => Add0.IN12
start_val[4] => count.DATAB
start_val[5] => Add0.IN11
start_val[5] => count.DATAB
start_val[6] => Add0.IN10
start_val[6] => count.DATAB
start_val[7] => Add0.IN9
start_val[7] => count.DATAB
inc => count.OUTPUTSELECT
inc => count.OUTPUTSELECT
inc => count.OUTPUTSELECT
inc => count.OUTPUTSELECT
inc => count.OUTPUTSELECT
inc => count.OUTPUTSELECT
inc => count.OUTPUTSELECT
inc => count.OUTPUTSELECT
inc => always0.IN0
enable => always0.IN1
enable => count.OUTPUTSELECT
enable => count.OUTPUTSELECT
enable => count.OUTPUTSELECT
enable => count.OUTPUTSELECT
enable => count.OUTPUTSELECT
enable => count.OUTPUTSELECT
enable => count.OUTPUTSELECT
enable => count.OUTPUTSELECT
clk => count[0]~reg0.CLK
clk => count[1]~reg0.CLK
clk => count[2]~reg0.CLK
clk => count[3]~reg0.CLK
clk => count[4]~reg0.CLK
clk => count[5]~reg0.CLK
clk => count[6]~reg0.CLK
clk => count[7]~reg0.CLK
slow_edge => count.OUTPUTSELECT
slow_edge => count.OUTPUTSELECT
slow_edge => count.OUTPUTSELECT
slow_edge => count.OUTPUTSELECT
slow_edge => count.OUTPUTSELECT
slow_edge => count.OUTPUTSELECT
slow_edge => count.OUTPUTSELECT
slow_edge => count.OUTPUTSELECT
reset => count.OUTPUTSELECT
reset => count.OUTPUTSELECT
reset => count.OUTPUTSELECT
reset => count.OUTPUTSELECT
reset => count.OUTPUTSELECT
reset => count.OUTPUTSELECT
reset => count.OUTPUTSELECT
reset => count.OUTPUTSELECT
init_val[0] => count.DATAB
init_val[1] => count.DATAB


|lab8|snakes_and_apples:snake|grid_light:center_grid_row[7].center_grid_col[3].light
green_light_on <= green_light_on.DB_MAX_OUTPUT_PORT_TYPE
head <= head.DB_MAX_OUTPUT_PORT_TYPE
game_over_out <= state_n.DB_MAX_OUTPUT_PORT_TYPE
eating => counter256:counter.inc
eating => always0.IN1
game_over_in => state_n.e_off.OUTPUTSELECT
game_over_in => state_n.e_countdown.OUTPUTSELECT
game_over_in => state_n.e_head.OUTPUTSELECT
game_over_in => state_n.OUTPUTSELECT
left => state_n.OUTPUTSELECT
left => state_n.OUTPUTSELECT
left => state_n.OUTPUTSELECT
left => state_n.OUTPUTSELECT
up => state_n.OUTPUTSELECT
up => state_n.OUTPUTSELECT
up => state_n.OUTPUTSELECT
up => state_n.OUTPUTSELECT
right => state_n.OUTPUTSELECT
right => state_n.OUTPUTSELECT
right => state_n.OUTPUTSELECT
right => state_n.OUTPUTSELECT
down => state_n.OUTPUTSELECT
down => state_n.OUTPUTSELECT
down => state_n.OUTPUTSELECT
down => state_n.OUTPUTSELECT
length[0] => counter256:counter.start_val[0]
length[1] => counter256:counter.start_val[1]
length[2] => counter256:counter.start_val[2]
length[3] => counter256:counter.start_val[3]
length[4] => counter256:counter.start_val[4]
length[5] => counter256:counter.start_val[5]
length[6] => counter256:counter.start_val[6]
length[7] => counter256:counter.start_val[7]
dir[0] => Mux0.IN5
dir[0] => Mux1.IN5
dir[0] => Mux2.IN5
dir[0] => Mux3.IN5
dir[1] => Mux0.IN4
dir[1] => Mux1.IN4
dir[1] => Mux2.IN4
dir[1] => Mux3.IN4
clk => counter256:counter.clk
clk => state_r~1.DATAIN
slow_edge => counter256:counter.slow_edge
slow_edge => state_r.OUTPUTSELECT
slow_edge => state_r.OUTPUTSELECT
slow_edge => state_r.OUTPUTSELECT
slow_edge => state_r.OUTPUTSELECT
reset => counter256:counter.reset
reset => state_r.OUTPUTSELECT
reset => state_r.OUTPUTSELECT
reset => state_r.OUTPUTSELECT
reset => state_r.OUTPUTSELECT
light_type[0] => counter256:counter.init_val[0]
light_type[0] => Equal1.IN1
light_type[0] => Equal2.IN1
light_type[1] => counter256:counter.init_val[1]
light_type[1] => Equal1.IN0
light_type[1] => Equal2.IN0


|lab8|snakes_and_apples:snake|grid_light:center_grid_row[7].center_grid_col[3].light|counter256:counter
count[0] <= count[0]~reg0.DB_MAX_OUTPUT_PORT_TYPE
count[1] <= count[1]~reg0.DB_MAX_OUTPUT_PORT_TYPE
count[2] <= count[2]~reg0.DB_MAX_OUTPUT_PORT_TYPE
count[3] <= count[3]~reg0.DB_MAX_OUTPUT_PORT_TYPE
count[4] <= count[4]~reg0.DB_MAX_OUTPUT_PORT_TYPE
count[5] <= count[5]~reg0.DB_MAX_OUTPUT_PORT_TYPE
count[6] <= count[6]~reg0.DB_MAX_OUTPUT_PORT_TYPE
count[7] <= count[7]~reg0.DB_MAX_OUTPUT_PORT_TYPE
start_val[0] => Add0.IN16
start_val[0] => count.DATAB
start_val[1] => Add0.IN15
start_val[1] => count.DATAB
start_val[2] => Add0.IN14
start_val[2] => count.DATAB
start_val[3] => Add0.IN13
start_val[3] => count.DATAB
start_val[4] => Add0.IN12
start_val[4] => count.DATAB
start_val[5] => Add0.IN11
start_val[5] => count.DATAB
start_val[6] => Add0.IN10
start_val[6] => count.DATAB
start_val[7] => Add0.IN9
start_val[7] => count.DATAB
inc => count.OUTPUTSELECT
inc => count.OUTPUTSELECT
inc => count.OUTPUTSELECT
inc => count.OUTPUTSELECT
inc => count.OUTPUTSELECT
inc => count.OUTPUTSELECT
inc => count.OUTPUTSELECT
inc => count.OUTPUTSELECT
inc => always0.IN0
enable => always0.IN1
enable => count.OUTPUTSELECT
enable => count.OUTPUTSELECT
enable => count.OUTPUTSELECT
enable => count.OUTPUTSELECT
enable => count.OUTPUTSELECT
enable => count.OUTPUTSELECT
enable => count.OUTPUTSELECT
enable => count.OUTPUTSELECT
clk => count[0]~reg0.CLK
clk => count[1]~reg0.CLK
clk => count[2]~reg0.CLK
clk => count[3]~reg0.CLK
clk => count[4]~reg0.CLK
clk => count[5]~reg0.CLK
clk => count[6]~reg0.CLK
clk => count[7]~reg0.CLK
slow_edge => count.OUTPUTSELECT
slow_edge => count.OUTPUTSELECT
slow_edge => count.OUTPUTSELECT
slow_edge => count.OUTPUTSELECT
slow_edge => count.OUTPUTSELECT
slow_edge => count.OUTPUTSELECT
slow_edge => count.OUTPUTSELECT
slow_edge => count.OUTPUTSELECT
reset => count.OUTPUTSELECT
reset => count.OUTPUTSELECT
reset => count.OUTPUTSELECT
reset => count.OUTPUTSELECT
reset => count.OUTPUTSELECT
reset => count.OUTPUTSELECT
reset => count.OUTPUTSELECT
reset => count.OUTPUTSELECT
init_val[0] => count.DATAB
init_val[1] => count.DATAB


|lab8|snakes_and_apples:snake|grid_light:center_grid_row[7].center_grid_col[4].light
green_light_on <= green_light_on.DB_MAX_OUTPUT_PORT_TYPE
head <= head.DB_MAX_OUTPUT_PORT_TYPE
game_over_out <= state_n.DB_MAX_OUTPUT_PORT_TYPE
eating => counter256:counter.inc
eating => always0.IN1
game_over_in => state_n.e_off.OUTPUTSELECT
game_over_in => state_n.e_countdown.OUTPUTSELECT
game_over_in => state_n.e_head.OUTPUTSELECT
game_over_in => state_n.OUTPUTSELECT
left => state_n.OUTPUTSELECT
left => state_n.OUTPUTSELECT
left => state_n.OUTPUTSELECT
left => state_n.OUTPUTSELECT
up => state_n.OUTPUTSELECT
up => state_n.OUTPUTSELECT
up => state_n.OUTPUTSELECT
up => state_n.OUTPUTSELECT
right => state_n.OUTPUTSELECT
right => state_n.OUTPUTSELECT
right => state_n.OUTPUTSELECT
right => state_n.OUTPUTSELECT
down => state_n.OUTPUTSELECT
down => state_n.OUTPUTSELECT
down => state_n.OUTPUTSELECT
down => state_n.OUTPUTSELECT
length[0] => counter256:counter.start_val[0]
length[1] => counter256:counter.start_val[1]
length[2] => counter256:counter.start_val[2]
length[3] => counter256:counter.start_val[3]
length[4] => counter256:counter.start_val[4]
length[5] => counter256:counter.start_val[5]
length[6] => counter256:counter.start_val[6]
length[7] => counter256:counter.start_val[7]
dir[0] => Mux0.IN5
dir[0] => Mux1.IN5
dir[0] => Mux2.IN5
dir[0] => Mux3.IN5
dir[1] => Mux0.IN4
dir[1] => Mux1.IN4
dir[1] => Mux2.IN4
dir[1] => Mux3.IN4
clk => counter256:counter.clk
clk => state_r~1.DATAIN
slow_edge => counter256:counter.slow_edge
slow_edge => state_r.OUTPUTSELECT
slow_edge => state_r.OUTPUTSELECT
slow_edge => state_r.OUTPUTSELECT
slow_edge => state_r.OUTPUTSELECT
reset => counter256:counter.reset
reset => state_r.OUTPUTSELECT
reset => state_r.OUTPUTSELECT
reset => state_r.OUTPUTSELECT
reset => state_r.OUTPUTSELECT
light_type[0] => counter256:counter.init_val[0]
light_type[0] => Equal1.IN1
light_type[0] => Equal2.IN1
light_type[1] => counter256:counter.init_val[1]
light_type[1] => Equal1.IN0
light_type[1] => Equal2.IN0


|lab8|snakes_and_apples:snake|grid_light:center_grid_row[7].center_grid_col[4].light|counter256:counter
count[0] <= count[0]~reg0.DB_MAX_OUTPUT_PORT_TYPE
count[1] <= count[1]~reg0.DB_MAX_OUTPUT_PORT_TYPE
count[2] <= count[2]~reg0.DB_MAX_OUTPUT_PORT_TYPE
count[3] <= count[3]~reg0.DB_MAX_OUTPUT_PORT_TYPE
count[4] <= count[4]~reg0.DB_MAX_OUTPUT_PORT_TYPE
count[5] <= count[5]~reg0.DB_MAX_OUTPUT_PORT_TYPE
count[6] <= count[6]~reg0.DB_MAX_OUTPUT_PORT_TYPE
count[7] <= count[7]~reg0.DB_MAX_OUTPUT_PORT_TYPE
start_val[0] => Add0.IN16
start_val[0] => count.DATAB
start_val[1] => Add0.IN15
start_val[1] => count.DATAB
start_val[2] => Add0.IN14
start_val[2] => count.DATAB
start_val[3] => Add0.IN13
start_val[3] => count.DATAB
start_val[4] => Add0.IN12
start_val[4] => count.DATAB
start_val[5] => Add0.IN11
start_val[5] => count.DATAB
start_val[6] => Add0.IN10
start_val[6] => count.DATAB
start_val[7] => Add0.IN9
start_val[7] => count.DATAB
inc => count.OUTPUTSELECT
inc => count.OUTPUTSELECT
inc => count.OUTPUTSELECT
inc => count.OUTPUTSELECT
inc => count.OUTPUTSELECT
inc => count.OUTPUTSELECT
inc => count.OUTPUTSELECT
inc => count.OUTPUTSELECT
inc => always0.IN0
enable => always0.IN1
enable => count.OUTPUTSELECT
enable => count.OUTPUTSELECT
enable => count.OUTPUTSELECT
enable => count.OUTPUTSELECT
enable => count.OUTPUTSELECT
enable => count.OUTPUTSELECT
enable => count.OUTPUTSELECT
enable => count.OUTPUTSELECT
clk => count[0]~reg0.CLK
clk => count[1]~reg0.CLK
clk => count[2]~reg0.CLK
clk => count[3]~reg0.CLK
clk => count[4]~reg0.CLK
clk => count[5]~reg0.CLK
clk => count[6]~reg0.CLK
clk => count[7]~reg0.CLK
slow_edge => count.OUTPUTSELECT
slow_edge => count.OUTPUTSELECT
slow_edge => count.OUTPUTSELECT
slow_edge => count.OUTPUTSELECT
slow_edge => count.OUTPUTSELECT
slow_edge => count.OUTPUTSELECT
slow_edge => count.OUTPUTSELECT
slow_edge => count.OUTPUTSELECT
reset => count.OUTPUTSELECT
reset => count.OUTPUTSELECT
reset => count.OUTPUTSELECT
reset => count.OUTPUTSELECT
reset => count.OUTPUTSELECT
reset => count.OUTPUTSELECT
reset => count.OUTPUTSELECT
reset => count.OUTPUTSELECT
init_val[0] => count.DATAB
init_val[1] => count.DATAB


|lab8|snakes_and_apples:snake|grid_light:center_grid_row[7].center_grid_col[5].light
green_light_on <= green_light_on.DB_MAX_OUTPUT_PORT_TYPE
head <= head.DB_MAX_OUTPUT_PORT_TYPE
game_over_out <= state_n.DB_MAX_OUTPUT_PORT_TYPE
eating => counter256:counter.inc
eating => always0.IN1
game_over_in => state_n.e_off.OUTPUTSELECT
game_over_in => state_n.e_countdown.OUTPUTSELECT
game_over_in => state_n.e_head.OUTPUTSELECT
game_over_in => state_n.OUTPUTSELECT
left => state_n.OUTPUTSELECT
left => state_n.OUTPUTSELECT
left => state_n.OUTPUTSELECT
left => state_n.OUTPUTSELECT
up => state_n.OUTPUTSELECT
up => state_n.OUTPUTSELECT
up => state_n.OUTPUTSELECT
up => state_n.OUTPUTSELECT
right => state_n.OUTPUTSELECT
right => state_n.OUTPUTSELECT
right => state_n.OUTPUTSELECT
right => state_n.OUTPUTSELECT
down => state_n.OUTPUTSELECT
down => state_n.OUTPUTSELECT
down => state_n.OUTPUTSELECT
down => state_n.OUTPUTSELECT
length[0] => counter256:counter.start_val[0]
length[1] => counter256:counter.start_val[1]
length[2] => counter256:counter.start_val[2]
length[3] => counter256:counter.start_val[3]
length[4] => counter256:counter.start_val[4]
length[5] => counter256:counter.start_val[5]
length[6] => counter256:counter.start_val[6]
length[7] => counter256:counter.start_val[7]
dir[0] => Mux0.IN5
dir[0] => Mux1.IN5
dir[0] => Mux2.IN5
dir[0] => Mux3.IN5
dir[1] => Mux0.IN4
dir[1] => Mux1.IN4
dir[1] => Mux2.IN4
dir[1] => Mux3.IN4
clk => counter256:counter.clk
clk => state_r~1.DATAIN
slow_edge => counter256:counter.slow_edge
slow_edge => state_r.OUTPUTSELECT
slow_edge => state_r.OUTPUTSELECT
slow_edge => state_r.OUTPUTSELECT
slow_edge => state_r.OUTPUTSELECT
reset => counter256:counter.reset
reset => state_r.OUTPUTSELECT
reset => state_r.OUTPUTSELECT
reset => state_r.OUTPUTSELECT
reset => state_r.OUTPUTSELECT
light_type[0] => counter256:counter.init_val[0]
light_type[0] => Equal1.IN1
light_type[0] => Equal2.IN1
light_type[1] => counter256:counter.init_val[1]
light_type[1] => Equal1.IN0
light_type[1] => Equal2.IN0


|lab8|snakes_and_apples:snake|grid_light:center_grid_row[7].center_grid_col[5].light|counter256:counter
count[0] <= count[0]~reg0.DB_MAX_OUTPUT_PORT_TYPE
count[1] <= count[1]~reg0.DB_MAX_OUTPUT_PORT_TYPE
count[2] <= count[2]~reg0.DB_MAX_OUTPUT_PORT_TYPE
count[3] <= count[3]~reg0.DB_MAX_OUTPUT_PORT_TYPE
count[4] <= count[4]~reg0.DB_MAX_OUTPUT_PORT_TYPE
count[5] <= count[5]~reg0.DB_MAX_OUTPUT_PORT_TYPE
count[6] <= count[6]~reg0.DB_MAX_OUTPUT_PORT_TYPE
count[7] <= count[7]~reg0.DB_MAX_OUTPUT_PORT_TYPE
start_val[0] => Add0.IN16
start_val[0] => count.DATAB
start_val[1] => Add0.IN15
start_val[1] => count.DATAB
start_val[2] => Add0.IN14
start_val[2] => count.DATAB
start_val[3] => Add0.IN13
start_val[3] => count.DATAB
start_val[4] => Add0.IN12
start_val[4] => count.DATAB
start_val[5] => Add0.IN11
start_val[5] => count.DATAB
start_val[6] => Add0.IN10
start_val[6] => count.DATAB
start_val[7] => Add0.IN9
start_val[7] => count.DATAB
inc => count.OUTPUTSELECT
inc => count.OUTPUTSELECT
inc => count.OUTPUTSELECT
inc => count.OUTPUTSELECT
inc => count.OUTPUTSELECT
inc => count.OUTPUTSELECT
inc => count.OUTPUTSELECT
inc => count.OUTPUTSELECT
inc => always0.IN0
enable => always0.IN1
enable => count.OUTPUTSELECT
enable => count.OUTPUTSELECT
enable => count.OUTPUTSELECT
enable => count.OUTPUTSELECT
enable => count.OUTPUTSELECT
enable => count.OUTPUTSELECT
enable => count.OUTPUTSELECT
enable => count.OUTPUTSELECT
clk => count[0]~reg0.CLK
clk => count[1]~reg0.CLK
clk => count[2]~reg0.CLK
clk => count[3]~reg0.CLK
clk => count[4]~reg0.CLK
clk => count[5]~reg0.CLK
clk => count[6]~reg0.CLK
clk => count[7]~reg0.CLK
slow_edge => count.OUTPUTSELECT
slow_edge => count.OUTPUTSELECT
slow_edge => count.OUTPUTSELECT
slow_edge => count.OUTPUTSELECT
slow_edge => count.OUTPUTSELECT
slow_edge => count.OUTPUTSELECT
slow_edge => count.OUTPUTSELECT
slow_edge => count.OUTPUTSELECT
reset => count.OUTPUTSELECT
reset => count.OUTPUTSELECT
reset => count.OUTPUTSELECT
reset => count.OUTPUTSELECT
reset => count.OUTPUTSELECT
reset => count.OUTPUTSELECT
reset => count.OUTPUTSELECT
reset => count.OUTPUTSELECT
init_val[0] => count.DATAB
init_val[1] => count.DATAB


|lab8|snakes_and_apples:snake|grid_light:center_grid_row[7].center_grid_col[6].light
green_light_on <= green_light_on.DB_MAX_OUTPUT_PORT_TYPE
head <= head.DB_MAX_OUTPUT_PORT_TYPE
game_over_out <= state_n.DB_MAX_OUTPUT_PORT_TYPE
eating => counter256:counter.inc
eating => always0.IN1
game_over_in => state_n.e_off.OUTPUTSELECT
game_over_in => state_n.e_countdown.OUTPUTSELECT
game_over_in => state_n.e_head.OUTPUTSELECT
game_over_in => state_n.OUTPUTSELECT
left => state_n.OUTPUTSELECT
left => state_n.OUTPUTSELECT
left => state_n.OUTPUTSELECT
left => state_n.OUTPUTSELECT
up => state_n.OUTPUTSELECT
up => state_n.OUTPUTSELECT
up => state_n.OUTPUTSELECT
up => state_n.OUTPUTSELECT
right => state_n.OUTPUTSELECT
right => state_n.OUTPUTSELECT
right => state_n.OUTPUTSELECT
right => state_n.OUTPUTSELECT
down => state_n.OUTPUTSELECT
down => state_n.OUTPUTSELECT
down => state_n.OUTPUTSELECT
down => state_n.OUTPUTSELECT
length[0] => counter256:counter.start_val[0]
length[1] => counter256:counter.start_val[1]
length[2] => counter256:counter.start_val[2]
length[3] => counter256:counter.start_val[3]
length[4] => counter256:counter.start_val[4]
length[5] => counter256:counter.start_val[5]
length[6] => counter256:counter.start_val[6]
length[7] => counter256:counter.start_val[7]
dir[0] => Mux0.IN5
dir[0] => Mux1.IN5
dir[0] => Mux2.IN5
dir[0] => Mux3.IN5
dir[1] => Mux0.IN4
dir[1] => Mux1.IN4
dir[1] => Mux2.IN4
dir[1] => Mux3.IN4
clk => counter256:counter.clk
clk => state_r~1.DATAIN
slow_edge => counter256:counter.slow_edge
slow_edge => state_r.OUTPUTSELECT
slow_edge => state_r.OUTPUTSELECT
slow_edge => state_r.OUTPUTSELECT
slow_edge => state_r.OUTPUTSELECT
reset => counter256:counter.reset
reset => state_r.OUTPUTSELECT
reset => state_r.OUTPUTSELECT
reset => state_r.OUTPUTSELECT
reset => state_r.OUTPUTSELECT
light_type[0] => counter256:counter.init_val[0]
light_type[0] => Equal1.IN1
light_type[0] => Equal2.IN1
light_type[1] => counter256:counter.init_val[1]
light_type[1] => Equal1.IN0
light_type[1] => Equal2.IN0


|lab8|snakes_and_apples:snake|grid_light:center_grid_row[7].center_grid_col[6].light|counter256:counter
count[0] <= count[0]~reg0.DB_MAX_OUTPUT_PORT_TYPE
count[1] <= count[1]~reg0.DB_MAX_OUTPUT_PORT_TYPE
count[2] <= count[2]~reg0.DB_MAX_OUTPUT_PORT_TYPE
count[3] <= count[3]~reg0.DB_MAX_OUTPUT_PORT_TYPE
count[4] <= count[4]~reg0.DB_MAX_OUTPUT_PORT_TYPE
count[5] <= count[5]~reg0.DB_MAX_OUTPUT_PORT_TYPE
count[6] <= count[6]~reg0.DB_MAX_OUTPUT_PORT_TYPE
count[7] <= count[7]~reg0.DB_MAX_OUTPUT_PORT_TYPE
start_val[0] => Add0.IN16
start_val[0] => count.DATAB
start_val[1] => Add0.IN15
start_val[1] => count.DATAB
start_val[2] => Add0.IN14
start_val[2] => count.DATAB
start_val[3] => Add0.IN13
start_val[3] => count.DATAB
start_val[4] => Add0.IN12
start_val[4] => count.DATAB
start_val[5] => Add0.IN11
start_val[5] => count.DATAB
start_val[6] => Add0.IN10
start_val[6] => count.DATAB
start_val[7] => Add0.IN9
start_val[7] => count.DATAB
inc => count.OUTPUTSELECT
inc => count.OUTPUTSELECT
inc => count.OUTPUTSELECT
inc => count.OUTPUTSELECT
inc => count.OUTPUTSELECT
inc => count.OUTPUTSELECT
inc => count.OUTPUTSELECT
inc => count.OUTPUTSELECT
inc => always0.IN0
enable => always0.IN1
enable => count.OUTPUTSELECT
enable => count.OUTPUTSELECT
enable => count.OUTPUTSELECT
enable => count.OUTPUTSELECT
enable => count.OUTPUTSELECT
enable => count.OUTPUTSELECT
enable => count.OUTPUTSELECT
enable => count.OUTPUTSELECT
clk => count[0]~reg0.CLK
clk => count[1]~reg0.CLK
clk => count[2]~reg0.CLK
clk => count[3]~reg0.CLK
clk => count[4]~reg0.CLK
clk => count[5]~reg0.CLK
clk => count[6]~reg0.CLK
clk => count[7]~reg0.CLK
slow_edge => count.OUTPUTSELECT
slow_edge => count.OUTPUTSELECT
slow_edge => count.OUTPUTSELECT
slow_edge => count.OUTPUTSELECT
slow_edge => count.OUTPUTSELECT
slow_edge => count.OUTPUTSELECT
slow_edge => count.OUTPUTSELECT
slow_edge => count.OUTPUTSELECT
reset => count.OUTPUTSELECT
reset => count.OUTPUTSELECT
reset => count.OUTPUTSELECT
reset => count.OUTPUTSELECT
reset => count.OUTPUTSELECT
reset => count.OUTPUTSELECT
reset => count.OUTPUTSELECT
reset => count.OUTPUTSELECT
init_val[0] => count.DATAB
init_val[1] => count.DATAB


|lab8|snakes_and_apples:snake|grid_light:center_grid_row[7].center_grid_col[7].light
green_light_on <= green_light_on.DB_MAX_OUTPUT_PORT_TYPE
head <= head.DB_MAX_OUTPUT_PORT_TYPE
game_over_out <= state_n.DB_MAX_OUTPUT_PORT_TYPE
eating => counter256:counter.inc
eating => always0.IN1
game_over_in => state_n.e_off.OUTPUTSELECT
game_over_in => state_n.e_countdown.OUTPUTSELECT
game_over_in => state_n.e_head.OUTPUTSELECT
game_over_in => state_n.OUTPUTSELECT
left => state_n.OUTPUTSELECT
left => state_n.OUTPUTSELECT
left => state_n.OUTPUTSELECT
left => state_n.OUTPUTSELECT
up => state_n.OUTPUTSELECT
up => state_n.OUTPUTSELECT
up => state_n.OUTPUTSELECT
up => state_n.OUTPUTSELECT
right => state_n.OUTPUTSELECT
right => state_n.OUTPUTSELECT
right => state_n.OUTPUTSELECT
right => state_n.OUTPUTSELECT
down => state_n.OUTPUTSELECT
down => state_n.OUTPUTSELECT
down => state_n.OUTPUTSELECT
down => state_n.OUTPUTSELECT
length[0] => counter256:counter.start_val[0]
length[1] => counter256:counter.start_val[1]
length[2] => counter256:counter.start_val[2]
length[3] => counter256:counter.start_val[3]
length[4] => counter256:counter.start_val[4]
length[5] => counter256:counter.start_val[5]
length[6] => counter256:counter.start_val[6]
length[7] => counter256:counter.start_val[7]
dir[0] => Mux0.IN5
dir[0] => Mux1.IN5
dir[0] => Mux2.IN5
dir[0] => Mux3.IN5
dir[1] => Mux0.IN4
dir[1] => Mux1.IN4
dir[1] => Mux2.IN4
dir[1] => Mux3.IN4
clk => counter256:counter.clk
clk => state_r~1.DATAIN
slow_edge => counter256:counter.slow_edge
slow_edge => state_r.OUTPUTSELECT
slow_edge => state_r.OUTPUTSELECT
slow_edge => state_r.OUTPUTSELECT
slow_edge => state_r.OUTPUTSELECT
reset => counter256:counter.reset
reset => state_r.OUTPUTSELECT
reset => state_r.OUTPUTSELECT
reset => state_r.OUTPUTSELECT
reset => state_r.OUTPUTSELECT
light_type[0] => counter256:counter.init_val[0]
light_type[0] => Equal1.IN1
light_type[0] => Equal2.IN1
light_type[1] => counter256:counter.init_val[1]
light_type[1] => Equal1.IN0
light_type[1] => Equal2.IN0


|lab8|snakes_and_apples:snake|grid_light:center_grid_row[7].center_grid_col[7].light|counter256:counter
count[0] <= count[0]~reg0.DB_MAX_OUTPUT_PORT_TYPE
count[1] <= count[1]~reg0.DB_MAX_OUTPUT_PORT_TYPE
count[2] <= count[2]~reg0.DB_MAX_OUTPUT_PORT_TYPE
count[3] <= count[3]~reg0.DB_MAX_OUTPUT_PORT_TYPE
count[4] <= count[4]~reg0.DB_MAX_OUTPUT_PORT_TYPE
count[5] <= count[5]~reg0.DB_MAX_OUTPUT_PORT_TYPE
count[6] <= count[6]~reg0.DB_MAX_OUTPUT_PORT_TYPE
count[7] <= count[7]~reg0.DB_MAX_OUTPUT_PORT_TYPE
start_val[0] => Add0.IN16
start_val[0] => count.DATAB
start_val[1] => Add0.IN15
start_val[1] => count.DATAB
start_val[2] => Add0.IN14
start_val[2] => count.DATAB
start_val[3] => Add0.IN13
start_val[3] => count.DATAB
start_val[4] => Add0.IN12
start_val[4] => count.DATAB
start_val[5] => Add0.IN11
start_val[5] => count.DATAB
start_val[6] => Add0.IN10
start_val[6] => count.DATAB
start_val[7] => Add0.IN9
start_val[7] => count.DATAB
inc => count.OUTPUTSELECT
inc => count.OUTPUTSELECT
inc => count.OUTPUTSELECT
inc => count.OUTPUTSELECT
inc => count.OUTPUTSELECT
inc => count.OUTPUTSELECT
inc => count.OUTPUTSELECT
inc => count.OUTPUTSELECT
inc => always0.IN0
enable => always0.IN1
enable => count.OUTPUTSELECT
enable => count.OUTPUTSELECT
enable => count.OUTPUTSELECT
enable => count.OUTPUTSELECT
enable => count.OUTPUTSELECT
enable => count.OUTPUTSELECT
enable => count.OUTPUTSELECT
enable => count.OUTPUTSELECT
clk => count[0]~reg0.CLK
clk => count[1]~reg0.CLK
clk => count[2]~reg0.CLK
clk => count[3]~reg0.CLK
clk => count[4]~reg0.CLK
clk => count[5]~reg0.CLK
clk => count[6]~reg0.CLK
clk => count[7]~reg0.CLK
slow_edge => count.OUTPUTSELECT
slow_edge => count.OUTPUTSELECT
slow_edge => count.OUTPUTSELECT
slow_edge => count.OUTPUTSELECT
slow_edge => count.OUTPUTSELECT
slow_edge => count.OUTPUTSELECT
slow_edge => count.OUTPUTSELECT
slow_edge => count.OUTPUTSELECT
reset => count.OUTPUTSELECT
reset => count.OUTPUTSELECT
reset => count.OUTPUTSELECT
reset => count.OUTPUTSELECT
reset => count.OUTPUTSELECT
reset => count.OUTPUTSELECT
reset => count.OUTPUTSELECT
reset => count.OUTPUTSELECT
init_val[0] => count.DATAB
init_val[1] => count.DATAB


|lab8|snakes_and_apples:snake|grid_light:center_grid_row[7].center_grid_col[8].light
green_light_on <= green_light_on.DB_MAX_OUTPUT_PORT_TYPE
head <= head.DB_MAX_OUTPUT_PORT_TYPE
game_over_out <= state_n.DB_MAX_OUTPUT_PORT_TYPE
eating => counter256:counter.inc
eating => always0.IN1
game_over_in => state_n.e_off.OUTPUTSELECT
game_over_in => state_n.e_countdown.OUTPUTSELECT
game_over_in => state_n.e_head.OUTPUTSELECT
game_over_in => state_n.OUTPUTSELECT
left => state_n.OUTPUTSELECT
left => state_n.OUTPUTSELECT
left => state_n.OUTPUTSELECT
left => state_n.OUTPUTSELECT
up => state_n.OUTPUTSELECT
up => state_n.OUTPUTSELECT
up => state_n.OUTPUTSELECT
up => state_n.OUTPUTSELECT
right => state_n.OUTPUTSELECT
right => state_n.OUTPUTSELECT
right => state_n.OUTPUTSELECT
right => state_n.OUTPUTSELECT
down => state_n.OUTPUTSELECT
down => state_n.OUTPUTSELECT
down => state_n.OUTPUTSELECT
down => state_n.OUTPUTSELECT
length[0] => counter256:counter.start_val[0]
length[1] => counter256:counter.start_val[1]
length[2] => counter256:counter.start_val[2]
length[3] => counter256:counter.start_val[3]
length[4] => counter256:counter.start_val[4]
length[5] => counter256:counter.start_val[5]
length[6] => counter256:counter.start_val[6]
length[7] => counter256:counter.start_val[7]
dir[0] => Mux0.IN5
dir[0] => Mux1.IN5
dir[0] => Mux2.IN5
dir[0] => Mux3.IN5
dir[1] => Mux0.IN4
dir[1] => Mux1.IN4
dir[1] => Mux2.IN4
dir[1] => Mux3.IN4
clk => counter256:counter.clk
clk => state_r~1.DATAIN
slow_edge => counter256:counter.slow_edge
slow_edge => state_r.OUTPUTSELECT
slow_edge => state_r.OUTPUTSELECT
slow_edge => state_r.OUTPUTSELECT
slow_edge => state_r.OUTPUTSELECT
reset => counter256:counter.reset
reset => state_r.OUTPUTSELECT
reset => state_r.OUTPUTSELECT
reset => state_r.OUTPUTSELECT
reset => state_r.OUTPUTSELECT
light_type[0] => counter256:counter.init_val[0]
light_type[0] => Equal1.IN1
light_type[0] => Equal2.IN1
light_type[1] => counter256:counter.init_val[1]
light_type[1] => Equal1.IN0
light_type[1] => Equal2.IN0


|lab8|snakes_and_apples:snake|grid_light:center_grid_row[7].center_grid_col[8].light|counter256:counter
count[0] <= count[0]~reg0.DB_MAX_OUTPUT_PORT_TYPE
count[1] <= count[1]~reg0.DB_MAX_OUTPUT_PORT_TYPE
count[2] <= count[2]~reg0.DB_MAX_OUTPUT_PORT_TYPE
count[3] <= count[3]~reg0.DB_MAX_OUTPUT_PORT_TYPE
count[4] <= count[4]~reg0.DB_MAX_OUTPUT_PORT_TYPE
count[5] <= count[5]~reg0.DB_MAX_OUTPUT_PORT_TYPE
count[6] <= count[6]~reg0.DB_MAX_OUTPUT_PORT_TYPE
count[7] <= count[7]~reg0.DB_MAX_OUTPUT_PORT_TYPE
start_val[0] => Add0.IN16
start_val[0] => count.DATAB
start_val[1] => Add0.IN15
start_val[1] => count.DATAB
start_val[2] => Add0.IN14
start_val[2] => count.DATAB
start_val[3] => Add0.IN13
start_val[3] => count.DATAB
start_val[4] => Add0.IN12
start_val[4] => count.DATAB
start_val[5] => Add0.IN11
start_val[5] => count.DATAB
start_val[6] => Add0.IN10
start_val[6] => count.DATAB
start_val[7] => Add0.IN9
start_val[7] => count.DATAB
inc => count.OUTPUTSELECT
inc => count.OUTPUTSELECT
inc => count.OUTPUTSELECT
inc => count.OUTPUTSELECT
inc => count.OUTPUTSELECT
inc => count.OUTPUTSELECT
inc => count.OUTPUTSELECT
inc => count.OUTPUTSELECT
inc => always0.IN0
enable => always0.IN1
enable => count.OUTPUTSELECT
enable => count.OUTPUTSELECT
enable => count.OUTPUTSELECT
enable => count.OUTPUTSELECT
enable => count.OUTPUTSELECT
enable => count.OUTPUTSELECT
enable => count.OUTPUTSELECT
enable => count.OUTPUTSELECT
clk => count[0]~reg0.CLK
clk => count[1]~reg0.CLK
clk => count[2]~reg0.CLK
clk => count[3]~reg0.CLK
clk => count[4]~reg0.CLK
clk => count[5]~reg0.CLK
clk => count[6]~reg0.CLK
clk => count[7]~reg0.CLK
slow_edge => count.OUTPUTSELECT
slow_edge => count.OUTPUTSELECT
slow_edge => count.OUTPUTSELECT
slow_edge => count.OUTPUTSELECT
slow_edge => count.OUTPUTSELECT
slow_edge => count.OUTPUTSELECT
slow_edge => count.OUTPUTSELECT
slow_edge => count.OUTPUTSELECT
reset => count.OUTPUTSELECT
reset => count.OUTPUTSELECT
reset => count.OUTPUTSELECT
reset => count.OUTPUTSELECT
reset => count.OUTPUTSELECT
reset => count.OUTPUTSELECT
reset => count.OUTPUTSELECT
reset => count.OUTPUTSELECT
init_val[0] => count.DATAB
init_val[1] => count.DATAB


|lab8|snakes_and_apples:snake|grid_light:center_grid_row[7].center_grid_col[9].light
green_light_on <= green_light_on.DB_MAX_OUTPUT_PORT_TYPE
head <= head.DB_MAX_OUTPUT_PORT_TYPE
game_over_out <= state_n.DB_MAX_OUTPUT_PORT_TYPE
eating => counter256:counter.inc
eating => always0.IN1
game_over_in => state_n.e_off.OUTPUTSELECT
game_over_in => state_n.e_countdown.OUTPUTSELECT
game_over_in => state_n.e_head.OUTPUTSELECT
game_over_in => state_n.OUTPUTSELECT
left => state_n.OUTPUTSELECT
left => state_n.OUTPUTSELECT
left => state_n.OUTPUTSELECT
left => state_n.OUTPUTSELECT
up => state_n.OUTPUTSELECT
up => state_n.OUTPUTSELECT
up => state_n.OUTPUTSELECT
up => state_n.OUTPUTSELECT
right => state_n.OUTPUTSELECT
right => state_n.OUTPUTSELECT
right => state_n.OUTPUTSELECT
right => state_n.OUTPUTSELECT
down => state_n.OUTPUTSELECT
down => state_n.OUTPUTSELECT
down => state_n.OUTPUTSELECT
down => state_n.OUTPUTSELECT
length[0] => counter256:counter.start_val[0]
length[1] => counter256:counter.start_val[1]
length[2] => counter256:counter.start_val[2]
length[3] => counter256:counter.start_val[3]
length[4] => counter256:counter.start_val[4]
length[5] => counter256:counter.start_val[5]
length[6] => counter256:counter.start_val[6]
length[7] => counter256:counter.start_val[7]
dir[0] => Mux0.IN5
dir[0] => Mux1.IN5
dir[0] => Mux2.IN5
dir[0] => Mux3.IN5
dir[1] => Mux0.IN4
dir[1] => Mux1.IN4
dir[1] => Mux2.IN4
dir[1] => Mux3.IN4
clk => counter256:counter.clk
clk => state_r~1.DATAIN
slow_edge => counter256:counter.slow_edge
slow_edge => state_r.OUTPUTSELECT
slow_edge => state_r.OUTPUTSELECT
slow_edge => state_r.OUTPUTSELECT
slow_edge => state_r.OUTPUTSELECT
reset => counter256:counter.reset
reset => state_r.OUTPUTSELECT
reset => state_r.OUTPUTSELECT
reset => state_r.OUTPUTSELECT
reset => state_r.OUTPUTSELECT
light_type[0] => counter256:counter.init_val[0]
light_type[0] => Equal1.IN1
light_type[0] => Equal2.IN1
light_type[1] => counter256:counter.init_val[1]
light_type[1] => Equal1.IN0
light_type[1] => Equal2.IN0


|lab8|snakes_and_apples:snake|grid_light:center_grid_row[7].center_grid_col[9].light|counter256:counter
count[0] <= count[0]~reg0.DB_MAX_OUTPUT_PORT_TYPE
count[1] <= count[1]~reg0.DB_MAX_OUTPUT_PORT_TYPE
count[2] <= count[2]~reg0.DB_MAX_OUTPUT_PORT_TYPE
count[3] <= count[3]~reg0.DB_MAX_OUTPUT_PORT_TYPE
count[4] <= count[4]~reg0.DB_MAX_OUTPUT_PORT_TYPE
count[5] <= count[5]~reg0.DB_MAX_OUTPUT_PORT_TYPE
count[6] <= count[6]~reg0.DB_MAX_OUTPUT_PORT_TYPE
count[7] <= count[7]~reg0.DB_MAX_OUTPUT_PORT_TYPE
start_val[0] => Add0.IN16
start_val[0] => count.DATAB
start_val[1] => Add0.IN15
start_val[1] => count.DATAB
start_val[2] => Add0.IN14
start_val[2] => count.DATAB
start_val[3] => Add0.IN13
start_val[3] => count.DATAB
start_val[4] => Add0.IN12
start_val[4] => count.DATAB
start_val[5] => Add0.IN11
start_val[5] => count.DATAB
start_val[6] => Add0.IN10
start_val[6] => count.DATAB
start_val[7] => Add0.IN9
start_val[7] => count.DATAB
inc => count.OUTPUTSELECT
inc => count.OUTPUTSELECT
inc => count.OUTPUTSELECT
inc => count.OUTPUTSELECT
inc => count.OUTPUTSELECT
inc => count.OUTPUTSELECT
inc => count.OUTPUTSELECT
inc => count.OUTPUTSELECT
inc => always0.IN0
enable => always0.IN1
enable => count.OUTPUTSELECT
enable => count.OUTPUTSELECT
enable => count.OUTPUTSELECT
enable => count.OUTPUTSELECT
enable => count.OUTPUTSELECT
enable => count.OUTPUTSELECT
enable => count.OUTPUTSELECT
enable => count.OUTPUTSELECT
clk => count[0]~reg0.CLK
clk => count[1]~reg0.CLK
clk => count[2]~reg0.CLK
clk => count[3]~reg0.CLK
clk => count[4]~reg0.CLK
clk => count[5]~reg0.CLK
clk => count[6]~reg0.CLK
clk => count[7]~reg0.CLK
slow_edge => count.OUTPUTSELECT
slow_edge => count.OUTPUTSELECT
slow_edge => count.OUTPUTSELECT
slow_edge => count.OUTPUTSELECT
slow_edge => count.OUTPUTSELECT
slow_edge => count.OUTPUTSELECT
slow_edge => count.OUTPUTSELECT
slow_edge => count.OUTPUTSELECT
reset => count.OUTPUTSELECT
reset => count.OUTPUTSELECT
reset => count.OUTPUTSELECT
reset => count.OUTPUTSELECT
reset => count.OUTPUTSELECT
reset => count.OUTPUTSELECT
reset => count.OUTPUTSELECT
reset => count.OUTPUTSELECT
init_val[0] => count.DATAB
init_val[1] => count.DATAB


|lab8|snakes_and_apples:snake|grid_light:center_grid_row[7].center_grid_col[10].light
green_light_on <= green_light_on.DB_MAX_OUTPUT_PORT_TYPE
head <= head.DB_MAX_OUTPUT_PORT_TYPE
game_over_out <= state_n.DB_MAX_OUTPUT_PORT_TYPE
eating => counter256:counter.inc
eating => always0.IN1
game_over_in => state_n.e_off.OUTPUTSELECT
game_over_in => state_n.e_countdown.OUTPUTSELECT
game_over_in => state_n.e_head.OUTPUTSELECT
game_over_in => state_n.OUTPUTSELECT
left => state_n.OUTPUTSELECT
left => state_n.OUTPUTSELECT
left => state_n.OUTPUTSELECT
left => state_n.OUTPUTSELECT
up => state_n.OUTPUTSELECT
up => state_n.OUTPUTSELECT
up => state_n.OUTPUTSELECT
up => state_n.OUTPUTSELECT
right => state_n.OUTPUTSELECT
right => state_n.OUTPUTSELECT
right => state_n.OUTPUTSELECT
right => state_n.OUTPUTSELECT
down => state_n.OUTPUTSELECT
down => state_n.OUTPUTSELECT
down => state_n.OUTPUTSELECT
down => state_n.OUTPUTSELECT
length[0] => counter256:counter.start_val[0]
length[1] => counter256:counter.start_val[1]
length[2] => counter256:counter.start_val[2]
length[3] => counter256:counter.start_val[3]
length[4] => counter256:counter.start_val[4]
length[5] => counter256:counter.start_val[5]
length[6] => counter256:counter.start_val[6]
length[7] => counter256:counter.start_val[7]
dir[0] => Mux0.IN5
dir[0] => Mux1.IN5
dir[0] => Mux2.IN5
dir[0] => Mux3.IN5
dir[1] => Mux0.IN4
dir[1] => Mux1.IN4
dir[1] => Mux2.IN4
dir[1] => Mux3.IN4
clk => counter256:counter.clk
clk => state_r~1.DATAIN
slow_edge => counter256:counter.slow_edge
slow_edge => state_r.OUTPUTSELECT
slow_edge => state_r.OUTPUTSELECT
slow_edge => state_r.OUTPUTSELECT
slow_edge => state_r.OUTPUTSELECT
reset => counter256:counter.reset
reset => state_r.OUTPUTSELECT
reset => state_r.OUTPUTSELECT
reset => state_r.OUTPUTSELECT
reset => state_r.OUTPUTSELECT
light_type[0] => counter256:counter.init_val[0]
light_type[0] => Equal1.IN1
light_type[0] => Equal2.IN1
light_type[1] => counter256:counter.init_val[1]
light_type[1] => Equal1.IN0
light_type[1] => Equal2.IN0


|lab8|snakes_and_apples:snake|grid_light:center_grid_row[7].center_grid_col[10].light|counter256:counter
count[0] <= count[0]~reg0.DB_MAX_OUTPUT_PORT_TYPE
count[1] <= count[1]~reg0.DB_MAX_OUTPUT_PORT_TYPE
count[2] <= count[2]~reg0.DB_MAX_OUTPUT_PORT_TYPE
count[3] <= count[3]~reg0.DB_MAX_OUTPUT_PORT_TYPE
count[4] <= count[4]~reg0.DB_MAX_OUTPUT_PORT_TYPE
count[5] <= count[5]~reg0.DB_MAX_OUTPUT_PORT_TYPE
count[6] <= count[6]~reg0.DB_MAX_OUTPUT_PORT_TYPE
count[7] <= count[7]~reg0.DB_MAX_OUTPUT_PORT_TYPE
start_val[0] => Add0.IN16
start_val[0] => count.DATAB
start_val[1] => Add0.IN15
start_val[1] => count.DATAB
start_val[2] => Add0.IN14
start_val[2] => count.DATAB
start_val[3] => Add0.IN13
start_val[3] => count.DATAB
start_val[4] => Add0.IN12
start_val[4] => count.DATAB
start_val[5] => Add0.IN11
start_val[5] => count.DATAB
start_val[6] => Add0.IN10
start_val[6] => count.DATAB
start_val[7] => Add0.IN9
start_val[7] => count.DATAB
inc => count.OUTPUTSELECT
inc => count.OUTPUTSELECT
inc => count.OUTPUTSELECT
inc => count.OUTPUTSELECT
inc => count.OUTPUTSELECT
inc => count.OUTPUTSELECT
inc => count.OUTPUTSELECT
inc => count.OUTPUTSELECT
inc => always0.IN0
enable => always0.IN1
enable => count.OUTPUTSELECT
enable => count.OUTPUTSELECT
enable => count.OUTPUTSELECT
enable => count.OUTPUTSELECT
enable => count.OUTPUTSELECT
enable => count.OUTPUTSELECT
enable => count.OUTPUTSELECT
enable => count.OUTPUTSELECT
clk => count[0]~reg0.CLK
clk => count[1]~reg0.CLK
clk => count[2]~reg0.CLK
clk => count[3]~reg0.CLK
clk => count[4]~reg0.CLK
clk => count[5]~reg0.CLK
clk => count[6]~reg0.CLK
clk => count[7]~reg0.CLK
slow_edge => count.OUTPUTSELECT
slow_edge => count.OUTPUTSELECT
slow_edge => count.OUTPUTSELECT
slow_edge => count.OUTPUTSELECT
slow_edge => count.OUTPUTSELECT
slow_edge => count.OUTPUTSELECT
slow_edge => count.OUTPUTSELECT
slow_edge => count.OUTPUTSELECT
reset => count.OUTPUTSELECT
reset => count.OUTPUTSELECT
reset => count.OUTPUTSELECT
reset => count.OUTPUTSELECT
reset => count.OUTPUTSELECT
reset => count.OUTPUTSELECT
reset => count.OUTPUTSELECT
reset => count.OUTPUTSELECT
init_val[0] => count.DATAB
init_val[1] => count.DATAB


|lab8|snakes_and_apples:snake|grid_light:center_grid_row[7].center_grid_col[11].light
green_light_on <= green_light_on.DB_MAX_OUTPUT_PORT_TYPE
head <= head.DB_MAX_OUTPUT_PORT_TYPE
game_over_out <= state_n.DB_MAX_OUTPUT_PORT_TYPE
eating => counter256:counter.inc
eating => always0.IN1
game_over_in => state_n.e_off.OUTPUTSELECT
game_over_in => state_n.e_countdown.OUTPUTSELECT
game_over_in => state_n.e_head.OUTPUTSELECT
game_over_in => state_n.OUTPUTSELECT
left => state_n.OUTPUTSELECT
left => state_n.OUTPUTSELECT
left => state_n.OUTPUTSELECT
left => state_n.OUTPUTSELECT
up => state_n.OUTPUTSELECT
up => state_n.OUTPUTSELECT
up => state_n.OUTPUTSELECT
up => state_n.OUTPUTSELECT
right => state_n.OUTPUTSELECT
right => state_n.OUTPUTSELECT
right => state_n.OUTPUTSELECT
right => state_n.OUTPUTSELECT
down => state_n.OUTPUTSELECT
down => state_n.OUTPUTSELECT
down => state_n.OUTPUTSELECT
down => state_n.OUTPUTSELECT
length[0] => counter256:counter.start_val[0]
length[1] => counter256:counter.start_val[1]
length[2] => counter256:counter.start_val[2]
length[3] => counter256:counter.start_val[3]
length[4] => counter256:counter.start_val[4]
length[5] => counter256:counter.start_val[5]
length[6] => counter256:counter.start_val[6]
length[7] => counter256:counter.start_val[7]
dir[0] => Mux0.IN5
dir[0] => Mux1.IN5
dir[0] => Mux2.IN5
dir[0] => Mux3.IN5
dir[1] => Mux0.IN4
dir[1] => Mux1.IN4
dir[1] => Mux2.IN4
dir[1] => Mux3.IN4
clk => counter256:counter.clk
clk => state_r~1.DATAIN
slow_edge => counter256:counter.slow_edge
slow_edge => state_r.OUTPUTSELECT
slow_edge => state_r.OUTPUTSELECT
slow_edge => state_r.OUTPUTSELECT
slow_edge => state_r.OUTPUTSELECT
reset => counter256:counter.reset
reset => state_r.OUTPUTSELECT
reset => state_r.OUTPUTSELECT
reset => state_r.OUTPUTSELECT
reset => state_r.OUTPUTSELECT
light_type[0] => counter256:counter.init_val[0]
light_type[0] => Equal1.IN1
light_type[0] => Equal2.IN1
light_type[1] => counter256:counter.init_val[1]
light_type[1] => Equal1.IN0
light_type[1] => Equal2.IN0


|lab8|snakes_and_apples:snake|grid_light:center_grid_row[7].center_grid_col[11].light|counter256:counter
count[0] <= count[0]~reg0.DB_MAX_OUTPUT_PORT_TYPE
count[1] <= count[1]~reg0.DB_MAX_OUTPUT_PORT_TYPE
count[2] <= count[2]~reg0.DB_MAX_OUTPUT_PORT_TYPE
count[3] <= count[3]~reg0.DB_MAX_OUTPUT_PORT_TYPE
count[4] <= count[4]~reg0.DB_MAX_OUTPUT_PORT_TYPE
count[5] <= count[5]~reg0.DB_MAX_OUTPUT_PORT_TYPE
count[6] <= count[6]~reg0.DB_MAX_OUTPUT_PORT_TYPE
count[7] <= count[7]~reg0.DB_MAX_OUTPUT_PORT_TYPE
start_val[0] => Add0.IN16
start_val[0] => count.DATAB
start_val[1] => Add0.IN15
start_val[1] => count.DATAB
start_val[2] => Add0.IN14
start_val[2] => count.DATAB
start_val[3] => Add0.IN13
start_val[3] => count.DATAB
start_val[4] => Add0.IN12
start_val[4] => count.DATAB
start_val[5] => Add0.IN11
start_val[5] => count.DATAB
start_val[6] => Add0.IN10
start_val[6] => count.DATAB
start_val[7] => Add0.IN9
start_val[7] => count.DATAB
inc => count.OUTPUTSELECT
inc => count.OUTPUTSELECT
inc => count.OUTPUTSELECT
inc => count.OUTPUTSELECT
inc => count.OUTPUTSELECT
inc => count.OUTPUTSELECT
inc => count.OUTPUTSELECT
inc => count.OUTPUTSELECT
inc => always0.IN0
enable => always0.IN1
enable => count.OUTPUTSELECT
enable => count.OUTPUTSELECT
enable => count.OUTPUTSELECT
enable => count.OUTPUTSELECT
enable => count.OUTPUTSELECT
enable => count.OUTPUTSELECT
enable => count.OUTPUTSELECT
enable => count.OUTPUTSELECT
clk => count[0]~reg0.CLK
clk => count[1]~reg0.CLK
clk => count[2]~reg0.CLK
clk => count[3]~reg0.CLK
clk => count[4]~reg0.CLK
clk => count[5]~reg0.CLK
clk => count[6]~reg0.CLK
clk => count[7]~reg0.CLK
slow_edge => count.OUTPUTSELECT
slow_edge => count.OUTPUTSELECT
slow_edge => count.OUTPUTSELECT
slow_edge => count.OUTPUTSELECT
slow_edge => count.OUTPUTSELECT
slow_edge => count.OUTPUTSELECT
slow_edge => count.OUTPUTSELECT
slow_edge => count.OUTPUTSELECT
reset => count.OUTPUTSELECT
reset => count.OUTPUTSELECT
reset => count.OUTPUTSELECT
reset => count.OUTPUTSELECT
reset => count.OUTPUTSELECT
reset => count.OUTPUTSELECT
reset => count.OUTPUTSELECT
reset => count.OUTPUTSELECT
init_val[0] => count.DATAB
init_val[1] => count.DATAB


|lab8|snakes_and_apples:snake|grid_light:center_grid_row[7].center_grid_col[12].light
green_light_on <= green_light_on.DB_MAX_OUTPUT_PORT_TYPE
head <= head.DB_MAX_OUTPUT_PORT_TYPE
game_over_out <= state_n.DB_MAX_OUTPUT_PORT_TYPE
eating => counter256:counter.inc
eating => always0.IN1
game_over_in => state_n.e_off.OUTPUTSELECT
game_over_in => state_n.e_countdown.OUTPUTSELECT
game_over_in => state_n.e_head.OUTPUTSELECT
game_over_in => state_n.OUTPUTSELECT
left => state_n.OUTPUTSELECT
left => state_n.OUTPUTSELECT
left => state_n.OUTPUTSELECT
left => state_n.OUTPUTSELECT
up => state_n.OUTPUTSELECT
up => state_n.OUTPUTSELECT
up => state_n.OUTPUTSELECT
up => state_n.OUTPUTSELECT
right => state_n.OUTPUTSELECT
right => state_n.OUTPUTSELECT
right => state_n.OUTPUTSELECT
right => state_n.OUTPUTSELECT
down => state_n.OUTPUTSELECT
down => state_n.OUTPUTSELECT
down => state_n.OUTPUTSELECT
down => state_n.OUTPUTSELECT
length[0] => counter256:counter.start_val[0]
length[1] => counter256:counter.start_val[1]
length[2] => counter256:counter.start_val[2]
length[3] => counter256:counter.start_val[3]
length[4] => counter256:counter.start_val[4]
length[5] => counter256:counter.start_val[5]
length[6] => counter256:counter.start_val[6]
length[7] => counter256:counter.start_val[7]
dir[0] => Mux0.IN5
dir[0] => Mux1.IN5
dir[0] => Mux2.IN5
dir[0] => Mux3.IN5
dir[1] => Mux0.IN4
dir[1] => Mux1.IN4
dir[1] => Mux2.IN4
dir[1] => Mux3.IN4
clk => counter256:counter.clk
clk => state_r~1.DATAIN
slow_edge => counter256:counter.slow_edge
slow_edge => state_r.OUTPUTSELECT
slow_edge => state_r.OUTPUTSELECT
slow_edge => state_r.OUTPUTSELECT
slow_edge => state_r.OUTPUTSELECT
reset => counter256:counter.reset
reset => state_r.OUTPUTSELECT
reset => state_r.OUTPUTSELECT
reset => state_r.OUTPUTSELECT
reset => state_r.OUTPUTSELECT
light_type[0] => counter256:counter.init_val[0]
light_type[0] => Equal1.IN1
light_type[0] => Equal2.IN1
light_type[1] => counter256:counter.init_val[1]
light_type[1] => Equal1.IN0
light_type[1] => Equal2.IN0


|lab8|snakes_and_apples:snake|grid_light:center_grid_row[7].center_grid_col[12].light|counter256:counter
count[0] <= count[0]~reg0.DB_MAX_OUTPUT_PORT_TYPE
count[1] <= count[1]~reg0.DB_MAX_OUTPUT_PORT_TYPE
count[2] <= count[2]~reg0.DB_MAX_OUTPUT_PORT_TYPE
count[3] <= count[3]~reg0.DB_MAX_OUTPUT_PORT_TYPE
count[4] <= count[4]~reg0.DB_MAX_OUTPUT_PORT_TYPE
count[5] <= count[5]~reg0.DB_MAX_OUTPUT_PORT_TYPE
count[6] <= count[6]~reg0.DB_MAX_OUTPUT_PORT_TYPE
count[7] <= count[7]~reg0.DB_MAX_OUTPUT_PORT_TYPE
start_val[0] => Add0.IN16
start_val[0] => count.DATAB
start_val[1] => Add0.IN15
start_val[1] => count.DATAB
start_val[2] => Add0.IN14
start_val[2] => count.DATAB
start_val[3] => Add0.IN13
start_val[3] => count.DATAB
start_val[4] => Add0.IN12
start_val[4] => count.DATAB
start_val[5] => Add0.IN11
start_val[5] => count.DATAB
start_val[6] => Add0.IN10
start_val[6] => count.DATAB
start_val[7] => Add0.IN9
start_val[7] => count.DATAB
inc => count.OUTPUTSELECT
inc => count.OUTPUTSELECT
inc => count.OUTPUTSELECT
inc => count.OUTPUTSELECT
inc => count.OUTPUTSELECT
inc => count.OUTPUTSELECT
inc => count.OUTPUTSELECT
inc => count.OUTPUTSELECT
inc => always0.IN0
enable => always0.IN1
enable => count.OUTPUTSELECT
enable => count.OUTPUTSELECT
enable => count.OUTPUTSELECT
enable => count.OUTPUTSELECT
enable => count.OUTPUTSELECT
enable => count.OUTPUTSELECT
enable => count.OUTPUTSELECT
enable => count.OUTPUTSELECT
clk => count[0]~reg0.CLK
clk => count[1]~reg0.CLK
clk => count[2]~reg0.CLK
clk => count[3]~reg0.CLK
clk => count[4]~reg0.CLK
clk => count[5]~reg0.CLK
clk => count[6]~reg0.CLK
clk => count[7]~reg0.CLK
slow_edge => count.OUTPUTSELECT
slow_edge => count.OUTPUTSELECT
slow_edge => count.OUTPUTSELECT
slow_edge => count.OUTPUTSELECT
slow_edge => count.OUTPUTSELECT
slow_edge => count.OUTPUTSELECT
slow_edge => count.OUTPUTSELECT
slow_edge => count.OUTPUTSELECT
reset => count.OUTPUTSELECT
reset => count.OUTPUTSELECT
reset => count.OUTPUTSELECT
reset => count.OUTPUTSELECT
reset => count.OUTPUTSELECT
reset => count.OUTPUTSELECT
reset => count.OUTPUTSELECT
reset => count.OUTPUTSELECT
init_val[0] => count.DATAB
init_val[1] => count.DATAB


|lab8|snakes_and_apples:snake|grid_light:center_grid_row[7].center_grid_col[13].light
green_light_on <= green_light_on.DB_MAX_OUTPUT_PORT_TYPE
head <= head.DB_MAX_OUTPUT_PORT_TYPE
game_over_out <= state_n.DB_MAX_OUTPUT_PORT_TYPE
eating => counter256:counter.inc
eating => always0.IN1
game_over_in => state_n.e_off.OUTPUTSELECT
game_over_in => state_n.e_countdown.OUTPUTSELECT
game_over_in => state_n.e_head.OUTPUTSELECT
game_over_in => state_n.OUTPUTSELECT
left => state_n.OUTPUTSELECT
left => state_n.OUTPUTSELECT
left => state_n.OUTPUTSELECT
left => state_n.OUTPUTSELECT
up => state_n.OUTPUTSELECT
up => state_n.OUTPUTSELECT
up => state_n.OUTPUTSELECT
up => state_n.OUTPUTSELECT
right => state_n.OUTPUTSELECT
right => state_n.OUTPUTSELECT
right => state_n.OUTPUTSELECT
right => state_n.OUTPUTSELECT
down => state_n.OUTPUTSELECT
down => state_n.OUTPUTSELECT
down => state_n.OUTPUTSELECT
down => state_n.OUTPUTSELECT
length[0] => counter256:counter.start_val[0]
length[1] => counter256:counter.start_val[1]
length[2] => counter256:counter.start_val[2]
length[3] => counter256:counter.start_val[3]
length[4] => counter256:counter.start_val[4]
length[5] => counter256:counter.start_val[5]
length[6] => counter256:counter.start_val[6]
length[7] => counter256:counter.start_val[7]
dir[0] => Mux0.IN5
dir[0] => Mux1.IN5
dir[0] => Mux2.IN5
dir[0] => Mux3.IN5
dir[1] => Mux0.IN4
dir[1] => Mux1.IN4
dir[1] => Mux2.IN4
dir[1] => Mux3.IN4
clk => counter256:counter.clk
clk => state_r~1.DATAIN
slow_edge => counter256:counter.slow_edge
slow_edge => state_r.OUTPUTSELECT
slow_edge => state_r.OUTPUTSELECT
slow_edge => state_r.OUTPUTSELECT
slow_edge => state_r.OUTPUTSELECT
reset => counter256:counter.reset
reset => state_r.OUTPUTSELECT
reset => state_r.OUTPUTSELECT
reset => state_r.OUTPUTSELECT
reset => state_r.OUTPUTSELECT
light_type[0] => counter256:counter.init_val[0]
light_type[0] => Equal1.IN1
light_type[0] => Equal2.IN1
light_type[1] => counter256:counter.init_val[1]
light_type[1] => Equal1.IN0
light_type[1] => Equal2.IN0


|lab8|snakes_and_apples:snake|grid_light:center_grid_row[7].center_grid_col[13].light|counter256:counter
count[0] <= count[0]~reg0.DB_MAX_OUTPUT_PORT_TYPE
count[1] <= count[1]~reg0.DB_MAX_OUTPUT_PORT_TYPE
count[2] <= count[2]~reg0.DB_MAX_OUTPUT_PORT_TYPE
count[3] <= count[3]~reg0.DB_MAX_OUTPUT_PORT_TYPE
count[4] <= count[4]~reg0.DB_MAX_OUTPUT_PORT_TYPE
count[5] <= count[5]~reg0.DB_MAX_OUTPUT_PORT_TYPE
count[6] <= count[6]~reg0.DB_MAX_OUTPUT_PORT_TYPE
count[7] <= count[7]~reg0.DB_MAX_OUTPUT_PORT_TYPE
start_val[0] => Add0.IN16
start_val[0] => count.DATAB
start_val[1] => Add0.IN15
start_val[1] => count.DATAB
start_val[2] => Add0.IN14
start_val[2] => count.DATAB
start_val[3] => Add0.IN13
start_val[3] => count.DATAB
start_val[4] => Add0.IN12
start_val[4] => count.DATAB
start_val[5] => Add0.IN11
start_val[5] => count.DATAB
start_val[6] => Add0.IN10
start_val[6] => count.DATAB
start_val[7] => Add0.IN9
start_val[7] => count.DATAB
inc => count.OUTPUTSELECT
inc => count.OUTPUTSELECT
inc => count.OUTPUTSELECT
inc => count.OUTPUTSELECT
inc => count.OUTPUTSELECT
inc => count.OUTPUTSELECT
inc => count.OUTPUTSELECT
inc => count.OUTPUTSELECT
inc => always0.IN0
enable => always0.IN1
enable => count.OUTPUTSELECT
enable => count.OUTPUTSELECT
enable => count.OUTPUTSELECT
enable => count.OUTPUTSELECT
enable => count.OUTPUTSELECT
enable => count.OUTPUTSELECT
enable => count.OUTPUTSELECT
enable => count.OUTPUTSELECT
clk => count[0]~reg0.CLK
clk => count[1]~reg0.CLK
clk => count[2]~reg0.CLK
clk => count[3]~reg0.CLK
clk => count[4]~reg0.CLK
clk => count[5]~reg0.CLK
clk => count[6]~reg0.CLK
clk => count[7]~reg0.CLK
slow_edge => count.OUTPUTSELECT
slow_edge => count.OUTPUTSELECT
slow_edge => count.OUTPUTSELECT
slow_edge => count.OUTPUTSELECT
slow_edge => count.OUTPUTSELECT
slow_edge => count.OUTPUTSELECT
slow_edge => count.OUTPUTSELECT
slow_edge => count.OUTPUTSELECT
reset => count.OUTPUTSELECT
reset => count.OUTPUTSELECT
reset => count.OUTPUTSELECT
reset => count.OUTPUTSELECT
reset => count.OUTPUTSELECT
reset => count.OUTPUTSELECT
reset => count.OUTPUTSELECT
reset => count.OUTPUTSELECT
init_val[0] => count.DATAB
init_val[1] => count.DATAB


|lab8|snakes_and_apples:snake|grid_light:center_grid_row[7].center_grid_col[14].light
green_light_on <= green_light_on.DB_MAX_OUTPUT_PORT_TYPE
head <= head.DB_MAX_OUTPUT_PORT_TYPE
game_over_out <= state_n.DB_MAX_OUTPUT_PORT_TYPE
eating => counter256:counter.inc
eating => always0.IN1
game_over_in => state_n.e_off.OUTPUTSELECT
game_over_in => state_n.e_countdown.OUTPUTSELECT
game_over_in => state_n.e_head.OUTPUTSELECT
game_over_in => state_n.OUTPUTSELECT
left => state_n.OUTPUTSELECT
left => state_n.OUTPUTSELECT
left => state_n.OUTPUTSELECT
left => state_n.OUTPUTSELECT
up => state_n.OUTPUTSELECT
up => state_n.OUTPUTSELECT
up => state_n.OUTPUTSELECT
up => state_n.OUTPUTSELECT
right => state_n.OUTPUTSELECT
right => state_n.OUTPUTSELECT
right => state_n.OUTPUTSELECT
right => state_n.OUTPUTSELECT
down => state_n.OUTPUTSELECT
down => state_n.OUTPUTSELECT
down => state_n.OUTPUTSELECT
down => state_n.OUTPUTSELECT
length[0] => counter256:counter.start_val[0]
length[1] => counter256:counter.start_val[1]
length[2] => counter256:counter.start_val[2]
length[3] => counter256:counter.start_val[3]
length[4] => counter256:counter.start_val[4]
length[5] => counter256:counter.start_val[5]
length[6] => counter256:counter.start_val[6]
length[7] => counter256:counter.start_val[7]
dir[0] => Mux0.IN5
dir[0] => Mux1.IN5
dir[0] => Mux2.IN5
dir[0] => Mux3.IN5
dir[1] => Mux0.IN4
dir[1] => Mux1.IN4
dir[1] => Mux2.IN4
dir[1] => Mux3.IN4
clk => counter256:counter.clk
clk => state_r~1.DATAIN
slow_edge => counter256:counter.slow_edge
slow_edge => state_r.OUTPUTSELECT
slow_edge => state_r.OUTPUTSELECT
slow_edge => state_r.OUTPUTSELECT
slow_edge => state_r.OUTPUTSELECT
reset => counter256:counter.reset
reset => state_r.OUTPUTSELECT
reset => state_r.OUTPUTSELECT
reset => state_r.OUTPUTSELECT
reset => state_r.OUTPUTSELECT
light_type[0] => counter256:counter.init_val[0]
light_type[0] => Equal1.IN1
light_type[0] => Equal2.IN1
light_type[1] => counter256:counter.init_val[1]
light_type[1] => Equal1.IN0
light_type[1] => Equal2.IN0


|lab8|snakes_and_apples:snake|grid_light:center_grid_row[7].center_grid_col[14].light|counter256:counter
count[0] <= count[0]~reg0.DB_MAX_OUTPUT_PORT_TYPE
count[1] <= count[1]~reg0.DB_MAX_OUTPUT_PORT_TYPE
count[2] <= count[2]~reg0.DB_MAX_OUTPUT_PORT_TYPE
count[3] <= count[3]~reg0.DB_MAX_OUTPUT_PORT_TYPE
count[4] <= count[4]~reg0.DB_MAX_OUTPUT_PORT_TYPE
count[5] <= count[5]~reg0.DB_MAX_OUTPUT_PORT_TYPE
count[6] <= count[6]~reg0.DB_MAX_OUTPUT_PORT_TYPE
count[7] <= count[7]~reg0.DB_MAX_OUTPUT_PORT_TYPE
start_val[0] => Add0.IN16
start_val[0] => count.DATAB
start_val[1] => Add0.IN15
start_val[1] => count.DATAB
start_val[2] => Add0.IN14
start_val[2] => count.DATAB
start_val[3] => Add0.IN13
start_val[3] => count.DATAB
start_val[4] => Add0.IN12
start_val[4] => count.DATAB
start_val[5] => Add0.IN11
start_val[5] => count.DATAB
start_val[6] => Add0.IN10
start_val[6] => count.DATAB
start_val[7] => Add0.IN9
start_val[7] => count.DATAB
inc => count.OUTPUTSELECT
inc => count.OUTPUTSELECT
inc => count.OUTPUTSELECT
inc => count.OUTPUTSELECT
inc => count.OUTPUTSELECT
inc => count.OUTPUTSELECT
inc => count.OUTPUTSELECT
inc => count.OUTPUTSELECT
inc => always0.IN0
enable => always0.IN1
enable => count.OUTPUTSELECT
enable => count.OUTPUTSELECT
enable => count.OUTPUTSELECT
enable => count.OUTPUTSELECT
enable => count.OUTPUTSELECT
enable => count.OUTPUTSELECT
enable => count.OUTPUTSELECT
enable => count.OUTPUTSELECT
clk => count[0]~reg0.CLK
clk => count[1]~reg0.CLK
clk => count[2]~reg0.CLK
clk => count[3]~reg0.CLK
clk => count[4]~reg0.CLK
clk => count[5]~reg0.CLK
clk => count[6]~reg0.CLK
clk => count[7]~reg0.CLK
slow_edge => count.OUTPUTSELECT
slow_edge => count.OUTPUTSELECT
slow_edge => count.OUTPUTSELECT
slow_edge => count.OUTPUTSELECT
slow_edge => count.OUTPUTSELECT
slow_edge => count.OUTPUTSELECT
slow_edge => count.OUTPUTSELECT
slow_edge => count.OUTPUTSELECT
reset => count.OUTPUTSELECT
reset => count.OUTPUTSELECT
reset => count.OUTPUTSELECT
reset => count.OUTPUTSELECT
reset => count.OUTPUTSELECT
reset => count.OUTPUTSELECT
reset => count.OUTPUTSELECT
reset => count.OUTPUTSELECT
init_val[0] => count.DATAB
init_val[1] => count.DATAB


|lab8|snakes_and_apples:snake|grid_light:center_grid_row[8].center_grid_col[1].light
green_light_on <= green_light_on.DB_MAX_OUTPUT_PORT_TYPE
head <= head.DB_MAX_OUTPUT_PORT_TYPE
game_over_out <= state_n.DB_MAX_OUTPUT_PORT_TYPE
eating => counter256:counter.inc
eating => always0.IN1
game_over_in => state_n.e_off.OUTPUTSELECT
game_over_in => state_n.e_countdown.OUTPUTSELECT
game_over_in => state_n.e_head.OUTPUTSELECT
game_over_in => state_n.OUTPUTSELECT
left => state_n.OUTPUTSELECT
left => state_n.OUTPUTSELECT
left => state_n.OUTPUTSELECT
left => state_n.OUTPUTSELECT
up => state_n.OUTPUTSELECT
up => state_n.OUTPUTSELECT
up => state_n.OUTPUTSELECT
up => state_n.OUTPUTSELECT
right => state_n.OUTPUTSELECT
right => state_n.OUTPUTSELECT
right => state_n.OUTPUTSELECT
right => state_n.OUTPUTSELECT
down => state_n.OUTPUTSELECT
down => state_n.OUTPUTSELECT
down => state_n.OUTPUTSELECT
down => state_n.OUTPUTSELECT
length[0] => counter256:counter.start_val[0]
length[1] => counter256:counter.start_val[1]
length[2] => counter256:counter.start_val[2]
length[3] => counter256:counter.start_val[3]
length[4] => counter256:counter.start_val[4]
length[5] => counter256:counter.start_val[5]
length[6] => counter256:counter.start_val[6]
length[7] => counter256:counter.start_val[7]
dir[0] => Mux0.IN5
dir[0] => Mux1.IN5
dir[0] => Mux2.IN5
dir[0] => Mux3.IN5
dir[1] => Mux0.IN4
dir[1] => Mux1.IN4
dir[1] => Mux2.IN4
dir[1] => Mux3.IN4
clk => counter256:counter.clk
clk => state_r~1.DATAIN
slow_edge => counter256:counter.slow_edge
slow_edge => state_r.OUTPUTSELECT
slow_edge => state_r.OUTPUTSELECT
slow_edge => state_r.OUTPUTSELECT
slow_edge => state_r.OUTPUTSELECT
reset => counter256:counter.reset
reset => state_r.OUTPUTSELECT
reset => state_r.OUTPUTSELECT
reset => state_r.OUTPUTSELECT
reset => state_r.OUTPUTSELECT
light_type[0] => counter256:counter.init_val[0]
light_type[0] => Equal1.IN1
light_type[0] => Equal2.IN1
light_type[1] => counter256:counter.init_val[1]
light_type[1] => Equal1.IN0
light_type[1] => Equal2.IN0


|lab8|snakes_and_apples:snake|grid_light:center_grid_row[8].center_grid_col[1].light|counter256:counter
count[0] <= count[0]~reg0.DB_MAX_OUTPUT_PORT_TYPE
count[1] <= count[1]~reg0.DB_MAX_OUTPUT_PORT_TYPE
count[2] <= count[2]~reg0.DB_MAX_OUTPUT_PORT_TYPE
count[3] <= count[3]~reg0.DB_MAX_OUTPUT_PORT_TYPE
count[4] <= count[4]~reg0.DB_MAX_OUTPUT_PORT_TYPE
count[5] <= count[5]~reg0.DB_MAX_OUTPUT_PORT_TYPE
count[6] <= count[6]~reg0.DB_MAX_OUTPUT_PORT_TYPE
count[7] <= count[7]~reg0.DB_MAX_OUTPUT_PORT_TYPE
start_val[0] => Add0.IN16
start_val[0] => count.DATAB
start_val[1] => Add0.IN15
start_val[1] => count.DATAB
start_val[2] => Add0.IN14
start_val[2] => count.DATAB
start_val[3] => Add0.IN13
start_val[3] => count.DATAB
start_val[4] => Add0.IN12
start_val[4] => count.DATAB
start_val[5] => Add0.IN11
start_val[5] => count.DATAB
start_val[6] => Add0.IN10
start_val[6] => count.DATAB
start_val[7] => Add0.IN9
start_val[7] => count.DATAB
inc => count.OUTPUTSELECT
inc => count.OUTPUTSELECT
inc => count.OUTPUTSELECT
inc => count.OUTPUTSELECT
inc => count.OUTPUTSELECT
inc => count.OUTPUTSELECT
inc => count.OUTPUTSELECT
inc => count.OUTPUTSELECT
inc => always0.IN0
enable => always0.IN1
enable => count.OUTPUTSELECT
enable => count.OUTPUTSELECT
enable => count.OUTPUTSELECT
enable => count.OUTPUTSELECT
enable => count.OUTPUTSELECT
enable => count.OUTPUTSELECT
enable => count.OUTPUTSELECT
enable => count.OUTPUTSELECT
clk => count[0]~reg0.CLK
clk => count[1]~reg0.CLK
clk => count[2]~reg0.CLK
clk => count[3]~reg0.CLK
clk => count[4]~reg0.CLK
clk => count[5]~reg0.CLK
clk => count[6]~reg0.CLK
clk => count[7]~reg0.CLK
slow_edge => count.OUTPUTSELECT
slow_edge => count.OUTPUTSELECT
slow_edge => count.OUTPUTSELECT
slow_edge => count.OUTPUTSELECT
slow_edge => count.OUTPUTSELECT
slow_edge => count.OUTPUTSELECT
slow_edge => count.OUTPUTSELECT
slow_edge => count.OUTPUTSELECT
reset => count.OUTPUTSELECT
reset => count.OUTPUTSELECT
reset => count.OUTPUTSELECT
reset => count.OUTPUTSELECT
reset => count.OUTPUTSELECT
reset => count.OUTPUTSELECT
reset => count.OUTPUTSELECT
reset => count.OUTPUTSELECT
init_val[0] => count.DATAB
init_val[1] => count.DATAB


|lab8|snakes_and_apples:snake|grid_light:center_grid_row[8].center_grid_col[2].light
green_light_on <= green_light_on.DB_MAX_OUTPUT_PORT_TYPE
head <= head.DB_MAX_OUTPUT_PORT_TYPE
game_over_out <= state_n.DB_MAX_OUTPUT_PORT_TYPE
eating => counter256:counter.inc
eating => always0.IN1
game_over_in => state_n.e_off.OUTPUTSELECT
game_over_in => state_n.e_countdown.OUTPUTSELECT
game_over_in => state_n.e_head.OUTPUTSELECT
game_over_in => state_n.OUTPUTSELECT
left => state_n.OUTPUTSELECT
left => state_n.OUTPUTSELECT
left => state_n.OUTPUTSELECT
left => state_n.OUTPUTSELECT
up => state_n.OUTPUTSELECT
up => state_n.OUTPUTSELECT
up => state_n.OUTPUTSELECT
up => state_n.OUTPUTSELECT
right => state_n.OUTPUTSELECT
right => state_n.OUTPUTSELECT
right => state_n.OUTPUTSELECT
right => state_n.OUTPUTSELECT
down => state_n.OUTPUTSELECT
down => state_n.OUTPUTSELECT
down => state_n.OUTPUTSELECT
down => state_n.OUTPUTSELECT
length[0] => counter256:counter.start_val[0]
length[1] => counter256:counter.start_val[1]
length[2] => counter256:counter.start_val[2]
length[3] => counter256:counter.start_val[3]
length[4] => counter256:counter.start_val[4]
length[5] => counter256:counter.start_val[5]
length[6] => counter256:counter.start_val[6]
length[7] => counter256:counter.start_val[7]
dir[0] => Mux0.IN5
dir[0] => Mux1.IN5
dir[0] => Mux2.IN5
dir[0] => Mux3.IN5
dir[1] => Mux0.IN4
dir[1] => Mux1.IN4
dir[1] => Mux2.IN4
dir[1] => Mux3.IN4
clk => counter256:counter.clk
clk => state_r~1.DATAIN
slow_edge => counter256:counter.slow_edge
slow_edge => state_r.OUTPUTSELECT
slow_edge => state_r.OUTPUTSELECT
slow_edge => state_r.OUTPUTSELECT
slow_edge => state_r.OUTPUTSELECT
reset => counter256:counter.reset
reset => state_r.OUTPUTSELECT
reset => state_r.OUTPUTSELECT
reset => state_r.OUTPUTSELECT
reset => state_r.OUTPUTSELECT
light_type[0] => counter256:counter.init_val[0]
light_type[0] => Equal1.IN1
light_type[0] => Equal2.IN1
light_type[1] => counter256:counter.init_val[1]
light_type[1] => Equal1.IN0
light_type[1] => Equal2.IN0


|lab8|snakes_and_apples:snake|grid_light:center_grid_row[8].center_grid_col[2].light|counter256:counter
count[0] <= count[0]~reg0.DB_MAX_OUTPUT_PORT_TYPE
count[1] <= count[1]~reg0.DB_MAX_OUTPUT_PORT_TYPE
count[2] <= count[2]~reg0.DB_MAX_OUTPUT_PORT_TYPE
count[3] <= count[3]~reg0.DB_MAX_OUTPUT_PORT_TYPE
count[4] <= count[4]~reg0.DB_MAX_OUTPUT_PORT_TYPE
count[5] <= count[5]~reg0.DB_MAX_OUTPUT_PORT_TYPE
count[6] <= count[6]~reg0.DB_MAX_OUTPUT_PORT_TYPE
count[7] <= count[7]~reg0.DB_MAX_OUTPUT_PORT_TYPE
start_val[0] => Add0.IN16
start_val[0] => count.DATAB
start_val[1] => Add0.IN15
start_val[1] => count.DATAB
start_val[2] => Add0.IN14
start_val[2] => count.DATAB
start_val[3] => Add0.IN13
start_val[3] => count.DATAB
start_val[4] => Add0.IN12
start_val[4] => count.DATAB
start_val[5] => Add0.IN11
start_val[5] => count.DATAB
start_val[6] => Add0.IN10
start_val[6] => count.DATAB
start_val[7] => Add0.IN9
start_val[7] => count.DATAB
inc => count.OUTPUTSELECT
inc => count.OUTPUTSELECT
inc => count.OUTPUTSELECT
inc => count.OUTPUTSELECT
inc => count.OUTPUTSELECT
inc => count.OUTPUTSELECT
inc => count.OUTPUTSELECT
inc => count.OUTPUTSELECT
inc => always0.IN0
enable => always0.IN1
enable => count.OUTPUTSELECT
enable => count.OUTPUTSELECT
enable => count.OUTPUTSELECT
enable => count.OUTPUTSELECT
enable => count.OUTPUTSELECT
enable => count.OUTPUTSELECT
enable => count.OUTPUTSELECT
enable => count.OUTPUTSELECT
clk => count[0]~reg0.CLK
clk => count[1]~reg0.CLK
clk => count[2]~reg0.CLK
clk => count[3]~reg0.CLK
clk => count[4]~reg0.CLK
clk => count[5]~reg0.CLK
clk => count[6]~reg0.CLK
clk => count[7]~reg0.CLK
slow_edge => count.OUTPUTSELECT
slow_edge => count.OUTPUTSELECT
slow_edge => count.OUTPUTSELECT
slow_edge => count.OUTPUTSELECT
slow_edge => count.OUTPUTSELECT
slow_edge => count.OUTPUTSELECT
slow_edge => count.OUTPUTSELECT
slow_edge => count.OUTPUTSELECT
reset => count.OUTPUTSELECT
reset => count.OUTPUTSELECT
reset => count.OUTPUTSELECT
reset => count.OUTPUTSELECT
reset => count.OUTPUTSELECT
reset => count.OUTPUTSELECT
reset => count.OUTPUTSELECT
reset => count.OUTPUTSELECT
init_val[0] => count.DATAB
init_val[1] => count.DATAB


|lab8|snakes_and_apples:snake|grid_light:center_grid_row[8].center_grid_col[3].light
green_light_on <= green_light_on.DB_MAX_OUTPUT_PORT_TYPE
head <= head.DB_MAX_OUTPUT_PORT_TYPE
game_over_out <= state_n.DB_MAX_OUTPUT_PORT_TYPE
eating => counter256:counter.inc
eating => always0.IN1
game_over_in => state_n.e_off.OUTPUTSELECT
game_over_in => state_n.e_countdown.OUTPUTSELECT
game_over_in => state_n.e_head.OUTPUTSELECT
game_over_in => state_n.OUTPUTSELECT
left => state_n.OUTPUTSELECT
left => state_n.OUTPUTSELECT
left => state_n.OUTPUTSELECT
left => state_n.OUTPUTSELECT
up => state_n.OUTPUTSELECT
up => state_n.OUTPUTSELECT
up => state_n.OUTPUTSELECT
up => state_n.OUTPUTSELECT
right => state_n.OUTPUTSELECT
right => state_n.OUTPUTSELECT
right => state_n.OUTPUTSELECT
right => state_n.OUTPUTSELECT
down => state_n.OUTPUTSELECT
down => state_n.OUTPUTSELECT
down => state_n.OUTPUTSELECT
down => state_n.OUTPUTSELECT
length[0] => counter256:counter.start_val[0]
length[1] => counter256:counter.start_val[1]
length[2] => counter256:counter.start_val[2]
length[3] => counter256:counter.start_val[3]
length[4] => counter256:counter.start_val[4]
length[5] => counter256:counter.start_val[5]
length[6] => counter256:counter.start_val[6]
length[7] => counter256:counter.start_val[7]
dir[0] => Mux0.IN5
dir[0] => Mux1.IN5
dir[0] => Mux2.IN5
dir[0] => Mux3.IN5
dir[1] => Mux0.IN4
dir[1] => Mux1.IN4
dir[1] => Mux2.IN4
dir[1] => Mux3.IN4
clk => counter256:counter.clk
clk => state_r~1.DATAIN
slow_edge => counter256:counter.slow_edge
slow_edge => state_r.OUTPUTSELECT
slow_edge => state_r.OUTPUTSELECT
slow_edge => state_r.OUTPUTSELECT
slow_edge => state_r.OUTPUTSELECT
reset => counter256:counter.reset
reset => state_r.OUTPUTSELECT
reset => state_r.OUTPUTSELECT
reset => state_r.OUTPUTSELECT
reset => state_r.OUTPUTSELECT
light_type[0] => counter256:counter.init_val[0]
light_type[0] => Equal1.IN1
light_type[0] => Equal2.IN1
light_type[1] => counter256:counter.init_val[1]
light_type[1] => Equal1.IN0
light_type[1] => Equal2.IN0


|lab8|snakes_and_apples:snake|grid_light:center_grid_row[8].center_grid_col[3].light|counter256:counter
count[0] <= count[0]~reg0.DB_MAX_OUTPUT_PORT_TYPE
count[1] <= count[1]~reg0.DB_MAX_OUTPUT_PORT_TYPE
count[2] <= count[2]~reg0.DB_MAX_OUTPUT_PORT_TYPE
count[3] <= count[3]~reg0.DB_MAX_OUTPUT_PORT_TYPE
count[4] <= count[4]~reg0.DB_MAX_OUTPUT_PORT_TYPE
count[5] <= count[5]~reg0.DB_MAX_OUTPUT_PORT_TYPE
count[6] <= count[6]~reg0.DB_MAX_OUTPUT_PORT_TYPE
count[7] <= count[7]~reg0.DB_MAX_OUTPUT_PORT_TYPE
start_val[0] => Add0.IN16
start_val[0] => count.DATAB
start_val[1] => Add0.IN15
start_val[1] => count.DATAB
start_val[2] => Add0.IN14
start_val[2] => count.DATAB
start_val[3] => Add0.IN13
start_val[3] => count.DATAB
start_val[4] => Add0.IN12
start_val[4] => count.DATAB
start_val[5] => Add0.IN11
start_val[5] => count.DATAB
start_val[6] => Add0.IN10
start_val[6] => count.DATAB
start_val[7] => Add0.IN9
start_val[7] => count.DATAB
inc => count.OUTPUTSELECT
inc => count.OUTPUTSELECT
inc => count.OUTPUTSELECT
inc => count.OUTPUTSELECT
inc => count.OUTPUTSELECT
inc => count.OUTPUTSELECT
inc => count.OUTPUTSELECT
inc => count.OUTPUTSELECT
inc => always0.IN0
enable => always0.IN1
enable => count.OUTPUTSELECT
enable => count.OUTPUTSELECT
enable => count.OUTPUTSELECT
enable => count.OUTPUTSELECT
enable => count.OUTPUTSELECT
enable => count.OUTPUTSELECT
enable => count.OUTPUTSELECT
enable => count.OUTPUTSELECT
clk => count[0]~reg0.CLK
clk => count[1]~reg0.CLK
clk => count[2]~reg0.CLK
clk => count[3]~reg0.CLK
clk => count[4]~reg0.CLK
clk => count[5]~reg0.CLK
clk => count[6]~reg0.CLK
clk => count[7]~reg0.CLK
slow_edge => count.OUTPUTSELECT
slow_edge => count.OUTPUTSELECT
slow_edge => count.OUTPUTSELECT
slow_edge => count.OUTPUTSELECT
slow_edge => count.OUTPUTSELECT
slow_edge => count.OUTPUTSELECT
slow_edge => count.OUTPUTSELECT
slow_edge => count.OUTPUTSELECT
reset => count.OUTPUTSELECT
reset => count.OUTPUTSELECT
reset => count.OUTPUTSELECT
reset => count.OUTPUTSELECT
reset => count.OUTPUTSELECT
reset => count.OUTPUTSELECT
reset => count.OUTPUTSELECT
reset => count.OUTPUTSELECT
init_val[0] => count.DATAB
init_val[1] => count.DATAB


|lab8|snakes_and_apples:snake|grid_light:center_grid_row[8].center_grid_col[4].light
green_light_on <= green_light_on.DB_MAX_OUTPUT_PORT_TYPE
head <= head.DB_MAX_OUTPUT_PORT_TYPE
game_over_out <= state_n.DB_MAX_OUTPUT_PORT_TYPE
eating => counter256:counter.inc
eating => always0.IN1
game_over_in => state_n.e_off.OUTPUTSELECT
game_over_in => state_n.e_countdown.OUTPUTSELECT
game_over_in => state_n.e_head.OUTPUTSELECT
game_over_in => state_n.OUTPUTSELECT
left => state_n.OUTPUTSELECT
left => state_n.OUTPUTSELECT
left => state_n.OUTPUTSELECT
left => state_n.OUTPUTSELECT
up => state_n.OUTPUTSELECT
up => state_n.OUTPUTSELECT
up => state_n.OUTPUTSELECT
up => state_n.OUTPUTSELECT
right => state_n.OUTPUTSELECT
right => state_n.OUTPUTSELECT
right => state_n.OUTPUTSELECT
right => state_n.OUTPUTSELECT
down => state_n.OUTPUTSELECT
down => state_n.OUTPUTSELECT
down => state_n.OUTPUTSELECT
down => state_n.OUTPUTSELECT
length[0] => counter256:counter.start_val[0]
length[1] => counter256:counter.start_val[1]
length[2] => counter256:counter.start_val[2]
length[3] => counter256:counter.start_val[3]
length[4] => counter256:counter.start_val[4]
length[5] => counter256:counter.start_val[5]
length[6] => counter256:counter.start_val[6]
length[7] => counter256:counter.start_val[7]
dir[0] => Mux0.IN5
dir[0] => Mux1.IN5
dir[0] => Mux2.IN5
dir[0] => Mux3.IN5
dir[1] => Mux0.IN4
dir[1] => Mux1.IN4
dir[1] => Mux2.IN4
dir[1] => Mux3.IN4
clk => counter256:counter.clk
clk => state_r~1.DATAIN
slow_edge => counter256:counter.slow_edge
slow_edge => state_r.OUTPUTSELECT
slow_edge => state_r.OUTPUTSELECT
slow_edge => state_r.OUTPUTSELECT
slow_edge => state_r.OUTPUTSELECT
reset => counter256:counter.reset
reset => state_r.OUTPUTSELECT
reset => state_r.OUTPUTSELECT
reset => state_r.OUTPUTSELECT
reset => state_r.OUTPUTSELECT
light_type[0] => counter256:counter.init_val[0]
light_type[0] => Equal1.IN1
light_type[0] => Equal2.IN1
light_type[1] => counter256:counter.init_val[1]
light_type[1] => Equal1.IN0
light_type[1] => Equal2.IN0


|lab8|snakes_and_apples:snake|grid_light:center_grid_row[8].center_grid_col[4].light|counter256:counter
count[0] <= count[0]~reg0.DB_MAX_OUTPUT_PORT_TYPE
count[1] <= count[1]~reg0.DB_MAX_OUTPUT_PORT_TYPE
count[2] <= count[2]~reg0.DB_MAX_OUTPUT_PORT_TYPE
count[3] <= count[3]~reg0.DB_MAX_OUTPUT_PORT_TYPE
count[4] <= count[4]~reg0.DB_MAX_OUTPUT_PORT_TYPE
count[5] <= count[5]~reg0.DB_MAX_OUTPUT_PORT_TYPE
count[6] <= count[6]~reg0.DB_MAX_OUTPUT_PORT_TYPE
count[7] <= count[7]~reg0.DB_MAX_OUTPUT_PORT_TYPE
start_val[0] => Add0.IN16
start_val[0] => count.DATAB
start_val[1] => Add0.IN15
start_val[1] => count.DATAB
start_val[2] => Add0.IN14
start_val[2] => count.DATAB
start_val[3] => Add0.IN13
start_val[3] => count.DATAB
start_val[4] => Add0.IN12
start_val[4] => count.DATAB
start_val[5] => Add0.IN11
start_val[5] => count.DATAB
start_val[6] => Add0.IN10
start_val[6] => count.DATAB
start_val[7] => Add0.IN9
start_val[7] => count.DATAB
inc => count.OUTPUTSELECT
inc => count.OUTPUTSELECT
inc => count.OUTPUTSELECT
inc => count.OUTPUTSELECT
inc => count.OUTPUTSELECT
inc => count.OUTPUTSELECT
inc => count.OUTPUTSELECT
inc => count.OUTPUTSELECT
inc => always0.IN0
enable => always0.IN1
enable => count.OUTPUTSELECT
enable => count.OUTPUTSELECT
enable => count.OUTPUTSELECT
enable => count.OUTPUTSELECT
enable => count.OUTPUTSELECT
enable => count.OUTPUTSELECT
enable => count.OUTPUTSELECT
enable => count.OUTPUTSELECT
clk => count[0]~reg0.CLK
clk => count[1]~reg0.CLK
clk => count[2]~reg0.CLK
clk => count[3]~reg0.CLK
clk => count[4]~reg0.CLK
clk => count[5]~reg0.CLK
clk => count[6]~reg0.CLK
clk => count[7]~reg0.CLK
slow_edge => count.OUTPUTSELECT
slow_edge => count.OUTPUTSELECT
slow_edge => count.OUTPUTSELECT
slow_edge => count.OUTPUTSELECT
slow_edge => count.OUTPUTSELECT
slow_edge => count.OUTPUTSELECT
slow_edge => count.OUTPUTSELECT
slow_edge => count.OUTPUTSELECT
reset => count.OUTPUTSELECT
reset => count.OUTPUTSELECT
reset => count.OUTPUTSELECT
reset => count.OUTPUTSELECT
reset => count.OUTPUTSELECT
reset => count.OUTPUTSELECT
reset => count.OUTPUTSELECT
reset => count.OUTPUTSELECT
init_val[0] => count.DATAB
init_val[1] => count.DATAB


|lab8|snakes_and_apples:snake|grid_light:center_grid_row[8].center_grid_col[5].light
green_light_on <= green_light_on.DB_MAX_OUTPUT_PORT_TYPE
head <= head.DB_MAX_OUTPUT_PORT_TYPE
game_over_out <= state_n.DB_MAX_OUTPUT_PORT_TYPE
eating => counter256:counter.inc
eating => always0.IN1
game_over_in => state_n.e_off.OUTPUTSELECT
game_over_in => state_n.e_countdown.OUTPUTSELECT
game_over_in => state_n.e_head.OUTPUTSELECT
game_over_in => state_n.OUTPUTSELECT
left => state_n.OUTPUTSELECT
left => state_n.OUTPUTSELECT
left => state_n.OUTPUTSELECT
left => state_n.OUTPUTSELECT
up => state_n.OUTPUTSELECT
up => state_n.OUTPUTSELECT
up => state_n.OUTPUTSELECT
up => state_n.OUTPUTSELECT
right => state_n.OUTPUTSELECT
right => state_n.OUTPUTSELECT
right => state_n.OUTPUTSELECT
right => state_n.OUTPUTSELECT
down => state_n.OUTPUTSELECT
down => state_n.OUTPUTSELECT
down => state_n.OUTPUTSELECT
down => state_n.OUTPUTSELECT
length[0] => counter256:counter.start_val[0]
length[1] => counter256:counter.start_val[1]
length[2] => counter256:counter.start_val[2]
length[3] => counter256:counter.start_val[3]
length[4] => counter256:counter.start_val[4]
length[5] => counter256:counter.start_val[5]
length[6] => counter256:counter.start_val[6]
length[7] => counter256:counter.start_val[7]
dir[0] => Mux0.IN5
dir[0] => Mux1.IN5
dir[0] => Mux2.IN5
dir[0] => Mux3.IN5
dir[1] => Mux0.IN4
dir[1] => Mux1.IN4
dir[1] => Mux2.IN4
dir[1] => Mux3.IN4
clk => counter256:counter.clk
clk => state_r~1.DATAIN
slow_edge => counter256:counter.slow_edge
slow_edge => state_r.OUTPUTSELECT
slow_edge => state_r.OUTPUTSELECT
slow_edge => state_r.OUTPUTSELECT
slow_edge => state_r.OUTPUTSELECT
reset => counter256:counter.reset
reset => state_r.OUTPUTSELECT
reset => state_r.OUTPUTSELECT
reset => state_r.OUTPUTSELECT
reset => state_r.OUTPUTSELECT
light_type[0] => counter256:counter.init_val[0]
light_type[0] => Equal1.IN1
light_type[0] => Equal2.IN1
light_type[1] => counter256:counter.init_val[1]
light_type[1] => Equal1.IN0
light_type[1] => Equal2.IN0


|lab8|snakes_and_apples:snake|grid_light:center_grid_row[8].center_grid_col[5].light|counter256:counter
count[0] <= count[0]~reg0.DB_MAX_OUTPUT_PORT_TYPE
count[1] <= count[1]~reg0.DB_MAX_OUTPUT_PORT_TYPE
count[2] <= count[2]~reg0.DB_MAX_OUTPUT_PORT_TYPE
count[3] <= count[3]~reg0.DB_MAX_OUTPUT_PORT_TYPE
count[4] <= count[4]~reg0.DB_MAX_OUTPUT_PORT_TYPE
count[5] <= count[5]~reg0.DB_MAX_OUTPUT_PORT_TYPE
count[6] <= count[6]~reg0.DB_MAX_OUTPUT_PORT_TYPE
count[7] <= count[7]~reg0.DB_MAX_OUTPUT_PORT_TYPE
start_val[0] => Add0.IN16
start_val[0] => count.DATAB
start_val[1] => Add0.IN15
start_val[1] => count.DATAB
start_val[2] => Add0.IN14
start_val[2] => count.DATAB
start_val[3] => Add0.IN13
start_val[3] => count.DATAB
start_val[4] => Add0.IN12
start_val[4] => count.DATAB
start_val[5] => Add0.IN11
start_val[5] => count.DATAB
start_val[6] => Add0.IN10
start_val[6] => count.DATAB
start_val[7] => Add0.IN9
start_val[7] => count.DATAB
inc => count.OUTPUTSELECT
inc => count.OUTPUTSELECT
inc => count.OUTPUTSELECT
inc => count.OUTPUTSELECT
inc => count.OUTPUTSELECT
inc => count.OUTPUTSELECT
inc => count.OUTPUTSELECT
inc => count.OUTPUTSELECT
inc => always0.IN0
enable => always0.IN1
enable => count.OUTPUTSELECT
enable => count.OUTPUTSELECT
enable => count.OUTPUTSELECT
enable => count.OUTPUTSELECT
enable => count.OUTPUTSELECT
enable => count.OUTPUTSELECT
enable => count.OUTPUTSELECT
enable => count.OUTPUTSELECT
clk => count[0]~reg0.CLK
clk => count[1]~reg0.CLK
clk => count[2]~reg0.CLK
clk => count[3]~reg0.CLK
clk => count[4]~reg0.CLK
clk => count[5]~reg0.CLK
clk => count[6]~reg0.CLK
clk => count[7]~reg0.CLK
slow_edge => count.OUTPUTSELECT
slow_edge => count.OUTPUTSELECT
slow_edge => count.OUTPUTSELECT
slow_edge => count.OUTPUTSELECT
slow_edge => count.OUTPUTSELECT
slow_edge => count.OUTPUTSELECT
slow_edge => count.OUTPUTSELECT
slow_edge => count.OUTPUTSELECT
reset => count.OUTPUTSELECT
reset => count.OUTPUTSELECT
reset => count.OUTPUTSELECT
reset => count.OUTPUTSELECT
reset => count.OUTPUTSELECT
reset => count.OUTPUTSELECT
reset => count.OUTPUTSELECT
reset => count.OUTPUTSELECT
init_val[0] => count.DATAB
init_val[1] => count.DATAB


|lab8|snakes_and_apples:snake|grid_light:center_grid_row[8].center_grid_col[6].light
green_light_on <= green_light_on.DB_MAX_OUTPUT_PORT_TYPE
head <= head.DB_MAX_OUTPUT_PORT_TYPE
game_over_out <= state_n.DB_MAX_OUTPUT_PORT_TYPE
eating => counter256:counter.inc
eating => always0.IN1
game_over_in => state_n.e_off.OUTPUTSELECT
game_over_in => state_n.e_countdown.OUTPUTSELECT
game_over_in => state_n.e_head.OUTPUTSELECT
game_over_in => state_n.OUTPUTSELECT
left => state_n.OUTPUTSELECT
left => state_n.OUTPUTSELECT
left => state_n.OUTPUTSELECT
left => state_n.OUTPUTSELECT
up => state_n.OUTPUTSELECT
up => state_n.OUTPUTSELECT
up => state_n.OUTPUTSELECT
up => state_n.OUTPUTSELECT
right => state_n.OUTPUTSELECT
right => state_n.OUTPUTSELECT
right => state_n.OUTPUTSELECT
right => state_n.OUTPUTSELECT
down => state_n.OUTPUTSELECT
down => state_n.OUTPUTSELECT
down => state_n.OUTPUTSELECT
down => state_n.OUTPUTSELECT
length[0] => counter256:counter.start_val[0]
length[1] => counter256:counter.start_val[1]
length[2] => counter256:counter.start_val[2]
length[3] => counter256:counter.start_val[3]
length[4] => counter256:counter.start_val[4]
length[5] => counter256:counter.start_val[5]
length[6] => counter256:counter.start_val[6]
length[7] => counter256:counter.start_val[7]
dir[0] => Mux0.IN5
dir[0] => Mux1.IN5
dir[0] => Mux2.IN5
dir[0] => Mux3.IN5
dir[1] => Mux0.IN4
dir[1] => Mux1.IN4
dir[1] => Mux2.IN4
dir[1] => Mux3.IN4
clk => counter256:counter.clk
clk => state_r~1.DATAIN
slow_edge => counter256:counter.slow_edge
slow_edge => state_r.OUTPUTSELECT
slow_edge => state_r.OUTPUTSELECT
slow_edge => state_r.OUTPUTSELECT
slow_edge => state_r.OUTPUTSELECT
reset => counter256:counter.reset
reset => state_r.OUTPUTSELECT
reset => state_r.OUTPUTSELECT
reset => state_r.OUTPUTSELECT
reset => state_r.OUTPUTSELECT
light_type[0] => counter256:counter.init_val[0]
light_type[0] => Equal1.IN1
light_type[0] => Equal2.IN1
light_type[1] => counter256:counter.init_val[1]
light_type[1] => Equal1.IN0
light_type[1] => Equal2.IN0


|lab8|snakes_and_apples:snake|grid_light:center_grid_row[8].center_grid_col[6].light|counter256:counter
count[0] <= count[0]~reg0.DB_MAX_OUTPUT_PORT_TYPE
count[1] <= count[1]~reg0.DB_MAX_OUTPUT_PORT_TYPE
count[2] <= count[2]~reg0.DB_MAX_OUTPUT_PORT_TYPE
count[3] <= count[3]~reg0.DB_MAX_OUTPUT_PORT_TYPE
count[4] <= count[4]~reg0.DB_MAX_OUTPUT_PORT_TYPE
count[5] <= count[5]~reg0.DB_MAX_OUTPUT_PORT_TYPE
count[6] <= count[6]~reg0.DB_MAX_OUTPUT_PORT_TYPE
count[7] <= count[7]~reg0.DB_MAX_OUTPUT_PORT_TYPE
start_val[0] => Add0.IN16
start_val[0] => count.DATAB
start_val[1] => Add0.IN15
start_val[1] => count.DATAB
start_val[2] => Add0.IN14
start_val[2] => count.DATAB
start_val[3] => Add0.IN13
start_val[3] => count.DATAB
start_val[4] => Add0.IN12
start_val[4] => count.DATAB
start_val[5] => Add0.IN11
start_val[5] => count.DATAB
start_val[6] => Add0.IN10
start_val[6] => count.DATAB
start_val[7] => Add0.IN9
start_val[7] => count.DATAB
inc => count.OUTPUTSELECT
inc => count.OUTPUTSELECT
inc => count.OUTPUTSELECT
inc => count.OUTPUTSELECT
inc => count.OUTPUTSELECT
inc => count.OUTPUTSELECT
inc => count.OUTPUTSELECT
inc => count.OUTPUTSELECT
inc => always0.IN0
enable => always0.IN1
enable => count.OUTPUTSELECT
enable => count.OUTPUTSELECT
enable => count.OUTPUTSELECT
enable => count.OUTPUTSELECT
enable => count.OUTPUTSELECT
enable => count.OUTPUTSELECT
enable => count.OUTPUTSELECT
enable => count.OUTPUTSELECT
clk => count[0]~reg0.CLK
clk => count[1]~reg0.CLK
clk => count[2]~reg0.CLK
clk => count[3]~reg0.CLK
clk => count[4]~reg0.CLK
clk => count[5]~reg0.CLK
clk => count[6]~reg0.CLK
clk => count[7]~reg0.CLK
slow_edge => count.OUTPUTSELECT
slow_edge => count.OUTPUTSELECT
slow_edge => count.OUTPUTSELECT
slow_edge => count.OUTPUTSELECT
slow_edge => count.OUTPUTSELECT
slow_edge => count.OUTPUTSELECT
slow_edge => count.OUTPUTSELECT
slow_edge => count.OUTPUTSELECT
reset => count.OUTPUTSELECT
reset => count.OUTPUTSELECT
reset => count.OUTPUTSELECT
reset => count.OUTPUTSELECT
reset => count.OUTPUTSELECT
reset => count.OUTPUTSELECT
reset => count.OUTPUTSELECT
reset => count.OUTPUTSELECT
init_val[0] => count.DATAB
init_val[1] => count.DATAB


|lab8|snakes_and_apples:snake|grid_light:center_grid_row[8].center_grid_col[7].light
green_light_on <= green_light_on.DB_MAX_OUTPUT_PORT_TYPE
head <= head.DB_MAX_OUTPUT_PORT_TYPE
game_over_out <= state_n.DB_MAX_OUTPUT_PORT_TYPE
eating => counter256:counter.inc
eating => always0.IN1
game_over_in => state_n.e_off.OUTPUTSELECT
game_over_in => state_n.e_countdown.OUTPUTSELECT
game_over_in => state_n.e_head.OUTPUTSELECT
game_over_in => state_n.OUTPUTSELECT
left => state_n.OUTPUTSELECT
left => state_n.OUTPUTSELECT
left => state_n.OUTPUTSELECT
left => state_n.OUTPUTSELECT
up => state_n.OUTPUTSELECT
up => state_n.OUTPUTSELECT
up => state_n.OUTPUTSELECT
up => state_n.OUTPUTSELECT
right => state_n.OUTPUTSELECT
right => state_n.OUTPUTSELECT
right => state_n.OUTPUTSELECT
right => state_n.OUTPUTSELECT
down => state_n.OUTPUTSELECT
down => state_n.OUTPUTSELECT
down => state_n.OUTPUTSELECT
down => state_n.OUTPUTSELECT
length[0] => counter256:counter.start_val[0]
length[1] => counter256:counter.start_val[1]
length[2] => counter256:counter.start_val[2]
length[3] => counter256:counter.start_val[3]
length[4] => counter256:counter.start_val[4]
length[5] => counter256:counter.start_val[5]
length[6] => counter256:counter.start_val[6]
length[7] => counter256:counter.start_val[7]
dir[0] => Mux0.IN5
dir[0] => Mux1.IN5
dir[0] => Mux2.IN5
dir[0] => Mux3.IN5
dir[1] => Mux0.IN4
dir[1] => Mux1.IN4
dir[1] => Mux2.IN4
dir[1] => Mux3.IN4
clk => counter256:counter.clk
clk => state_r~1.DATAIN
slow_edge => counter256:counter.slow_edge
slow_edge => state_r.OUTPUTSELECT
slow_edge => state_r.OUTPUTSELECT
slow_edge => state_r.OUTPUTSELECT
slow_edge => state_r.OUTPUTSELECT
reset => counter256:counter.reset
reset => state_r.OUTPUTSELECT
reset => state_r.OUTPUTSELECT
reset => state_r.OUTPUTSELECT
reset => state_r.OUTPUTSELECT
light_type[0] => counter256:counter.init_val[0]
light_type[0] => Equal1.IN1
light_type[0] => Equal2.IN1
light_type[1] => counter256:counter.init_val[1]
light_type[1] => Equal1.IN0
light_type[1] => Equal2.IN0


|lab8|snakes_and_apples:snake|grid_light:center_grid_row[8].center_grid_col[7].light|counter256:counter
count[0] <= count[0]~reg0.DB_MAX_OUTPUT_PORT_TYPE
count[1] <= count[1]~reg0.DB_MAX_OUTPUT_PORT_TYPE
count[2] <= count[2]~reg0.DB_MAX_OUTPUT_PORT_TYPE
count[3] <= count[3]~reg0.DB_MAX_OUTPUT_PORT_TYPE
count[4] <= count[4]~reg0.DB_MAX_OUTPUT_PORT_TYPE
count[5] <= count[5]~reg0.DB_MAX_OUTPUT_PORT_TYPE
count[6] <= count[6]~reg0.DB_MAX_OUTPUT_PORT_TYPE
count[7] <= count[7]~reg0.DB_MAX_OUTPUT_PORT_TYPE
start_val[0] => Add0.IN16
start_val[0] => count.DATAB
start_val[1] => Add0.IN15
start_val[1] => count.DATAB
start_val[2] => Add0.IN14
start_val[2] => count.DATAB
start_val[3] => Add0.IN13
start_val[3] => count.DATAB
start_val[4] => Add0.IN12
start_val[4] => count.DATAB
start_val[5] => Add0.IN11
start_val[5] => count.DATAB
start_val[6] => Add0.IN10
start_val[6] => count.DATAB
start_val[7] => Add0.IN9
start_val[7] => count.DATAB
inc => count.OUTPUTSELECT
inc => count.OUTPUTSELECT
inc => count.OUTPUTSELECT
inc => count.OUTPUTSELECT
inc => count.OUTPUTSELECT
inc => count.OUTPUTSELECT
inc => count.OUTPUTSELECT
inc => count.OUTPUTSELECT
inc => always0.IN0
enable => always0.IN1
enable => count.OUTPUTSELECT
enable => count.OUTPUTSELECT
enable => count.OUTPUTSELECT
enable => count.OUTPUTSELECT
enable => count.OUTPUTSELECT
enable => count.OUTPUTSELECT
enable => count.OUTPUTSELECT
enable => count.OUTPUTSELECT
clk => count[0]~reg0.CLK
clk => count[1]~reg0.CLK
clk => count[2]~reg0.CLK
clk => count[3]~reg0.CLK
clk => count[4]~reg0.CLK
clk => count[5]~reg0.CLK
clk => count[6]~reg0.CLK
clk => count[7]~reg0.CLK
slow_edge => count.OUTPUTSELECT
slow_edge => count.OUTPUTSELECT
slow_edge => count.OUTPUTSELECT
slow_edge => count.OUTPUTSELECT
slow_edge => count.OUTPUTSELECT
slow_edge => count.OUTPUTSELECT
slow_edge => count.OUTPUTSELECT
slow_edge => count.OUTPUTSELECT
reset => count.OUTPUTSELECT
reset => count.OUTPUTSELECT
reset => count.OUTPUTSELECT
reset => count.OUTPUTSELECT
reset => count.OUTPUTSELECT
reset => count.OUTPUTSELECT
reset => count.OUTPUTSELECT
reset => count.OUTPUTSELECT
init_val[0] => count.DATAB
init_val[1] => count.DATAB


|lab8|snakes_and_apples:snake|grid_light:center_grid_row[8].center_grid_col[8].light
green_light_on <= green_light_on.DB_MAX_OUTPUT_PORT_TYPE
head <= head.DB_MAX_OUTPUT_PORT_TYPE
game_over_out <= state_n.DB_MAX_OUTPUT_PORT_TYPE
eating => counter256:counter.inc
eating => always0.IN1
game_over_in => state_n.e_off.OUTPUTSELECT
game_over_in => state_n.e_countdown.OUTPUTSELECT
game_over_in => state_n.e_head.OUTPUTSELECT
game_over_in => state_n.OUTPUTSELECT
left => state_n.OUTPUTSELECT
left => state_n.OUTPUTSELECT
left => state_n.OUTPUTSELECT
left => state_n.OUTPUTSELECT
up => state_n.OUTPUTSELECT
up => state_n.OUTPUTSELECT
up => state_n.OUTPUTSELECT
up => state_n.OUTPUTSELECT
right => state_n.OUTPUTSELECT
right => state_n.OUTPUTSELECT
right => state_n.OUTPUTSELECT
right => state_n.OUTPUTSELECT
down => state_n.OUTPUTSELECT
down => state_n.OUTPUTSELECT
down => state_n.OUTPUTSELECT
down => state_n.OUTPUTSELECT
length[0] => counter256:counter.start_val[0]
length[1] => counter256:counter.start_val[1]
length[2] => counter256:counter.start_val[2]
length[3] => counter256:counter.start_val[3]
length[4] => counter256:counter.start_val[4]
length[5] => counter256:counter.start_val[5]
length[6] => counter256:counter.start_val[6]
length[7] => counter256:counter.start_val[7]
dir[0] => Mux0.IN5
dir[0] => Mux1.IN5
dir[0] => Mux2.IN5
dir[0] => Mux3.IN5
dir[1] => Mux0.IN4
dir[1] => Mux1.IN4
dir[1] => Mux2.IN4
dir[1] => Mux3.IN4
clk => counter256:counter.clk
clk => state_r~1.DATAIN
slow_edge => counter256:counter.slow_edge
slow_edge => state_r.OUTPUTSELECT
slow_edge => state_r.OUTPUTSELECT
slow_edge => state_r.OUTPUTSELECT
slow_edge => state_r.OUTPUTSELECT
reset => counter256:counter.reset
reset => state_r.OUTPUTSELECT
reset => state_r.OUTPUTSELECT
reset => state_r.OUTPUTSELECT
reset => state_r.OUTPUTSELECT
light_type[0] => counter256:counter.init_val[0]
light_type[0] => Equal1.IN1
light_type[0] => Equal2.IN1
light_type[1] => counter256:counter.init_val[1]
light_type[1] => Equal1.IN0
light_type[1] => Equal2.IN0


|lab8|snakes_and_apples:snake|grid_light:center_grid_row[8].center_grid_col[8].light|counter256:counter
count[0] <= count[0]~reg0.DB_MAX_OUTPUT_PORT_TYPE
count[1] <= count[1]~reg0.DB_MAX_OUTPUT_PORT_TYPE
count[2] <= count[2]~reg0.DB_MAX_OUTPUT_PORT_TYPE
count[3] <= count[3]~reg0.DB_MAX_OUTPUT_PORT_TYPE
count[4] <= count[4]~reg0.DB_MAX_OUTPUT_PORT_TYPE
count[5] <= count[5]~reg0.DB_MAX_OUTPUT_PORT_TYPE
count[6] <= count[6]~reg0.DB_MAX_OUTPUT_PORT_TYPE
count[7] <= count[7]~reg0.DB_MAX_OUTPUT_PORT_TYPE
start_val[0] => Add0.IN16
start_val[0] => count.DATAB
start_val[1] => Add0.IN15
start_val[1] => count.DATAB
start_val[2] => Add0.IN14
start_val[2] => count.DATAB
start_val[3] => Add0.IN13
start_val[3] => count.DATAB
start_val[4] => Add0.IN12
start_val[4] => count.DATAB
start_val[5] => Add0.IN11
start_val[5] => count.DATAB
start_val[6] => Add0.IN10
start_val[6] => count.DATAB
start_val[7] => Add0.IN9
start_val[7] => count.DATAB
inc => count.OUTPUTSELECT
inc => count.OUTPUTSELECT
inc => count.OUTPUTSELECT
inc => count.OUTPUTSELECT
inc => count.OUTPUTSELECT
inc => count.OUTPUTSELECT
inc => count.OUTPUTSELECT
inc => count.OUTPUTSELECT
inc => always0.IN0
enable => always0.IN1
enable => count.OUTPUTSELECT
enable => count.OUTPUTSELECT
enable => count.OUTPUTSELECT
enable => count.OUTPUTSELECT
enable => count.OUTPUTSELECT
enable => count.OUTPUTSELECT
enable => count.OUTPUTSELECT
enable => count.OUTPUTSELECT
clk => count[0]~reg0.CLK
clk => count[1]~reg0.CLK
clk => count[2]~reg0.CLK
clk => count[3]~reg0.CLK
clk => count[4]~reg0.CLK
clk => count[5]~reg0.CLK
clk => count[6]~reg0.CLK
clk => count[7]~reg0.CLK
slow_edge => count.OUTPUTSELECT
slow_edge => count.OUTPUTSELECT
slow_edge => count.OUTPUTSELECT
slow_edge => count.OUTPUTSELECT
slow_edge => count.OUTPUTSELECT
slow_edge => count.OUTPUTSELECT
slow_edge => count.OUTPUTSELECT
slow_edge => count.OUTPUTSELECT
reset => count.OUTPUTSELECT
reset => count.OUTPUTSELECT
reset => count.OUTPUTSELECT
reset => count.OUTPUTSELECT
reset => count.OUTPUTSELECT
reset => count.OUTPUTSELECT
reset => count.OUTPUTSELECT
reset => count.OUTPUTSELECT
init_val[0] => count.DATAB
init_val[1] => count.DATAB


|lab8|snakes_and_apples:snake|grid_light:center_grid_row[8].center_grid_col[9].light
green_light_on <= green_light_on.DB_MAX_OUTPUT_PORT_TYPE
head <= head.DB_MAX_OUTPUT_PORT_TYPE
game_over_out <= state_n.DB_MAX_OUTPUT_PORT_TYPE
eating => counter256:counter.inc
eating => always0.IN1
game_over_in => state_n.e_off.OUTPUTSELECT
game_over_in => state_n.e_countdown.OUTPUTSELECT
game_over_in => state_n.e_head.OUTPUTSELECT
game_over_in => state_n.OUTPUTSELECT
left => state_n.OUTPUTSELECT
left => state_n.OUTPUTSELECT
left => state_n.OUTPUTSELECT
left => state_n.OUTPUTSELECT
up => state_n.OUTPUTSELECT
up => state_n.OUTPUTSELECT
up => state_n.OUTPUTSELECT
up => state_n.OUTPUTSELECT
right => state_n.OUTPUTSELECT
right => state_n.OUTPUTSELECT
right => state_n.OUTPUTSELECT
right => state_n.OUTPUTSELECT
down => state_n.OUTPUTSELECT
down => state_n.OUTPUTSELECT
down => state_n.OUTPUTSELECT
down => state_n.OUTPUTSELECT
length[0] => counter256:counter.start_val[0]
length[1] => counter256:counter.start_val[1]
length[2] => counter256:counter.start_val[2]
length[3] => counter256:counter.start_val[3]
length[4] => counter256:counter.start_val[4]
length[5] => counter256:counter.start_val[5]
length[6] => counter256:counter.start_val[6]
length[7] => counter256:counter.start_val[7]
dir[0] => Mux0.IN5
dir[0] => Mux1.IN5
dir[0] => Mux2.IN5
dir[0] => Mux3.IN5
dir[1] => Mux0.IN4
dir[1] => Mux1.IN4
dir[1] => Mux2.IN4
dir[1] => Mux3.IN4
clk => counter256:counter.clk
clk => state_r~1.DATAIN
slow_edge => counter256:counter.slow_edge
slow_edge => state_r.OUTPUTSELECT
slow_edge => state_r.OUTPUTSELECT
slow_edge => state_r.OUTPUTSELECT
slow_edge => state_r.OUTPUTSELECT
reset => counter256:counter.reset
reset => state_r.OUTPUTSELECT
reset => state_r.OUTPUTSELECT
reset => state_r.OUTPUTSELECT
reset => state_r.OUTPUTSELECT
light_type[0] => counter256:counter.init_val[0]
light_type[0] => Equal1.IN1
light_type[0] => Equal2.IN1
light_type[1] => counter256:counter.init_val[1]
light_type[1] => Equal1.IN0
light_type[1] => Equal2.IN0


|lab8|snakes_and_apples:snake|grid_light:center_grid_row[8].center_grid_col[9].light|counter256:counter
count[0] <= count[0]~reg0.DB_MAX_OUTPUT_PORT_TYPE
count[1] <= count[1]~reg0.DB_MAX_OUTPUT_PORT_TYPE
count[2] <= count[2]~reg0.DB_MAX_OUTPUT_PORT_TYPE
count[3] <= count[3]~reg0.DB_MAX_OUTPUT_PORT_TYPE
count[4] <= count[4]~reg0.DB_MAX_OUTPUT_PORT_TYPE
count[5] <= count[5]~reg0.DB_MAX_OUTPUT_PORT_TYPE
count[6] <= count[6]~reg0.DB_MAX_OUTPUT_PORT_TYPE
count[7] <= count[7]~reg0.DB_MAX_OUTPUT_PORT_TYPE
start_val[0] => Add0.IN16
start_val[0] => count.DATAB
start_val[1] => Add0.IN15
start_val[1] => count.DATAB
start_val[2] => Add0.IN14
start_val[2] => count.DATAB
start_val[3] => Add0.IN13
start_val[3] => count.DATAB
start_val[4] => Add0.IN12
start_val[4] => count.DATAB
start_val[5] => Add0.IN11
start_val[5] => count.DATAB
start_val[6] => Add0.IN10
start_val[6] => count.DATAB
start_val[7] => Add0.IN9
start_val[7] => count.DATAB
inc => count.OUTPUTSELECT
inc => count.OUTPUTSELECT
inc => count.OUTPUTSELECT
inc => count.OUTPUTSELECT
inc => count.OUTPUTSELECT
inc => count.OUTPUTSELECT
inc => count.OUTPUTSELECT
inc => count.OUTPUTSELECT
inc => always0.IN0
enable => always0.IN1
enable => count.OUTPUTSELECT
enable => count.OUTPUTSELECT
enable => count.OUTPUTSELECT
enable => count.OUTPUTSELECT
enable => count.OUTPUTSELECT
enable => count.OUTPUTSELECT
enable => count.OUTPUTSELECT
enable => count.OUTPUTSELECT
clk => count[0]~reg0.CLK
clk => count[1]~reg0.CLK
clk => count[2]~reg0.CLK
clk => count[3]~reg0.CLK
clk => count[4]~reg0.CLK
clk => count[5]~reg0.CLK
clk => count[6]~reg0.CLK
clk => count[7]~reg0.CLK
slow_edge => count.OUTPUTSELECT
slow_edge => count.OUTPUTSELECT
slow_edge => count.OUTPUTSELECT
slow_edge => count.OUTPUTSELECT
slow_edge => count.OUTPUTSELECT
slow_edge => count.OUTPUTSELECT
slow_edge => count.OUTPUTSELECT
slow_edge => count.OUTPUTSELECT
reset => count.OUTPUTSELECT
reset => count.OUTPUTSELECT
reset => count.OUTPUTSELECT
reset => count.OUTPUTSELECT
reset => count.OUTPUTSELECT
reset => count.OUTPUTSELECT
reset => count.OUTPUTSELECT
reset => count.OUTPUTSELECT
init_val[0] => count.DATAB
init_val[1] => count.DATAB


|lab8|snakes_and_apples:snake|grid_light:center_grid_row[8].center_grid_col[10].light
green_light_on <= green_light_on.DB_MAX_OUTPUT_PORT_TYPE
head <= head.DB_MAX_OUTPUT_PORT_TYPE
game_over_out <= state_n.DB_MAX_OUTPUT_PORT_TYPE
eating => counter256:counter.inc
eating => always0.IN1
game_over_in => state_n.e_off.OUTPUTSELECT
game_over_in => state_n.e_countdown.OUTPUTSELECT
game_over_in => state_n.e_head.OUTPUTSELECT
game_over_in => state_n.OUTPUTSELECT
left => state_n.OUTPUTSELECT
left => state_n.OUTPUTSELECT
left => state_n.OUTPUTSELECT
left => state_n.OUTPUTSELECT
up => state_n.OUTPUTSELECT
up => state_n.OUTPUTSELECT
up => state_n.OUTPUTSELECT
up => state_n.OUTPUTSELECT
right => state_n.OUTPUTSELECT
right => state_n.OUTPUTSELECT
right => state_n.OUTPUTSELECT
right => state_n.OUTPUTSELECT
down => state_n.OUTPUTSELECT
down => state_n.OUTPUTSELECT
down => state_n.OUTPUTSELECT
down => state_n.OUTPUTSELECT
length[0] => counter256:counter.start_val[0]
length[1] => counter256:counter.start_val[1]
length[2] => counter256:counter.start_val[2]
length[3] => counter256:counter.start_val[3]
length[4] => counter256:counter.start_val[4]
length[5] => counter256:counter.start_val[5]
length[6] => counter256:counter.start_val[6]
length[7] => counter256:counter.start_val[7]
dir[0] => Mux0.IN5
dir[0] => Mux1.IN5
dir[0] => Mux2.IN5
dir[0] => Mux3.IN5
dir[1] => Mux0.IN4
dir[1] => Mux1.IN4
dir[1] => Mux2.IN4
dir[1] => Mux3.IN4
clk => counter256:counter.clk
clk => state_r~1.DATAIN
slow_edge => counter256:counter.slow_edge
slow_edge => state_r.OUTPUTSELECT
slow_edge => state_r.OUTPUTSELECT
slow_edge => state_r.OUTPUTSELECT
slow_edge => state_r.OUTPUTSELECT
reset => counter256:counter.reset
reset => state_r.OUTPUTSELECT
reset => state_r.OUTPUTSELECT
reset => state_r.OUTPUTSELECT
reset => state_r.OUTPUTSELECT
light_type[0] => counter256:counter.init_val[0]
light_type[0] => Equal1.IN1
light_type[0] => Equal2.IN1
light_type[1] => counter256:counter.init_val[1]
light_type[1] => Equal1.IN0
light_type[1] => Equal2.IN0


|lab8|snakes_and_apples:snake|grid_light:center_grid_row[8].center_grid_col[10].light|counter256:counter
count[0] <= count[0]~reg0.DB_MAX_OUTPUT_PORT_TYPE
count[1] <= count[1]~reg0.DB_MAX_OUTPUT_PORT_TYPE
count[2] <= count[2]~reg0.DB_MAX_OUTPUT_PORT_TYPE
count[3] <= count[3]~reg0.DB_MAX_OUTPUT_PORT_TYPE
count[4] <= count[4]~reg0.DB_MAX_OUTPUT_PORT_TYPE
count[5] <= count[5]~reg0.DB_MAX_OUTPUT_PORT_TYPE
count[6] <= count[6]~reg0.DB_MAX_OUTPUT_PORT_TYPE
count[7] <= count[7]~reg0.DB_MAX_OUTPUT_PORT_TYPE
start_val[0] => Add0.IN16
start_val[0] => count.DATAB
start_val[1] => Add0.IN15
start_val[1] => count.DATAB
start_val[2] => Add0.IN14
start_val[2] => count.DATAB
start_val[3] => Add0.IN13
start_val[3] => count.DATAB
start_val[4] => Add0.IN12
start_val[4] => count.DATAB
start_val[5] => Add0.IN11
start_val[5] => count.DATAB
start_val[6] => Add0.IN10
start_val[6] => count.DATAB
start_val[7] => Add0.IN9
start_val[7] => count.DATAB
inc => count.OUTPUTSELECT
inc => count.OUTPUTSELECT
inc => count.OUTPUTSELECT
inc => count.OUTPUTSELECT
inc => count.OUTPUTSELECT
inc => count.OUTPUTSELECT
inc => count.OUTPUTSELECT
inc => count.OUTPUTSELECT
inc => always0.IN0
enable => always0.IN1
enable => count.OUTPUTSELECT
enable => count.OUTPUTSELECT
enable => count.OUTPUTSELECT
enable => count.OUTPUTSELECT
enable => count.OUTPUTSELECT
enable => count.OUTPUTSELECT
enable => count.OUTPUTSELECT
enable => count.OUTPUTSELECT
clk => count[0]~reg0.CLK
clk => count[1]~reg0.CLK
clk => count[2]~reg0.CLK
clk => count[3]~reg0.CLK
clk => count[4]~reg0.CLK
clk => count[5]~reg0.CLK
clk => count[6]~reg0.CLK
clk => count[7]~reg0.CLK
slow_edge => count.OUTPUTSELECT
slow_edge => count.OUTPUTSELECT
slow_edge => count.OUTPUTSELECT
slow_edge => count.OUTPUTSELECT
slow_edge => count.OUTPUTSELECT
slow_edge => count.OUTPUTSELECT
slow_edge => count.OUTPUTSELECT
slow_edge => count.OUTPUTSELECT
reset => count.OUTPUTSELECT
reset => count.OUTPUTSELECT
reset => count.OUTPUTSELECT
reset => count.OUTPUTSELECT
reset => count.OUTPUTSELECT
reset => count.OUTPUTSELECT
reset => count.OUTPUTSELECT
reset => count.OUTPUTSELECT
init_val[0] => count.DATAB
init_val[1] => count.DATAB


|lab8|snakes_and_apples:snake|grid_light:center_grid_row[8].center_grid_col[11].light
green_light_on <= green_light_on.DB_MAX_OUTPUT_PORT_TYPE
head <= head.DB_MAX_OUTPUT_PORT_TYPE
game_over_out <= state_n.DB_MAX_OUTPUT_PORT_TYPE
eating => counter256:counter.inc
eating => always0.IN1
game_over_in => state_n.e_off.OUTPUTSELECT
game_over_in => state_n.e_countdown.OUTPUTSELECT
game_over_in => state_n.e_head.OUTPUTSELECT
game_over_in => state_n.OUTPUTSELECT
left => state_n.OUTPUTSELECT
left => state_n.OUTPUTSELECT
left => state_n.OUTPUTSELECT
left => state_n.OUTPUTSELECT
up => state_n.OUTPUTSELECT
up => state_n.OUTPUTSELECT
up => state_n.OUTPUTSELECT
up => state_n.OUTPUTSELECT
right => state_n.OUTPUTSELECT
right => state_n.OUTPUTSELECT
right => state_n.OUTPUTSELECT
right => state_n.OUTPUTSELECT
down => state_n.OUTPUTSELECT
down => state_n.OUTPUTSELECT
down => state_n.OUTPUTSELECT
down => state_n.OUTPUTSELECT
length[0] => counter256:counter.start_val[0]
length[1] => counter256:counter.start_val[1]
length[2] => counter256:counter.start_val[2]
length[3] => counter256:counter.start_val[3]
length[4] => counter256:counter.start_val[4]
length[5] => counter256:counter.start_val[5]
length[6] => counter256:counter.start_val[6]
length[7] => counter256:counter.start_val[7]
dir[0] => Mux0.IN5
dir[0] => Mux1.IN5
dir[0] => Mux2.IN5
dir[0] => Mux3.IN5
dir[1] => Mux0.IN4
dir[1] => Mux1.IN4
dir[1] => Mux2.IN4
dir[1] => Mux3.IN4
clk => counter256:counter.clk
clk => state_r~1.DATAIN
slow_edge => counter256:counter.slow_edge
slow_edge => state_r.OUTPUTSELECT
slow_edge => state_r.OUTPUTSELECT
slow_edge => state_r.OUTPUTSELECT
slow_edge => state_r.OUTPUTSELECT
reset => counter256:counter.reset
reset => state_r.OUTPUTSELECT
reset => state_r.OUTPUTSELECT
reset => state_r.OUTPUTSELECT
reset => state_r.OUTPUTSELECT
light_type[0] => counter256:counter.init_val[0]
light_type[0] => Equal1.IN1
light_type[0] => Equal2.IN1
light_type[1] => counter256:counter.init_val[1]
light_type[1] => Equal1.IN0
light_type[1] => Equal2.IN0


|lab8|snakes_and_apples:snake|grid_light:center_grid_row[8].center_grid_col[11].light|counter256:counter
count[0] <= count[0]~reg0.DB_MAX_OUTPUT_PORT_TYPE
count[1] <= count[1]~reg0.DB_MAX_OUTPUT_PORT_TYPE
count[2] <= count[2]~reg0.DB_MAX_OUTPUT_PORT_TYPE
count[3] <= count[3]~reg0.DB_MAX_OUTPUT_PORT_TYPE
count[4] <= count[4]~reg0.DB_MAX_OUTPUT_PORT_TYPE
count[5] <= count[5]~reg0.DB_MAX_OUTPUT_PORT_TYPE
count[6] <= count[6]~reg0.DB_MAX_OUTPUT_PORT_TYPE
count[7] <= count[7]~reg0.DB_MAX_OUTPUT_PORT_TYPE
start_val[0] => Add0.IN16
start_val[0] => count.DATAB
start_val[1] => Add0.IN15
start_val[1] => count.DATAB
start_val[2] => Add0.IN14
start_val[2] => count.DATAB
start_val[3] => Add0.IN13
start_val[3] => count.DATAB
start_val[4] => Add0.IN12
start_val[4] => count.DATAB
start_val[5] => Add0.IN11
start_val[5] => count.DATAB
start_val[6] => Add0.IN10
start_val[6] => count.DATAB
start_val[7] => Add0.IN9
start_val[7] => count.DATAB
inc => count.OUTPUTSELECT
inc => count.OUTPUTSELECT
inc => count.OUTPUTSELECT
inc => count.OUTPUTSELECT
inc => count.OUTPUTSELECT
inc => count.OUTPUTSELECT
inc => count.OUTPUTSELECT
inc => count.OUTPUTSELECT
inc => always0.IN0
enable => always0.IN1
enable => count.OUTPUTSELECT
enable => count.OUTPUTSELECT
enable => count.OUTPUTSELECT
enable => count.OUTPUTSELECT
enable => count.OUTPUTSELECT
enable => count.OUTPUTSELECT
enable => count.OUTPUTSELECT
enable => count.OUTPUTSELECT
clk => count[0]~reg0.CLK
clk => count[1]~reg0.CLK
clk => count[2]~reg0.CLK
clk => count[3]~reg0.CLK
clk => count[4]~reg0.CLK
clk => count[5]~reg0.CLK
clk => count[6]~reg0.CLK
clk => count[7]~reg0.CLK
slow_edge => count.OUTPUTSELECT
slow_edge => count.OUTPUTSELECT
slow_edge => count.OUTPUTSELECT
slow_edge => count.OUTPUTSELECT
slow_edge => count.OUTPUTSELECT
slow_edge => count.OUTPUTSELECT
slow_edge => count.OUTPUTSELECT
slow_edge => count.OUTPUTSELECT
reset => count.OUTPUTSELECT
reset => count.OUTPUTSELECT
reset => count.OUTPUTSELECT
reset => count.OUTPUTSELECT
reset => count.OUTPUTSELECT
reset => count.OUTPUTSELECT
reset => count.OUTPUTSELECT
reset => count.OUTPUTSELECT
init_val[0] => count.DATAB
init_val[1] => count.DATAB


|lab8|snakes_and_apples:snake|grid_light:center_grid_row[8].center_grid_col[12].light
green_light_on <= green_light_on.DB_MAX_OUTPUT_PORT_TYPE
head <= head.DB_MAX_OUTPUT_PORT_TYPE
game_over_out <= state_n.DB_MAX_OUTPUT_PORT_TYPE
eating => counter256:counter.inc
eating => always0.IN1
game_over_in => state_n.e_off.OUTPUTSELECT
game_over_in => state_n.e_countdown.OUTPUTSELECT
game_over_in => state_n.e_head.OUTPUTSELECT
game_over_in => state_n.OUTPUTSELECT
left => state_n.OUTPUTSELECT
left => state_n.OUTPUTSELECT
left => state_n.OUTPUTSELECT
left => state_n.OUTPUTSELECT
up => state_n.OUTPUTSELECT
up => state_n.OUTPUTSELECT
up => state_n.OUTPUTSELECT
up => state_n.OUTPUTSELECT
right => state_n.OUTPUTSELECT
right => state_n.OUTPUTSELECT
right => state_n.OUTPUTSELECT
right => state_n.OUTPUTSELECT
down => state_n.OUTPUTSELECT
down => state_n.OUTPUTSELECT
down => state_n.OUTPUTSELECT
down => state_n.OUTPUTSELECT
length[0] => counter256:counter.start_val[0]
length[1] => counter256:counter.start_val[1]
length[2] => counter256:counter.start_val[2]
length[3] => counter256:counter.start_val[3]
length[4] => counter256:counter.start_val[4]
length[5] => counter256:counter.start_val[5]
length[6] => counter256:counter.start_val[6]
length[7] => counter256:counter.start_val[7]
dir[0] => Mux0.IN5
dir[0] => Mux1.IN5
dir[0] => Mux2.IN5
dir[0] => Mux3.IN5
dir[1] => Mux0.IN4
dir[1] => Mux1.IN4
dir[1] => Mux2.IN4
dir[1] => Mux3.IN4
clk => counter256:counter.clk
clk => state_r~1.DATAIN
slow_edge => counter256:counter.slow_edge
slow_edge => state_r.OUTPUTSELECT
slow_edge => state_r.OUTPUTSELECT
slow_edge => state_r.OUTPUTSELECT
slow_edge => state_r.OUTPUTSELECT
reset => counter256:counter.reset
reset => state_r.OUTPUTSELECT
reset => state_r.OUTPUTSELECT
reset => state_r.OUTPUTSELECT
reset => state_r.OUTPUTSELECT
light_type[0] => counter256:counter.init_val[0]
light_type[0] => Equal1.IN1
light_type[0] => Equal2.IN1
light_type[1] => counter256:counter.init_val[1]
light_type[1] => Equal1.IN0
light_type[1] => Equal2.IN0


|lab8|snakes_and_apples:snake|grid_light:center_grid_row[8].center_grid_col[12].light|counter256:counter
count[0] <= count[0]~reg0.DB_MAX_OUTPUT_PORT_TYPE
count[1] <= count[1]~reg0.DB_MAX_OUTPUT_PORT_TYPE
count[2] <= count[2]~reg0.DB_MAX_OUTPUT_PORT_TYPE
count[3] <= count[3]~reg0.DB_MAX_OUTPUT_PORT_TYPE
count[4] <= count[4]~reg0.DB_MAX_OUTPUT_PORT_TYPE
count[5] <= count[5]~reg0.DB_MAX_OUTPUT_PORT_TYPE
count[6] <= count[6]~reg0.DB_MAX_OUTPUT_PORT_TYPE
count[7] <= count[7]~reg0.DB_MAX_OUTPUT_PORT_TYPE
start_val[0] => Add0.IN16
start_val[0] => count.DATAB
start_val[1] => Add0.IN15
start_val[1] => count.DATAB
start_val[2] => Add0.IN14
start_val[2] => count.DATAB
start_val[3] => Add0.IN13
start_val[3] => count.DATAB
start_val[4] => Add0.IN12
start_val[4] => count.DATAB
start_val[5] => Add0.IN11
start_val[5] => count.DATAB
start_val[6] => Add0.IN10
start_val[6] => count.DATAB
start_val[7] => Add0.IN9
start_val[7] => count.DATAB
inc => count.OUTPUTSELECT
inc => count.OUTPUTSELECT
inc => count.OUTPUTSELECT
inc => count.OUTPUTSELECT
inc => count.OUTPUTSELECT
inc => count.OUTPUTSELECT
inc => count.OUTPUTSELECT
inc => count.OUTPUTSELECT
inc => always0.IN0
enable => always0.IN1
enable => count.OUTPUTSELECT
enable => count.OUTPUTSELECT
enable => count.OUTPUTSELECT
enable => count.OUTPUTSELECT
enable => count.OUTPUTSELECT
enable => count.OUTPUTSELECT
enable => count.OUTPUTSELECT
enable => count.OUTPUTSELECT
clk => count[0]~reg0.CLK
clk => count[1]~reg0.CLK
clk => count[2]~reg0.CLK
clk => count[3]~reg0.CLK
clk => count[4]~reg0.CLK
clk => count[5]~reg0.CLK
clk => count[6]~reg0.CLK
clk => count[7]~reg0.CLK
slow_edge => count.OUTPUTSELECT
slow_edge => count.OUTPUTSELECT
slow_edge => count.OUTPUTSELECT
slow_edge => count.OUTPUTSELECT
slow_edge => count.OUTPUTSELECT
slow_edge => count.OUTPUTSELECT
slow_edge => count.OUTPUTSELECT
slow_edge => count.OUTPUTSELECT
reset => count.OUTPUTSELECT
reset => count.OUTPUTSELECT
reset => count.OUTPUTSELECT
reset => count.OUTPUTSELECT
reset => count.OUTPUTSELECT
reset => count.OUTPUTSELECT
reset => count.OUTPUTSELECT
reset => count.OUTPUTSELECT
init_val[0] => count.DATAB
init_val[1] => count.DATAB


|lab8|snakes_and_apples:snake|grid_light:center_grid_row[8].center_grid_col[13].light
green_light_on <= green_light_on.DB_MAX_OUTPUT_PORT_TYPE
head <= head.DB_MAX_OUTPUT_PORT_TYPE
game_over_out <= state_n.DB_MAX_OUTPUT_PORT_TYPE
eating => counter256:counter.inc
eating => always0.IN1
game_over_in => state_n.e_off.OUTPUTSELECT
game_over_in => state_n.e_countdown.OUTPUTSELECT
game_over_in => state_n.e_head.OUTPUTSELECT
game_over_in => state_n.OUTPUTSELECT
left => state_n.OUTPUTSELECT
left => state_n.OUTPUTSELECT
left => state_n.OUTPUTSELECT
left => state_n.OUTPUTSELECT
up => state_n.OUTPUTSELECT
up => state_n.OUTPUTSELECT
up => state_n.OUTPUTSELECT
up => state_n.OUTPUTSELECT
right => state_n.OUTPUTSELECT
right => state_n.OUTPUTSELECT
right => state_n.OUTPUTSELECT
right => state_n.OUTPUTSELECT
down => state_n.OUTPUTSELECT
down => state_n.OUTPUTSELECT
down => state_n.OUTPUTSELECT
down => state_n.OUTPUTSELECT
length[0] => counter256:counter.start_val[0]
length[1] => counter256:counter.start_val[1]
length[2] => counter256:counter.start_val[2]
length[3] => counter256:counter.start_val[3]
length[4] => counter256:counter.start_val[4]
length[5] => counter256:counter.start_val[5]
length[6] => counter256:counter.start_val[6]
length[7] => counter256:counter.start_val[7]
dir[0] => Mux0.IN5
dir[0] => Mux1.IN5
dir[0] => Mux2.IN5
dir[0] => Mux3.IN5
dir[1] => Mux0.IN4
dir[1] => Mux1.IN4
dir[1] => Mux2.IN4
dir[1] => Mux3.IN4
clk => counter256:counter.clk
clk => state_r~1.DATAIN
slow_edge => counter256:counter.slow_edge
slow_edge => state_r.OUTPUTSELECT
slow_edge => state_r.OUTPUTSELECT
slow_edge => state_r.OUTPUTSELECT
slow_edge => state_r.OUTPUTSELECT
reset => counter256:counter.reset
reset => state_r.OUTPUTSELECT
reset => state_r.OUTPUTSELECT
reset => state_r.OUTPUTSELECT
reset => state_r.OUTPUTSELECT
light_type[0] => counter256:counter.init_val[0]
light_type[0] => Equal1.IN1
light_type[0] => Equal2.IN1
light_type[1] => counter256:counter.init_val[1]
light_type[1] => Equal1.IN0
light_type[1] => Equal2.IN0


|lab8|snakes_and_apples:snake|grid_light:center_grid_row[8].center_grid_col[13].light|counter256:counter
count[0] <= count[0]~reg0.DB_MAX_OUTPUT_PORT_TYPE
count[1] <= count[1]~reg0.DB_MAX_OUTPUT_PORT_TYPE
count[2] <= count[2]~reg0.DB_MAX_OUTPUT_PORT_TYPE
count[3] <= count[3]~reg0.DB_MAX_OUTPUT_PORT_TYPE
count[4] <= count[4]~reg0.DB_MAX_OUTPUT_PORT_TYPE
count[5] <= count[5]~reg0.DB_MAX_OUTPUT_PORT_TYPE
count[6] <= count[6]~reg0.DB_MAX_OUTPUT_PORT_TYPE
count[7] <= count[7]~reg0.DB_MAX_OUTPUT_PORT_TYPE
start_val[0] => Add0.IN16
start_val[0] => count.DATAB
start_val[1] => Add0.IN15
start_val[1] => count.DATAB
start_val[2] => Add0.IN14
start_val[2] => count.DATAB
start_val[3] => Add0.IN13
start_val[3] => count.DATAB
start_val[4] => Add0.IN12
start_val[4] => count.DATAB
start_val[5] => Add0.IN11
start_val[5] => count.DATAB
start_val[6] => Add0.IN10
start_val[6] => count.DATAB
start_val[7] => Add0.IN9
start_val[7] => count.DATAB
inc => count.OUTPUTSELECT
inc => count.OUTPUTSELECT
inc => count.OUTPUTSELECT
inc => count.OUTPUTSELECT
inc => count.OUTPUTSELECT
inc => count.OUTPUTSELECT
inc => count.OUTPUTSELECT
inc => count.OUTPUTSELECT
inc => always0.IN0
enable => always0.IN1
enable => count.OUTPUTSELECT
enable => count.OUTPUTSELECT
enable => count.OUTPUTSELECT
enable => count.OUTPUTSELECT
enable => count.OUTPUTSELECT
enable => count.OUTPUTSELECT
enable => count.OUTPUTSELECT
enable => count.OUTPUTSELECT
clk => count[0]~reg0.CLK
clk => count[1]~reg0.CLK
clk => count[2]~reg0.CLK
clk => count[3]~reg0.CLK
clk => count[4]~reg0.CLK
clk => count[5]~reg0.CLK
clk => count[6]~reg0.CLK
clk => count[7]~reg0.CLK
slow_edge => count.OUTPUTSELECT
slow_edge => count.OUTPUTSELECT
slow_edge => count.OUTPUTSELECT
slow_edge => count.OUTPUTSELECT
slow_edge => count.OUTPUTSELECT
slow_edge => count.OUTPUTSELECT
slow_edge => count.OUTPUTSELECT
slow_edge => count.OUTPUTSELECT
reset => count.OUTPUTSELECT
reset => count.OUTPUTSELECT
reset => count.OUTPUTSELECT
reset => count.OUTPUTSELECT
reset => count.OUTPUTSELECT
reset => count.OUTPUTSELECT
reset => count.OUTPUTSELECT
reset => count.OUTPUTSELECT
init_val[0] => count.DATAB
init_val[1] => count.DATAB


|lab8|snakes_and_apples:snake|grid_light:center_grid_row[8].center_grid_col[14].light
green_light_on <= green_light_on.DB_MAX_OUTPUT_PORT_TYPE
head <= head.DB_MAX_OUTPUT_PORT_TYPE
game_over_out <= state_n.DB_MAX_OUTPUT_PORT_TYPE
eating => counter256:counter.inc
eating => always0.IN1
game_over_in => state_n.e_off.OUTPUTSELECT
game_over_in => state_n.e_countdown.OUTPUTSELECT
game_over_in => state_n.e_head.OUTPUTSELECT
game_over_in => state_n.OUTPUTSELECT
left => state_n.OUTPUTSELECT
left => state_n.OUTPUTSELECT
left => state_n.OUTPUTSELECT
left => state_n.OUTPUTSELECT
up => state_n.OUTPUTSELECT
up => state_n.OUTPUTSELECT
up => state_n.OUTPUTSELECT
up => state_n.OUTPUTSELECT
right => state_n.OUTPUTSELECT
right => state_n.OUTPUTSELECT
right => state_n.OUTPUTSELECT
right => state_n.OUTPUTSELECT
down => state_n.OUTPUTSELECT
down => state_n.OUTPUTSELECT
down => state_n.OUTPUTSELECT
down => state_n.OUTPUTSELECT
length[0] => counter256:counter.start_val[0]
length[1] => counter256:counter.start_val[1]
length[2] => counter256:counter.start_val[2]
length[3] => counter256:counter.start_val[3]
length[4] => counter256:counter.start_val[4]
length[5] => counter256:counter.start_val[5]
length[6] => counter256:counter.start_val[6]
length[7] => counter256:counter.start_val[7]
dir[0] => Mux0.IN5
dir[0] => Mux1.IN5
dir[0] => Mux2.IN5
dir[0] => Mux3.IN5
dir[1] => Mux0.IN4
dir[1] => Mux1.IN4
dir[1] => Mux2.IN4
dir[1] => Mux3.IN4
clk => counter256:counter.clk
clk => state_r~1.DATAIN
slow_edge => counter256:counter.slow_edge
slow_edge => state_r.OUTPUTSELECT
slow_edge => state_r.OUTPUTSELECT
slow_edge => state_r.OUTPUTSELECT
slow_edge => state_r.OUTPUTSELECT
reset => counter256:counter.reset
reset => state_r.OUTPUTSELECT
reset => state_r.OUTPUTSELECT
reset => state_r.OUTPUTSELECT
reset => state_r.OUTPUTSELECT
light_type[0] => counter256:counter.init_val[0]
light_type[0] => Equal1.IN1
light_type[0] => Equal2.IN1
light_type[1] => counter256:counter.init_val[1]
light_type[1] => Equal1.IN0
light_type[1] => Equal2.IN0


|lab8|snakes_and_apples:snake|grid_light:center_grid_row[8].center_grid_col[14].light|counter256:counter
count[0] <= count[0]~reg0.DB_MAX_OUTPUT_PORT_TYPE
count[1] <= count[1]~reg0.DB_MAX_OUTPUT_PORT_TYPE
count[2] <= count[2]~reg0.DB_MAX_OUTPUT_PORT_TYPE
count[3] <= count[3]~reg0.DB_MAX_OUTPUT_PORT_TYPE
count[4] <= count[4]~reg0.DB_MAX_OUTPUT_PORT_TYPE
count[5] <= count[5]~reg0.DB_MAX_OUTPUT_PORT_TYPE
count[6] <= count[6]~reg0.DB_MAX_OUTPUT_PORT_TYPE
count[7] <= count[7]~reg0.DB_MAX_OUTPUT_PORT_TYPE
start_val[0] => Add0.IN16
start_val[0] => count.DATAB
start_val[1] => Add0.IN15
start_val[1] => count.DATAB
start_val[2] => Add0.IN14
start_val[2] => count.DATAB
start_val[3] => Add0.IN13
start_val[3] => count.DATAB
start_val[4] => Add0.IN12
start_val[4] => count.DATAB
start_val[5] => Add0.IN11
start_val[5] => count.DATAB
start_val[6] => Add0.IN10
start_val[6] => count.DATAB
start_val[7] => Add0.IN9
start_val[7] => count.DATAB
inc => count.OUTPUTSELECT
inc => count.OUTPUTSELECT
inc => count.OUTPUTSELECT
inc => count.OUTPUTSELECT
inc => count.OUTPUTSELECT
inc => count.OUTPUTSELECT
inc => count.OUTPUTSELECT
inc => count.OUTPUTSELECT
inc => always0.IN0
enable => always0.IN1
enable => count.OUTPUTSELECT
enable => count.OUTPUTSELECT
enable => count.OUTPUTSELECT
enable => count.OUTPUTSELECT
enable => count.OUTPUTSELECT
enable => count.OUTPUTSELECT
enable => count.OUTPUTSELECT
enable => count.OUTPUTSELECT
clk => count[0]~reg0.CLK
clk => count[1]~reg0.CLK
clk => count[2]~reg0.CLK
clk => count[3]~reg0.CLK
clk => count[4]~reg0.CLK
clk => count[5]~reg0.CLK
clk => count[6]~reg0.CLK
clk => count[7]~reg0.CLK
slow_edge => count.OUTPUTSELECT
slow_edge => count.OUTPUTSELECT
slow_edge => count.OUTPUTSELECT
slow_edge => count.OUTPUTSELECT
slow_edge => count.OUTPUTSELECT
slow_edge => count.OUTPUTSELECT
slow_edge => count.OUTPUTSELECT
slow_edge => count.OUTPUTSELECT
reset => count.OUTPUTSELECT
reset => count.OUTPUTSELECT
reset => count.OUTPUTSELECT
reset => count.OUTPUTSELECT
reset => count.OUTPUTSELECT
reset => count.OUTPUTSELECT
reset => count.OUTPUTSELECT
reset => count.OUTPUTSELECT
init_val[0] => count.DATAB
init_val[1] => count.DATAB


|lab8|snakes_and_apples:snake|grid_light:center_grid_row[9].center_grid_col[1].light
green_light_on <= green_light_on.DB_MAX_OUTPUT_PORT_TYPE
head <= head.DB_MAX_OUTPUT_PORT_TYPE
game_over_out <= state_n.DB_MAX_OUTPUT_PORT_TYPE
eating => counter256:counter.inc
eating => always0.IN1
game_over_in => state_n.e_off.OUTPUTSELECT
game_over_in => state_n.e_countdown.OUTPUTSELECT
game_over_in => state_n.e_head.OUTPUTSELECT
game_over_in => state_n.OUTPUTSELECT
left => state_n.OUTPUTSELECT
left => state_n.OUTPUTSELECT
left => state_n.OUTPUTSELECT
left => state_n.OUTPUTSELECT
up => state_n.OUTPUTSELECT
up => state_n.OUTPUTSELECT
up => state_n.OUTPUTSELECT
up => state_n.OUTPUTSELECT
right => state_n.OUTPUTSELECT
right => state_n.OUTPUTSELECT
right => state_n.OUTPUTSELECT
right => state_n.OUTPUTSELECT
down => state_n.OUTPUTSELECT
down => state_n.OUTPUTSELECT
down => state_n.OUTPUTSELECT
down => state_n.OUTPUTSELECT
length[0] => counter256:counter.start_val[0]
length[1] => counter256:counter.start_val[1]
length[2] => counter256:counter.start_val[2]
length[3] => counter256:counter.start_val[3]
length[4] => counter256:counter.start_val[4]
length[5] => counter256:counter.start_val[5]
length[6] => counter256:counter.start_val[6]
length[7] => counter256:counter.start_val[7]
dir[0] => Mux0.IN5
dir[0] => Mux1.IN5
dir[0] => Mux2.IN5
dir[0] => Mux3.IN5
dir[1] => Mux0.IN4
dir[1] => Mux1.IN4
dir[1] => Mux2.IN4
dir[1] => Mux3.IN4
clk => counter256:counter.clk
clk => state_r~1.DATAIN
slow_edge => counter256:counter.slow_edge
slow_edge => state_r.OUTPUTSELECT
slow_edge => state_r.OUTPUTSELECT
slow_edge => state_r.OUTPUTSELECT
slow_edge => state_r.OUTPUTSELECT
reset => counter256:counter.reset
reset => state_r.OUTPUTSELECT
reset => state_r.OUTPUTSELECT
reset => state_r.OUTPUTSELECT
reset => state_r.OUTPUTSELECT
light_type[0] => counter256:counter.init_val[0]
light_type[0] => Equal1.IN1
light_type[0] => Equal2.IN1
light_type[1] => counter256:counter.init_val[1]
light_type[1] => Equal1.IN0
light_type[1] => Equal2.IN0


|lab8|snakes_and_apples:snake|grid_light:center_grid_row[9].center_grid_col[1].light|counter256:counter
count[0] <= count[0]~reg0.DB_MAX_OUTPUT_PORT_TYPE
count[1] <= count[1]~reg0.DB_MAX_OUTPUT_PORT_TYPE
count[2] <= count[2]~reg0.DB_MAX_OUTPUT_PORT_TYPE
count[3] <= count[3]~reg0.DB_MAX_OUTPUT_PORT_TYPE
count[4] <= count[4]~reg0.DB_MAX_OUTPUT_PORT_TYPE
count[5] <= count[5]~reg0.DB_MAX_OUTPUT_PORT_TYPE
count[6] <= count[6]~reg0.DB_MAX_OUTPUT_PORT_TYPE
count[7] <= count[7]~reg0.DB_MAX_OUTPUT_PORT_TYPE
start_val[0] => Add0.IN16
start_val[0] => count.DATAB
start_val[1] => Add0.IN15
start_val[1] => count.DATAB
start_val[2] => Add0.IN14
start_val[2] => count.DATAB
start_val[3] => Add0.IN13
start_val[3] => count.DATAB
start_val[4] => Add0.IN12
start_val[4] => count.DATAB
start_val[5] => Add0.IN11
start_val[5] => count.DATAB
start_val[6] => Add0.IN10
start_val[6] => count.DATAB
start_val[7] => Add0.IN9
start_val[7] => count.DATAB
inc => count.OUTPUTSELECT
inc => count.OUTPUTSELECT
inc => count.OUTPUTSELECT
inc => count.OUTPUTSELECT
inc => count.OUTPUTSELECT
inc => count.OUTPUTSELECT
inc => count.OUTPUTSELECT
inc => count.OUTPUTSELECT
inc => always0.IN0
enable => always0.IN1
enable => count.OUTPUTSELECT
enable => count.OUTPUTSELECT
enable => count.OUTPUTSELECT
enable => count.OUTPUTSELECT
enable => count.OUTPUTSELECT
enable => count.OUTPUTSELECT
enable => count.OUTPUTSELECT
enable => count.OUTPUTSELECT
clk => count[0]~reg0.CLK
clk => count[1]~reg0.CLK
clk => count[2]~reg0.CLK
clk => count[3]~reg0.CLK
clk => count[4]~reg0.CLK
clk => count[5]~reg0.CLK
clk => count[6]~reg0.CLK
clk => count[7]~reg0.CLK
slow_edge => count.OUTPUTSELECT
slow_edge => count.OUTPUTSELECT
slow_edge => count.OUTPUTSELECT
slow_edge => count.OUTPUTSELECT
slow_edge => count.OUTPUTSELECT
slow_edge => count.OUTPUTSELECT
slow_edge => count.OUTPUTSELECT
slow_edge => count.OUTPUTSELECT
reset => count.OUTPUTSELECT
reset => count.OUTPUTSELECT
reset => count.OUTPUTSELECT
reset => count.OUTPUTSELECT
reset => count.OUTPUTSELECT
reset => count.OUTPUTSELECT
reset => count.OUTPUTSELECT
reset => count.OUTPUTSELECT
init_val[0] => count.DATAB
init_val[1] => count.DATAB


|lab8|snakes_and_apples:snake|grid_light:center_grid_row[9].center_grid_col[2].light
green_light_on <= green_light_on.DB_MAX_OUTPUT_PORT_TYPE
head <= head.DB_MAX_OUTPUT_PORT_TYPE
game_over_out <= state_n.DB_MAX_OUTPUT_PORT_TYPE
eating => counter256:counter.inc
eating => always0.IN1
game_over_in => state_n.e_off.OUTPUTSELECT
game_over_in => state_n.e_countdown.OUTPUTSELECT
game_over_in => state_n.e_head.OUTPUTSELECT
game_over_in => state_n.OUTPUTSELECT
left => state_n.OUTPUTSELECT
left => state_n.OUTPUTSELECT
left => state_n.OUTPUTSELECT
left => state_n.OUTPUTSELECT
up => state_n.OUTPUTSELECT
up => state_n.OUTPUTSELECT
up => state_n.OUTPUTSELECT
up => state_n.OUTPUTSELECT
right => state_n.OUTPUTSELECT
right => state_n.OUTPUTSELECT
right => state_n.OUTPUTSELECT
right => state_n.OUTPUTSELECT
down => state_n.OUTPUTSELECT
down => state_n.OUTPUTSELECT
down => state_n.OUTPUTSELECT
down => state_n.OUTPUTSELECT
length[0] => counter256:counter.start_val[0]
length[1] => counter256:counter.start_val[1]
length[2] => counter256:counter.start_val[2]
length[3] => counter256:counter.start_val[3]
length[4] => counter256:counter.start_val[4]
length[5] => counter256:counter.start_val[5]
length[6] => counter256:counter.start_val[6]
length[7] => counter256:counter.start_val[7]
dir[0] => Mux0.IN5
dir[0] => Mux1.IN5
dir[0] => Mux2.IN5
dir[0] => Mux3.IN5
dir[1] => Mux0.IN4
dir[1] => Mux1.IN4
dir[1] => Mux2.IN4
dir[1] => Mux3.IN4
clk => counter256:counter.clk
clk => state_r~1.DATAIN
slow_edge => counter256:counter.slow_edge
slow_edge => state_r.OUTPUTSELECT
slow_edge => state_r.OUTPUTSELECT
slow_edge => state_r.OUTPUTSELECT
slow_edge => state_r.OUTPUTSELECT
reset => counter256:counter.reset
reset => state_r.OUTPUTSELECT
reset => state_r.OUTPUTSELECT
reset => state_r.OUTPUTSELECT
reset => state_r.OUTPUTSELECT
light_type[0] => counter256:counter.init_val[0]
light_type[0] => Equal1.IN1
light_type[0] => Equal2.IN1
light_type[1] => counter256:counter.init_val[1]
light_type[1] => Equal1.IN0
light_type[1] => Equal2.IN0


|lab8|snakes_and_apples:snake|grid_light:center_grid_row[9].center_grid_col[2].light|counter256:counter
count[0] <= count[0]~reg0.DB_MAX_OUTPUT_PORT_TYPE
count[1] <= count[1]~reg0.DB_MAX_OUTPUT_PORT_TYPE
count[2] <= count[2]~reg0.DB_MAX_OUTPUT_PORT_TYPE
count[3] <= count[3]~reg0.DB_MAX_OUTPUT_PORT_TYPE
count[4] <= count[4]~reg0.DB_MAX_OUTPUT_PORT_TYPE
count[5] <= count[5]~reg0.DB_MAX_OUTPUT_PORT_TYPE
count[6] <= count[6]~reg0.DB_MAX_OUTPUT_PORT_TYPE
count[7] <= count[7]~reg0.DB_MAX_OUTPUT_PORT_TYPE
start_val[0] => Add0.IN16
start_val[0] => count.DATAB
start_val[1] => Add0.IN15
start_val[1] => count.DATAB
start_val[2] => Add0.IN14
start_val[2] => count.DATAB
start_val[3] => Add0.IN13
start_val[3] => count.DATAB
start_val[4] => Add0.IN12
start_val[4] => count.DATAB
start_val[5] => Add0.IN11
start_val[5] => count.DATAB
start_val[6] => Add0.IN10
start_val[6] => count.DATAB
start_val[7] => Add0.IN9
start_val[7] => count.DATAB
inc => count.OUTPUTSELECT
inc => count.OUTPUTSELECT
inc => count.OUTPUTSELECT
inc => count.OUTPUTSELECT
inc => count.OUTPUTSELECT
inc => count.OUTPUTSELECT
inc => count.OUTPUTSELECT
inc => count.OUTPUTSELECT
inc => always0.IN0
enable => always0.IN1
enable => count.OUTPUTSELECT
enable => count.OUTPUTSELECT
enable => count.OUTPUTSELECT
enable => count.OUTPUTSELECT
enable => count.OUTPUTSELECT
enable => count.OUTPUTSELECT
enable => count.OUTPUTSELECT
enable => count.OUTPUTSELECT
clk => count[0]~reg0.CLK
clk => count[1]~reg0.CLK
clk => count[2]~reg0.CLK
clk => count[3]~reg0.CLK
clk => count[4]~reg0.CLK
clk => count[5]~reg0.CLK
clk => count[6]~reg0.CLK
clk => count[7]~reg0.CLK
slow_edge => count.OUTPUTSELECT
slow_edge => count.OUTPUTSELECT
slow_edge => count.OUTPUTSELECT
slow_edge => count.OUTPUTSELECT
slow_edge => count.OUTPUTSELECT
slow_edge => count.OUTPUTSELECT
slow_edge => count.OUTPUTSELECT
slow_edge => count.OUTPUTSELECT
reset => count.OUTPUTSELECT
reset => count.OUTPUTSELECT
reset => count.OUTPUTSELECT
reset => count.OUTPUTSELECT
reset => count.OUTPUTSELECT
reset => count.OUTPUTSELECT
reset => count.OUTPUTSELECT
reset => count.OUTPUTSELECT
init_val[0] => count.DATAB
init_val[1] => count.DATAB


|lab8|snakes_and_apples:snake|grid_light:center_grid_row[9].center_grid_col[3].light
green_light_on <= green_light_on.DB_MAX_OUTPUT_PORT_TYPE
head <= head.DB_MAX_OUTPUT_PORT_TYPE
game_over_out <= state_n.DB_MAX_OUTPUT_PORT_TYPE
eating => counter256:counter.inc
eating => always0.IN1
game_over_in => state_n.e_off.OUTPUTSELECT
game_over_in => state_n.e_countdown.OUTPUTSELECT
game_over_in => state_n.e_head.OUTPUTSELECT
game_over_in => state_n.OUTPUTSELECT
left => state_n.OUTPUTSELECT
left => state_n.OUTPUTSELECT
left => state_n.OUTPUTSELECT
left => state_n.OUTPUTSELECT
up => state_n.OUTPUTSELECT
up => state_n.OUTPUTSELECT
up => state_n.OUTPUTSELECT
up => state_n.OUTPUTSELECT
right => state_n.OUTPUTSELECT
right => state_n.OUTPUTSELECT
right => state_n.OUTPUTSELECT
right => state_n.OUTPUTSELECT
down => state_n.OUTPUTSELECT
down => state_n.OUTPUTSELECT
down => state_n.OUTPUTSELECT
down => state_n.OUTPUTSELECT
length[0] => counter256:counter.start_val[0]
length[1] => counter256:counter.start_val[1]
length[2] => counter256:counter.start_val[2]
length[3] => counter256:counter.start_val[3]
length[4] => counter256:counter.start_val[4]
length[5] => counter256:counter.start_val[5]
length[6] => counter256:counter.start_val[6]
length[7] => counter256:counter.start_val[7]
dir[0] => Mux0.IN5
dir[0] => Mux1.IN5
dir[0] => Mux2.IN5
dir[0] => Mux3.IN5
dir[1] => Mux0.IN4
dir[1] => Mux1.IN4
dir[1] => Mux2.IN4
dir[1] => Mux3.IN4
clk => counter256:counter.clk
clk => state_r~1.DATAIN
slow_edge => counter256:counter.slow_edge
slow_edge => state_r.OUTPUTSELECT
slow_edge => state_r.OUTPUTSELECT
slow_edge => state_r.OUTPUTSELECT
slow_edge => state_r.OUTPUTSELECT
reset => counter256:counter.reset
reset => state_r.OUTPUTSELECT
reset => state_r.OUTPUTSELECT
reset => state_r.OUTPUTSELECT
reset => state_r.OUTPUTSELECT
light_type[0] => counter256:counter.init_val[0]
light_type[0] => Equal1.IN1
light_type[0] => Equal2.IN1
light_type[1] => counter256:counter.init_val[1]
light_type[1] => Equal1.IN0
light_type[1] => Equal2.IN0


|lab8|snakes_and_apples:snake|grid_light:center_grid_row[9].center_grid_col[3].light|counter256:counter
count[0] <= count[0]~reg0.DB_MAX_OUTPUT_PORT_TYPE
count[1] <= count[1]~reg0.DB_MAX_OUTPUT_PORT_TYPE
count[2] <= count[2]~reg0.DB_MAX_OUTPUT_PORT_TYPE
count[3] <= count[3]~reg0.DB_MAX_OUTPUT_PORT_TYPE
count[4] <= count[4]~reg0.DB_MAX_OUTPUT_PORT_TYPE
count[5] <= count[5]~reg0.DB_MAX_OUTPUT_PORT_TYPE
count[6] <= count[6]~reg0.DB_MAX_OUTPUT_PORT_TYPE
count[7] <= count[7]~reg0.DB_MAX_OUTPUT_PORT_TYPE
start_val[0] => Add0.IN16
start_val[0] => count.DATAB
start_val[1] => Add0.IN15
start_val[1] => count.DATAB
start_val[2] => Add0.IN14
start_val[2] => count.DATAB
start_val[3] => Add0.IN13
start_val[3] => count.DATAB
start_val[4] => Add0.IN12
start_val[4] => count.DATAB
start_val[5] => Add0.IN11
start_val[5] => count.DATAB
start_val[6] => Add0.IN10
start_val[6] => count.DATAB
start_val[7] => Add0.IN9
start_val[7] => count.DATAB
inc => count.OUTPUTSELECT
inc => count.OUTPUTSELECT
inc => count.OUTPUTSELECT
inc => count.OUTPUTSELECT
inc => count.OUTPUTSELECT
inc => count.OUTPUTSELECT
inc => count.OUTPUTSELECT
inc => count.OUTPUTSELECT
inc => always0.IN0
enable => always0.IN1
enable => count.OUTPUTSELECT
enable => count.OUTPUTSELECT
enable => count.OUTPUTSELECT
enable => count.OUTPUTSELECT
enable => count.OUTPUTSELECT
enable => count.OUTPUTSELECT
enable => count.OUTPUTSELECT
enable => count.OUTPUTSELECT
clk => count[0]~reg0.CLK
clk => count[1]~reg0.CLK
clk => count[2]~reg0.CLK
clk => count[3]~reg0.CLK
clk => count[4]~reg0.CLK
clk => count[5]~reg0.CLK
clk => count[6]~reg0.CLK
clk => count[7]~reg0.CLK
slow_edge => count.OUTPUTSELECT
slow_edge => count.OUTPUTSELECT
slow_edge => count.OUTPUTSELECT
slow_edge => count.OUTPUTSELECT
slow_edge => count.OUTPUTSELECT
slow_edge => count.OUTPUTSELECT
slow_edge => count.OUTPUTSELECT
slow_edge => count.OUTPUTSELECT
reset => count.OUTPUTSELECT
reset => count.OUTPUTSELECT
reset => count.OUTPUTSELECT
reset => count.OUTPUTSELECT
reset => count.OUTPUTSELECT
reset => count.OUTPUTSELECT
reset => count.OUTPUTSELECT
reset => count.OUTPUTSELECT
init_val[0] => count.DATAB
init_val[1] => count.DATAB


|lab8|snakes_and_apples:snake|grid_light:center_grid_row[9].center_grid_col[4].light
green_light_on <= green_light_on.DB_MAX_OUTPUT_PORT_TYPE
head <= head.DB_MAX_OUTPUT_PORT_TYPE
game_over_out <= state_n.DB_MAX_OUTPUT_PORT_TYPE
eating => counter256:counter.inc
eating => always0.IN1
game_over_in => state_n.e_off.OUTPUTSELECT
game_over_in => state_n.e_countdown.OUTPUTSELECT
game_over_in => state_n.e_head.OUTPUTSELECT
game_over_in => state_n.OUTPUTSELECT
left => state_n.OUTPUTSELECT
left => state_n.OUTPUTSELECT
left => state_n.OUTPUTSELECT
left => state_n.OUTPUTSELECT
up => state_n.OUTPUTSELECT
up => state_n.OUTPUTSELECT
up => state_n.OUTPUTSELECT
up => state_n.OUTPUTSELECT
right => state_n.OUTPUTSELECT
right => state_n.OUTPUTSELECT
right => state_n.OUTPUTSELECT
right => state_n.OUTPUTSELECT
down => state_n.OUTPUTSELECT
down => state_n.OUTPUTSELECT
down => state_n.OUTPUTSELECT
down => state_n.OUTPUTSELECT
length[0] => counter256:counter.start_val[0]
length[1] => counter256:counter.start_val[1]
length[2] => counter256:counter.start_val[2]
length[3] => counter256:counter.start_val[3]
length[4] => counter256:counter.start_val[4]
length[5] => counter256:counter.start_val[5]
length[6] => counter256:counter.start_val[6]
length[7] => counter256:counter.start_val[7]
dir[0] => Mux0.IN5
dir[0] => Mux1.IN5
dir[0] => Mux2.IN5
dir[0] => Mux3.IN5
dir[1] => Mux0.IN4
dir[1] => Mux1.IN4
dir[1] => Mux2.IN4
dir[1] => Mux3.IN4
clk => counter256:counter.clk
clk => state_r~1.DATAIN
slow_edge => counter256:counter.slow_edge
slow_edge => state_r.OUTPUTSELECT
slow_edge => state_r.OUTPUTSELECT
slow_edge => state_r.OUTPUTSELECT
slow_edge => state_r.OUTPUTSELECT
reset => counter256:counter.reset
reset => state_r.OUTPUTSELECT
reset => state_r.OUTPUTSELECT
reset => state_r.OUTPUTSELECT
reset => state_r.OUTPUTSELECT
light_type[0] => counter256:counter.init_val[0]
light_type[0] => Equal1.IN1
light_type[0] => Equal2.IN1
light_type[1] => counter256:counter.init_val[1]
light_type[1] => Equal1.IN0
light_type[1] => Equal2.IN0


|lab8|snakes_and_apples:snake|grid_light:center_grid_row[9].center_grid_col[4].light|counter256:counter
count[0] <= count[0]~reg0.DB_MAX_OUTPUT_PORT_TYPE
count[1] <= count[1]~reg0.DB_MAX_OUTPUT_PORT_TYPE
count[2] <= count[2]~reg0.DB_MAX_OUTPUT_PORT_TYPE
count[3] <= count[3]~reg0.DB_MAX_OUTPUT_PORT_TYPE
count[4] <= count[4]~reg0.DB_MAX_OUTPUT_PORT_TYPE
count[5] <= count[5]~reg0.DB_MAX_OUTPUT_PORT_TYPE
count[6] <= count[6]~reg0.DB_MAX_OUTPUT_PORT_TYPE
count[7] <= count[7]~reg0.DB_MAX_OUTPUT_PORT_TYPE
start_val[0] => Add0.IN16
start_val[0] => count.DATAB
start_val[1] => Add0.IN15
start_val[1] => count.DATAB
start_val[2] => Add0.IN14
start_val[2] => count.DATAB
start_val[3] => Add0.IN13
start_val[3] => count.DATAB
start_val[4] => Add0.IN12
start_val[4] => count.DATAB
start_val[5] => Add0.IN11
start_val[5] => count.DATAB
start_val[6] => Add0.IN10
start_val[6] => count.DATAB
start_val[7] => Add0.IN9
start_val[7] => count.DATAB
inc => count.OUTPUTSELECT
inc => count.OUTPUTSELECT
inc => count.OUTPUTSELECT
inc => count.OUTPUTSELECT
inc => count.OUTPUTSELECT
inc => count.OUTPUTSELECT
inc => count.OUTPUTSELECT
inc => count.OUTPUTSELECT
inc => always0.IN0
enable => always0.IN1
enable => count.OUTPUTSELECT
enable => count.OUTPUTSELECT
enable => count.OUTPUTSELECT
enable => count.OUTPUTSELECT
enable => count.OUTPUTSELECT
enable => count.OUTPUTSELECT
enable => count.OUTPUTSELECT
enable => count.OUTPUTSELECT
clk => count[0]~reg0.CLK
clk => count[1]~reg0.CLK
clk => count[2]~reg0.CLK
clk => count[3]~reg0.CLK
clk => count[4]~reg0.CLK
clk => count[5]~reg0.CLK
clk => count[6]~reg0.CLK
clk => count[7]~reg0.CLK
slow_edge => count.OUTPUTSELECT
slow_edge => count.OUTPUTSELECT
slow_edge => count.OUTPUTSELECT
slow_edge => count.OUTPUTSELECT
slow_edge => count.OUTPUTSELECT
slow_edge => count.OUTPUTSELECT
slow_edge => count.OUTPUTSELECT
slow_edge => count.OUTPUTSELECT
reset => count.OUTPUTSELECT
reset => count.OUTPUTSELECT
reset => count.OUTPUTSELECT
reset => count.OUTPUTSELECT
reset => count.OUTPUTSELECT
reset => count.OUTPUTSELECT
reset => count.OUTPUTSELECT
reset => count.OUTPUTSELECT
init_val[0] => count.DATAB
init_val[1] => count.DATAB


|lab8|snakes_and_apples:snake|grid_light:center_grid_row[9].center_grid_col[5].light
green_light_on <= green_light_on.DB_MAX_OUTPUT_PORT_TYPE
head <= head.DB_MAX_OUTPUT_PORT_TYPE
game_over_out <= state_n.DB_MAX_OUTPUT_PORT_TYPE
eating => counter256:counter.inc
eating => always0.IN1
game_over_in => state_n.e_off.OUTPUTSELECT
game_over_in => state_n.e_countdown.OUTPUTSELECT
game_over_in => state_n.e_head.OUTPUTSELECT
game_over_in => state_n.OUTPUTSELECT
left => state_n.OUTPUTSELECT
left => state_n.OUTPUTSELECT
left => state_n.OUTPUTSELECT
left => state_n.OUTPUTSELECT
up => state_n.OUTPUTSELECT
up => state_n.OUTPUTSELECT
up => state_n.OUTPUTSELECT
up => state_n.OUTPUTSELECT
right => state_n.OUTPUTSELECT
right => state_n.OUTPUTSELECT
right => state_n.OUTPUTSELECT
right => state_n.OUTPUTSELECT
down => state_n.OUTPUTSELECT
down => state_n.OUTPUTSELECT
down => state_n.OUTPUTSELECT
down => state_n.OUTPUTSELECT
length[0] => counter256:counter.start_val[0]
length[1] => counter256:counter.start_val[1]
length[2] => counter256:counter.start_val[2]
length[3] => counter256:counter.start_val[3]
length[4] => counter256:counter.start_val[4]
length[5] => counter256:counter.start_val[5]
length[6] => counter256:counter.start_val[6]
length[7] => counter256:counter.start_val[7]
dir[0] => Mux0.IN5
dir[0] => Mux1.IN5
dir[0] => Mux2.IN5
dir[0] => Mux3.IN5
dir[1] => Mux0.IN4
dir[1] => Mux1.IN4
dir[1] => Mux2.IN4
dir[1] => Mux3.IN4
clk => counter256:counter.clk
clk => state_r~1.DATAIN
slow_edge => counter256:counter.slow_edge
slow_edge => state_r.OUTPUTSELECT
slow_edge => state_r.OUTPUTSELECT
slow_edge => state_r.OUTPUTSELECT
slow_edge => state_r.OUTPUTSELECT
reset => counter256:counter.reset
reset => state_r.OUTPUTSELECT
reset => state_r.OUTPUTSELECT
reset => state_r.OUTPUTSELECT
reset => state_r.OUTPUTSELECT
light_type[0] => counter256:counter.init_val[0]
light_type[0] => Equal1.IN1
light_type[0] => Equal2.IN1
light_type[1] => counter256:counter.init_val[1]
light_type[1] => Equal1.IN0
light_type[1] => Equal2.IN0


|lab8|snakes_and_apples:snake|grid_light:center_grid_row[9].center_grid_col[5].light|counter256:counter
count[0] <= count[0]~reg0.DB_MAX_OUTPUT_PORT_TYPE
count[1] <= count[1]~reg0.DB_MAX_OUTPUT_PORT_TYPE
count[2] <= count[2]~reg0.DB_MAX_OUTPUT_PORT_TYPE
count[3] <= count[3]~reg0.DB_MAX_OUTPUT_PORT_TYPE
count[4] <= count[4]~reg0.DB_MAX_OUTPUT_PORT_TYPE
count[5] <= count[5]~reg0.DB_MAX_OUTPUT_PORT_TYPE
count[6] <= count[6]~reg0.DB_MAX_OUTPUT_PORT_TYPE
count[7] <= count[7]~reg0.DB_MAX_OUTPUT_PORT_TYPE
start_val[0] => Add0.IN16
start_val[0] => count.DATAB
start_val[1] => Add0.IN15
start_val[1] => count.DATAB
start_val[2] => Add0.IN14
start_val[2] => count.DATAB
start_val[3] => Add0.IN13
start_val[3] => count.DATAB
start_val[4] => Add0.IN12
start_val[4] => count.DATAB
start_val[5] => Add0.IN11
start_val[5] => count.DATAB
start_val[6] => Add0.IN10
start_val[6] => count.DATAB
start_val[7] => Add0.IN9
start_val[7] => count.DATAB
inc => count.OUTPUTSELECT
inc => count.OUTPUTSELECT
inc => count.OUTPUTSELECT
inc => count.OUTPUTSELECT
inc => count.OUTPUTSELECT
inc => count.OUTPUTSELECT
inc => count.OUTPUTSELECT
inc => count.OUTPUTSELECT
inc => always0.IN0
enable => always0.IN1
enable => count.OUTPUTSELECT
enable => count.OUTPUTSELECT
enable => count.OUTPUTSELECT
enable => count.OUTPUTSELECT
enable => count.OUTPUTSELECT
enable => count.OUTPUTSELECT
enable => count.OUTPUTSELECT
enable => count.OUTPUTSELECT
clk => count[0]~reg0.CLK
clk => count[1]~reg0.CLK
clk => count[2]~reg0.CLK
clk => count[3]~reg0.CLK
clk => count[4]~reg0.CLK
clk => count[5]~reg0.CLK
clk => count[6]~reg0.CLK
clk => count[7]~reg0.CLK
slow_edge => count.OUTPUTSELECT
slow_edge => count.OUTPUTSELECT
slow_edge => count.OUTPUTSELECT
slow_edge => count.OUTPUTSELECT
slow_edge => count.OUTPUTSELECT
slow_edge => count.OUTPUTSELECT
slow_edge => count.OUTPUTSELECT
slow_edge => count.OUTPUTSELECT
reset => count.OUTPUTSELECT
reset => count.OUTPUTSELECT
reset => count.OUTPUTSELECT
reset => count.OUTPUTSELECT
reset => count.OUTPUTSELECT
reset => count.OUTPUTSELECT
reset => count.OUTPUTSELECT
reset => count.OUTPUTSELECT
init_val[0] => count.DATAB
init_val[1] => count.DATAB


|lab8|snakes_and_apples:snake|grid_light:center_grid_row[9].center_grid_col[6].light
green_light_on <= green_light_on.DB_MAX_OUTPUT_PORT_TYPE
head <= head.DB_MAX_OUTPUT_PORT_TYPE
game_over_out <= state_n.DB_MAX_OUTPUT_PORT_TYPE
eating => counter256:counter.inc
eating => always0.IN1
game_over_in => state_n.e_off.OUTPUTSELECT
game_over_in => state_n.e_countdown.OUTPUTSELECT
game_over_in => state_n.e_head.OUTPUTSELECT
game_over_in => state_n.OUTPUTSELECT
left => state_n.OUTPUTSELECT
left => state_n.OUTPUTSELECT
left => state_n.OUTPUTSELECT
left => state_n.OUTPUTSELECT
up => state_n.OUTPUTSELECT
up => state_n.OUTPUTSELECT
up => state_n.OUTPUTSELECT
up => state_n.OUTPUTSELECT
right => state_n.OUTPUTSELECT
right => state_n.OUTPUTSELECT
right => state_n.OUTPUTSELECT
right => state_n.OUTPUTSELECT
down => state_n.OUTPUTSELECT
down => state_n.OUTPUTSELECT
down => state_n.OUTPUTSELECT
down => state_n.OUTPUTSELECT
length[0] => counter256:counter.start_val[0]
length[1] => counter256:counter.start_val[1]
length[2] => counter256:counter.start_val[2]
length[3] => counter256:counter.start_val[3]
length[4] => counter256:counter.start_val[4]
length[5] => counter256:counter.start_val[5]
length[6] => counter256:counter.start_val[6]
length[7] => counter256:counter.start_val[7]
dir[0] => Mux0.IN5
dir[0] => Mux1.IN5
dir[0] => Mux2.IN5
dir[0] => Mux3.IN5
dir[1] => Mux0.IN4
dir[1] => Mux1.IN4
dir[1] => Mux2.IN4
dir[1] => Mux3.IN4
clk => counter256:counter.clk
clk => state_r~1.DATAIN
slow_edge => counter256:counter.slow_edge
slow_edge => state_r.OUTPUTSELECT
slow_edge => state_r.OUTPUTSELECT
slow_edge => state_r.OUTPUTSELECT
slow_edge => state_r.OUTPUTSELECT
reset => counter256:counter.reset
reset => state_r.OUTPUTSELECT
reset => state_r.OUTPUTSELECT
reset => state_r.OUTPUTSELECT
reset => state_r.OUTPUTSELECT
light_type[0] => counter256:counter.init_val[0]
light_type[0] => Equal1.IN1
light_type[0] => Equal2.IN1
light_type[1] => counter256:counter.init_val[1]
light_type[1] => Equal1.IN0
light_type[1] => Equal2.IN0


|lab8|snakes_and_apples:snake|grid_light:center_grid_row[9].center_grid_col[6].light|counter256:counter
count[0] <= count[0]~reg0.DB_MAX_OUTPUT_PORT_TYPE
count[1] <= count[1]~reg0.DB_MAX_OUTPUT_PORT_TYPE
count[2] <= count[2]~reg0.DB_MAX_OUTPUT_PORT_TYPE
count[3] <= count[3]~reg0.DB_MAX_OUTPUT_PORT_TYPE
count[4] <= count[4]~reg0.DB_MAX_OUTPUT_PORT_TYPE
count[5] <= count[5]~reg0.DB_MAX_OUTPUT_PORT_TYPE
count[6] <= count[6]~reg0.DB_MAX_OUTPUT_PORT_TYPE
count[7] <= count[7]~reg0.DB_MAX_OUTPUT_PORT_TYPE
start_val[0] => Add0.IN16
start_val[0] => count.DATAB
start_val[1] => Add0.IN15
start_val[1] => count.DATAB
start_val[2] => Add0.IN14
start_val[2] => count.DATAB
start_val[3] => Add0.IN13
start_val[3] => count.DATAB
start_val[4] => Add0.IN12
start_val[4] => count.DATAB
start_val[5] => Add0.IN11
start_val[5] => count.DATAB
start_val[6] => Add0.IN10
start_val[6] => count.DATAB
start_val[7] => Add0.IN9
start_val[7] => count.DATAB
inc => count.OUTPUTSELECT
inc => count.OUTPUTSELECT
inc => count.OUTPUTSELECT
inc => count.OUTPUTSELECT
inc => count.OUTPUTSELECT
inc => count.OUTPUTSELECT
inc => count.OUTPUTSELECT
inc => count.OUTPUTSELECT
inc => always0.IN0
enable => always0.IN1
enable => count.OUTPUTSELECT
enable => count.OUTPUTSELECT
enable => count.OUTPUTSELECT
enable => count.OUTPUTSELECT
enable => count.OUTPUTSELECT
enable => count.OUTPUTSELECT
enable => count.OUTPUTSELECT
enable => count.OUTPUTSELECT
clk => count[0]~reg0.CLK
clk => count[1]~reg0.CLK
clk => count[2]~reg0.CLK
clk => count[3]~reg0.CLK
clk => count[4]~reg0.CLK
clk => count[5]~reg0.CLK
clk => count[6]~reg0.CLK
clk => count[7]~reg0.CLK
slow_edge => count.OUTPUTSELECT
slow_edge => count.OUTPUTSELECT
slow_edge => count.OUTPUTSELECT
slow_edge => count.OUTPUTSELECT
slow_edge => count.OUTPUTSELECT
slow_edge => count.OUTPUTSELECT
slow_edge => count.OUTPUTSELECT
slow_edge => count.OUTPUTSELECT
reset => count.OUTPUTSELECT
reset => count.OUTPUTSELECT
reset => count.OUTPUTSELECT
reset => count.OUTPUTSELECT
reset => count.OUTPUTSELECT
reset => count.OUTPUTSELECT
reset => count.OUTPUTSELECT
reset => count.OUTPUTSELECT
init_val[0] => count.DATAB
init_val[1] => count.DATAB


|lab8|snakes_and_apples:snake|grid_light:center_grid_row[9].center_grid_col[7].light
green_light_on <= green_light_on.DB_MAX_OUTPUT_PORT_TYPE
head <= head.DB_MAX_OUTPUT_PORT_TYPE
game_over_out <= state_n.DB_MAX_OUTPUT_PORT_TYPE
eating => counter256:counter.inc
eating => always0.IN1
game_over_in => state_n.e_off.OUTPUTSELECT
game_over_in => state_n.e_countdown.OUTPUTSELECT
game_over_in => state_n.e_head.OUTPUTSELECT
game_over_in => state_n.OUTPUTSELECT
left => state_n.OUTPUTSELECT
left => state_n.OUTPUTSELECT
left => state_n.OUTPUTSELECT
left => state_n.OUTPUTSELECT
up => state_n.OUTPUTSELECT
up => state_n.OUTPUTSELECT
up => state_n.OUTPUTSELECT
up => state_n.OUTPUTSELECT
right => state_n.OUTPUTSELECT
right => state_n.OUTPUTSELECT
right => state_n.OUTPUTSELECT
right => state_n.OUTPUTSELECT
down => state_n.OUTPUTSELECT
down => state_n.OUTPUTSELECT
down => state_n.OUTPUTSELECT
down => state_n.OUTPUTSELECT
length[0] => counter256:counter.start_val[0]
length[1] => counter256:counter.start_val[1]
length[2] => counter256:counter.start_val[2]
length[3] => counter256:counter.start_val[3]
length[4] => counter256:counter.start_val[4]
length[5] => counter256:counter.start_val[5]
length[6] => counter256:counter.start_val[6]
length[7] => counter256:counter.start_val[7]
dir[0] => Mux0.IN5
dir[0] => Mux1.IN5
dir[0] => Mux2.IN5
dir[0] => Mux3.IN5
dir[1] => Mux0.IN4
dir[1] => Mux1.IN4
dir[1] => Mux2.IN4
dir[1] => Mux3.IN4
clk => counter256:counter.clk
clk => state_r~1.DATAIN
slow_edge => counter256:counter.slow_edge
slow_edge => state_r.OUTPUTSELECT
slow_edge => state_r.OUTPUTSELECT
slow_edge => state_r.OUTPUTSELECT
slow_edge => state_r.OUTPUTSELECT
reset => counter256:counter.reset
reset => state_r.OUTPUTSELECT
reset => state_r.OUTPUTSELECT
reset => state_r.OUTPUTSELECT
reset => state_r.OUTPUTSELECT
light_type[0] => counter256:counter.init_val[0]
light_type[0] => Equal1.IN1
light_type[0] => Equal2.IN1
light_type[1] => counter256:counter.init_val[1]
light_type[1] => Equal1.IN0
light_type[1] => Equal2.IN0


|lab8|snakes_and_apples:snake|grid_light:center_grid_row[9].center_grid_col[7].light|counter256:counter
count[0] <= count[0]~reg0.DB_MAX_OUTPUT_PORT_TYPE
count[1] <= count[1]~reg0.DB_MAX_OUTPUT_PORT_TYPE
count[2] <= count[2]~reg0.DB_MAX_OUTPUT_PORT_TYPE
count[3] <= count[3]~reg0.DB_MAX_OUTPUT_PORT_TYPE
count[4] <= count[4]~reg0.DB_MAX_OUTPUT_PORT_TYPE
count[5] <= count[5]~reg0.DB_MAX_OUTPUT_PORT_TYPE
count[6] <= count[6]~reg0.DB_MAX_OUTPUT_PORT_TYPE
count[7] <= count[7]~reg0.DB_MAX_OUTPUT_PORT_TYPE
start_val[0] => Add0.IN16
start_val[0] => count.DATAB
start_val[1] => Add0.IN15
start_val[1] => count.DATAB
start_val[2] => Add0.IN14
start_val[2] => count.DATAB
start_val[3] => Add0.IN13
start_val[3] => count.DATAB
start_val[4] => Add0.IN12
start_val[4] => count.DATAB
start_val[5] => Add0.IN11
start_val[5] => count.DATAB
start_val[6] => Add0.IN10
start_val[6] => count.DATAB
start_val[7] => Add0.IN9
start_val[7] => count.DATAB
inc => count.OUTPUTSELECT
inc => count.OUTPUTSELECT
inc => count.OUTPUTSELECT
inc => count.OUTPUTSELECT
inc => count.OUTPUTSELECT
inc => count.OUTPUTSELECT
inc => count.OUTPUTSELECT
inc => count.OUTPUTSELECT
inc => always0.IN0
enable => always0.IN1
enable => count.OUTPUTSELECT
enable => count.OUTPUTSELECT
enable => count.OUTPUTSELECT
enable => count.OUTPUTSELECT
enable => count.OUTPUTSELECT
enable => count.OUTPUTSELECT
enable => count.OUTPUTSELECT
enable => count.OUTPUTSELECT
clk => count[0]~reg0.CLK
clk => count[1]~reg0.CLK
clk => count[2]~reg0.CLK
clk => count[3]~reg0.CLK
clk => count[4]~reg0.CLK
clk => count[5]~reg0.CLK
clk => count[6]~reg0.CLK
clk => count[7]~reg0.CLK
slow_edge => count.OUTPUTSELECT
slow_edge => count.OUTPUTSELECT
slow_edge => count.OUTPUTSELECT
slow_edge => count.OUTPUTSELECT
slow_edge => count.OUTPUTSELECT
slow_edge => count.OUTPUTSELECT
slow_edge => count.OUTPUTSELECT
slow_edge => count.OUTPUTSELECT
reset => count.OUTPUTSELECT
reset => count.OUTPUTSELECT
reset => count.OUTPUTSELECT
reset => count.OUTPUTSELECT
reset => count.OUTPUTSELECT
reset => count.OUTPUTSELECT
reset => count.OUTPUTSELECT
reset => count.OUTPUTSELECT
init_val[0] => count.DATAB
init_val[1] => count.DATAB


|lab8|snakes_and_apples:snake|grid_light:center_grid_row[9].center_grid_col[8].light
green_light_on <= green_light_on.DB_MAX_OUTPUT_PORT_TYPE
head <= head.DB_MAX_OUTPUT_PORT_TYPE
game_over_out <= state_n.DB_MAX_OUTPUT_PORT_TYPE
eating => counter256:counter.inc
eating => always0.IN1
game_over_in => state_n.e_off.OUTPUTSELECT
game_over_in => state_n.e_countdown.OUTPUTSELECT
game_over_in => state_n.e_head.OUTPUTSELECT
game_over_in => state_n.OUTPUTSELECT
left => state_n.OUTPUTSELECT
left => state_n.OUTPUTSELECT
left => state_n.OUTPUTSELECT
left => state_n.OUTPUTSELECT
up => state_n.OUTPUTSELECT
up => state_n.OUTPUTSELECT
up => state_n.OUTPUTSELECT
up => state_n.OUTPUTSELECT
right => state_n.OUTPUTSELECT
right => state_n.OUTPUTSELECT
right => state_n.OUTPUTSELECT
right => state_n.OUTPUTSELECT
down => state_n.OUTPUTSELECT
down => state_n.OUTPUTSELECT
down => state_n.OUTPUTSELECT
down => state_n.OUTPUTSELECT
length[0] => counter256:counter.start_val[0]
length[1] => counter256:counter.start_val[1]
length[2] => counter256:counter.start_val[2]
length[3] => counter256:counter.start_val[3]
length[4] => counter256:counter.start_val[4]
length[5] => counter256:counter.start_val[5]
length[6] => counter256:counter.start_val[6]
length[7] => counter256:counter.start_val[7]
dir[0] => Mux0.IN5
dir[0] => Mux1.IN5
dir[0] => Mux2.IN5
dir[0] => Mux3.IN5
dir[1] => Mux0.IN4
dir[1] => Mux1.IN4
dir[1] => Mux2.IN4
dir[1] => Mux3.IN4
clk => counter256:counter.clk
clk => state_r~1.DATAIN
slow_edge => counter256:counter.slow_edge
slow_edge => state_r.OUTPUTSELECT
slow_edge => state_r.OUTPUTSELECT
slow_edge => state_r.OUTPUTSELECT
slow_edge => state_r.OUTPUTSELECT
reset => counter256:counter.reset
reset => state_r.OUTPUTSELECT
reset => state_r.OUTPUTSELECT
reset => state_r.OUTPUTSELECT
reset => state_r.OUTPUTSELECT
light_type[0] => counter256:counter.init_val[0]
light_type[0] => Equal1.IN1
light_type[0] => Equal2.IN1
light_type[1] => counter256:counter.init_val[1]
light_type[1] => Equal1.IN0
light_type[1] => Equal2.IN0


|lab8|snakes_and_apples:snake|grid_light:center_grid_row[9].center_grid_col[8].light|counter256:counter
count[0] <= count[0]~reg0.DB_MAX_OUTPUT_PORT_TYPE
count[1] <= count[1]~reg0.DB_MAX_OUTPUT_PORT_TYPE
count[2] <= count[2]~reg0.DB_MAX_OUTPUT_PORT_TYPE
count[3] <= count[3]~reg0.DB_MAX_OUTPUT_PORT_TYPE
count[4] <= count[4]~reg0.DB_MAX_OUTPUT_PORT_TYPE
count[5] <= count[5]~reg0.DB_MAX_OUTPUT_PORT_TYPE
count[6] <= count[6]~reg0.DB_MAX_OUTPUT_PORT_TYPE
count[7] <= count[7]~reg0.DB_MAX_OUTPUT_PORT_TYPE
start_val[0] => Add0.IN16
start_val[0] => count.DATAB
start_val[1] => Add0.IN15
start_val[1] => count.DATAB
start_val[2] => Add0.IN14
start_val[2] => count.DATAB
start_val[3] => Add0.IN13
start_val[3] => count.DATAB
start_val[4] => Add0.IN12
start_val[4] => count.DATAB
start_val[5] => Add0.IN11
start_val[5] => count.DATAB
start_val[6] => Add0.IN10
start_val[6] => count.DATAB
start_val[7] => Add0.IN9
start_val[7] => count.DATAB
inc => count.OUTPUTSELECT
inc => count.OUTPUTSELECT
inc => count.OUTPUTSELECT
inc => count.OUTPUTSELECT
inc => count.OUTPUTSELECT
inc => count.OUTPUTSELECT
inc => count.OUTPUTSELECT
inc => count.OUTPUTSELECT
inc => always0.IN0
enable => always0.IN1
enable => count.OUTPUTSELECT
enable => count.OUTPUTSELECT
enable => count.OUTPUTSELECT
enable => count.OUTPUTSELECT
enable => count.OUTPUTSELECT
enable => count.OUTPUTSELECT
enable => count.OUTPUTSELECT
enable => count.OUTPUTSELECT
clk => count[0]~reg0.CLK
clk => count[1]~reg0.CLK
clk => count[2]~reg0.CLK
clk => count[3]~reg0.CLK
clk => count[4]~reg0.CLK
clk => count[5]~reg0.CLK
clk => count[6]~reg0.CLK
clk => count[7]~reg0.CLK
slow_edge => count.OUTPUTSELECT
slow_edge => count.OUTPUTSELECT
slow_edge => count.OUTPUTSELECT
slow_edge => count.OUTPUTSELECT
slow_edge => count.OUTPUTSELECT
slow_edge => count.OUTPUTSELECT
slow_edge => count.OUTPUTSELECT
slow_edge => count.OUTPUTSELECT
reset => count.OUTPUTSELECT
reset => count.OUTPUTSELECT
reset => count.OUTPUTSELECT
reset => count.OUTPUTSELECT
reset => count.OUTPUTSELECT
reset => count.OUTPUTSELECT
reset => count.OUTPUTSELECT
reset => count.OUTPUTSELECT
init_val[0] => count.DATAB
init_val[1] => count.DATAB


|lab8|snakes_and_apples:snake|grid_light:center_grid_row[9].center_grid_col[9].light
green_light_on <= green_light_on.DB_MAX_OUTPUT_PORT_TYPE
head <= head.DB_MAX_OUTPUT_PORT_TYPE
game_over_out <= state_n.DB_MAX_OUTPUT_PORT_TYPE
eating => counter256:counter.inc
eating => always0.IN1
game_over_in => state_n.e_off.OUTPUTSELECT
game_over_in => state_n.e_countdown.OUTPUTSELECT
game_over_in => state_n.e_head.OUTPUTSELECT
game_over_in => state_n.OUTPUTSELECT
left => state_n.OUTPUTSELECT
left => state_n.OUTPUTSELECT
left => state_n.OUTPUTSELECT
left => state_n.OUTPUTSELECT
up => state_n.OUTPUTSELECT
up => state_n.OUTPUTSELECT
up => state_n.OUTPUTSELECT
up => state_n.OUTPUTSELECT
right => state_n.OUTPUTSELECT
right => state_n.OUTPUTSELECT
right => state_n.OUTPUTSELECT
right => state_n.OUTPUTSELECT
down => state_n.OUTPUTSELECT
down => state_n.OUTPUTSELECT
down => state_n.OUTPUTSELECT
down => state_n.OUTPUTSELECT
length[0] => counter256:counter.start_val[0]
length[1] => counter256:counter.start_val[1]
length[2] => counter256:counter.start_val[2]
length[3] => counter256:counter.start_val[3]
length[4] => counter256:counter.start_val[4]
length[5] => counter256:counter.start_val[5]
length[6] => counter256:counter.start_val[6]
length[7] => counter256:counter.start_val[7]
dir[0] => Mux0.IN5
dir[0] => Mux1.IN5
dir[0] => Mux2.IN5
dir[0] => Mux3.IN5
dir[1] => Mux0.IN4
dir[1] => Mux1.IN4
dir[1] => Mux2.IN4
dir[1] => Mux3.IN4
clk => counter256:counter.clk
clk => state_r~1.DATAIN
slow_edge => counter256:counter.slow_edge
slow_edge => state_r.OUTPUTSELECT
slow_edge => state_r.OUTPUTSELECT
slow_edge => state_r.OUTPUTSELECT
slow_edge => state_r.OUTPUTSELECT
reset => counter256:counter.reset
reset => state_r.OUTPUTSELECT
reset => state_r.OUTPUTSELECT
reset => state_r.OUTPUTSELECT
reset => state_r.OUTPUTSELECT
light_type[0] => counter256:counter.init_val[0]
light_type[0] => Equal1.IN1
light_type[0] => Equal2.IN1
light_type[1] => counter256:counter.init_val[1]
light_type[1] => Equal1.IN0
light_type[1] => Equal2.IN0


|lab8|snakes_and_apples:snake|grid_light:center_grid_row[9].center_grid_col[9].light|counter256:counter
count[0] <= count[0]~reg0.DB_MAX_OUTPUT_PORT_TYPE
count[1] <= count[1]~reg0.DB_MAX_OUTPUT_PORT_TYPE
count[2] <= count[2]~reg0.DB_MAX_OUTPUT_PORT_TYPE
count[3] <= count[3]~reg0.DB_MAX_OUTPUT_PORT_TYPE
count[4] <= count[4]~reg0.DB_MAX_OUTPUT_PORT_TYPE
count[5] <= count[5]~reg0.DB_MAX_OUTPUT_PORT_TYPE
count[6] <= count[6]~reg0.DB_MAX_OUTPUT_PORT_TYPE
count[7] <= count[7]~reg0.DB_MAX_OUTPUT_PORT_TYPE
start_val[0] => Add0.IN16
start_val[0] => count.DATAB
start_val[1] => Add0.IN15
start_val[1] => count.DATAB
start_val[2] => Add0.IN14
start_val[2] => count.DATAB
start_val[3] => Add0.IN13
start_val[3] => count.DATAB
start_val[4] => Add0.IN12
start_val[4] => count.DATAB
start_val[5] => Add0.IN11
start_val[5] => count.DATAB
start_val[6] => Add0.IN10
start_val[6] => count.DATAB
start_val[7] => Add0.IN9
start_val[7] => count.DATAB
inc => count.OUTPUTSELECT
inc => count.OUTPUTSELECT
inc => count.OUTPUTSELECT
inc => count.OUTPUTSELECT
inc => count.OUTPUTSELECT
inc => count.OUTPUTSELECT
inc => count.OUTPUTSELECT
inc => count.OUTPUTSELECT
inc => always0.IN0
enable => always0.IN1
enable => count.OUTPUTSELECT
enable => count.OUTPUTSELECT
enable => count.OUTPUTSELECT
enable => count.OUTPUTSELECT
enable => count.OUTPUTSELECT
enable => count.OUTPUTSELECT
enable => count.OUTPUTSELECT
enable => count.OUTPUTSELECT
clk => count[0]~reg0.CLK
clk => count[1]~reg0.CLK
clk => count[2]~reg0.CLK
clk => count[3]~reg0.CLK
clk => count[4]~reg0.CLK
clk => count[5]~reg0.CLK
clk => count[6]~reg0.CLK
clk => count[7]~reg0.CLK
slow_edge => count.OUTPUTSELECT
slow_edge => count.OUTPUTSELECT
slow_edge => count.OUTPUTSELECT
slow_edge => count.OUTPUTSELECT
slow_edge => count.OUTPUTSELECT
slow_edge => count.OUTPUTSELECT
slow_edge => count.OUTPUTSELECT
slow_edge => count.OUTPUTSELECT
reset => count.OUTPUTSELECT
reset => count.OUTPUTSELECT
reset => count.OUTPUTSELECT
reset => count.OUTPUTSELECT
reset => count.OUTPUTSELECT
reset => count.OUTPUTSELECT
reset => count.OUTPUTSELECT
reset => count.OUTPUTSELECT
init_val[0] => count.DATAB
init_val[1] => count.DATAB


|lab8|snakes_and_apples:snake|grid_light:center_grid_row[9].center_grid_col[10].light
green_light_on <= green_light_on.DB_MAX_OUTPUT_PORT_TYPE
head <= head.DB_MAX_OUTPUT_PORT_TYPE
game_over_out <= state_n.DB_MAX_OUTPUT_PORT_TYPE
eating => counter256:counter.inc
eating => always0.IN1
game_over_in => state_n.e_off.OUTPUTSELECT
game_over_in => state_n.e_countdown.OUTPUTSELECT
game_over_in => state_n.e_head.OUTPUTSELECT
game_over_in => state_n.OUTPUTSELECT
left => state_n.OUTPUTSELECT
left => state_n.OUTPUTSELECT
left => state_n.OUTPUTSELECT
left => state_n.OUTPUTSELECT
up => state_n.OUTPUTSELECT
up => state_n.OUTPUTSELECT
up => state_n.OUTPUTSELECT
up => state_n.OUTPUTSELECT
right => state_n.OUTPUTSELECT
right => state_n.OUTPUTSELECT
right => state_n.OUTPUTSELECT
right => state_n.OUTPUTSELECT
down => state_n.OUTPUTSELECT
down => state_n.OUTPUTSELECT
down => state_n.OUTPUTSELECT
down => state_n.OUTPUTSELECT
length[0] => counter256:counter.start_val[0]
length[1] => counter256:counter.start_val[1]
length[2] => counter256:counter.start_val[2]
length[3] => counter256:counter.start_val[3]
length[4] => counter256:counter.start_val[4]
length[5] => counter256:counter.start_val[5]
length[6] => counter256:counter.start_val[6]
length[7] => counter256:counter.start_val[7]
dir[0] => Mux0.IN5
dir[0] => Mux1.IN5
dir[0] => Mux2.IN5
dir[0] => Mux3.IN5
dir[1] => Mux0.IN4
dir[1] => Mux1.IN4
dir[1] => Mux2.IN4
dir[1] => Mux3.IN4
clk => counter256:counter.clk
clk => state_r~1.DATAIN
slow_edge => counter256:counter.slow_edge
slow_edge => state_r.OUTPUTSELECT
slow_edge => state_r.OUTPUTSELECT
slow_edge => state_r.OUTPUTSELECT
slow_edge => state_r.OUTPUTSELECT
reset => counter256:counter.reset
reset => state_r.OUTPUTSELECT
reset => state_r.OUTPUTSELECT
reset => state_r.OUTPUTSELECT
reset => state_r.OUTPUTSELECT
light_type[0] => counter256:counter.init_val[0]
light_type[0] => Equal1.IN1
light_type[0] => Equal2.IN1
light_type[1] => counter256:counter.init_val[1]
light_type[1] => Equal1.IN0
light_type[1] => Equal2.IN0


|lab8|snakes_and_apples:snake|grid_light:center_grid_row[9].center_grid_col[10].light|counter256:counter
count[0] <= count[0]~reg0.DB_MAX_OUTPUT_PORT_TYPE
count[1] <= count[1]~reg0.DB_MAX_OUTPUT_PORT_TYPE
count[2] <= count[2]~reg0.DB_MAX_OUTPUT_PORT_TYPE
count[3] <= count[3]~reg0.DB_MAX_OUTPUT_PORT_TYPE
count[4] <= count[4]~reg0.DB_MAX_OUTPUT_PORT_TYPE
count[5] <= count[5]~reg0.DB_MAX_OUTPUT_PORT_TYPE
count[6] <= count[6]~reg0.DB_MAX_OUTPUT_PORT_TYPE
count[7] <= count[7]~reg0.DB_MAX_OUTPUT_PORT_TYPE
start_val[0] => Add0.IN16
start_val[0] => count.DATAB
start_val[1] => Add0.IN15
start_val[1] => count.DATAB
start_val[2] => Add0.IN14
start_val[2] => count.DATAB
start_val[3] => Add0.IN13
start_val[3] => count.DATAB
start_val[4] => Add0.IN12
start_val[4] => count.DATAB
start_val[5] => Add0.IN11
start_val[5] => count.DATAB
start_val[6] => Add0.IN10
start_val[6] => count.DATAB
start_val[7] => Add0.IN9
start_val[7] => count.DATAB
inc => count.OUTPUTSELECT
inc => count.OUTPUTSELECT
inc => count.OUTPUTSELECT
inc => count.OUTPUTSELECT
inc => count.OUTPUTSELECT
inc => count.OUTPUTSELECT
inc => count.OUTPUTSELECT
inc => count.OUTPUTSELECT
inc => always0.IN0
enable => always0.IN1
enable => count.OUTPUTSELECT
enable => count.OUTPUTSELECT
enable => count.OUTPUTSELECT
enable => count.OUTPUTSELECT
enable => count.OUTPUTSELECT
enable => count.OUTPUTSELECT
enable => count.OUTPUTSELECT
enable => count.OUTPUTSELECT
clk => count[0]~reg0.CLK
clk => count[1]~reg0.CLK
clk => count[2]~reg0.CLK
clk => count[3]~reg0.CLK
clk => count[4]~reg0.CLK
clk => count[5]~reg0.CLK
clk => count[6]~reg0.CLK
clk => count[7]~reg0.CLK
slow_edge => count.OUTPUTSELECT
slow_edge => count.OUTPUTSELECT
slow_edge => count.OUTPUTSELECT
slow_edge => count.OUTPUTSELECT
slow_edge => count.OUTPUTSELECT
slow_edge => count.OUTPUTSELECT
slow_edge => count.OUTPUTSELECT
slow_edge => count.OUTPUTSELECT
reset => count.OUTPUTSELECT
reset => count.OUTPUTSELECT
reset => count.OUTPUTSELECT
reset => count.OUTPUTSELECT
reset => count.OUTPUTSELECT
reset => count.OUTPUTSELECT
reset => count.OUTPUTSELECT
reset => count.OUTPUTSELECT
init_val[0] => count.DATAB
init_val[1] => count.DATAB


|lab8|snakes_and_apples:snake|grid_light:center_grid_row[9].center_grid_col[11].light
green_light_on <= green_light_on.DB_MAX_OUTPUT_PORT_TYPE
head <= head.DB_MAX_OUTPUT_PORT_TYPE
game_over_out <= state_n.DB_MAX_OUTPUT_PORT_TYPE
eating => counter256:counter.inc
eating => always0.IN1
game_over_in => state_n.e_off.OUTPUTSELECT
game_over_in => state_n.e_countdown.OUTPUTSELECT
game_over_in => state_n.e_head.OUTPUTSELECT
game_over_in => state_n.OUTPUTSELECT
left => state_n.OUTPUTSELECT
left => state_n.OUTPUTSELECT
left => state_n.OUTPUTSELECT
left => state_n.OUTPUTSELECT
up => state_n.OUTPUTSELECT
up => state_n.OUTPUTSELECT
up => state_n.OUTPUTSELECT
up => state_n.OUTPUTSELECT
right => state_n.OUTPUTSELECT
right => state_n.OUTPUTSELECT
right => state_n.OUTPUTSELECT
right => state_n.OUTPUTSELECT
down => state_n.OUTPUTSELECT
down => state_n.OUTPUTSELECT
down => state_n.OUTPUTSELECT
down => state_n.OUTPUTSELECT
length[0] => counter256:counter.start_val[0]
length[1] => counter256:counter.start_val[1]
length[2] => counter256:counter.start_val[2]
length[3] => counter256:counter.start_val[3]
length[4] => counter256:counter.start_val[4]
length[5] => counter256:counter.start_val[5]
length[6] => counter256:counter.start_val[6]
length[7] => counter256:counter.start_val[7]
dir[0] => Mux0.IN5
dir[0] => Mux1.IN5
dir[0] => Mux2.IN5
dir[0] => Mux3.IN5
dir[1] => Mux0.IN4
dir[1] => Mux1.IN4
dir[1] => Mux2.IN4
dir[1] => Mux3.IN4
clk => counter256:counter.clk
clk => state_r~1.DATAIN
slow_edge => counter256:counter.slow_edge
slow_edge => state_r.OUTPUTSELECT
slow_edge => state_r.OUTPUTSELECT
slow_edge => state_r.OUTPUTSELECT
slow_edge => state_r.OUTPUTSELECT
reset => counter256:counter.reset
reset => state_r.OUTPUTSELECT
reset => state_r.OUTPUTSELECT
reset => state_r.OUTPUTSELECT
reset => state_r.OUTPUTSELECT
light_type[0] => counter256:counter.init_val[0]
light_type[0] => Equal1.IN1
light_type[0] => Equal2.IN1
light_type[1] => counter256:counter.init_val[1]
light_type[1] => Equal1.IN0
light_type[1] => Equal2.IN0


|lab8|snakes_and_apples:snake|grid_light:center_grid_row[9].center_grid_col[11].light|counter256:counter
count[0] <= count[0]~reg0.DB_MAX_OUTPUT_PORT_TYPE
count[1] <= count[1]~reg0.DB_MAX_OUTPUT_PORT_TYPE
count[2] <= count[2]~reg0.DB_MAX_OUTPUT_PORT_TYPE
count[3] <= count[3]~reg0.DB_MAX_OUTPUT_PORT_TYPE
count[4] <= count[4]~reg0.DB_MAX_OUTPUT_PORT_TYPE
count[5] <= count[5]~reg0.DB_MAX_OUTPUT_PORT_TYPE
count[6] <= count[6]~reg0.DB_MAX_OUTPUT_PORT_TYPE
count[7] <= count[7]~reg0.DB_MAX_OUTPUT_PORT_TYPE
start_val[0] => Add0.IN16
start_val[0] => count.DATAB
start_val[1] => Add0.IN15
start_val[1] => count.DATAB
start_val[2] => Add0.IN14
start_val[2] => count.DATAB
start_val[3] => Add0.IN13
start_val[3] => count.DATAB
start_val[4] => Add0.IN12
start_val[4] => count.DATAB
start_val[5] => Add0.IN11
start_val[5] => count.DATAB
start_val[6] => Add0.IN10
start_val[6] => count.DATAB
start_val[7] => Add0.IN9
start_val[7] => count.DATAB
inc => count.OUTPUTSELECT
inc => count.OUTPUTSELECT
inc => count.OUTPUTSELECT
inc => count.OUTPUTSELECT
inc => count.OUTPUTSELECT
inc => count.OUTPUTSELECT
inc => count.OUTPUTSELECT
inc => count.OUTPUTSELECT
inc => always0.IN0
enable => always0.IN1
enable => count.OUTPUTSELECT
enable => count.OUTPUTSELECT
enable => count.OUTPUTSELECT
enable => count.OUTPUTSELECT
enable => count.OUTPUTSELECT
enable => count.OUTPUTSELECT
enable => count.OUTPUTSELECT
enable => count.OUTPUTSELECT
clk => count[0]~reg0.CLK
clk => count[1]~reg0.CLK
clk => count[2]~reg0.CLK
clk => count[3]~reg0.CLK
clk => count[4]~reg0.CLK
clk => count[5]~reg0.CLK
clk => count[6]~reg0.CLK
clk => count[7]~reg0.CLK
slow_edge => count.OUTPUTSELECT
slow_edge => count.OUTPUTSELECT
slow_edge => count.OUTPUTSELECT
slow_edge => count.OUTPUTSELECT
slow_edge => count.OUTPUTSELECT
slow_edge => count.OUTPUTSELECT
slow_edge => count.OUTPUTSELECT
slow_edge => count.OUTPUTSELECT
reset => count.OUTPUTSELECT
reset => count.OUTPUTSELECT
reset => count.OUTPUTSELECT
reset => count.OUTPUTSELECT
reset => count.OUTPUTSELECT
reset => count.OUTPUTSELECT
reset => count.OUTPUTSELECT
reset => count.OUTPUTSELECT
init_val[0] => count.DATAB
init_val[1] => count.DATAB


|lab8|snakes_and_apples:snake|grid_light:center_grid_row[9].center_grid_col[12].light
green_light_on <= green_light_on.DB_MAX_OUTPUT_PORT_TYPE
head <= head.DB_MAX_OUTPUT_PORT_TYPE
game_over_out <= state_n.DB_MAX_OUTPUT_PORT_TYPE
eating => counter256:counter.inc
eating => always0.IN1
game_over_in => state_n.e_off.OUTPUTSELECT
game_over_in => state_n.e_countdown.OUTPUTSELECT
game_over_in => state_n.e_head.OUTPUTSELECT
game_over_in => state_n.OUTPUTSELECT
left => state_n.OUTPUTSELECT
left => state_n.OUTPUTSELECT
left => state_n.OUTPUTSELECT
left => state_n.OUTPUTSELECT
up => state_n.OUTPUTSELECT
up => state_n.OUTPUTSELECT
up => state_n.OUTPUTSELECT
up => state_n.OUTPUTSELECT
right => state_n.OUTPUTSELECT
right => state_n.OUTPUTSELECT
right => state_n.OUTPUTSELECT
right => state_n.OUTPUTSELECT
down => state_n.OUTPUTSELECT
down => state_n.OUTPUTSELECT
down => state_n.OUTPUTSELECT
down => state_n.OUTPUTSELECT
length[0] => counter256:counter.start_val[0]
length[1] => counter256:counter.start_val[1]
length[2] => counter256:counter.start_val[2]
length[3] => counter256:counter.start_val[3]
length[4] => counter256:counter.start_val[4]
length[5] => counter256:counter.start_val[5]
length[6] => counter256:counter.start_val[6]
length[7] => counter256:counter.start_val[7]
dir[0] => Mux0.IN5
dir[0] => Mux1.IN5
dir[0] => Mux2.IN5
dir[0] => Mux3.IN5
dir[1] => Mux0.IN4
dir[1] => Mux1.IN4
dir[1] => Mux2.IN4
dir[1] => Mux3.IN4
clk => counter256:counter.clk
clk => state_r~1.DATAIN
slow_edge => counter256:counter.slow_edge
slow_edge => state_r.OUTPUTSELECT
slow_edge => state_r.OUTPUTSELECT
slow_edge => state_r.OUTPUTSELECT
slow_edge => state_r.OUTPUTSELECT
reset => counter256:counter.reset
reset => state_r.OUTPUTSELECT
reset => state_r.OUTPUTSELECT
reset => state_r.OUTPUTSELECT
reset => state_r.OUTPUTSELECT
light_type[0] => counter256:counter.init_val[0]
light_type[0] => Equal1.IN1
light_type[0] => Equal2.IN1
light_type[1] => counter256:counter.init_val[1]
light_type[1] => Equal1.IN0
light_type[1] => Equal2.IN0


|lab8|snakes_and_apples:snake|grid_light:center_grid_row[9].center_grid_col[12].light|counter256:counter
count[0] <= count[0]~reg0.DB_MAX_OUTPUT_PORT_TYPE
count[1] <= count[1]~reg0.DB_MAX_OUTPUT_PORT_TYPE
count[2] <= count[2]~reg0.DB_MAX_OUTPUT_PORT_TYPE
count[3] <= count[3]~reg0.DB_MAX_OUTPUT_PORT_TYPE
count[4] <= count[4]~reg0.DB_MAX_OUTPUT_PORT_TYPE
count[5] <= count[5]~reg0.DB_MAX_OUTPUT_PORT_TYPE
count[6] <= count[6]~reg0.DB_MAX_OUTPUT_PORT_TYPE
count[7] <= count[7]~reg0.DB_MAX_OUTPUT_PORT_TYPE
start_val[0] => Add0.IN16
start_val[0] => count.DATAB
start_val[1] => Add0.IN15
start_val[1] => count.DATAB
start_val[2] => Add0.IN14
start_val[2] => count.DATAB
start_val[3] => Add0.IN13
start_val[3] => count.DATAB
start_val[4] => Add0.IN12
start_val[4] => count.DATAB
start_val[5] => Add0.IN11
start_val[5] => count.DATAB
start_val[6] => Add0.IN10
start_val[6] => count.DATAB
start_val[7] => Add0.IN9
start_val[7] => count.DATAB
inc => count.OUTPUTSELECT
inc => count.OUTPUTSELECT
inc => count.OUTPUTSELECT
inc => count.OUTPUTSELECT
inc => count.OUTPUTSELECT
inc => count.OUTPUTSELECT
inc => count.OUTPUTSELECT
inc => count.OUTPUTSELECT
inc => always0.IN0
enable => always0.IN1
enable => count.OUTPUTSELECT
enable => count.OUTPUTSELECT
enable => count.OUTPUTSELECT
enable => count.OUTPUTSELECT
enable => count.OUTPUTSELECT
enable => count.OUTPUTSELECT
enable => count.OUTPUTSELECT
enable => count.OUTPUTSELECT
clk => count[0]~reg0.CLK
clk => count[1]~reg0.CLK
clk => count[2]~reg0.CLK
clk => count[3]~reg0.CLK
clk => count[4]~reg0.CLK
clk => count[5]~reg0.CLK
clk => count[6]~reg0.CLK
clk => count[7]~reg0.CLK
slow_edge => count.OUTPUTSELECT
slow_edge => count.OUTPUTSELECT
slow_edge => count.OUTPUTSELECT
slow_edge => count.OUTPUTSELECT
slow_edge => count.OUTPUTSELECT
slow_edge => count.OUTPUTSELECT
slow_edge => count.OUTPUTSELECT
slow_edge => count.OUTPUTSELECT
reset => count.OUTPUTSELECT
reset => count.OUTPUTSELECT
reset => count.OUTPUTSELECT
reset => count.OUTPUTSELECT
reset => count.OUTPUTSELECT
reset => count.OUTPUTSELECT
reset => count.OUTPUTSELECT
reset => count.OUTPUTSELECT
init_val[0] => count.DATAB
init_val[1] => count.DATAB


|lab8|snakes_and_apples:snake|grid_light:center_grid_row[9].center_grid_col[13].light
green_light_on <= green_light_on.DB_MAX_OUTPUT_PORT_TYPE
head <= head.DB_MAX_OUTPUT_PORT_TYPE
game_over_out <= state_n.DB_MAX_OUTPUT_PORT_TYPE
eating => counter256:counter.inc
eating => always0.IN1
game_over_in => state_n.e_off.OUTPUTSELECT
game_over_in => state_n.e_countdown.OUTPUTSELECT
game_over_in => state_n.e_head.OUTPUTSELECT
game_over_in => state_n.OUTPUTSELECT
left => state_n.OUTPUTSELECT
left => state_n.OUTPUTSELECT
left => state_n.OUTPUTSELECT
left => state_n.OUTPUTSELECT
up => state_n.OUTPUTSELECT
up => state_n.OUTPUTSELECT
up => state_n.OUTPUTSELECT
up => state_n.OUTPUTSELECT
right => state_n.OUTPUTSELECT
right => state_n.OUTPUTSELECT
right => state_n.OUTPUTSELECT
right => state_n.OUTPUTSELECT
down => state_n.OUTPUTSELECT
down => state_n.OUTPUTSELECT
down => state_n.OUTPUTSELECT
down => state_n.OUTPUTSELECT
length[0] => counter256:counter.start_val[0]
length[1] => counter256:counter.start_val[1]
length[2] => counter256:counter.start_val[2]
length[3] => counter256:counter.start_val[3]
length[4] => counter256:counter.start_val[4]
length[5] => counter256:counter.start_val[5]
length[6] => counter256:counter.start_val[6]
length[7] => counter256:counter.start_val[7]
dir[0] => Mux0.IN5
dir[0] => Mux1.IN5
dir[0] => Mux2.IN5
dir[0] => Mux3.IN5
dir[1] => Mux0.IN4
dir[1] => Mux1.IN4
dir[1] => Mux2.IN4
dir[1] => Mux3.IN4
clk => counter256:counter.clk
clk => state_r~1.DATAIN
slow_edge => counter256:counter.slow_edge
slow_edge => state_r.OUTPUTSELECT
slow_edge => state_r.OUTPUTSELECT
slow_edge => state_r.OUTPUTSELECT
slow_edge => state_r.OUTPUTSELECT
reset => counter256:counter.reset
reset => state_r.OUTPUTSELECT
reset => state_r.OUTPUTSELECT
reset => state_r.OUTPUTSELECT
reset => state_r.OUTPUTSELECT
light_type[0] => counter256:counter.init_val[0]
light_type[0] => Equal1.IN1
light_type[0] => Equal2.IN1
light_type[1] => counter256:counter.init_val[1]
light_type[1] => Equal1.IN0
light_type[1] => Equal2.IN0


|lab8|snakes_and_apples:snake|grid_light:center_grid_row[9].center_grid_col[13].light|counter256:counter
count[0] <= count[0]~reg0.DB_MAX_OUTPUT_PORT_TYPE
count[1] <= count[1]~reg0.DB_MAX_OUTPUT_PORT_TYPE
count[2] <= count[2]~reg0.DB_MAX_OUTPUT_PORT_TYPE
count[3] <= count[3]~reg0.DB_MAX_OUTPUT_PORT_TYPE
count[4] <= count[4]~reg0.DB_MAX_OUTPUT_PORT_TYPE
count[5] <= count[5]~reg0.DB_MAX_OUTPUT_PORT_TYPE
count[6] <= count[6]~reg0.DB_MAX_OUTPUT_PORT_TYPE
count[7] <= count[7]~reg0.DB_MAX_OUTPUT_PORT_TYPE
start_val[0] => Add0.IN16
start_val[0] => count.DATAB
start_val[1] => Add0.IN15
start_val[1] => count.DATAB
start_val[2] => Add0.IN14
start_val[2] => count.DATAB
start_val[3] => Add0.IN13
start_val[3] => count.DATAB
start_val[4] => Add0.IN12
start_val[4] => count.DATAB
start_val[5] => Add0.IN11
start_val[5] => count.DATAB
start_val[6] => Add0.IN10
start_val[6] => count.DATAB
start_val[7] => Add0.IN9
start_val[7] => count.DATAB
inc => count.OUTPUTSELECT
inc => count.OUTPUTSELECT
inc => count.OUTPUTSELECT
inc => count.OUTPUTSELECT
inc => count.OUTPUTSELECT
inc => count.OUTPUTSELECT
inc => count.OUTPUTSELECT
inc => count.OUTPUTSELECT
inc => always0.IN0
enable => always0.IN1
enable => count.OUTPUTSELECT
enable => count.OUTPUTSELECT
enable => count.OUTPUTSELECT
enable => count.OUTPUTSELECT
enable => count.OUTPUTSELECT
enable => count.OUTPUTSELECT
enable => count.OUTPUTSELECT
enable => count.OUTPUTSELECT
clk => count[0]~reg0.CLK
clk => count[1]~reg0.CLK
clk => count[2]~reg0.CLK
clk => count[3]~reg0.CLK
clk => count[4]~reg0.CLK
clk => count[5]~reg0.CLK
clk => count[6]~reg0.CLK
clk => count[7]~reg0.CLK
slow_edge => count.OUTPUTSELECT
slow_edge => count.OUTPUTSELECT
slow_edge => count.OUTPUTSELECT
slow_edge => count.OUTPUTSELECT
slow_edge => count.OUTPUTSELECT
slow_edge => count.OUTPUTSELECT
slow_edge => count.OUTPUTSELECT
slow_edge => count.OUTPUTSELECT
reset => count.OUTPUTSELECT
reset => count.OUTPUTSELECT
reset => count.OUTPUTSELECT
reset => count.OUTPUTSELECT
reset => count.OUTPUTSELECT
reset => count.OUTPUTSELECT
reset => count.OUTPUTSELECT
reset => count.OUTPUTSELECT
init_val[0] => count.DATAB
init_val[1] => count.DATAB


|lab8|snakes_and_apples:snake|grid_light:center_grid_row[9].center_grid_col[14].light
green_light_on <= green_light_on.DB_MAX_OUTPUT_PORT_TYPE
head <= head.DB_MAX_OUTPUT_PORT_TYPE
game_over_out <= state_n.DB_MAX_OUTPUT_PORT_TYPE
eating => counter256:counter.inc
eating => always0.IN1
game_over_in => state_n.e_off.OUTPUTSELECT
game_over_in => state_n.e_countdown.OUTPUTSELECT
game_over_in => state_n.e_head.OUTPUTSELECT
game_over_in => state_n.OUTPUTSELECT
left => state_n.OUTPUTSELECT
left => state_n.OUTPUTSELECT
left => state_n.OUTPUTSELECT
left => state_n.OUTPUTSELECT
up => state_n.OUTPUTSELECT
up => state_n.OUTPUTSELECT
up => state_n.OUTPUTSELECT
up => state_n.OUTPUTSELECT
right => state_n.OUTPUTSELECT
right => state_n.OUTPUTSELECT
right => state_n.OUTPUTSELECT
right => state_n.OUTPUTSELECT
down => state_n.OUTPUTSELECT
down => state_n.OUTPUTSELECT
down => state_n.OUTPUTSELECT
down => state_n.OUTPUTSELECT
length[0] => counter256:counter.start_val[0]
length[1] => counter256:counter.start_val[1]
length[2] => counter256:counter.start_val[2]
length[3] => counter256:counter.start_val[3]
length[4] => counter256:counter.start_val[4]
length[5] => counter256:counter.start_val[5]
length[6] => counter256:counter.start_val[6]
length[7] => counter256:counter.start_val[7]
dir[0] => Mux0.IN5
dir[0] => Mux1.IN5
dir[0] => Mux2.IN5
dir[0] => Mux3.IN5
dir[1] => Mux0.IN4
dir[1] => Mux1.IN4
dir[1] => Mux2.IN4
dir[1] => Mux3.IN4
clk => counter256:counter.clk
clk => state_r~1.DATAIN
slow_edge => counter256:counter.slow_edge
slow_edge => state_r.OUTPUTSELECT
slow_edge => state_r.OUTPUTSELECT
slow_edge => state_r.OUTPUTSELECT
slow_edge => state_r.OUTPUTSELECT
reset => counter256:counter.reset
reset => state_r.OUTPUTSELECT
reset => state_r.OUTPUTSELECT
reset => state_r.OUTPUTSELECT
reset => state_r.OUTPUTSELECT
light_type[0] => counter256:counter.init_val[0]
light_type[0] => Equal1.IN1
light_type[0] => Equal2.IN1
light_type[1] => counter256:counter.init_val[1]
light_type[1] => Equal1.IN0
light_type[1] => Equal2.IN0


|lab8|snakes_and_apples:snake|grid_light:center_grid_row[9].center_grid_col[14].light|counter256:counter
count[0] <= count[0]~reg0.DB_MAX_OUTPUT_PORT_TYPE
count[1] <= count[1]~reg0.DB_MAX_OUTPUT_PORT_TYPE
count[2] <= count[2]~reg0.DB_MAX_OUTPUT_PORT_TYPE
count[3] <= count[3]~reg0.DB_MAX_OUTPUT_PORT_TYPE
count[4] <= count[4]~reg0.DB_MAX_OUTPUT_PORT_TYPE
count[5] <= count[5]~reg0.DB_MAX_OUTPUT_PORT_TYPE
count[6] <= count[6]~reg0.DB_MAX_OUTPUT_PORT_TYPE
count[7] <= count[7]~reg0.DB_MAX_OUTPUT_PORT_TYPE
start_val[0] => Add0.IN16
start_val[0] => count.DATAB
start_val[1] => Add0.IN15
start_val[1] => count.DATAB
start_val[2] => Add0.IN14
start_val[2] => count.DATAB
start_val[3] => Add0.IN13
start_val[3] => count.DATAB
start_val[4] => Add0.IN12
start_val[4] => count.DATAB
start_val[5] => Add0.IN11
start_val[5] => count.DATAB
start_val[6] => Add0.IN10
start_val[6] => count.DATAB
start_val[7] => Add0.IN9
start_val[7] => count.DATAB
inc => count.OUTPUTSELECT
inc => count.OUTPUTSELECT
inc => count.OUTPUTSELECT
inc => count.OUTPUTSELECT
inc => count.OUTPUTSELECT
inc => count.OUTPUTSELECT
inc => count.OUTPUTSELECT
inc => count.OUTPUTSELECT
inc => always0.IN0
enable => always0.IN1
enable => count.OUTPUTSELECT
enable => count.OUTPUTSELECT
enable => count.OUTPUTSELECT
enable => count.OUTPUTSELECT
enable => count.OUTPUTSELECT
enable => count.OUTPUTSELECT
enable => count.OUTPUTSELECT
enable => count.OUTPUTSELECT
clk => count[0]~reg0.CLK
clk => count[1]~reg0.CLK
clk => count[2]~reg0.CLK
clk => count[3]~reg0.CLK
clk => count[4]~reg0.CLK
clk => count[5]~reg0.CLK
clk => count[6]~reg0.CLK
clk => count[7]~reg0.CLK
slow_edge => count.OUTPUTSELECT
slow_edge => count.OUTPUTSELECT
slow_edge => count.OUTPUTSELECT
slow_edge => count.OUTPUTSELECT
slow_edge => count.OUTPUTSELECT
slow_edge => count.OUTPUTSELECT
slow_edge => count.OUTPUTSELECT
slow_edge => count.OUTPUTSELECT
reset => count.OUTPUTSELECT
reset => count.OUTPUTSELECT
reset => count.OUTPUTSELECT
reset => count.OUTPUTSELECT
reset => count.OUTPUTSELECT
reset => count.OUTPUTSELECT
reset => count.OUTPUTSELECT
reset => count.OUTPUTSELECT
init_val[0] => count.DATAB
init_val[1] => count.DATAB


|lab8|snakes_and_apples:snake|grid_light:center_grid_row[10].center_grid_col[1].light
green_light_on <= green_light_on.DB_MAX_OUTPUT_PORT_TYPE
head <= head.DB_MAX_OUTPUT_PORT_TYPE
game_over_out <= state_n.DB_MAX_OUTPUT_PORT_TYPE
eating => counter256:counter.inc
eating => always0.IN1
game_over_in => state_n.e_off.OUTPUTSELECT
game_over_in => state_n.e_countdown.OUTPUTSELECT
game_over_in => state_n.e_head.OUTPUTSELECT
game_over_in => state_n.OUTPUTSELECT
left => state_n.OUTPUTSELECT
left => state_n.OUTPUTSELECT
left => state_n.OUTPUTSELECT
left => state_n.OUTPUTSELECT
up => state_n.OUTPUTSELECT
up => state_n.OUTPUTSELECT
up => state_n.OUTPUTSELECT
up => state_n.OUTPUTSELECT
right => state_n.OUTPUTSELECT
right => state_n.OUTPUTSELECT
right => state_n.OUTPUTSELECT
right => state_n.OUTPUTSELECT
down => state_n.OUTPUTSELECT
down => state_n.OUTPUTSELECT
down => state_n.OUTPUTSELECT
down => state_n.OUTPUTSELECT
length[0] => counter256:counter.start_val[0]
length[1] => counter256:counter.start_val[1]
length[2] => counter256:counter.start_val[2]
length[3] => counter256:counter.start_val[3]
length[4] => counter256:counter.start_val[4]
length[5] => counter256:counter.start_val[5]
length[6] => counter256:counter.start_val[6]
length[7] => counter256:counter.start_val[7]
dir[0] => Mux0.IN5
dir[0] => Mux1.IN5
dir[0] => Mux2.IN5
dir[0] => Mux3.IN5
dir[1] => Mux0.IN4
dir[1] => Mux1.IN4
dir[1] => Mux2.IN4
dir[1] => Mux3.IN4
clk => counter256:counter.clk
clk => state_r~1.DATAIN
slow_edge => counter256:counter.slow_edge
slow_edge => state_r.OUTPUTSELECT
slow_edge => state_r.OUTPUTSELECT
slow_edge => state_r.OUTPUTSELECT
slow_edge => state_r.OUTPUTSELECT
reset => counter256:counter.reset
reset => state_r.OUTPUTSELECT
reset => state_r.OUTPUTSELECT
reset => state_r.OUTPUTSELECT
reset => state_r.OUTPUTSELECT
light_type[0] => counter256:counter.init_val[0]
light_type[0] => Equal1.IN1
light_type[0] => Equal2.IN1
light_type[1] => counter256:counter.init_val[1]
light_type[1] => Equal1.IN0
light_type[1] => Equal2.IN0


|lab8|snakes_and_apples:snake|grid_light:center_grid_row[10].center_grid_col[1].light|counter256:counter
count[0] <= count[0]~reg0.DB_MAX_OUTPUT_PORT_TYPE
count[1] <= count[1]~reg0.DB_MAX_OUTPUT_PORT_TYPE
count[2] <= count[2]~reg0.DB_MAX_OUTPUT_PORT_TYPE
count[3] <= count[3]~reg0.DB_MAX_OUTPUT_PORT_TYPE
count[4] <= count[4]~reg0.DB_MAX_OUTPUT_PORT_TYPE
count[5] <= count[5]~reg0.DB_MAX_OUTPUT_PORT_TYPE
count[6] <= count[6]~reg0.DB_MAX_OUTPUT_PORT_TYPE
count[7] <= count[7]~reg0.DB_MAX_OUTPUT_PORT_TYPE
start_val[0] => Add0.IN16
start_val[0] => count.DATAB
start_val[1] => Add0.IN15
start_val[1] => count.DATAB
start_val[2] => Add0.IN14
start_val[2] => count.DATAB
start_val[3] => Add0.IN13
start_val[3] => count.DATAB
start_val[4] => Add0.IN12
start_val[4] => count.DATAB
start_val[5] => Add0.IN11
start_val[5] => count.DATAB
start_val[6] => Add0.IN10
start_val[6] => count.DATAB
start_val[7] => Add0.IN9
start_val[7] => count.DATAB
inc => count.OUTPUTSELECT
inc => count.OUTPUTSELECT
inc => count.OUTPUTSELECT
inc => count.OUTPUTSELECT
inc => count.OUTPUTSELECT
inc => count.OUTPUTSELECT
inc => count.OUTPUTSELECT
inc => count.OUTPUTSELECT
inc => always0.IN0
enable => always0.IN1
enable => count.OUTPUTSELECT
enable => count.OUTPUTSELECT
enable => count.OUTPUTSELECT
enable => count.OUTPUTSELECT
enable => count.OUTPUTSELECT
enable => count.OUTPUTSELECT
enable => count.OUTPUTSELECT
enable => count.OUTPUTSELECT
clk => count[0]~reg0.CLK
clk => count[1]~reg0.CLK
clk => count[2]~reg0.CLK
clk => count[3]~reg0.CLK
clk => count[4]~reg0.CLK
clk => count[5]~reg0.CLK
clk => count[6]~reg0.CLK
clk => count[7]~reg0.CLK
slow_edge => count.OUTPUTSELECT
slow_edge => count.OUTPUTSELECT
slow_edge => count.OUTPUTSELECT
slow_edge => count.OUTPUTSELECT
slow_edge => count.OUTPUTSELECT
slow_edge => count.OUTPUTSELECT
slow_edge => count.OUTPUTSELECT
slow_edge => count.OUTPUTSELECT
reset => count.OUTPUTSELECT
reset => count.OUTPUTSELECT
reset => count.OUTPUTSELECT
reset => count.OUTPUTSELECT
reset => count.OUTPUTSELECT
reset => count.OUTPUTSELECT
reset => count.OUTPUTSELECT
reset => count.OUTPUTSELECT
init_val[0] => count.DATAB
init_val[1] => count.DATAB


|lab8|snakes_and_apples:snake|grid_light:center_grid_row[10].center_grid_col[2].light
green_light_on <= green_light_on.DB_MAX_OUTPUT_PORT_TYPE
head <= head.DB_MAX_OUTPUT_PORT_TYPE
game_over_out <= state_n.DB_MAX_OUTPUT_PORT_TYPE
eating => counter256:counter.inc
eating => always0.IN1
game_over_in => state_n.e_off.OUTPUTSELECT
game_over_in => state_n.e_countdown.OUTPUTSELECT
game_over_in => state_n.e_head.OUTPUTSELECT
game_over_in => state_n.OUTPUTSELECT
left => state_n.OUTPUTSELECT
left => state_n.OUTPUTSELECT
left => state_n.OUTPUTSELECT
left => state_n.OUTPUTSELECT
up => state_n.OUTPUTSELECT
up => state_n.OUTPUTSELECT
up => state_n.OUTPUTSELECT
up => state_n.OUTPUTSELECT
right => state_n.OUTPUTSELECT
right => state_n.OUTPUTSELECT
right => state_n.OUTPUTSELECT
right => state_n.OUTPUTSELECT
down => state_n.OUTPUTSELECT
down => state_n.OUTPUTSELECT
down => state_n.OUTPUTSELECT
down => state_n.OUTPUTSELECT
length[0] => counter256:counter.start_val[0]
length[1] => counter256:counter.start_val[1]
length[2] => counter256:counter.start_val[2]
length[3] => counter256:counter.start_val[3]
length[4] => counter256:counter.start_val[4]
length[5] => counter256:counter.start_val[5]
length[6] => counter256:counter.start_val[6]
length[7] => counter256:counter.start_val[7]
dir[0] => Mux0.IN5
dir[0] => Mux1.IN5
dir[0] => Mux2.IN5
dir[0] => Mux3.IN5
dir[1] => Mux0.IN4
dir[1] => Mux1.IN4
dir[1] => Mux2.IN4
dir[1] => Mux3.IN4
clk => counter256:counter.clk
clk => state_r~1.DATAIN
slow_edge => counter256:counter.slow_edge
slow_edge => state_r.OUTPUTSELECT
slow_edge => state_r.OUTPUTSELECT
slow_edge => state_r.OUTPUTSELECT
slow_edge => state_r.OUTPUTSELECT
reset => counter256:counter.reset
reset => state_r.OUTPUTSELECT
reset => state_r.OUTPUTSELECT
reset => state_r.OUTPUTSELECT
reset => state_r.OUTPUTSELECT
light_type[0] => counter256:counter.init_val[0]
light_type[0] => Equal1.IN1
light_type[0] => Equal2.IN1
light_type[1] => counter256:counter.init_val[1]
light_type[1] => Equal1.IN0
light_type[1] => Equal2.IN0


|lab8|snakes_and_apples:snake|grid_light:center_grid_row[10].center_grid_col[2].light|counter256:counter
count[0] <= count[0]~reg0.DB_MAX_OUTPUT_PORT_TYPE
count[1] <= count[1]~reg0.DB_MAX_OUTPUT_PORT_TYPE
count[2] <= count[2]~reg0.DB_MAX_OUTPUT_PORT_TYPE
count[3] <= count[3]~reg0.DB_MAX_OUTPUT_PORT_TYPE
count[4] <= count[4]~reg0.DB_MAX_OUTPUT_PORT_TYPE
count[5] <= count[5]~reg0.DB_MAX_OUTPUT_PORT_TYPE
count[6] <= count[6]~reg0.DB_MAX_OUTPUT_PORT_TYPE
count[7] <= count[7]~reg0.DB_MAX_OUTPUT_PORT_TYPE
start_val[0] => Add0.IN16
start_val[0] => count.DATAB
start_val[1] => Add0.IN15
start_val[1] => count.DATAB
start_val[2] => Add0.IN14
start_val[2] => count.DATAB
start_val[3] => Add0.IN13
start_val[3] => count.DATAB
start_val[4] => Add0.IN12
start_val[4] => count.DATAB
start_val[5] => Add0.IN11
start_val[5] => count.DATAB
start_val[6] => Add0.IN10
start_val[6] => count.DATAB
start_val[7] => Add0.IN9
start_val[7] => count.DATAB
inc => count.OUTPUTSELECT
inc => count.OUTPUTSELECT
inc => count.OUTPUTSELECT
inc => count.OUTPUTSELECT
inc => count.OUTPUTSELECT
inc => count.OUTPUTSELECT
inc => count.OUTPUTSELECT
inc => count.OUTPUTSELECT
inc => always0.IN0
enable => always0.IN1
enable => count.OUTPUTSELECT
enable => count.OUTPUTSELECT
enable => count.OUTPUTSELECT
enable => count.OUTPUTSELECT
enable => count.OUTPUTSELECT
enable => count.OUTPUTSELECT
enable => count.OUTPUTSELECT
enable => count.OUTPUTSELECT
clk => count[0]~reg0.CLK
clk => count[1]~reg0.CLK
clk => count[2]~reg0.CLK
clk => count[3]~reg0.CLK
clk => count[4]~reg0.CLK
clk => count[5]~reg0.CLK
clk => count[6]~reg0.CLK
clk => count[7]~reg0.CLK
slow_edge => count.OUTPUTSELECT
slow_edge => count.OUTPUTSELECT
slow_edge => count.OUTPUTSELECT
slow_edge => count.OUTPUTSELECT
slow_edge => count.OUTPUTSELECT
slow_edge => count.OUTPUTSELECT
slow_edge => count.OUTPUTSELECT
slow_edge => count.OUTPUTSELECT
reset => count.OUTPUTSELECT
reset => count.OUTPUTSELECT
reset => count.OUTPUTSELECT
reset => count.OUTPUTSELECT
reset => count.OUTPUTSELECT
reset => count.OUTPUTSELECT
reset => count.OUTPUTSELECT
reset => count.OUTPUTSELECT
init_val[0] => count.DATAB
init_val[1] => count.DATAB


|lab8|snakes_and_apples:snake|grid_light:center_grid_row[10].center_grid_col[3].light
green_light_on <= green_light_on.DB_MAX_OUTPUT_PORT_TYPE
head <= head.DB_MAX_OUTPUT_PORT_TYPE
game_over_out <= state_n.DB_MAX_OUTPUT_PORT_TYPE
eating => counter256:counter.inc
eating => always0.IN1
game_over_in => state_n.e_off.OUTPUTSELECT
game_over_in => state_n.e_countdown.OUTPUTSELECT
game_over_in => state_n.e_head.OUTPUTSELECT
game_over_in => state_n.OUTPUTSELECT
left => state_n.OUTPUTSELECT
left => state_n.OUTPUTSELECT
left => state_n.OUTPUTSELECT
left => state_n.OUTPUTSELECT
up => state_n.OUTPUTSELECT
up => state_n.OUTPUTSELECT
up => state_n.OUTPUTSELECT
up => state_n.OUTPUTSELECT
right => state_n.OUTPUTSELECT
right => state_n.OUTPUTSELECT
right => state_n.OUTPUTSELECT
right => state_n.OUTPUTSELECT
down => state_n.OUTPUTSELECT
down => state_n.OUTPUTSELECT
down => state_n.OUTPUTSELECT
down => state_n.OUTPUTSELECT
length[0] => counter256:counter.start_val[0]
length[1] => counter256:counter.start_val[1]
length[2] => counter256:counter.start_val[2]
length[3] => counter256:counter.start_val[3]
length[4] => counter256:counter.start_val[4]
length[5] => counter256:counter.start_val[5]
length[6] => counter256:counter.start_val[6]
length[7] => counter256:counter.start_val[7]
dir[0] => Mux0.IN5
dir[0] => Mux1.IN5
dir[0] => Mux2.IN5
dir[0] => Mux3.IN5
dir[1] => Mux0.IN4
dir[1] => Mux1.IN4
dir[1] => Mux2.IN4
dir[1] => Mux3.IN4
clk => counter256:counter.clk
clk => state_r~1.DATAIN
slow_edge => counter256:counter.slow_edge
slow_edge => state_r.OUTPUTSELECT
slow_edge => state_r.OUTPUTSELECT
slow_edge => state_r.OUTPUTSELECT
slow_edge => state_r.OUTPUTSELECT
reset => counter256:counter.reset
reset => state_r.OUTPUTSELECT
reset => state_r.OUTPUTSELECT
reset => state_r.OUTPUTSELECT
reset => state_r.OUTPUTSELECT
light_type[0] => counter256:counter.init_val[0]
light_type[0] => Equal1.IN1
light_type[0] => Equal2.IN1
light_type[1] => counter256:counter.init_val[1]
light_type[1] => Equal1.IN0
light_type[1] => Equal2.IN0


|lab8|snakes_and_apples:snake|grid_light:center_grid_row[10].center_grid_col[3].light|counter256:counter
count[0] <= count[0]~reg0.DB_MAX_OUTPUT_PORT_TYPE
count[1] <= count[1]~reg0.DB_MAX_OUTPUT_PORT_TYPE
count[2] <= count[2]~reg0.DB_MAX_OUTPUT_PORT_TYPE
count[3] <= count[3]~reg0.DB_MAX_OUTPUT_PORT_TYPE
count[4] <= count[4]~reg0.DB_MAX_OUTPUT_PORT_TYPE
count[5] <= count[5]~reg0.DB_MAX_OUTPUT_PORT_TYPE
count[6] <= count[6]~reg0.DB_MAX_OUTPUT_PORT_TYPE
count[7] <= count[7]~reg0.DB_MAX_OUTPUT_PORT_TYPE
start_val[0] => Add0.IN16
start_val[0] => count.DATAB
start_val[1] => Add0.IN15
start_val[1] => count.DATAB
start_val[2] => Add0.IN14
start_val[2] => count.DATAB
start_val[3] => Add0.IN13
start_val[3] => count.DATAB
start_val[4] => Add0.IN12
start_val[4] => count.DATAB
start_val[5] => Add0.IN11
start_val[5] => count.DATAB
start_val[6] => Add0.IN10
start_val[6] => count.DATAB
start_val[7] => Add0.IN9
start_val[7] => count.DATAB
inc => count.OUTPUTSELECT
inc => count.OUTPUTSELECT
inc => count.OUTPUTSELECT
inc => count.OUTPUTSELECT
inc => count.OUTPUTSELECT
inc => count.OUTPUTSELECT
inc => count.OUTPUTSELECT
inc => count.OUTPUTSELECT
inc => always0.IN0
enable => always0.IN1
enable => count.OUTPUTSELECT
enable => count.OUTPUTSELECT
enable => count.OUTPUTSELECT
enable => count.OUTPUTSELECT
enable => count.OUTPUTSELECT
enable => count.OUTPUTSELECT
enable => count.OUTPUTSELECT
enable => count.OUTPUTSELECT
clk => count[0]~reg0.CLK
clk => count[1]~reg0.CLK
clk => count[2]~reg0.CLK
clk => count[3]~reg0.CLK
clk => count[4]~reg0.CLK
clk => count[5]~reg0.CLK
clk => count[6]~reg0.CLK
clk => count[7]~reg0.CLK
slow_edge => count.OUTPUTSELECT
slow_edge => count.OUTPUTSELECT
slow_edge => count.OUTPUTSELECT
slow_edge => count.OUTPUTSELECT
slow_edge => count.OUTPUTSELECT
slow_edge => count.OUTPUTSELECT
slow_edge => count.OUTPUTSELECT
slow_edge => count.OUTPUTSELECT
reset => count.OUTPUTSELECT
reset => count.OUTPUTSELECT
reset => count.OUTPUTSELECT
reset => count.OUTPUTSELECT
reset => count.OUTPUTSELECT
reset => count.OUTPUTSELECT
reset => count.OUTPUTSELECT
reset => count.OUTPUTSELECT
init_val[0] => count.DATAB
init_val[1] => count.DATAB


|lab8|snakes_and_apples:snake|grid_light:center_grid_row[10].center_grid_col[4].light
green_light_on <= green_light_on.DB_MAX_OUTPUT_PORT_TYPE
head <= head.DB_MAX_OUTPUT_PORT_TYPE
game_over_out <= state_n.DB_MAX_OUTPUT_PORT_TYPE
eating => counter256:counter.inc
eating => always0.IN1
game_over_in => state_n.e_off.OUTPUTSELECT
game_over_in => state_n.e_countdown.OUTPUTSELECT
game_over_in => state_n.e_head.OUTPUTSELECT
game_over_in => state_n.OUTPUTSELECT
left => state_n.OUTPUTSELECT
left => state_n.OUTPUTSELECT
left => state_n.OUTPUTSELECT
left => state_n.OUTPUTSELECT
up => state_n.OUTPUTSELECT
up => state_n.OUTPUTSELECT
up => state_n.OUTPUTSELECT
up => state_n.OUTPUTSELECT
right => state_n.OUTPUTSELECT
right => state_n.OUTPUTSELECT
right => state_n.OUTPUTSELECT
right => state_n.OUTPUTSELECT
down => state_n.OUTPUTSELECT
down => state_n.OUTPUTSELECT
down => state_n.OUTPUTSELECT
down => state_n.OUTPUTSELECT
length[0] => counter256:counter.start_val[0]
length[1] => counter256:counter.start_val[1]
length[2] => counter256:counter.start_val[2]
length[3] => counter256:counter.start_val[3]
length[4] => counter256:counter.start_val[4]
length[5] => counter256:counter.start_val[5]
length[6] => counter256:counter.start_val[6]
length[7] => counter256:counter.start_val[7]
dir[0] => Mux0.IN5
dir[0] => Mux1.IN5
dir[0] => Mux2.IN5
dir[0] => Mux3.IN5
dir[1] => Mux0.IN4
dir[1] => Mux1.IN4
dir[1] => Mux2.IN4
dir[1] => Mux3.IN4
clk => counter256:counter.clk
clk => state_r~1.DATAIN
slow_edge => counter256:counter.slow_edge
slow_edge => state_r.OUTPUTSELECT
slow_edge => state_r.OUTPUTSELECT
slow_edge => state_r.OUTPUTSELECT
slow_edge => state_r.OUTPUTSELECT
reset => counter256:counter.reset
reset => state_r.OUTPUTSELECT
reset => state_r.OUTPUTSELECT
reset => state_r.OUTPUTSELECT
reset => state_r.OUTPUTSELECT
light_type[0] => counter256:counter.init_val[0]
light_type[0] => Equal1.IN1
light_type[0] => Equal2.IN1
light_type[1] => counter256:counter.init_val[1]
light_type[1] => Equal1.IN0
light_type[1] => Equal2.IN0


|lab8|snakes_and_apples:snake|grid_light:center_grid_row[10].center_grid_col[4].light|counter256:counter
count[0] <= count[0]~reg0.DB_MAX_OUTPUT_PORT_TYPE
count[1] <= count[1]~reg0.DB_MAX_OUTPUT_PORT_TYPE
count[2] <= count[2]~reg0.DB_MAX_OUTPUT_PORT_TYPE
count[3] <= count[3]~reg0.DB_MAX_OUTPUT_PORT_TYPE
count[4] <= count[4]~reg0.DB_MAX_OUTPUT_PORT_TYPE
count[5] <= count[5]~reg0.DB_MAX_OUTPUT_PORT_TYPE
count[6] <= count[6]~reg0.DB_MAX_OUTPUT_PORT_TYPE
count[7] <= count[7]~reg0.DB_MAX_OUTPUT_PORT_TYPE
start_val[0] => Add0.IN16
start_val[0] => count.DATAB
start_val[1] => Add0.IN15
start_val[1] => count.DATAB
start_val[2] => Add0.IN14
start_val[2] => count.DATAB
start_val[3] => Add0.IN13
start_val[3] => count.DATAB
start_val[4] => Add0.IN12
start_val[4] => count.DATAB
start_val[5] => Add0.IN11
start_val[5] => count.DATAB
start_val[6] => Add0.IN10
start_val[6] => count.DATAB
start_val[7] => Add0.IN9
start_val[7] => count.DATAB
inc => count.OUTPUTSELECT
inc => count.OUTPUTSELECT
inc => count.OUTPUTSELECT
inc => count.OUTPUTSELECT
inc => count.OUTPUTSELECT
inc => count.OUTPUTSELECT
inc => count.OUTPUTSELECT
inc => count.OUTPUTSELECT
inc => always0.IN0
enable => always0.IN1
enable => count.OUTPUTSELECT
enable => count.OUTPUTSELECT
enable => count.OUTPUTSELECT
enable => count.OUTPUTSELECT
enable => count.OUTPUTSELECT
enable => count.OUTPUTSELECT
enable => count.OUTPUTSELECT
enable => count.OUTPUTSELECT
clk => count[0]~reg0.CLK
clk => count[1]~reg0.CLK
clk => count[2]~reg0.CLK
clk => count[3]~reg0.CLK
clk => count[4]~reg0.CLK
clk => count[5]~reg0.CLK
clk => count[6]~reg0.CLK
clk => count[7]~reg0.CLK
slow_edge => count.OUTPUTSELECT
slow_edge => count.OUTPUTSELECT
slow_edge => count.OUTPUTSELECT
slow_edge => count.OUTPUTSELECT
slow_edge => count.OUTPUTSELECT
slow_edge => count.OUTPUTSELECT
slow_edge => count.OUTPUTSELECT
slow_edge => count.OUTPUTSELECT
reset => count.OUTPUTSELECT
reset => count.OUTPUTSELECT
reset => count.OUTPUTSELECT
reset => count.OUTPUTSELECT
reset => count.OUTPUTSELECT
reset => count.OUTPUTSELECT
reset => count.OUTPUTSELECT
reset => count.OUTPUTSELECT
init_val[0] => count.DATAB
init_val[1] => count.DATAB


|lab8|snakes_and_apples:snake|grid_light:center_grid_row[10].center_grid_col[5].light
green_light_on <= green_light_on.DB_MAX_OUTPUT_PORT_TYPE
head <= head.DB_MAX_OUTPUT_PORT_TYPE
game_over_out <= state_n.DB_MAX_OUTPUT_PORT_TYPE
eating => counter256:counter.inc
eating => always0.IN1
game_over_in => state_n.e_off.OUTPUTSELECT
game_over_in => state_n.e_countdown.OUTPUTSELECT
game_over_in => state_n.e_head.OUTPUTSELECT
game_over_in => state_n.OUTPUTSELECT
left => state_n.OUTPUTSELECT
left => state_n.OUTPUTSELECT
left => state_n.OUTPUTSELECT
left => state_n.OUTPUTSELECT
up => state_n.OUTPUTSELECT
up => state_n.OUTPUTSELECT
up => state_n.OUTPUTSELECT
up => state_n.OUTPUTSELECT
right => state_n.OUTPUTSELECT
right => state_n.OUTPUTSELECT
right => state_n.OUTPUTSELECT
right => state_n.OUTPUTSELECT
down => state_n.OUTPUTSELECT
down => state_n.OUTPUTSELECT
down => state_n.OUTPUTSELECT
down => state_n.OUTPUTSELECT
length[0] => counter256:counter.start_val[0]
length[1] => counter256:counter.start_val[1]
length[2] => counter256:counter.start_val[2]
length[3] => counter256:counter.start_val[3]
length[4] => counter256:counter.start_val[4]
length[5] => counter256:counter.start_val[5]
length[6] => counter256:counter.start_val[6]
length[7] => counter256:counter.start_val[7]
dir[0] => Mux0.IN5
dir[0] => Mux1.IN5
dir[0] => Mux2.IN5
dir[0] => Mux3.IN5
dir[1] => Mux0.IN4
dir[1] => Mux1.IN4
dir[1] => Mux2.IN4
dir[1] => Mux3.IN4
clk => counter256:counter.clk
clk => state_r~1.DATAIN
slow_edge => counter256:counter.slow_edge
slow_edge => state_r.OUTPUTSELECT
slow_edge => state_r.OUTPUTSELECT
slow_edge => state_r.OUTPUTSELECT
slow_edge => state_r.OUTPUTSELECT
reset => counter256:counter.reset
reset => state_r.OUTPUTSELECT
reset => state_r.OUTPUTSELECT
reset => state_r.OUTPUTSELECT
reset => state_r.OUTPUTSELECT
light_type[0] => counter256:counter.init_val[0]
light_type[0] => Equal1.IN1
light_type[0] => Equal2.IN1
light_type[1] => counter256:counter.init_val[1]
light_type[1] => Equal1.IN0
light_type[1] => Equal2.IN0


|lab8|snakes_and_apples:snake|grid_light:center_grid_row[10].center_grid_col[5].light|counter256:counter
count[0] <= count[0]~reg0.DB_MAX_OUTPUT_PORT_TYPE
count[1] <= count[1]~reg0.DB_MAX_OUTPUT_PORT_TYPE
count[2] <= count[2]~reg0.DB_MAX_OUTPUT_PORT_TYPE
count[3] <= count[3]~reg0.DB_MAX_OUTPUT_PORT_TYPE
count[4] <= count[4]~reg0.DB_MAX_OUTPUT_PORT_TYPE
count[5] <= count[5]~reg0.DB_MAX_OUTPUT_PORT_TYPE
count[6] <= count[6]~reg0.DB_MAX_OUTPUT_PORT_TYPE
count[7] <= count[7]~reg0.DB_MAX_OUTPUT_PORT_TYPE
start_val[0] => Add0.IN16
start_val[0] => count.DATAB
start_val[1] => Add0.IN15
start_val[1] => count.DATAB
start_val[2] => Add0.IN14
start_val[2] => count.DATAB
start_val[3] => Add0.IN13
start_val[3] => count.DATAB
start_val[4] => Add0.IN12
start_val[4] => count.DATAB
start_val[5] => Add0.IN11
start_val[5] => count.DATAB
start_val[6] => Add0.IN10
start_val[6] => count.DATAB
start_val[7] => Add0.IN9
start_val[7] => count.DATAB
inc => count.OUTPUTSELECT
inc => count.OUTPUTSELECT
inc => count.OUTPUTSELECT
inc => count.OUTPUTSELECT
inc => count.OUTPUTSELECT
inc => count.OUTPUTSELECT
inc => count.OUTPUTSELECT
inc => count.OUTPUTSELECT
inc => always0.IN0
enable => always0.IN1
enable => count.OUTPUTSELECT
enable => count.OUTPUTSELECT
enable => count.OUTPUTSELECT
enable => count.OUTPUTSELECT
enable => count.OUTPUTSELECT
enable => count.OUTPUTSELECT
enable => count.OUTPUTSELECT
enable => count.OUTPUTSELECT
clk => count[0]~reg0.CLK
clk => count[1]~reg0.CLK
clk => count[2]~reg0.CLK
clk => count[3]~reg0.CLK
clk => count[4]~reg0.CLK
clk => count[5]~reg0.CLK
clk => count[6]~reg0.CLK
clk => count[7]~reg0.CLK
slow_edge => count.OUTPUTSELECT
slow_edge => count.OUTPUTSELECT
slow_edge => count.OUTPUTSELECT
slow_edge => count.OUTPUTSELECT
slow_edge => count.OUTPUTSELECT
slow_edge => count.OUTPUTSELECT
slow_edge => count.OUTPUTSELECT
slow_edge => count.OUTPUTSELECT
reset => count.OUTPUTSELECT
reset => count.OUTPUTSELECT
reset => count.OUTPUTSELECT
reset => count.OUTPUTSELECT
reset => count.OUTPUTSELECT
reset => count.OUTPUTSELECT
reset => count.OUTPUTSELECT
reset => count.OUTPUTSELECT
init_val[0] => count.DATAB
init_val[1] => count.DATAB


|lab8|snakes_and_apples:snake|grid_light:center_grid_row[10].center_grid_col[6].light
green_light_on <= green_light_on.DB_MAX_OUTPUT_PORT_TYPE
head <= head.DB_MAX_OUTPUT_PORT_TYPE
game_over_out <= state_n.DB_MAX_OUTPUT_PORT_TYPE
eating => counter256:counter.inc
eating => always0.IN1
game_over_in => state_n.e_off.OUTPUTSELECT
game_over_in => state_n.e_countdown.OUTPUTSELECT
game_over_in => state_n.e_head.OUTPUTSELECT
game_over_in => state_n.OUTPUTSELECT
left => state_n.OUTPUTSELECT
left => state_n.OUTPUTSELECT
left => state_n.OUTPUTSELECT
left => state_n.OUTPUTSELECT
up => state_n.OUTPUTSELECT
up => state_n.OUTPUTSELECT
up => state_n.OUTPUTSELECT
up => state_n.OUTPUTSELECT
right => state_n.OUTPUTSELECT
right => state_n.OUTPUTSELECT
right => state_n.OUTPUTSELECT
right => state_n.OUTPUTSELECT
down => state_n.OUTPUTSELECT
down => state_n.OUTPUTSELECT
down => state_n.OUTPUTSELECT
down => state_n.OUTPUTSELECT
length[0] => counter256:counter.start_val[0]
length[1] => counter256:counter.start_val[1]
length[2] => counter256:counter.start_val[2]
length[3] => counter256:counter.start_val[3]
length[4] => counter256:counter.start_val[4]
length[5] => counter256:counter.start_val[5]
length[6] => counter256:counter.start_val[6]
length[7] => counter256:counter.start_val[7]
dir[0] => Mux0.IN5
dir[0] => Mux1.IN5
dir[0] => Mux2.IN5
dir[0] => Mux3.IN5
dir[1] => Mux0.IN4
dir[1] => Mux1.IN4
dir[1] => Mux2.IN4
dir[1] => Mux3.IN4
clk => counter256:counter.clk
clk => state_r~1.DATAIN
slow_edge => counter256:counter.slow_edge
slow_edge => state_r.OUTPUTSELECT
slow_edge => state_r.OUTPUTSELECT
slow_edge => state_r.OUTPUTSELECT
slow_edge => state_r.OUTPUTSELECT
reset => counter256:counter.reset
reset => state_r.OUTPUTSELECT
reset => state_r.OUTPUTSELECT
reset => state_r.OUTPUTSELECT
reset => state_r.OUTPUTSELECT
light_type[0] => counter256:counter.init_val[0]
light_type[0] => Equal1.IN1
light_type[0] => Equal2.IN1
light_type[1] => counter256:counter.init_val[1]
light_type[1] => Equal1.IN0
light_type[1] => Equal2.IN0


|lab8|snakes_and_apples:snake|grid_light:center_grid_row[10].center_grid_col[6].light|counter256:counter
count[0] <= count[0]~reg0.DB_MAX_OUTPUT_PORT_TYPE
count[1] <= count[1]~reg0.DB_MAX_OUTPUT_PORT_TYPE
count[2] <= count[2]~reg0.DB_MAX_OUTPUT_PORT_TYPE
count[3] <= count[3]~reg0.DB_MAX_OUTPUT_PORT_TYPE
count[4] <= count[4]~reg0.DB_MAX_OUTPUT_PORT_TYPE
count[5] <= count[5]~reg0.DB_MAX_OUTPUT_PORT_TYPE
count[6] <= count[6]~reg0.DB_MAX_OUTPUT_PORT_TYPE
count[7] <= count[7]~reg0.DB_MAX_OUTPUT_PORT_TYPE
start_val[0] => Add0.IN16
start_val[0] => count.DATAB
start_val[1] => Add0.IN15
start_val[1] => count.DATAB
start_val[2] => Add0.IN14
start_val[2] => count.DATAB
start_val[3] => Add0.IN13
start_val[3] => count.DATAB
start_val[4] => Add0.IN12
start_val[4] => count.DATAB
start_val[5] => Add0.IN11
start_val[5] => count.DATAB
start_val[6] => Add0.IN10
start_val[6] => count.DATAB
start_val[7] => Add0.IN9
start_val[7] => count.DATAB
inc => count.OUTPUTSELECT
inc => count.OUTPUTSELECT
inc => count.OUTPUTSELECT
inc => count.OUTPUTSELECT
inc => count.OUTPUTSELECT
inc => count.OUTPUTSELECT
inc => count.OUTPUTSELECT
inc => count.OUTPUTSELECT
inc => always0.IN0
enable => always0.IN1
enable => count.OUTPUTSELECT
enable => count.OUTPUTSELECT
enable => count.OUTPUTSELECT
enable => count.OUTPUTSELECT
enable => count.OUTPUTSELECT
enable => count.OUTPUTSELECT
enable => count.OUTPUTSELECT
enable => count.OUTPUTSELECT
clk => count[0]~reg0.CLK
clk => count[1]~reg0.CLK
clk => count[2]~reg0.CLK
clk => count[3]~reg0.CLK
clk => count[4]~reg0.CLK
clk => count[5]~reg0.CLK
clk => count[6]~reg0.CLK
clk => count[7]~reg0.CLK
slow_edge => count.OUTPUTSELECT
slow_edge => count.OUTPUTSELECT
slow_edge => count.OUTPUTSELECT
slow_edge => count.OUTPUTSELECT
slow_edge => count.OUTPUTSELECT
slow_edge => count.OUTPUTSELECT
slow_edge => count.OUTPUTSELECT
slow_edge => count.OUTPUTSELECT
reset => count.OUTPUTSELECT
reset => count.OUTPUTSELECT
reset => count.OUTPUTSELECT
reset => count.OUTPUTSELECT
reset => count.OUTPUTSELECT
reset => count.OUTPUTSELECT
reset => count.OUTPUTSELECT
reset => count.OUTPUTSELECT
init_val[0] => count.DATAB
init_val[1] => count.DATAB


|lab8|snakes_and_apples:snake|grid_light:center_grid_row[10].center_grid_col[7].light
green_light_on <= green_light_on.DB_MAX_OUTPUT_PORT_TYPE
head <= head.DB_MAX_OUTPUT_PORT_TYPE
game_over_out <= state_n.DB_MAX_OUTPUT_PORT_TYPE
eating => counter256:counter.inc
eating => always0.IN1
game_over_in => state_n.e_off.OUTPUTSELECT
game_over_in => state_n.e_countdown.OUTPUTSELECT
game_over_in => state_n.e_head.OUTPUTSELECT
game_over_in => state_n.OUTPUTSELECT
left => state_n.OUTPUTSELECT
left => state_n.OUTPUTSELECT
left => state_n.OUTPUTSELECT
left => state_n.OUTPUTSELECT
up => state_n.OUTPUTSELECT
up => state_n.OUTPUTSELECT
up => state_n.OUTPUTSELECT
up => state_n.OUTPUTSELECT
right => state_n.OUTPUTSELECT
right => state_n.OUTPUTSELECT
right => state_n.OUTPUTSELECT
right => state_n.OUTPUTSELECT
down => state_n.OUTPUTSELECT
down => state_n.OUTPUTSELECT
down => state_n.OUTPUTSELECT
down => state_n.OUTPUTSELECT
length[0] => counter256:counter.start_val[0]
length[1] => counter256:counter.start_val[1]
length[2] => counter256:counter.start_val[2]
length[3] => counter256:counter.start_val[3]
length[4] => counter256:counter.start_val[4]
length[5] => counter256:counter.start_val[5]
length[6] => counter256:counter.start_val[6]
length[7] => counter256:counter.start_val[7]
dir[0] => Mux0.IN5
dir[0] => Mux1.IN5
dir[0] => Mux2.IN5
dir[0] => Mux3.IN5
dir[1] => Mux0.IN4
dir[1] => Mux1.IN4
dir[1] => Mux2.IN4
dir[1] => Mux3.IN4
clk => counter256:counter.clk
clk => state_r~1.DATAIN
slow_edge => counter256:counter.slow_edge
slow_edge => state_r.OUTPUTSELECT
slow_edge => state_r.OUTPUTSELECT
slow_edge => state_r.OUTPUTSELECT
slow_edge => state_r.OUTPUTSELECT
reset => counter256:counter.reset
reset => state_r.OUTPUTSELECT
reset => state_r.OUTPUTSELECT
reset => state_r.OUTPUTSELECT
reset => state_r.OUTPUTSELECT
light_type[0] => counter256:counter.init_val[0]
light_type[0] => Equal1.IN1
light_type[0] => Equal2.IN1
light_type[1] => counter256:counter.init_val[1]
light_type[1] => Equal1.IN0
light_type[1] => Equal2.IN0


|lab8|snakes_and_apples:snake|grid_light:center_grid_row[10].center_grid_col[7].light|counter256:counter
count[0] <= count[0]~reg0.DB_MAX_OUTPUT_PORT_TYPE
count[1] <= count[1]~reg0.DB_MAX_OUTPUT_PORT_TYPE
count[2] <= count[2]~reg0.DB_MAX_OUTPUT_PORT_TYPE
count[3] <= count[3]~reg0.DB_MAX_OUTPUT_PORT_TYPE
count[4] <= count[4]~reg0.DB_MAX_OUTPUT_PORT_TYPE
count[5] <= count[5]~reg0.DB_MAX_OUTPUT_PORT_TYPE
count[6] <= count[6]~reg0.DB_MAX_OUTPUT_PORT_TYPE
count[7] <= count[7]~reg0.DB_MAX_OUTPUT_PORT_TYPE
start_val[0] => Add0.IN16
start_val[0] => count.DATAB
start_val[1] => Add0.IN15
start_val[1] => count.DATAB
start_val[2] => Add0.IN14
start_val[2] => count.DATAB
start_val[3] => Add0.IN13
start_val[3] => count.DATAB
start_val[4] => Add0.IN12
start_val[4] => count.DATAB
start_val[5] => Add0.IN11
start_val[5] => count.DATAB
start_val[6] => Add0.IN10
start_val[6] => count.DATAB
start_val[7] => Add0.IN9
start_val[7] => count.DATAB
inc => count.OUTPUTSELECT
inc => count.OUTPUTSELECT
inc => count.OUTPUTSELECT
inc => count.OUTPUTSELECT
inc => count.OUTPUTSELECT
inc => count.OUTPUTSELECT
inc => count.OUTPUTSELECT
inc => count.OUTPUTSELECT
inc => always0.IN0
enable => always0.IN1
enable => count.OUTPUTSELECT
enable => count.OUTPUTSELECT
enable => count.OUTPUTSELECT
enable => count.OUTPUTSELECT
enable => count.OUTPUTSELECT
enable => count.OUTPUTSELECT
enable => count.OUTPUTSELECT
enable => count.OUTPUTSELECT
clk => count[0]~reg0.CLK
clk => count[1]~reg0.CLK
clk => count[2]~reg0.CLK
clk => count[3]~reg0.CLK
clk => count[4]~reg0.CLK
clk => count[5]~reg0.CLK
clk => count[6]~reg0.CLK
clk => count[7]~reg0.CLK
slow_edge => count.OUTPUTSELECT
slow_edge => count.OUTPUTSELECT
slow_edge => count.OUTPUTSELECT
slow_edge => count.OUTPUTSELECT
slow_edge => count.OUTPUTSELECT
slow_edge => count.OUTPUTSELECT
slow_edge => count.OUTPUTSELECT
slow_edge => count.OUTPUTSELECT
reset => count.OUTPUTSELECT
reset => count.OUTPUTSELECT
reset => count.OUTPUTSELECT
reset => count.OUTPUTSELECT
reset => count.OUTPUTSELECT
reset => count.OUTPUTSELECT
reset => count.OUTPUTSELECT
reset => count.OUTPUTSELECT
init_val[0] => count.DATAB
init_val[1] => count.DATAB


|lab8|snakes_and_apples:snake|grid_light:center_grid_row[10].center_grid_col[8].light
green_light_on <= green_light_on.DB_MAX_OUTPUT_PORT_TYPE
head <= head.DB_MAX_OUTPUT_PORT_TYPE
game_over_out <= state_n.DB_MAX_OUTPUT_PORT_TYPE
eating => counter256:counter.inc
eating => always0.IN1
game_over_in => state_n.e_off.OUTPUTSELECT
game_over_in => state_n.e_countdown.OUTPUTSELECT
game_over_in => state_n.e_head.OUTPUTSELECT
game_over_in => state_n.OUTPUTSELECT
left => state_n.OUTPUTSELECT
left => state_n.OUTPUTSELECT
left => state_n.OUTPUTSELECT
left => state_n.OUTPUTSELECT
up => state_n.OUTPUTSELECT
up => state_n.OUTPUTSELECT
up => state_n.OUTPUTSELECT
up => state_n.OUTPUTSELECT
right => state_n.OUTPUTSELECT
right => state_n.OUTPUTSELECT
right => state_n.OUTPUTSELECT
right => state_n.OUTPUTSELECT
down => state_n.OUTPUTSELECT
down => state_n.OUTPUTSELECT
down => state_n.OUTPUTSELECT
down => state_n.OUTPUTSELECT
length[0] => counter256:counter.start_val[0]
length[1] => counter256:counter.start_val[1]
length[2] => counter256:counter.start_val[2]
length[3] => counter256:counter.start_val[3]
length[4] => counter256:counter.start_val[4]
length[5] => counter256:counter.start_val[5]
length[6] => counter256:counter.start_val[6]
length[7] => counter256:counter.start_val[7]
dir[0] => Mux0.IN5
dir[0] => Mux1.IN5
dir[0] => Mux2.IN5
dir[0] => Mux3.IN5
dir[1] => Mux0.IN4
dir[1] => Mux1.IN4
dir[1] => Mux2.IN4
dir[1] => Mux3.IN4
clk => counter256:counter.clk
clk => state_r~1.DATAIN
slow_edge => counter256:counter.slow_edge
slow_edge => state_r.OUTPUTSELECT
slow_edge => state_r.OUTPUTSELECT
slow_edge => state_r.OUTPUTSELECT
slow_edge => state_r.OUTPUTSELECT
reset => counter256:counter.reset
reset => state_r.OUTPUTSELECT
reset => state_r.OUTPUTSELECT
reset => state_r.OUTPUTSELECT
reset => state_r.OUTPUTSELECT
light_type[0] => counter256:counter.init_val[0]
light_type[0] => Equal1.IN1
light_type[0] => Equal2.IN1
light_type[1] => counter256:counter.init_val[1]
light_type[1] => Equal1.IN0
light_type[1] => Equal2.IN0


|lab8|snakes_and_apples:snake|grid_light:center_grid_row[10].center_grid_col[8].light|counter256:counter
count[0] <= count[0]~reg0.DB_MAX_OUTPUT_PORT_TYPE
count[1] <= count[1]~reg0.DB_MAX_OUTPUT_PORT_TYPE
count[2] <= count[2]~reg0.DB_MAX_OUTPUT_PORT_TYPE
count[3] <= count[3]~reg0.DB_MAX_OUTPUT_PORT_TYPE
count[4] <= count[4]~reg0.DB_MAX_OUTPUT_PORT_TYPE
count[5] <= count[5]~reg0.DB_MAX_OUTPUT_PORT_TYPE
count[6] <= count[6]~reg0.DB_MAX_OUTPUT_PORT_TYPE
count[7] <= count[7]~reg0.DB_MAX_OUTPUT_PORT_TYPE
start_val[0] => Add0.IN16
start_val[0] => count.DATAB
start_val[1] => Add0.IN15
start_val[1] => count.DATAB
start_val[2] => Add0.IN14
start_val[2] => count.DATAB
start_val[3] => Add0.IN13
start_val[3] => count.DATAB
start_val[4] => Add0.IN12
start_val[4] => count.DATAB
start_val[5] => Add0.IN11
start_val[5] => count.DATAB
start_val[6] => Add0.IN10
start_val[6] => count.DATAB
start_val[7] => Add0.IN9
start_val[7] => count.DATAB
inc => count.OUTPUTSELECT
inc => count.OUTPUTSELECT
inc => count.OUTPUTSELECT
inc => count.OUTPUTSELECT
inc => count.OUTPUTSELECT
inc => count.OUTPUTSELECT
inc => count.OUTPUTSELECT
inc => count.OUTPUTSELECT
inc => always0.IN0
enable => always0.IN1
enable => count.OUTPUTSELECT
enable => count.OUTPUTSELECT
enable => count.OUTPUTSELECT
enable => count.OUTPUTSELECT
enable => count.OUTPUTSELECT
enable => count.OUTPUTSELECT
enable => count.OUTPUTSELECT
enable => count.OUTPUTSELECT
clk => count[0]~reg0.CLK
clk => count[1]~reg0.CLK
clk => count[2]~reg0.CLK
clk => count[3]~reg0.CLK
clk => count[4]~reg0.CLK
clk => count[5]~reg0.CLK
clk => count[6]~reg0.CLK
clk => count[7]~reg0.CLK
slow_edge => count.OUTPUTSELECT
slow_edge => count.OUTPUTSELECT
slow_edge => count.OUTPUTSELECT
slow_edge => count.OUTPUTSELECT
slow_edge => count.OUTPUTSELECT
slow_edge => count.OUTPUTSELECT
slow_edge => count.OUTPUTSELECT
slow_edge => count.OUTPUTSELECT
reset => count.OUTPUTSELECT
reset => count.OUTPUTSELECT
reset => count.OUTPUTSELECT
reset => count.OUTPUTSELECT
reset => count.OUTPUTSELECT
reset => count.OUTPUTSELECT
reset => count.OUTPUTSELECT
reset => count.OUTPUTSELECT
init_val[0] => count.DATAB
init_val[1] => count.DATAB


|lab8|snakes_and_apples:snake|grid_light:center_grid_row[10].center_grid_col[9].light
green_light_on <= green_light_on.DB_MAX_OUTPUT_PORT_TYPE
head <= head.DB_MAX_OUTPUT_PORT_TYPE
game_over_out <= state_n.DB_MAX_OUTPUT_PORT_TYPE
eating => counter256:counter.inc
eating => always0.IN1
game_over_in => state_n.e_off.OUTPUTSELECT
game_over_in => state_n.e_countdown.OUTPUTSELECT
game_over_in => state_n.e_head.OUTPUTSELECT
game_over_in => state_n.OUTPUTSELECT
left => state_n.OUTPUTSELECT
left => state_n.OUTPUTSELECT
left => state_n.OUTPUTSELECT
left => state_n.OUTPUTSELECT
up => state_n.OUTPUTSELECT
up => state_n.OUTPUTSELECT
up => state_n.OUTPUTSELECT
up => state_n.OUTPUTSELECT
right => state_n.OUTPUTSELECT
right => state_n.OUTPUTSELECT
right => state_n.OUTPUTSELECT
right => state_n.OUTPUTSELECT
down => state_n.OUTPUTSELECT
down => state_n.OUTPUTSELECT
down => state_n.OUTPUTSELECT
down => state_n.OUTPUTSELECT
length[0] => counter256:counter.start_val[0]
length[1] => counter256:counter.start_val[1]
length[2] => counter256:counter.start_val[2]
length[3] => counter256:counter.start_val[3]
length[4] => counter256:counter.start_val[4]
length[5] => counter256:counter.start_val[5]
length[6] => counter256:counter.start_val[6]
length[7] => counter256:counter.start_val[7]
dir[0] => Mux0.IN5
dir[0] => Mux1.IN5
dir[0] => Mux2.IN5
dir[0] => Mux3.IN5
dir[1] => Mux0.IN4
dir[1] => Mux1.IN4
dir[1] => Mux2.IN4
dir[1] => Mux3.IN4
clk => counter256:counter.clk
clk => state_r~1.DATAIN
slow_edge => counter256:counter.slow_edge
slow_edge => state_r.OUTPUTSELECT
slow_edge => state_r.OUTPUTSELECT
slow_edge => state_r.OUTPUTSELECT
slow_edge => state_r.OUTPUTSELECT
reset => counter256:counter.reset
reset => state_r.OUTPUTSELECT
reset => state_r.OUTPUTSELECT
reset => state_r.OUTPUTSELECT
reset => state_r.OUTPUTSELECT
light_type[0] => counter256:counter.init_val[0]
light_type[0] => Equal1.IN1
light_type[0] => Equal2.IN1
light_type[1] => counter256:counter.init_val[1]
light_type[1] => Equal1.IN0
light_type[1] => Equal2.IN0


|lab8|snakes_and_apples:snake|grid_light:center_grid_row[10].center_grid_col[9].light|counter256:counter
count[0] <= count[0]~reg0.DB_MAX_OUTPUT_PORT_TYPE
count[1] <= count[1]~reg0.DB_MAX_OUTPUT_PORT_TYPE
count[2] <= count[2]~reg0.DB_MAX_OUTPUT_PORT_TYPE
count[3] <= count[3]~reg0.DB_MAX_OUTPUT_PORT_TYPE
count[4] <= count[4]~reg0.DB_MAX_OUTPUT_PORT_TYPE
count[5] <= count[5]~reg0.DB_MAX_OUTPUT_PORT_TYPE
count[6] <= count[6]~reg0.DB_MAX_OUTPUT_PORT_TYPE
count[7] <= count[7]~reg0.DB_MAX_OUTPUT_PORT_TYPE
start_val[0] => Add0.IN16
start_val[0] => count.DATAB
start_val[1] => Add0.IN15
start_val[1] => count.DATAB
start_val[2] => Add0.IN14
start_val[2] => count.DATAB
start_val[3] => Add0.IN13
start_val[3] => count.DATAB
start_val[4] => Add0.IN12
start_val[4] => count.DATAB
start_val[5] => Add0.IN11
start_val[5] => count.DATAB
start_val[6] => Add0.IN10
start_val[6] => count.DATAB
start_val[7] => Add0.IN9
start_val[7] => count.DATAB
inc => count.OUTPUTSELECT
inc => count.OUTPUTSELECT
inc => count.OUTPUTSELECT
inc => count.OUTPUTSELECT
inc => count.OUTPUTSELECT
inc => count.OUTPUTSELECT
inc => count.OUTPUTSELECT
inc => count.OUTPUTSELECT
inc => always0.IN0
enable => always0.IN1
enable => count.OUTPUTSELECT
enable => count.OUTPUTSELECT
enable => count.OUTPUTSELECT
enable => count.OUTPUTSELECT
enable => count.OUTPUTSELECT
enable => count.OUTPUTSELECT
enable => count.OUTPUTSELECT
enable => count.OUTPUTSELECT
clk => count[0]~reg0.CLK
clk => count[1]~reg0.CLK
clk => count[2]~reg0.CLK
clk => count[3]~reg0.CLK
clk => count[4]~reg0.CLK
clk => count[5]~reg0.CLK
clk => count[6]~reg0.CLK
clk => count[7]~reg0.CLK
slow_edge => count.OUTPUTSELECT
slow_edge => count.OUTPUTSELECT
slow_edge => count.OUTPUTSELECT
slow_edge => count.OUTPUTSELECT
slow_edge => count.OUTPUTSELECT
slow_edge => count.OUTPUTSELECT
slow_edge => count.OUTPUTSELECT
slow_edge => count.OUTPUTSELECT
reset => count.OUTPUTSELECT
reset => count.OUTPUTSELECT
reset => count.OUTPUTSELECT
reset => count.OUTPUTSELECT
reset => count.OUTPUTSELECT
reset => count.OUTPUTSELECT
reset => count.OUTPUTSELECT
reset => count.OUTPUTSELECT
init_val[0] => count.DATAB
init_val[1] => count.DATAB


|lab8|snakes_and_apples:snake|grid_light:center_grid_row[10].center_grid_col[10].light
green_light_on <= green_light_on.DB_MAX_OUTPUT_PORT_TYPE
head <= head.DB_MAX_OUTPUT_PORT_TYPE
game_over_out <= state_n.DB_MAX_OUTPUT_PORT_TYPE
eating => counter256:counter.inc
eating => always0.IN1
game_over_in => state_n.e_off.OUTPUTSELECT
game_over_in => state_n.e_countdown.OUTPUTSELECT
game_over_in => state_n.e_head.OUTPUTSELECT
game_over_in => state_n.OUTPUTSELECT
left => state_n.OUTPUTSELECT
left => state_n.OUTPUTSELECT
left => state_n.OUTPUTSELECT
left => state_n.OUTPUTSELECT
up => state_n.OUTPUTSELECT
up => state_n.OUTPUTSELECT
up => state_n.OUTPUTSELECT
up => state_n.OUTPUTSELECT
right => state_n.OUTPUTSELECT
right => state_n.OUTPUTSELECT
right => state_n.OUTPUTSELECT
right => state_n.OUTPUTSELECT
down => state_n.OUTPUTSELECT
down => state_n.OUTPUTSELECT
down => state_n.OUTPUTSELECT
down => state_n.OUTPUTSELECT
length[0] => counter256:counter.start_val[0]
length[1] => counter256:counter.start_val[1]
length[2] => counter256:counter.start_val[2]
length[3] => counter256:counter.start_val[3]
length[4] => counter256:counter.start_val[4]
length[5] => counter256:counter.start_val[5]
length[6] => counter256:counter.start_val[6]
length[7] => counter256:counter.start_val[7]
dir[0] => Mux0.IN5
dir[0] => Mux1.IN5
dir[0] => Mux2.IN5
dir[0] => Mux3.IN5
dir[1] => Mux0.IN4
dir[1] => Mux1.IN4
dir[1] => Mux2.IN4
dir[1] => Mux3.IN4
clk => counter256:counter.clk
clk => state_r~1.DATAIN
slow_edge => counter256:counter.slow_edge
slow_edge => state_r.OUTPUTSELECT
slow_edge => state_r.OUTPUTSELECT
slow_edge => state_r.OUTPUTSELECT
slow_edge => state_r.OUTPUTSELECT
reset => counter256:counter.reset
reset => state_r.OUTPUTSELECT
reset => state_r.OUTPUTSELECT
reset => state_r.OUTPUTSELECT
reset => state_r.OUTPUTSELECT
light_type[0] => counter256:counter.init_val[0]
light_type[0] => Equal1.IN1
light_type[0] => Equal2.IN1
light_type[1] => counter256:counter.init_val[1]
light_type[1] => Equal1.IN0
light_type[1] => Equal2.IN0


|lab8|snakes_and_apples:snake|grid_light:center_grid_row[10].center_grid_col[10].light|counter256:counter
count[0] <= count[0]~reg0.DB_MAX_OUTPUT_PORT_TYPE
count[1] <= count[1]~reg0.DB_MAX_OUTPUT_PORT_TYPE
count[2] <= count[2]~reg0.DB_MAX_OUTPUT_PORT_TYPE
count[3] <= count[3]~reg0.DB_MAX_OUTPUT_PORT_TYPE
count[4] <= count[4]~reg0.DB_MAX_OUTPUT_PORT_TYPE
count[5] <= count[5]~reg0.DB_MAX_OUTPUT_PORT_TYPE
count[6] <= count[6]~reg0.DB_MAX_OUTPUT_PORT_TYPE
count[7] <= count[7]~reg0.DB_MAX_OUTPUT_PORT_TYPE
start_val[0] => Add0.IN16
start_val[0] => count.DATAB
start_val[1] => Add0.IN15
start_val[1] => count.DATAB
start_val[2] => Add0.IN14
start_val[2] => count.DATAB
start_val[3] => Add0.IN13
start_val[3] => count.DATAB
start_val[4] => Add0.IN12
start_val[4] => count.DATAB
start_val[5] => Add0.IN11
start_val[5] => count.DATAB
start_val[6] => Add0.IN10
start_val[6] => count.DATAB
start_val[7] => Add0.IN9
start_val[7] => count.DATAB
inc => count.OUTPUTSELECT
inc => count.OUTPUTSELECT
inc => count.OUTPUTSELECT
inc => count.OUTPUTSELECT
inc => count.OUTPUTSELECT
inc => count.OUTPUTSELECT
inc => count.OUTPUTSELECT
inc => count.OUTPUTSELECT
inc => always0.IN0
enable => always0.IN1
enable => count.OUTPUTSELECT
enable => count.OUTPUTSELECT
enable => count.OUTPUTSELECT
enable => count.OUTPUTSELECT
enable => count.OUTPUTSELECT
enable => count.OUTPUTSELECT
enable => count.OUTPUTSELECT
enable => count.OUTPUTSELECT
clk => count[0]~reg0.CLK
clk => count[1]~reg0.CLK
clk => count[2]~reg0.CLK
clk => count[3]~reg0.CLK
clk => count[4]~reg0.CLK
clk => count[5]~reg0.CLK
clk => count[6]~reg0.CLK
clk => count[7]~reg0.CLK
slow_edge => count.OUTPUTSELECT
slow_edge => count.OUTPUTSELECT
slow_edge => count.OUTPUTSELECT
slow_edge => count.OUTPUTSELECT
slow_edge => count.OUTPUTSELECT
slow_edge => count.OUTPUTSELECT
slow_edge => count.OUTPUTSELECT
slow_edge => count.OUTPUTSELECT
reset => count.OUTPUTSELECT
reset => count.OUTPUTSELECT
reset => count.OUTPUTSELECT
reset => count.OUTPUTSELECT
reset => count.OUTPUTSELECT
reset => count.OUTPUTSELECT
reset => count.OUTPUTSELECT
reset => count.OUTPUTSELECT
init_val[0] => count.DATAB
init_val[1] => count.DATAB


|lab8|snakes_and_apples:snake|grid_light:center_grid_row[10].center_grid_col[11].light
green_light_on <= green_light_on.DB_MAX_OUTPUT_PORT_TYPE
head <= head.DB_MAX_OUTPUT_PORT_TYPE
game_over_out <= state_n.DB_MAX_OUTPUT_PORT_TYPE
eating => counter256:counter.inc
eating => always0.IN1
game_over_in => state_n.e_off.OUTPUTSELECT
game_over_in => state_n.e_countdown.OUTPUTSELECT
game_over_in => state_n.e_head.OUTPUTSELECT
game_over_in => state_n.OUTPUTSELECT
left => state_n.OUTPUTSELECT
left => state_n.OUTPUTSELECT
left => state_n.OUTPUTSELECT
left => state_n.OUTPUTSELECT
up => state_n.OUTPUTSELECT
up => state_n.OUTPUTSELECT
up => state_n.OUTPUTSELECT
up => state_n.OUTPUTSELECT
right => state_n.OUTPUTSELECT
right => state_n.OUTPUTSELECT
right => state_n.OUTPUTSELECT
right => state_n.OUTPUTSELECT
down => state_n.OUTPUTSELECT
down => state_n.OUTPUTSELECT
down => state_n.OUTPUTSELECT
down => state_n.OUTPUTSELECT
length[0] => counter256:counter.start_val[0]
length[1] => counter256:counter.start_val[1]
length[2] => counter256:counter.start_val[2]
length[3] => counter256:counter.start_val[3]
length[4] => counter256:counter.start_val[4]
length[5] => counter256:counter.start_val[5]
length[6] => counter256:counter.start_val[6]
length[7] => counter256:counter.start_val[7]
dir[0] => Mux0.IN5
dir[0] => Mux1.IN5
dir[0] => Mux2.IN5
dir[0] => Mux3.IN5
dir[1] => Mux0.IN4
dir[1] => Mux1.IN4
dir[1] => Mux2.IN4
dir[1] => Mux3.IN4
clk => counter256:counter.clk
clk => state_r~1.DATAIN
slow_edge => counter256:counter.slow_edge
slow_edge => state_r.OUTPUTSELECT
slow_edge => state_r.OUTPUTSELECT
slow_edge => state_r.OUTPUTSELECT
slow_edge => state_r.OUTPUTSELECT
reset => counter256:counter.reset
reset => state_r.OUTPUTSELECT
reset => state_r.OUTPUTSELECT
reset => state_r.OUTPUTSELECT
reset => state_r.OUTPUTSELECT
light_type[0] => counter256:counter.init_val[0]
light_type[0] => Equal1.IN1
light_type[0] => Equal2.IN1
light_type[1] => counter256:counter.init_val[1]
light_type[1] => Equal1.IN0
light_type[1] => Equal2.IN0


|lab8|snakes_and_apples:snake|grid_light:center_grid_row[10].center_grid_col[11].light|counter256:counter
count[0] <= count[0]~reg0.DB_MAX_OUTPUT_PORT_TYPE
count[1] <= count[1]~reg0.DB_MAX_OUTPUT_PORT_TYPE
count[2] <= count[2]~reg0.DB_MAX_OUTPUT_PORT_TYPE
count[3] <= count[3]~reg0.DB_MAX_OUTPUT_PORT_TYPE
count[4] <= count[4]~reg0.DB_MAX_OUTPUT_PORT_TYPE
count[5] <= count[5]~reg0.DB_MAX_OUTPUT_PORT_TYPE
count[6] <= count[6]~reg0.DB_MAX_OUTPUT_PORT_TYPE
count[7] <= count[7]~reg0.DB_MAX_OUTPUT_PORT_TYPE
start_val[0] => Add0.IN16
start_val[0] => count.DATAB
start_val[1] => Add0.IN15
start_val[1] => count.DATAB
start_val[2] => Add0.IN14
start_val[2] => count.DATAB
start_val[3] => Add0.IN13
start_val[3] => count.DATAB
start_val[4] => Add0.IN12
start_val[4] => count.DATAB
start_val[5] => Add0.IN11
start_val[5] => count.DATAB
start_val[6] => Add0.IN10
start_val[6] => count.DATAB
start_val[7] => Add0.IN9
start_val[7] => count.DATAB
inc => count.OUTPUTSELECT
inc => count.OUTPUTSELECT
inc => count.OUTPUTSELECT
inc => count.OUTPUTSELECT
inc => count.OUTPUTSELECT
inc => count.OUTPUTSELECT
inc => count.OUTPUTSELECT
inc => count.OUTPUTSELECT
inc => always0.IN0
enable => always0.IN1
enable => count.OUTPUTSELECT
enable => count.OUTPUTSELECT
enable => count.OUTPUTSELECT
enable => count.OUTPUTSELECT
enable => count.OUTPUTSELECT
enable => count.OUTPUTSELECT
enable => count.OUTPUTSELECT
enable => count.OUTPUTSELECT
clk => count[0]~reg0.CLK
clk => count[1]~reg0.CLK
clk => count[2]~reg0.CLK
clk => count[3]~reg0.CLK
clk => count[4]~reg0.CLK
clk => count[5]~reg0.CLK
clk => count[6]~reg0.CLK
clk => count[7]~reg0.CLK
slow_edge => count.OUTPUTSELECT
slow_edge => count.OUTPUTSELECT
slow_edge => count.OUTPUTSELECT
slow_edge => count.OUTPUTSELECT
slow_edge => count.OUTPUTSELECT
slow_edge => count.OUTPUTSELECT
slow_edge => count.OUTPUTSELECT
slow_edge => count.OUTPUTSELECT
reset => count.OUTPUTSELECT
reset => count.OUTPUTSELECT
reset => count.OUTPUTSELECT
reset => count.OUTPUTSELECT
reset => count.OUTPUTSELECT
reset => count.OUTPUTSELECT
reset => count.OUTPUTSELECT
reset => count.OUTPUTSELECT
init_val[0] => count.DATAB
init_val[1] => count.DATAB


|lab8|snakes_and_apples:snake|grid_light:center_grid_row[10].center_grid_col[12].light
green_light_on <= green_light_on.DB_MAX_OUTPUT_PORT_TYPE
head <= head.DB_MAX_OUTPUT_PORT_TYPE
game_over_out <= state_n.DB_MAX_OUTPUT_PORT_TYPE
eating => counter256:counter.inc
eating => always0.IN1
game_over_in => state_n.e_off.OUTPUTSELECT
game_over_in => state_n.e_countdown.OUTPUTSELECT
game_over_in => state_n.e_head.OUTPUTSELECT
game_over_in => state_n.OUTPUTSELECT
left => state_n.OUTPUTSELECT
left => state_n.OUTPUTSELECT
left => state_n.OUTPUTSELECT
left => state_n.OUTPUTSELECT
up => state_n.OUTPUTSELECT
up => state_n.OUTPUTSELECT
up => state_n.OUTPUTSELECT
up => state_n.OUTPUTSELECT
right => state_n.OUTPUTSELECT
right => state_n.OUTPUTSELECT
right => state_n.OUTPUTSELECT
right => state_n.OUTPUTSELECT
down => state_n.OUTPUTSELECT
down => state_n.OUTPUTSELECT
down => state_n.OUTPUTSELECT
down => state_n.OUTPUTSELECT
length[0] => counter256:counter.start_val[0]
length[1] => counter256:counter.start_val[1]
length[2] => counter256:counter.start_val[2]
length[3] => counter256:counter.start_val[3]
length[4] => counter256:counter.start_val[4]
length[5] => counter256:counter.start_val[5]
length[6] => counter256:counter.start_val[6]
length[7] => counter256:counter.start_val[7]
dir[0] => Mux0.IN5
dir[0] => Mux1.IN5
dir[0] => Mux2.IN5
dir[0] => Mux3.IN5
dir[1] => Mux0.IN4
dir[1] => Mux1.IN4
dir[1] => Mux2.IN4
dir[1] => Mux3.IN4
clk => counter256:counter.clk
clk => state_r~1.DATAIN
slow_edge => counter256:counter.slow_edge
slow_edge => state_r.OUTPUTSELECT
slow_edge => state_r.OUTPUTSELECT
slow_edge => state_r.OUTPUTSELECT
slow_edge => state_r.OUTPUTSELECT
reset => counter256:counter.reset
reset => state_r.OUTPUTSELECT
reset => state_r.OUTPUTSELECT
reset => state_r.OUTPUTSELECT
reset => state_r.OUTPUTSELECT
light_type[0] => counter256:counter.init_val[0]
light_type[0] => Equal1.IN1
light_type[0] => Equal2.IN1
light_type[1] => counter256:counter.init_val[1]
light_type[1] => Equal1.IN0
light_type[1] => Equal2.IN0


|lab8|snakes_and_apples:snake|grid_light:center_grid_row[10].center_grid_col[12].light|counter256:counter
count[0] <= count[0]~reg0.DB_MAX_OUTPUT_PORT_TYPE
count[1] <= count[1]~reg0.DB_MAX_OUTPUT_PORT_TYPE
count[2] <= count[2]~reg0.DB_MAX_OUTPUT_PORT_TYPE
count[3] <= count[3]~reg0.DB_MAX_OUTPUT_PORT_TYPE
count[4] <= count[4]~reg0.DB_MAX_OUTPUT_PORT_TYPE
count[5] <= count[5]~reg0.DB_MAX_OUTPUT_PORT_TYPE
count[6] <= count[6]~reg0.DB_MAX_OUTPUT_PORT_TYPE
count[7] <= count[7]~reg0.DB_MAX_OUTPUT_PORT_TYPE
start_val[0] => Add0.IN16
start_val[0] => count.DATAB
start_val[1] => Add0.IN15
start_val[1] => count.DATAB
start_val[2] => Add0.IN14
start_val[2] => count.DATAB
start_val[3] => Add0.IN13
start_val[3] => count.DATAB
start_val[4] => Add0.IN12
start_val[4] => count.DATAB
start_val[5] => Add0.IN11
start_val[5] => count.DATAB
start_val[6] => Add0.IN10
start_val[6] => count.DATAB
start_val[7] => Add0.IN9
start_val[7] => count.DATAB
inc => count.OUTPUTSELECT
inc => count.OUTPUTSELECT
inc => count.OUTPUTSELECT
inc => count.OUTPUTSELECT
inc => count.OUTPUTSELECT
inc => count.OUTPUTSELECT
inc => count.OUTPUTSELECT
inc => count.OUTPUTSELECT
inc => always0.IN0
enable => always0.IN1
enable => count.OUTPUTSELECT
enable => count.OUTPUTSELECT
enable => count.OUTPUTSELECT
enable => count.OUTPUTSELECT
enable => count.OUTPUTSELECT
enable => count.OUTPUTSELECT
enable => count.OUTPUTSELECT
enable => count.OUTPUTSELECT
clk => count[0]~reg0.CLK
clk => count[1]~reg0.CLK
clk => count[2]~reg0.CLK
clk => count[3]~reg0.CLK
clk => count[4]~reg0.CLK
clk => count[5]~reg0.CLK
clk => count[6]~reg0.CLK
clk => count[7]~reg0.CLK
slow_edge => count.OUTPUTSELECT
slow_edge => count.OUTPUTSELECT
slow_edge => count.OUTPUTSELECT
slow_edge => count.OUTPUTSELECT
slow_edge => count.OUTPUTSELECT
slow_edge => count.OUTPUTSELECT
slow_edge => count.OUTPUTSELECT
slow_edge => count.OUTPUTSELECT
reset => count.OUTPUTSELECT
reset => count.OUTPUTSELECT
reset => count.OUTPUTSELECT
reset => count.OUTPUTSELECT
reset => count.OUTPUTSELECT
reset => count.OUTPUTSELECT
reset => count.OUTPUTSELECT
reset => count.OUTPUTSELECT
init_val[0] => count.DATAB
init_val[1] => count.DATAB


|lab8|snakes_and_apples:snake|grid_light:center_grid_row[10].center_grid_col[13].light
green_light_on <= green_light_on.DB_MAX_OUTPUT_PORT_TYPE
head <= head.DB_MAX_OUTPUT_PORT_TYPE
game_over_out <= state_n.DB_MAX_OUTPUT_PORT_TYPE
eating => counter256:counter.inc
eating => always0.IN1
game_over_in => state_n.e_off.OUTPUTSELECT
game_over_in => state_n.e_countdown.OUTPUTSELECT
game_over_in => state_n.e_head.OUTPUTSELECT
game_over_in => state_n.OUTPUTSELECT
left => state_n.OUTPUTSELECT
left => state_n.OUTPUTSELECT
left => state_n.OUTPUTSELECT
left => state_n.OUTPUTSELECT
up => state_n.OUTPUTSELECT
up => state_n.OUTPUTSELECT
up => state_n.OUTPUTSELECT
up => state_n.OUTPUTSELECT
right => state_n.OUTPUTSELECT
right => state_n.OUTPUTSELECT
right => state_n.OUTPUTSELECT
right => state_n.OUTPUTSELECT
down => state_n.OUTPUTSELECT
down => state_n.OUTPUTSELECT
down => state_n.OUTPUTSELECT
down => state_n.OUTPUTSELECT
length[0] => counter256:counter.start_val[0]
length[1] => counter256:counter.start_val[1]
length[2] => counter256:counter.start_val[2]
length[3] => counter256:counter.start_val[3]
length[4] => counter256:counter.start_val[4]
length[5] => counter256:counter.start_val[5]
length[6] => counter256:counter.start_val[6]
length[7] => counter256:counter.start_val[7]
dir[0] => Mux0.IN5
dir[0] => Mux1.IN5
dir[0] => Mux2.IN5
dir[0] => Mux3.IN5
dir[1] => Mux0.IN4
dir[1] => Mux1.IN4
dir[1] => Mux2.IN4
dir[1] => Mux3.IN4
clk => counter256:counter.clk
clk => state_r~1.DATAIN
slow_edge => counter256:counter.slow_edge
slow_edge => state_r.OUTPUTSELECT
slow_edge => state_r.OUTPUTSELECT
slow_edge => state_r.OUTPUTSELECT
slow_edge => state_r.OUTPUTSELECT
reset => counter256:counter.reset
reset => state_r.OUTPUTSELECT
reset => state_r.OUTPUTSELECT
reset => state_r.OUTPUTSELECT
reset => state_r.OUTPUTSELECT
light_type[0] => counter256:counter.init_val[0]
light_type[0] => Equal1.IN1
light_type[0] => Equal2.IN1
light_type[1] => counter256:counter.init_val[1]
light_type[1] => Equal1.IN0
light_type[1] => Equal2.IN0


|lab8|snakes_and_apples:snake|grid_light:center_grid_row[10].center_grid_col[13].light|counter256:counter
count[0] <= count[0]~reg0.DB_MAX_OUTPUT_PORT_TYPE
count[1] <= count[1]~reg0.DB_MAX_OUTPUT_PORT_TYPE
count[2] <= count[2]~reg0.DB_MAX_OUTPUT_PORT_TYPE
count[3] <= count[3]~reg0.DB_MAX_OUTPUT_PORT_TYPE
count[4] <= count[4]~reg0.DB_MAX_OUTPUT_PORT_TYPE
count[5] <= count[5]~reg0.DB_MAX_OUTPUT_PORT_TYPE
count[6] <= count[6]~reg0.DB_MAX_OUTPUT_PORT_TYPE
count[7] <= count[7]~reg0.DB_MAX_OUTPUT_PORT_TYPE
start_val[0] => Add0.IN16
start_val[0] => count.DATAB
start_val[1] => Add0.IN15
start_val[1] => count.DATAB
start_val[2] => Add0.IN14
start_val[2] => count.DATAB
start_val[3] => Add0.IN13
start_val[3] => count.DATAB
start_val[4] => Add0.IN12
start_val[4] => count.DATAB
start_val[5] => Add0.IN11
start_val[5] => count.DATAB
start_val[6] => Add0.IN10
start_val[6] => count.DATAB
start_val[7] => Add0.IN9
start_val[7] => count.DATAB
inc => count.OUTPUTSELECT
inc => count.OUTPUTSELECT
inc => count.OUTPUTSELECT
inc => count.OUTPUTSELECT
inc => count.OUTPUTSELECT
inc => count.OUTPUTSELECT
inc => count.OUTPUTSELECT
inc => count.OUTPUTSELECT
inc => always0.IN0
enable => always0.IN1
enable => count.OUTPUTSELECT
enable => count.OUTPUTSELECT
enable => count.OUTPUTSELECT
enable => count.OUTPUTSELECT
enable => count.OUTPUTSELECT
enable => count.OUTPUTSELECT
enable => count.OUTPUTSELECT
enable => count.OUTPUTSELECT
clk => count[0]~reg0.CLK
clk => count[1]~reg0.CLK
clk => count[2]~reg0.CLK
clk => count[3]~reg0.CLK
clk => count[4]~reg0.CLK
clk => count[5]~reg0.CLK
clk => count[6]~reg0.CLK
clk => count[7]~reg0.CLK
slow_edge => count.OUTPUTSELECT
slow_edge => count.OUTPUTSELECT
slow_edge => count.OUTPUTSELECT
slow_edge => count.OUTPUTSELECT
slow_edge => count.OUTPUTSELECT
slow_edge => count.OUTPUTSELECT
slow_edge => count.OUTPUTSELECT
slow_edge => count.OUTPUTSELECT
reset => count.OUTPUTSELECT
reset => count.OUTPUTSELECT
reset => count.OUTPUTSELECT
reset => count.OUTPUTSELECT
reset => count.OUTPUTSELECT
reset => count.OUTPUTSELECT
reset => count.OUTPUTSELECT
reset => count.OUTPUTSELECT
init_val[0] => count.DATAB
init_val[1] => count.DATAB


|lab8|snakes_and_apples:snake|grid_light:center_grid_row[10].center_grid_col[14].light
green_light_on <= green_light_on.DB_MAX_OUTPUT_PORT_TYPE
head <= head.DB_MAX_OUTPUT_PORT_TYPE
game_over_out <= state_n.DB_MAX_OUTPUT_PORT_TYPE
eating => counter256:counter.inc
eating => always0.IN1
game_over_in => state_n.e_off.OUTPUTSELECT
game_over_in => state_n.e_countdown.OUTPUTSELECT
game_over_in => state_n.e_head.OUTPUTSELECT
game_over_in => state_n.OUTPUTSELECT
left => state_n.OUTPUTSELECT
left => state_n.OUTPUTSELECT
left => state_n.OUTPUTSELECT
left => state_n.OUTPUTSELECT
up => state_n.OUTPUTSELECT
up => state_n.OUTPUTSELECT
up => state_n.OUTPUTSELECT
up => state_n.OUTPUTSELECT
right => state_n.OUTPUTSELECT
right => state_n.OUTPUTSELECT
right => state_n.OUTPUTSELECT
right => state_n.OUTPUTSELECT
down => state_n.OUTPUTSELECT
down => state_n.OUTPUTSELECT
down => state_n.OUTPUTSELECT
down => state_n.OUTPUTSELECT
length[0] => counter256:counter.start_val[0]
length[1] => counter256:counter.start_val[1]
length[2] => counter256:counter.start_val[2]
length[3] => counter256:counter.start_val[3]
length[4] => counter256:counter.start_val[4]
length[5] => counter256:counter.start_val[5]
length[6] => counter256:counter.start_val[6]
length[7] => counter256:counter.start_val[7]
dir[0] => Mux0.IN5
dir[0] => Mux1.IN5
dir[0] => Mux2.IN5
dir[0] => Mux3.IN5
dir[1] => Mux0.IN4
dir[1] => Mux1.IN4
dir[1] => Mux2.IN4
dir[1] => Mux3.IN4
clk => counter256:counter.clk
clk => state_r~1.DATAIN
slow_edge => counter256:counter.slow_edge
slow_edge => state_r.OUTPUTSELECT
slow_edge => state_r.OUTPUTSELECT
slow_edge => state_r.OUTPUTSELECT
slow_edge => state_r.OUTPUTSELECT
reset => counter256:counter.reset
reset => state_r.OUTPUTSELECT
reset => state_r.OUTPUTSELECT
reset => state_r.OUTPUTSELECT
reset => state_r.OUTPUTSELECT
light_type[0] => counter256:counter.init_val[0]
light_type[0] => Equal1.IN1
light_type[0] => Equal2.IN1
light_type[1] => counter256:counter.init_val[1]
light_type[1] => Equal1.IN0
light_type[1] => Equal2.IN0


|lab8|snakes_and_apples:snake|grid_light:center_grid_row[10].center_grid_col[14].light|counter256:counter
count[0] <= count[0]~reg0.DB_MAX_OUTPUT_PORT_TYPE
count[1] <= count[1]~reg0.DB_MAX_OUTPUT_PORT_TYPE
count[2] <= count[2]~reg0.DB_MAX_OUTPUT_PORT_TYPE
count[3] <= count[3]~reg0.DB_MAX_OUTPUT_PORT_TYPE
count[4] <= count[4]~reg0.DB_MAX_OUTPUT_PORT_TYPE
count[5] <= count[5]~reg0.DB_MAX_OUTPUT_PORT_TYPE
count[6] <= count[6]~reg0.DB_MAX_OUTPUT_PORT_TYPE
count[7] <= count[7]~reg0.DB_MAX_OUTPUT_PORT_TYPE
start_val[0] => Add0.IN16
start_val[0] => count.DATAB
start_val[1] => Add0.IN15
start_val[1] => count.DATAB
start_val[2] => Add0.IN14
start_val[2] => count.DATAB
start_val[3] => Add0.IN13
start_val[3] => count.DATAB
start_val[4] => Add0.IN12
start_val[4] => count.DATAB
start_val[5] => Add0.IN11
start_val[5] => count.DATAB
start_val[6] => Add0.IN10
start_val[6] => count.DATAB
start_val[7] => Add0.IN9
start_val[7] => count.DATAB
inc => count.OUTPUTSELECT
inc => count.OUTPUTSELECT
inc => count.OUTPUTSELECT
inc => count.OUTPUTSELECT
inc => count.OUTPUTSELECT
inc => count.OUTPUTSELECT
inc => count.OUTPUTSELECT
inc => count.OUTPUTSELECT
inc => always0.IN0
enable => always0.IN1
enable => count.OUTPUTSELECT
enable => count.OUTPUTSELECT
enable => count.OUTPUTSELECT
enable => count.OUTPUTSELECT
enable => count.OUTPUTSELECT
enable => count.OUTPUTSELECT
enable => count.OUTPUTSELECT
enable => count.OUTPUTSELECT
clk => count[0]~reg0.CLK
clk => count[1]~reg0.CLK
clk => count[2]~reg0.CLK
clk => count[3]~reg0.CLK
clk => count[4]~reg0.CLK
clk => count[5]~reg0.CLK
clk => count[6]~reg0.CLK
clk => count[7]~reg0.CLK
slow_edge => count.OUTPUTSELECT
slow_edge => count.OUTPUTSELECT
slow_edge => count.OUTPUTSELECT
slow_edge => count.OUTPUTSELECT
slow_edge => count.OUTPUTSELECT
slow_edge => count.OUTPUTSELECT
slow_edge => count.OUTPUTSELECT
slow_edge => count.OUTPUTSELECT
reset => count.OUTPUTSELECT
reset => count.OUTPUTSELECT
reset => count.OUTPUTSELECT
reset => count.OUTPUTSELECT
reset => count.OUTPUTSELECT
reset => count.OUTPUTSELECT
reset => count.OUTPUTSELECT
reset => count.OUTPUTSELECT
init_val[0] => count.DATAB
init_val[1] => count.DATAB


|lab8|snakes_and_apples:snake|grid_light:center_grid_row[11].center_grid_col[1].light
green_light_on <= green_light_on.DB_MAX_OUTPUT_PORT_TYPE
head <= head.DB_MAX_OUTPUT_PORT_TYPE
game_over_out <= state_n.DB_MAX_OUTPUT_PORT_TYPE
eating => counter256:counter.inc
eating => always0.IN1
game_over_in => state_n.e_off.OUTPUTSELECT
game_over_in => state_n.e_countdown.OUTPUTSELECT
game_over_in => state_n.e_head.OUTPUTSELECT
game_over_in => state_n.OUTPUTSELECT
left => state_n.OUTPUTSELECT
left => state_n.OUTPUTSELECT
left => state_n.OUTPUTSELECT
left => state_n.OUTPUTSELECT
up => state_n.OUTPUTSELECT
up => state_n.OUTPUTSELECT
up => state_n.OUTPUTSELECT
up => state_n.OUTPUTSELECT
right => state_n.OUTPUTSELECT
right => state_n.OUTPUTSELECT
right => state_n.OUTPUTSELECT
right => state_n.OUTPUTSELECT
down => state_n.OUTPUTSELECT
down => state_n.OUTPUTSELECT
down => state_n.OUTPUTSELECT
down => state_n.OUTPUTSELECT
length[0] => counter256:counter.start_val[0]
length[1] => counter256:counter.start_val[1]
length[2] => counter256:counter.start_val[2]
length[3] => counter256:counter.start_val[3]
length[4] => counter256:counter.start_val[4]
length[5] => counter256:counter.start_val[5]
length[6] => counter256:counter.start_val[6]
length[7] => counter256:counter.start_val[7]
dir[0] => Mux0.IN5
dir[0] => Mux1.IN5
dir[0] => Mux2.IN5
dir[0] => Mux3.IN5
dir[1] => Mux0.IN4
dir[1] => Mux1.IN4
dir[1] => Mux2.IN4
dir[1] => Mux3.IN4
clk => counter256:counter.clk
clk => state_r~1.DATAIN
slow_edge => counter256:counter.slow_edge
slow_edge => state_r.OUTPUTSELECT
slow_edge => state_r.OUTPUTSELECT
slow_edge => state_r.OUTPUTSELECT
slow_edge => state_r.OUTPUTSELECT
reset => counter256:counter.reset
reset => state_r.OUTPUTSELECT
reset => state_r.OUTPUTSELECT
reset => state_r.OUTPUTSELECT
reset => state_r.OUTPUTSELECT
light_type[0] => counter256:counter.init_val[0]
light_type[0] => Equal1.IN1
light_type[0] => Equal2.IN1
light_type[1] => counter256:counter.init_val[1]
light_type[1] => Equal1.IN0
light_type[1] => Equal2.IN0


|lab8|snakes_and_apples:snake|grid_light:center_grid_row[11].center_grid_col[1].light|counter256:counter
count[0] <= count[0]~reg0.DB_MAX_OUTPUT_PORT_TYPE
count[1] <= count[1]~reg0.DB_MAX_OUTPUT_PORT_TYPE
count[2] <= count[2]~reg0.DB_MAX_OUTPUT_PORT_TYPE
count[3] <= count[3]~reg0.DB_MAX_OUTPUT_PORT_TYPE
count[4] <= count[4]~reg0.DB_MAX_OUTPUT_PORT_TYPE
count[5] <= count[5]~reg0.DB_MAX_OUTPUT_PORT_TYPE
count[6] <= count[6]~reg0.DB_MAX_OUTPUT_PORT_TYPE
count[7] <= count[7]~reg0.DB_MAX_OUTPUT_PORT_TYPE
start_val[0] => Add0.IN16
start_val[0] => count.DATAB
start_val[1] => Add0.IN15
start_val[1] => count.DATAB
start_val[2] => Add0.IN14
start_val[2] => count.DATAB
start_val[3] => Add0.IN13
start_val[3] => count.DATAB
start_val[4] => Add0.IN12
start_val[4] => count.DATAB
start_val[5] => Add0.IN11
start_val[5] => count.DATAB
start_val[6] => Add0.IN10
start_val[6] => count.DATAB
start_val[7] => Add0.IN9
start_val[7] => count.DATAB
inc => count.OUTPUTSELECT
inc => count.OUTPUTSELECT
inc => count.OUTPUTSELECT
inc => count.OUTPUTSELECT
inc => count.OUTPUTSELECT
inc => count.OUTPUTSELECT
inc => count.OUTPUTSELECT
inc => count.OUTPUTSELECT
inc => always0.IN0
enable => always0.IN1
enable => count.OUTPUTSELECT
enable => count.OUTPUTSELECT
enable => count.OUTPUTSELECT
enable => count.OUTPUTSELECT
enable => count.OUTPUTSELECT
enable => count.OUTPUTSELECT
enable => count.OUTPUTSELECT
enable => count.OUTPUTSELECT
clk => count[0]~reg0.CLK
clk => count[1]~reg0.CLK
clk => count[2]~reg0.CLK
clk => count[3]~reg0.CLK
clk => count[4]~reg0.CLK
clk => count[5]~reg0.CLK
clk => count[6]~reg0.CLK
clk => count[7]~reg0.CLK
slow_edge => count.OUTPUTSELECT
slow_edge => count.OUTPUTSELECT
slow_edge => count.OUTPUTSELECT
slow_edge => count.OUTPUTSELECT
slow_edge => count.OUTPUTSELECT
slow_edge => count.OUTPUTSELECT
slow_edge => count.OUTPUTSELECT
slow_edge => count.OUTPUTSELECT
reset => count.OUTPUTSELECT
reset => count.OUTPUTSELECT
reset => count.OUTPUTSELECT
reset => count.OUTPUTSELECT
reset => count.OUTPUTSELECT
reset => count.OUTPUTSELECT
reset => count.OUTPUTSELECT
reset => count.OUTPUTSELECT
init_val[0] => count.DATAB
init_val[1] => count.DATAB


|lab8|snakes_and_apples:snake|grid_light:center_grid_row[11].center_grid_col[2].light
green_light_on <= green_light_on.DB_MAX_OUTPUT_PORT_TYPE
head <= head.DB_MAX_OUTPUT_PORT_TYPE
game_over_out <= state_n.DB_MAX_OUTPUT_PORT_TYPE
eating => counter256:counter.inc
eating => always0.IN1
game_over_in => state_n.e_off.OUTPUTSELECT
game_over_in => state_n.e_countdown.OUTPUTSELECT
game_over_in => state_n.e_head.OUTPUTSELECT
game_over_in => state_n.OUTPUTSELECT
left => state_n.OUTPUTSELECT
left => state_n.OUTPUTSELECT
left => state_n.OUTPUTSELECT
left => state_n.OUTPUTSELECT
up => state_n.OUTPUTSELECT
up => state_n.OUTPUTSELECT
up => state_n.OUTPUTSELECT
up => state_n.OUTPUTSELECT
right => state_n.OUTPUTSELECT
right => state_n.OUTPUTSELECT
right => state_n.OUTPUTSELECT
right => state_n.OUTPUTSELECT
down => state_n.OUTPUTSELECT
down => state_n.OUTPUTSELECT
down => state_n.OUTPUTSELECT
down => state_n.OUTPUTSELECT
length[0] => counter256:counter.start_val[0]
length[1] => counter256:counter.start_val[1]
length[2] => counter256:counter.start_val[2]
length[3] => counter256:counter.start_val[3]
length[4] => counter256:counter.start_val[4]
length[5] => counter256:counter.start_val[5]
length[6] => counter256:counter.start_val[6]
length[7] => counter256:counter.start_val[7]
dir[0] => Mux0.IN5
dir[0] => Mux1.IN5
dir[0] => Mux2.IN5
dir[0] => Mux3.IN5
dir[1] => Mux0.IN4
dir[1] => Mux1.IN4
dir[1] => Mux2.IN4
dir[1] => Mux3.IN4
clk => counter256:counter.clk
clk => state_r~1.DATAIN
slow_edge => counter256:counter.slow_edge
slow_edge => state_r.OUTPUTSELECT
slow_edge => state_r.OUTPUTSELECT
slow_edge => state_r.OUTPUTSELECT
slow_edge => state_r.OUTPUTSELECT
reset => counter256:counter.reset
reset => state_r.OUTPUTSELECT
reset => state_r.OUTPUTSELECT
reset => state_r.OUTPUTSELECT
reset => state_r.OUTPUTSELECT
light_type[0] => counter256:counter.init_val[0]
light_type[0] => Equal1.IN1
light_type[0] => Equal2.IN1
light_type[1] => counter256:counter.init_val[1]
light_type[1] => Equal1.IN0
light_type[1] => Equal2.IN0


|lab8|snakes_and_apples:snake|grid_light:center_grid_row[11].center_grid_col[2].light|counter256:counter
count[0] <= count[0]~reg0.DB_MAX_OUTPUT_PORT_TYPE
count[1] <= count[1]~reg0.DB_MAX_OUTPUT_PORT_TYPE
count[2] <= count[2]~reg0.DB_MAX_OUTPUT_PORT_TYPE
count[3] <= count[3]~reg0.DB_MAX_OUTPUT_PORT_TYPE
count[4] <= count[4]~reg0.DB_MAX_OUTPUT_PORT_TYPE
count[5] <= count[5]~reg0.DB_MAX_OUTPUT_PORT_TYPE
count[6] <= count[6]~reg0.DB_MAX_OUTPUT_PORT_TYPE
count[7] <= count[7]~reg0.DB_MAX_OUTPUT_PORT_TYPE
start_val[0] => Add0.IN16
start_val[0] => count.DATAB
start_val[1] => Add0.IN15
start_val[1] => count.DATAB
start_val[2] => Add0.IN14
start_val[2] => count.DATAB
start_val[3] => Add0.IN13
start_val[3] => count.DATAB
start_val[4] => Add0.IN12
start_val[4] => count.DATAB
start_val[5] => Add0.IN11
start_val[5] => count.DATAB
start_val[6] => Add0.IN10
start_val[6] => count.DATAB
start_val[7] => Add0.IN9
start_val[7] => count.DATAB
inc => count.OUTPUTSELECT
inc => count.OUTPUTSELECT
inc => count.OUTPUTSELECT
inc => count.OUTPUTSELECT
inc => count.OUTPUTSELECT
inc => count.OUTPUTSELECT
inc => count.OUTPUTSELECT
inc => count.OUTPUTSELECT
inc => always0.IN0
enable => always0.IN1
enable => count.OUTPUTSELECT
enable => count.OUTPUTSELECT
enable => count.OUTPUTSELECT
enable => count.OUTPUTSELECT
enable => count.OUTPUTSELECT
enable => count.OUTPUTSELECT
enable => count.OUTPUTSELECT
enable => count.OUTPUTSELECT
clk => count[0]~reg0.CLK
clk => count[1]~reg0.CLK
clk => count[2]~reg0.CLK
clk => count[3]~reg0.CLK
clk => count[4]~reg0.CLK
clk => count[5]~reg0.CLK
clk => count[6]~reg0.CLK
clk => count[7]~reg0.CLK
slow_edge => count.OUTPUTSELECT
slow_edge => count.OUTPUTSELECT
slow_edge => count.OUTPUTSELECT
slow_edge => count.OUTPUTSELECT
slow_edge => count.OUTPUTSELECT
slow_edge => count.OUTPUTSELECT
slow_edge => count.OUTPUTSELECT
slow_edge => count.OUTPUTSELECT
reset => count.OUTPUTSELECT
reset => count.OUTPUTSELECT
reset => count.OUTPUTSELECT
reset => count.OUTPUTSELECT
reset => count.OUTPUTSELECT
reset => count.OUTPUTSELECT
reset => count.OUTPUTSELECT
reset => count.OUTPUTSELECT
init_val[0] => count.DATAB
init_val[1] => count.DATAB


|lab8|snakes_and_apples:snake|grid_light:center_grid_row[11].center_grid_col[3].light
green_light_on <= green_light_on.DB_MAX_OUTPUT_PORT_TYPE
head <= head.DB_MAX_OUTPUT_PORT_TYPE
game_over_out <= state_n.DB_MAX_OUTPUT_PORT_TYPE
eating => counter256:counter.inc
eating => always0.IN1
game_over_in => state_n.e_off.OUTPUTSELECT
game_over_in => state_n.e_countdown.OUTPUTSELECT
game_over_in => state_n.e_head.OUTPUTSELECT
game_over_in => state_n.OUTPUTSELECT
left => state_n.OUTPUTSELECT
left => state_n.OUTPUTSELECT
left => state_n.OUTPUTSELECT
left => state_n.OUTPUTSELECT
up => state_n.OUTPUTSELECT
up => state_n.OUTPUTSELECT
up => state_n.OUTPUTSELECT
up => state_n.OUTPUTSELECT
right => state_n.OUTPUTSELECT
right => state_n.OUTPUTSELECT
right => state_n.OUTPUTSELECT
right => state_n.OUTPUTSELECT
down => state_n.OUTPUTSELECT
down => state_n.OUTPUTSELECT
down => state_n.OUTPUTSELECT
down => state_n.OUTPUTSELECT
length[0] => counter256:counter.start_val[0]
length[1] => counter256:counter.start_val[1]
length[2] => counter256:counter.start_val[2]
length[3] => counter256:counter.start_val[3]
length[4] => counter256:counter.start_val[4]
length[5] => counter256:counter.start_val[5]
length[6] => counter256:counter.start_val[6]
length[7] => counter256:counter.start_val[7]
dir[0] => Mux0.IN5
dir[0] => Mux1.IN5
dir[0] => Mux2.IN5
dir[0] => Mux3.IN5
dir[1] => Mux0.IN4
dir[1] => Mux1.IN4
dir[1] => Mux2.IN4
dir[1] => Mux3.IN4
clk => counter256:counter.clk
clk => state_r~1.DATAIN
slow_edge => counter256:counter.slow_edge
slow_edge => state_r.OUTPUTSELECT
slow_edge => state_r.OUTPUTSELECT
slow_edge => state_r.OUTPUTSELECT
slow_edge => state_r.OUTPUTSELECT
reset => counter256:counter.reset
reset => state_r.OUTPUTSELECT
reset => state_r.OUTPUTSELECT
reset => state_r.OUTPUTSELECT
reset => state_r.OUTPUTSELECT
light_type[0] => counter256:counter.init_val[0]
light_type[0] => Equal1.IN1
light_type[0] => Equal2.IN1
light_type[1] => counter256:counter.init_val[1]
light_type[1] => Equal1.IN0
light_type[1] => Equal2.IN0


|lab8|snakes_and_apples:snake|grid_light:center_grid_row[11].center_grid_col[3].light|counter256:counter
count[0] <= count[0]~reg0.DB_MAX_OUTPUT_PORT_TYPE
count[1] <= count[1]~reg0.DB_MAX_OUTPUT_PORT_TYPE
count[2] <= count[2]~reg0.DB_MAX_OUTPUT_PORT_TYPE
count[3] <= count[3]~reg0.DB_MAX_OUTPUT_PORT_TYPE
count[4] <= count[4]~reg0.DB_MAX_OUTPUT_PORT_TYPE
count[5] <= count[5]~reg0.DB_MAX_OUTPUT_PORT_TYPE
count[6] <= count[6]~reg0.DB_MAX_OUTPUT_PORT_TYPE
count[7] <= count[7]~reg0.DB_MAX_OUTPUT_PORT_TYPE
start_val[0] => Add0.IN16
start_val[0] => count.DATAB
start_val[1] => Add0.IN15
start_val[1] => count.DATAB
start_val[2] => Add0.IN14
start_val[2] => count.DATAB
start_val[3] => Add0.IN13
start_val[3] => count.DATAB
start_val[4] => Add0.IN12
start_val[4] => count.DATAB
start_val[5] => Add0.IN11
start_val[5] => count.DATAB
start_val[6] => Add0.IN10
start_val[6] => count.DATAB
start_val[7] => Add0.IN9
start_val[7] => count.DATAB
inc => count.OUTPUTSELECT
inc => count.OUTPUTSELECT
inc => count.OUTPUTSELECT
inc => count.OUTPUTSELECT
inc => count.OUTPUTSELECT
inc => count.OUTPUTSELECT
inc => count.OUTPUTSELECT
inc => count.OUTPUTSELECT
inc => always0.IN0
enable => always0.IN1
enable => count.OUTPUTSELECT
enable => count.OUTPUTSELECT
enable => count.OUTPUTSELECT
enable => count.OUTPUTSELECT
enable => count.OUTPUTSELECT
enable => count.OUTPUTSELECT
enable => count.OUTPUTSELECT
enable => count.OUTPUTSELECT
clk => count[0]~reg0.CLK
clk => count[1]~reg0.CLK
clk => count[2]~reg0.CLK
clk => count[3]~reg0.CLK
clk => count[4]~reg0.CLK
clk => count[5]~reg0.CLK
clk => count[6]~reg0.CLK
clk => count[7]~reg0.CLK
slow_edge => count.OUTPUTSELECT
slow_edge => count.OUTPUTSELECT
slow_edge => count.OUTPUTSELECT
slow_edge => count.OUTPUTSELECT
slow_edge => count.OUTPUTSELECT
slow_edge => count.OUTPUTSELECT
slow_edge => count.OUTPUTSELECT
slow_edge => count.OUTPUTSELECT
reset => count.OUTPUTSELECT
reset => count.OUTPUTSELECT
reset => count.OUTPUTSELECT
reset => count.OUTPUTSELECT
reset => count.OUTPUTSELECT
reset => count.OUTPUTSELECT
reset => count.OUTPUTSELECT
reset => count.OUTPUTSELECT
init_val[0] => count.DATAB
init_val[1] => count.DATAB


|lab8|snakes_and_apples:snake|grid_light:center_grid_row[11].center_grid_col[4].light
green_light_on <= green_light_on.DB_MAX_OUTPUT_PORT_TYPE
head <= head.DB_MAX_OUTPUT_PORT_TYPE
game_over_out <= state_n.DB_MAX_OUTPUT_PORT_TYPE
eating => counter256:counter.inc
eating => always0.IN1
game_over_in => state_n.e_off.OUTPUTSELECT
game_over_in => state_n.e_countdown.OUTPUTSELECT
game_over_in => state_n.e_head.OUTPUTSELECT
game_over_in => state_n.OUTPUTSELECT
left => state_n.OUTPUTSELECT
left => state_n.OUTPUTSELECT
left => state_n.OUTPUTSELECT
left => state_n.OUTPUTSELECT
up => state_n.OUTPUTSELECT
up => state_n.OUTPUTSELECT
up => state_n.OUTPUTSELECT
up => state_n.OUTPUTSELECT
right => state_n.OUTPUTSELECT
right => state_n.OUTPUTSELECT
right => state_n.OUTPUTSELECT
right => state_n.OUTPUTSELECT
down => state_n.OUTPUTSELECT
down => state_n.OUTPUTSELECT
down => state_n.OUTPUTSELECT
down => state_n.OUTPUTSELECT
length[0] => counter256:counter.start_val[0]
length[1] => counter256:counter.start_val[1]
length[2] => counter256:counter.start_val[2]
length[3] => counter256:counter.start_val[3]
length[4] => counter256:counter.start_val[4]
length[5] => counter256:counter.start_val[5]
length[6] => counter256:counter.start_val[6]
length[7] => counter256:counter.start_val[7]
dir[0] => Mux0.IN5
dir[0] => Mux1.IN5
dir[0] => Mux2.IN5
dir[0] => Mux3.IN5
dir[1] => Mux0.IN4
dir[1] => Mux1.IN4
dir[1] => Mux2.IN4
dir[1] => Mux3.IN4
clk => counter256:counter.clk
clk => state_r~1.DATAIN
slow_edge => counter256:counter.slow_edge
slow_edge => state_r.OUTPUTSELECT
slow_edge => state_r.OUTPUTSELECT
slow_edge => state_r.OUTPUTSELECT
slow_edge => state_r.OUTPUTSELECT
reset => counter256:counter.reset
reset => state_r.OUTPUTSELECT
reset => state_r.OUTPUTSELECT
reset => state_r.OUTPUTSELECT
reset => state_r.OUTPUTSELECT
light_type[0] => counter256:counter.init_val[0]
light_type[0] => Equal1.IN1
light_type[0] => Equal2.IN1
light_type[1] => counter256:counter.init_val[1]
light_type[1] => Equal1.IN0
light_type[1] => Equal2.IN0


|lab8|snakes_and_apples:snake|grid_light:center_grid_row[11].center_grid_col[4].light|counter256:counter
count[0] <= count[0]~reg0.DB_MAX_OUTPUT_PORT_TYPE
count[1] <= count[1]~reg0.DB_MAX_OUTPUT_PORT_TYPE
count[2] <= count[2]~reg0.DB_MAX_OUTPUT_PORT_TYPE
count[3] <= count[3]~reg0.DB_MAX_OUTPUT_PORT_TYPE
count[4] <= count[4]~reg0.DB_MAX_OUTPUT_PORT_TYPE
count[5] <= count[5]~reg0.DB_MAX_OUTPUT_PORT_TYPE
count[6] <= count[6]~reg0.DB_MAX_OUTPUT_PORT_TYPE
count[7] <= count[7]~reg0.DB_MAX_OUTPUT_PORT_TYPE
start_val[0] => Add0.IN16
start_val[0] => count.DATAB
start_val[1] => Add0.IN15
start_val[1] => count.DATAB
start_val[2] => Add0.IN14
start_val[2] => count.DATAB
start_val[3] => Add0.IN13
start_val[3] => count.DATAB
start_val[4] => Add0.IN12
start_val[4] => count.DATAB
start_val[5] => Add0.IN11
start_val[5] => count.DATAB
start_val[6] => Add0.IN10
start_val[6] => count.DATAB
start_val[7] => Add0.IN9
start_val[7] => count.DATAB
inc => count.OUTPUTSELECT
inc => count.OUTPUTSELECT
inc => count.OUTPUTSELECT
inc => count.OUTPUTSELECT
inc => count.OUTPUTSELECT
inc => count.OUTPUTSELECT
inc => count.OUTPUTSELECT
inc => count.OUTPUTSELECT
inc => always0.IN0
enable => always0.IN1
enable => count.OUTPUTSELECT
enable => count.OUTPUTSELECT
enable => count.OUTPUTSELECT
enable => count.OUTPUTSELECT
enable => count.OUTPUTSELECT
enable => count.OUTPUTSELECT
enable => count.OUTPUTSELECT
enable => count.OUTPUTSELECT
clk => count[0]~reg0.CLK
clk => count[1]~reg0.CLK
clk => count[2]~reg0.CLK
clk => count[3]~reg0.CLK
clk => count[4]~reg0.CLK
clk => count[5]~reg0.CLK
clk => count[6]~reg0.CLK
clk => count[7]~reg0.CLK
slow_edge => count.OUTPUTSELECT
slow_edge => count.OUTPUTSELECT
slow_edge => count.OUTPUTSELECT
slow_edge => count.OUTPUTSELECT
slow_edge => count.OUTPUTSELECT
slow_edge => count.OUTPUTSELECT
slow_edge => count.OUTPUTSELECT
slow_edge => count.OUTPUTSELECT
reset => count.OUTPUTSELECT
reset => count.OUTPUTSELECT
reset => count.OUTPUTSELECT
reset => count.OUTPUTSELECT
reset => count.OUTPUTSELECT
reset => count.OUTPUTSELECT
reset => count.OUTPUTSELECT
reset => count.OUTPUTSELECT
init_val[0] => count.DATAB
init_val[1] => count.DATAB


|lab8|snakes_and_apples:snake|grid_light:center_grid_row[11].center_grid_col[5].light
green_light_on <= green_light_on.DB_MAX_OUTPUT_PORT_TYPE
head <= head.DB_MAX_OUTPUT_PORT_TYPE
game_over_out <= state_n.DB_MAX_OUTPUT_PORT_TYPE
eating => counter256:counter.inc
eating => always0.IN1
game_over_in => state_n.e_off.OUTPUTSELECT
game_over_in => state_n.e_countdown.OUTPUTSELECT
game_over_in => state_n.e_head.OUTPUTSELECT
game_over_in => state_n.OUTPUTSELECT
left => state_n.OUTPUTSELECT
left => state_n.OUTPUTSELECT
left => state_n.OUTPUTSELECT
left => state_n.OUTPUTSELECT
up => state_n.OUTPUTSELECT
up => state_n.OUTPUTSELECT
up => state_n.OUTPUTSELECT
up => state_n.OUTPUTSELECT
right => state_n.OUTPUTSELECT
right => state_n.OUTPUTSELECT
right => state_n.OUTPUTSELECT
right => state_n.OUTPUTSELECT
down => state_n.OUTPUTSELECT
down => state_n.OUTPUTSELECT
down => state_n.OUTPUTSELECT
down => state_n.OUTPUTSELECT
length[0] => counter256:counter.start_val[0]
length[1] => counter256:counter.start_val[1]
length[2] => counter256:counter.start_val[2]
length[3] => counter256:counter.start_val[3]
length[4] => counter256:counter.start_val[4]
length[5] => counter256:counter.start_val[5]
length[6] => counter256:counter.start_val[6]
length[7] => counter256:counter.start_val[7]
dir[0] => Mux0.IN5
dir[0] => Mux1.IN5
dir[0] => Mux2.IN5
dir[0] => Mux3.IN5
dir[1] => Mux0.IN4
dir[1] => Mux1.IN4
dir[1] => Mux2.IN4
dir[1] => Mux3.IN4
clk => counter256:counter.clk
clk => state_r~1.DATAIN
slow_edge => counter256:counter.slow_edge
slow_edge => state_r.OUTPUTSELECT
slow_edge => state_r.OUTPUTSELECT
slow_edge => state_r.OUTPUTSELECT
slow_edge => state_r.OUTPUTSELECT
reset => counter256:counter.reset
reset => state_r.OUTPUTSELECT
reset => state_r.OUTPUTSELECT
reset => state_r.OUTPUTSELECT
reset => state_r.OUTPUTSELECT
light_type[0] => counter256:counter.init_val[0]
light_type[0] => Equal1.IN1
light_type[0] => Equal2.IN1
light_type[1] => counter256:counter.init_val[1]
light_type[1] => Equal1.IN0
light_type[1] => Equal2.IN0


|lab8|snakes_and_apples:snake|grid_light:center_grid_row[11].center_grid_col[5].light|counter256:counter
count[0] <= count[0]~reg0.DB_MAX_OUTPUT_PORT_TYPE
count[1] <= count[1]~reg0.DB_MAX_OUTPUT_PORT_TYPE
count[2] <= count[2]~reg0.DB_MAX_OUTPUT_PORT_TYPE
count[3] <= count[3]~reg0.DB_MAX_OUTPUT_PORT_TYPE
count[4] <= count[4]~reg0.DB_MAX_OUTPUT_PORT_TYPE
count[5] <= count[5]~reg0.DB_MAX_OUTPUT_PORT_TYPE
count[6] <= count[6]~reg0.DB_MAX_OUTPUT_PORT_TYPE
count[7] <= count[7]~reg0.DB_MAX_OUTPUT_PORT_TYPE
start_val[0] => Add0.IN16
start_val[0] => count.DATAB
start_val[1] => Add0.IN15
start_val[1] => count.DATAB
start_val[2] => Add0.IN14
start_val[2] => count.DATAB
start_val[3] => Add0.IN13
start_val[3] => count.DATAB
start_val[4] => Add0.IN12
start_val[4] => count.DATAB
start_val[5] => Add0.IN11
start_val[5] => count.DATAB
start_val[6] => Add0.IN10
start_val[6] => count.DATAB
start_val[7] => Add0.IN9
start_val[7] => count.DATAB
inc => count.OUTPUTSELECT
inc => count.OUTPUTSELECT
inc => count.OUTPUTSELECT
inc => count.OUTPUTSELECT
inc => count.OUTPUTSELECT
inc => count.OUTPUTSELECT
inc => count.OUTPUTSELECT
inc => count.OUTPUTSELECT
inc => always0.IN0
enable => always0.IN1
enable => count.OUTPUTSELECT
enable => count.OUTPUTSELECT
enable => count.OUTPUTSELECT
enable => count.OUTPUTSELECT
enable => count.OUTPUTSELECT
enable => count.OUTPUTSELECT
enable => count.OUTPUTSELECT
enable => count.OUTPUTSELECT
clk => count[0]~reg0.CLK
clk => count[1]~reg0.CLK
clk => count[2]~reg0.CLK
clk => count[3]~reg0.CLK
clk => count[4]~reg0.CLK
clk => count[5]~reg0.CLK
clk => count[6]~reg0.CLK
clk => count[7]~reg0.CLK
slow_edge => count.OUTPUTSELECT
slow_edge => count.OUTPUTSELECT
slow_edge => count.OUTPUTSELECT
slow_edge => count.OUTPUTSELECT
slow_edge => count.OUTPUTSELECT
slow_edge => count.OUTPUTSELECT
slow_edge => count.OUTPUTSELECT
slow_edge => count.OUTPUTSELECT
reset => count.OUTPUTSELECT
reset => count.OUTPUTSELECT
reset => count.OUTPUTSELECT
reset => count.OUTPUTSELECT
reset => count.OUTPUTSELECT
reset => count.OUTPUTSELECT
reset => count.OUTPUTSELECT
reset => count.OUTPUTSELECT
init_val[0] => count.DATAB
init_val[1] => count.DATAB


|lab8|snakes_and_apples:snake|grid_light:center_grid_row[11].center_grid_col[6].light
green_light_on <= green_light_on.DB_MAX_OUTPUT_PORT_TYPE
head <= head.DB_MAX_OUTPUT_PORT_TYPE
game_over_out <= state_n.DB_MAX_OUTPUT_PORT_TYPE
eating => counter256:counter.inc
eating => always0.IN1
game_over_in => state_n.e_off.OUTPUTSELECT
game_over_in => state_n.e_countdown.OUTPUTSELECT
game_over_in => state_n.e_head.OUTPUTSELECT
game_over_in => state_n.OUTPUTSELECT
left => state_n.OUTPUTSELECT
left => state_n.OUTPUTSELECT
left => state_n.OUTPUTSELECT
left => state_n.OUTPUTSELECT
up => state_n.OUTPUTSELECT
up => state_n.OUTPUTSELECT
up => state_n.OUTPUTSELECT
up => state_n.OUTPUTSELECT
right => state_n.OUTPUTSELECT
right => state_n.OUTPUTSELECT
right => state_n.OUTPUTSELECT
right => state_n.OUTPUTSELECT
down => state_n.OUTPUTSELECT
down => state_n.OUTPUTSELECT
down => state_n.OUTPUTSELECT
down => state_n.OUTPUTSELECT
length[0] => counter256:counter.start_val[0]
length[1] => counter256:counter.start_val[1]
length[2] => counter256:counter.start_val[2]
length[3] => counter256:counter.start_val[3]
length[4] => counter256:counter.start_val[4]
length[5] => counter256:counter.start_val[5]
length[6] => counter256:counter.start_val[6]
length[7] => counter256:counter.start_val[7]
dir[0] => Mux0.IN5
dir[0] => Mux1.IN5
dir[0] => Mux2.IN5
dir[0] => Mux3.IN5
dir[1] => Mux0.IN4
dir[1] => Mux1.IN4
dir[1] => Mux2.IN4
dir[1] => Mux3.IN4
clk => counter256:counter.clk
clk => state_r~1.DATAIN
slow_edge => counter256:counter.slow_edge
slow_edge => state_r.OUTPUTSELECT
slow_edge => state_r.OUTPUTSELECT
slow_edge => state_r.OUTPUTSELECT
slow_edge => state_r.OUTPUTSELECT
reset => counter256:counter.reset
reset => state_r.OUTPUTSELECT
reset => state_r.OUTPUTSELECT
reset => state_r.OUTPUTSELECT
reset => state_r.OUTPUTSELECT
light_type[0] => counter256:counter.init_val[0]
light_type[0] => Equal1.IN1
light_type[0] => Equal2.IN1
light_type[1] => counter256:counter.init_val[1]
light_type[1] => Equal1.IN0
light_type[1] => Equal2.IN0


|lab8|snakes_and_apples:snake|grid_light:center_grid_row[11].center_grid_col[6].light|counter256:counter
count[0] <= count[0]~reg0.DB_MAX_OUTPUT_PORT_TYPE
count[1] <= count[1]~reg0.DB_MAX_OUTPUT_PORT_TYPE
count[2] <= count[2]~reg0.DB_MAX_OUTPUT_PORT_TYPE
count[3] <= count[3]~reg0.DB_MAX_OUTPUT_PORT_TYPE
count[4] <= count[4]~reg0.DB_MAX_OUTPUT_PORT_TYPE
count[5] <= count[5]~reg0.DB_MAX_OUTPUT_PORT_TYPE
count[6] <= count[6]~reg0.DB_MAX_OUTPUT_PORT_TYPE
count[7] <= count[7]~reg0.DB_MAX_OUTPUT_PORT_TYPE
start_val[0] => Add0.IN16
start_val[0] => count.DATAB
start_val[1] => Add0.IN15
start_val[1] => count.DATAB
start_val[2] => Add0.IN14
start_val[2] => count.DATAB
start_val[3] => Add0.IN13
start_val[3] => count.DATAB
start_val[4] => Add0.IN12
start_val[4] => count.DATAB
start_val[5] => Add0.IN11
start_val[5] => count.DATAB
start_val[6] => Add0.IN10
start_val[6] => count.DATAB
start_val[7] => Add0.IN9
start_val[7] => count.DATAB
inc => count.OUTPUTSELECT
inc => count.OUTPUTSELECT
inc => count.OUTPUTSELECT
inc => count.OUTPUTSELECT
inc => count.OUTPUTSELECT
inc => count.OUTPUTSELECT
inc => count.OUTPUTSELECT
inc => count.OUTPUTSELECT
inc => always0.IN0
enable => always0.IN1
enable => count.OUTPUTSELECT
enable => count.OUTPUTSELECT
enable => count.OUTPUTSELECT
enable => count.OUTPUTSELECT
enable => count.OUTPUTSELECT
enable => count.OUTPUTSELECT
enable => count.OUTPUTSELECT
enable => count.OUTPUTSELECT
clk => count[0]~reg0.CLK
clk => count[1]~reg0.CLK
clk => count[2]~reg0.CLK
clk => count[3]~reg0.CLK
clk => count[4]~reg0.CLK
clk => count[5]~reg0.CLK
clk => count[6]~reg0.CLK
clk => count[7]~reg0.CLK
slow_edge => count.OUTPUTSELECT
slow_edge => count.OUTPUTSELECT
slow_edge => count.OUTPUTSELECT
slow_edge => count.OUTPUTSELECT
slow_edge => count.OUTPUTSELECT
slow_edge => count.OUTPUTSELECT
slow_edge => count.OUTPUTSELECT
slow_edge => count.OUTPUTSELECT
reset => count.OUTPUTSELECT
reset => count.OUTPUTSELECT
reset => count.OUTPUTSELECT
reset => count.OUTPUTSELECT
reset => count.OUTPUTSELECT
reset => count.OUTPUTSELECT
reset => count.OUTPUTSELECT
reset => count.OUTPUTSELECT
init_val[0] => count.DATAB
init_val[1] => count.DATAB


|lab8|snakes_and_apples:snake|grid_light:center_grid_row[11].center_grid_col[7].light
green_light_on <= green_light_on.DB_MAX_OUTPUT_PORT_TYPE
head <= head.DB_MAX_OUTPUT_PORT_TYPE
game_over_out <= state_n.DB_MAX_OUTPUT_PORT_TYPE
eating => counter256:counter.inc
eating => always0.IN1
game_over_in => state_n.e_off.OUTPUTSELECT
game_over_in => state_n.e_countdown.OUTPUTSELECT
game_over_in => state_n.e_head.OUTPUTSELECT
game_over_in => state_n.OUTPUTSELECT
left => state_n.OUTPUTSELECT
left => state_n.OUTPUTSELECT
left => state_n.OUTPUTSELECT
left => state_n.OUTPUTSELECT
up => state_n.OUTPUTSELECT
up => state_n.OUTPUTSELECT
up => state_n.OUTPUTSELECT
up => state_n.OUTPUTSELECT
right => state_n.OUTPUTSELECT
right => state_n.OUTPUTSELECT
right => state_n.OUTPUTSELECT
right => state_n.OUTPUTSELECT
down => state_n.OUTPUTSELECT
down => state_n.OUTPUTSELECT
down => state_n.OUTPUTSELECT
down => state_n.OUTPUTSELECT
length[0] => counter256:counter.start_val[0]
length[1] => counter256:counter.start_val[1]
length[2] => counter256:counter.start_val[2]
length[3] => counter256:counter.start_val[3]
length[4] => counter256:counter.start_val[4]
length[5] => counter256:counter.start_val[5]
length[6] => counter256:counter.start_val[6]
length[7] => counter256:counter.start_val[7]
dir[0] => Mux0.IN5
dir[0] => Mux1.IN5
dir[0] => Mux2.IN5
dir[0] => Mux3.IN5
dir[1] => Mux0.IN4
dir[1] => Mux1.IN4
dir[1] => Mux2.IN4
dir[1] => Mux3.IN4
clk => counter256:counter.clk
clk => state_r~1.DATAIN
slow_edge => counter256:counter.slow_edge
slow_edge => state_r.OUTPUTSELECT
slow_edge => state_r.OUTPUTSELECT
slow_edge => state_r.OUTPUTSELECT
slow_edge => state_r.OUTPUTSELECT
reset => counter256:counter.reset
reset => state_r.OUTPUTSELECT
reset => state_r.OUTPUTSELECT
reset => state_r.OUTPUTSELECT
reset => state_r.OUTPUTSELECT
light_type[0] => counter256:counter.init_val[0]
light_type[0] => Equal1.IN1
light_type[0] => Equal2.IN1
light_type[1] => counter256:counter.init_val[1]
light_type[1] => Equal1.IN0
light_type[1] => Equal2.IN0


|lab8|snakes_and_apples:snake|grid_light:center_grid_row[11].center_grid_col[7].light|counter256:counter
count[0] <= count[0]~reg0.DB_MAX_OUTPUT_PORT_TYPE
count[1] <= count[1]~reg0.DB_MAX_OUTPUT_PORT_TYPE
count[2] <= count[2]~reg0.DB_MAX_OUTPUT_PORT_TYPE
count[3] <= count[3]~reg0.DB_MAX_OUTPUT_PORT_TYPE
count[4] <= count[4]~reg0.DB_MAX_OUTPUT_PORT_TYPE
count[5] <= count[5]~reg0.DB_MAX_OUTPUT_PORT_TYPE
count[6] <= count[6]~reg0.DB_MAX_OUTPUT_PORT_TYPE
count[7] <= count[7]~reg0.DB_MAX_OUTPUT_PORT_TYPE
start_val[0] => Add0.IN16
start_val[0] => count.DATAB
start_val[1] => Add0.IN15
start_val[1] => count.DATAB
start_val[2] => Add0.IN14
start_val[2] => count.DATAB
start_val[3] => Add0.IN13
start_val[3] => count.DATAB
start_val[4] => Add0.IN12
start_val[4] => count.DATAB
start_val[5] => Add0.IN11
start_val[5] => count.DATAB
start_val[6] => Add0.IN10
start_val[6] => count.DATAB
start_val[7] => Add0.IN9
start_val[7] => count.DATAB
inc => count.OUTPUTSELECT
inc => count.OUTPUTSELECT
inc => count.OUTPUTSELECT
inc => count.OUTPUTSELECT
inc => count.OUTPUTSELECT
inc => count.OUTPUTSELECT
inc => count.OUTPUTSELECT
inc => count.OUTPUTSELECT
inc => always0.IN0
enable => always0.IN1
enable => count.OUTPUTSELECT
enable => count.OUTPUTSELECT
enable => count.OUTPUTSELECT
enable => count.OUTPUTSELECT
enable => count.OUTPUTSELECT
enable => count.OUTPUTSELECT
enable => count.OUTPUTSELECT
enable => count.OUTPUTSELECT
clk => count[0]~reg0.CLK
clk => count[1]~reg0.CLK
clk => count[2]~reg0.CLK
clk => count[3]~reg0.CLK
clk => count[4]~reg0.CLK
clk => count[5]~reg0.CLK
clk => count[6]~reg0.CLK
clk => count[7]~reg0.CLK
slow_edge => count.OUTPUTSELECT
slow_edge => count.OUTPUTSELECT
slow_edge => count.OUTPUTSELECT
slow_edge => count.OUTPUTSELECT
slow_edge => count.OUTPUTSELECT
slow_edge => count.OUTPUTSELECT
slow_edge => count.OUTPUTSELECT
slow_edge => count.OUTPUTSELECT
reset => count.OUTPUTSELECT
reset => count.OUTPUTSELECT
reset => count.OUTPUTSELECT
reset => count.OUTPUTSELECT
reset => count.OUTPUTSELECT
reset => count.OUTPUTSELECT
reset => count.OUTPUTSELECT
reset => count.OUTPUTSELECT
init_val[0] => count.DATAB
init_val[1] => count.DATAB


|lab8|snakes_and_apples:snake|grid_light:center_grid_row[11].center_grid_col[8].light
green_light_on <= green_light_on.DB_MAX_OUTPUT_PORT_TYPE
head <= head.DB_MAX_OUTPUT_PORT_TYPE
game_over_out <= state_n.DB_MAX_OUTPUT_PORT_TYPE
eating => counter256:counter.inc
eating => always0.IN1
game_over_in => state_n.e_off.OUTPUTSELECT
game_over_in => state_n.e_countdown.OUTPUTSELECT
game_over_in => state_n.e_head.OUTPUTSELECT
game_over_in => state_n.OUTPUTSELECT
left => state_n.OUTPUTSELECT
left => state_n.OUTPUTSELECT
left => state_n.OUTPUTSELECT
left => state_n.OUTPUTSELECT
up => state_n.OUTPUTSELECT
up => state_n.OUTPUTSELECT
up => state_n.OUTPUTSELECT
up => state_n.OUTPUTSELECT
right => state_n.OUTPUTSELECT
right => state_n.OUTPUTSELECT
right => state_n.OUTPUTSELECT
right => state_n.OUTPUTSELECT
down => state_n.OUTPUTSELECT
down => state_n.OUTPUTSELECT
down => state_n.OUTPUTSELECT
down => state_n.OUTPUTSELECT
length[0] => counter256:counter.start_val[0]
length[1] => counter256:counter.start_val[1]
length[2] => counter256:counter.start_val[2]
length[3] => counter256:counter.start_val[3]
length[4] => counter256:counter.start_val[4]
length[5] => counter256:counter.start_val[5]
length[6] => counter256:counter.start_val[6]
length[7] => counter256:counter.start_val[7]
dir[0] => Mux0.IN5
dir[0] => Mux1.IN5
dir[0] => Mux2.IN5
dir[0] => Mux3.IN5
dir[1] => Mux0.IN4
dir[1] => Mux1.IN4
dir[1] => Mux2.IN4
dir[1] => Mux3.IN4
clk => counter256:counter.clk
clk => state_r~1.DATAIN
slow_edge => counter256:counter.slow_edge
slow_edge => state_r.OUTPUTSELECT
slow_edge => state_r.OUTPUTSELECT
slow_edge => state_r.OUTPUTSELECT
slow_edge => state_r.OUTPUTSELECT
reset => counter256:counter.reset
reset => state_r.OUTPUTSELECT
reset => state_r.OUTPUTSELECT
reset => state_r.OUTPUTSELECT
reset => state_r.OUTPUTSELECT
light_type[0] => counter256:counter.init_val[0]
light_type[0] => Equal1.IN1
light_type[0] => Equal2.IN1
light_type[1] => counter256:counter.init_val[1]
light_type[1] => Equal1.IN0
light_type[1] => Equal2.IN0


|lab8|snakes_and_apples:snake|grid_light:center_grid_row[11].center_grid_col[8].light|counter256:counter
count[0] <= count[0]~reg0.DB_MAX_OUTPUT_PORT_TYPE
count[1] <= count[1]~reg0.DB_MAX_OUTPUT_PORT_TYPE
count[2] <= count[2]~reg0.DB_MAX_OUTPUT_PORT_TYPE
count[3] <= count[3]~reg0.DB_MAX_OUTPUT_PORT_TYPE
count[4] <= count[4]~reg0.DB_MAX_OUTPUT_PORT_TYPE
count[5] <= count[5]~reg0.DB_MAX_OUTPUT_PORT_TYPE
count[6] <= count[6]~reg0.DB_MAX_OUTPUT_PORT_TYPE
count[7] <= count[7]~reg0.DB_MAX_OUTPUT_PORT_TYPE
start_val[0] => Add0.IN16
start_val[0] => count.DATAB
start_val[1] => Add0.IN15
start_val[1] => count.DATAB
start_val[2] => Add0.IN14
start_val[2] => count.DATAB
start_val[3] => Add0.IN13
start_val[3] => count.DATAB
start_val[4] => Add0.IN12
start_val[4] => count.DATAB
start_val[5] => Add0.IN11
start_val[5] => count.DATAB
start_val[6] => Add0.IN10
start_val[6] => count.DATAB
start_val[7] => Add0.IN9
start_val[7] => count.DATAB
inc => count.OUTPUTSELECT
inc => count.OUTPUTSELECT
inc => count.OUTPUTSELECT
inc => count.OUTPUTSELECT
inc => count.OUTPUTSELECT
inc => count.OUTPUTSELECT
inc => count.OUTPUTSELECT
inc => count.OUTPUTSELECT
inc => always0.IN0
enable => always0.IN1
enable => count.OUTPUTSELECT
enable => count.OUTPUTSELECT
enable => count.OUTPUTSELECT
enable => count.OUTPUTSELECT
enable => count.OUTPUTSELECT
enable => count.OUTPUTSELECT
enable => count.OUTPUTSELECT
enable => count.OUTPUTSELECT
clk => count[0]~reg0.CLK
clk => count[1]~reg0.CLK
clk => count[2]~reg0.CLK
clk => count[3]~reg0.CLK
clk => count[4]~reg0.CLK
clk => count[5]~reg0.CLK
clk => count[6]~reg0.CLK
clk => count[7]~reg0.CLK
slow_edge => count.OUTPUTSELECT
slow_edge => count.OUTPUTSELECT
slow_edge => count.OUTPUTSELECT
slow_edge => count.OUTPUTSELECT
slow_edge => count.OUTPUTSELECT
slow_edge => count.OUTPUTSELECT
slow_edge => count.OUTPUTSELECT
slow_edge => count.OUTPUTSELECT
reset => count.OUTPUTSELECT
reset => count.OUTPUTSELECT
reset => count.OUTPUTSELECT
reset => count.OUTPUTSELECT
reset => count.OUTPUTSELECT
reset => count.OUTPUTSELECT
reset => count.OUTPUTSELECT
reset => count.OUTPUTSELECT
init_val[0] => count.DATAB
init_val[1] => count.DATAB


|lab8|snakes_and_apples:snake|grid_light:center_grid_row[11].center_grid_col[9].light
green_light_on <= green_light_on.DB_MAX_OUTPUT_PORT_TYPE
head <= head.DB_MAX_OUTPUT_PORT_TYPE
game_over_out <= state_n.DB_MAX_OUTPUT_PORT_TYPE
eating => counter256:counter.inc
eating => always0.IN1
game_over_in => state_n.e_off.OUTPUTSELECT
game_over_in => state_n.e_countdown.OUTPUTSELECT
game_over_in => state_n.e_head.OUTPUTSELECT
game_over_in => state_n.OUTPUTSELECT
left => state_n.OUTPUTSELECT
left => state_n.OUTPUTSELECT
left => state_n.OUTPUTSELECT
left => state_n.OUTPUTSELECT
up => state_n.OUTPUTSELECT
up => state_n.OUTPUTSELECT
up => state_n.OUTPUTSELECT
up => state_n.OUTPUTSELECT
right => state_n.OUTPUTSELECT
right => state_n.OUTPUTSELECT
right => state_n.OUTPUTSELECT
right => state_n.OUTPUTSELECT
down => state_n.OUTPUTSELECT
down => state_n.OUTPUTSELECT
down => state_n.OUTPUTSELECT
down => state_n.OUTPUTSELECT
length[0] => counter256:counter.start_val[0]
length[1] => counter256:counter.start_val[1]
length[2] => counter256:counter.start_val[2]
length[3] => counter256:counter.start_val[3]
length[4] => counter256:counter.start_val[4]
length[5] => counter256:counter.start_val[5]
length[6] => counter256:counter.start_val[6]
length[7] => counter256:counter.start_val[7]
dir[0] => Mux0.IN5
dir[0] => Mux1.IN5
dir[0] => Mux2.IN5
dir[0] => Mux3.IN5
dir[1] => Mux0.IN4
dir[1] => Mux1.IN4
dir[1] => Mux2.IN4
dir[1] => Mux3.IN4
clk => counter256:counter.clk
clk => state_r~1.DATAIN
slow_edge => counter256:counter.slow_edge
slow_edge => state_r.OUTPUTSELECT
slow_edge => state_r.OUTPUTSELECT
slow_edge => state_r.OUTPUTSELECT
slow_edge => state_r.OUTPUTSELECT
reset => counter256:counter.reset
reset => state_r.OUTPUTSELECT
reset => state_r.OUTPUTSELECT
reset => state_r.OUTPUTSELECT
reset => state_r.OUTPUTSELECT
light_type[0] => counter256:counter.init_val[0]
light_type[0] => Equal1.IN1
light_type[0] => Equal2.IN1
light_type[1] => counter256:counter.init_val[1]
light_type[1] => Equal1.IN0
light_type[1] => Equal2.IN0


|lab8|snakes_and_apples:snake|grid_light:center_grid_row[11].center_grid_col[9].light|counter256:counter
count[0] <= count[0]~reg0.DB_MAX_OUTPUT_PORT_TYPE
count[1] <= count[1]~reg0.DB_MAX_OUTPUT_PORT_TYPE
count[2] <= count[2]~reg0.DB_MAX_OUTPUT_PORT_TYPE
count[3] <= count[3]~reg0.DB_MAX_OUTPUT_PORT_TYPE
count[4] <= count[4]~reg0.DB_MAX_OUTPUT_PORT_TYPE
count[5] <= count[5]~reg0.DB_MAX_OUTPUT_PORT_TYPE
count[6] <= count[6]~reg0.DB_MAX_OUTPUT_PORT_TYPE
count[7] <= count[7]~reg0.DB_MAX_OUTPUT_PORT_TYPE
start_val[0] => Add0.IN16
start_val[0] => count.DATAB
start_val[1] => Add0.IN15
start_val[1] => count.DATAB
start_val[2] => Add0.IN14
start_val[2] => count.DATAB
start_val[3] => Add0.IN13
start_val[3] => count.DATAB
start_val[4] => Add0.IN12
start_val[4] => count.DATAB
start_val[5] => Add0.IN11
start_val[5] => count.DATAB
start_val[6] => Add0.IN10
start_val[6] => count.DATAB
start_val[7] => Add0.IN9
start_val[7] => count.DATAB
inc => count.OUTPUTSELECT
inc => count.OUTPUTSELECT
inc => count.OUTPUTSELECT
inc => count.OUTPUTSELECT
inc => count.OUTPUTSELECT
inc => count.OUTPUTSELECT
inc => count.OUTPUTSELECT
inc => count.OUTPUTSELECT
inc => always0.IN0
enable => always0.IN1
enable => count.OUTPUTSELECT
enable => count.OUTPUTSELECT
enable => count.OUTPUTSELECT
enable => count.OUTPUTSELECT
enable => count.OUTPUTSELECT
enable => count.OUTPUTSELECT
enable => count.OUTPUTSELECT
enable => count.OUTPUTSELECT
clk => count[0]~reg0.CLK
clk => count[1]~reg0.CLK
clk => count[2]~reg0.CLK
clk => count[3]~reg0.CLK
clk => count[4]~reg0.CLK
clk => count[5]~reg0.CLK
clk => count[6]~reg0.CLK
clk => count[7]~reg0.CLK
slow_edge => count.OUTPUTSELECT
slow_edge => count.OUTPUTSELECT
slow_edge => count.OUTPUTSELECT
slow_edge => count.OUTPUTSELECT
slow_edge => count.OUTPUTSELECT
slow_edge => count.OUTPUTSELECT
slow_edge => count.OUTPUTSELECT
slow_edge => count.OUTPUTSELECT
reset => count.OUTPUTSELECT
reset => count.OUTPUTSELECT
reset => count.OUTPUTSELECT
reset => count.OUTPUTSELECT
reset => count.OUTPUTSELECT
reset => count.OUTPUTSELECT
reset => count.OUTPUTSELECT
reset => count.OUTPUTSELECT
init_val[0] => count.DATAB
init_val[1] => count.DATAB


|lab8|snakes_and_apples:snake|grid_light:center_grid_row[11].center_grid_col[10].light
green_light_on <= green_light_on.DB_MAX_OUTPUT_PORT_TYPE
head <= head.DB_MAX_OUTPUT_PORT_TYPE
game_over_out <= state_n.DB_MAX_OUTPUT_PORT_TYPE
eating => counter256:counter.inc
eating => always0.IN1
game_over_in => state_n.e_off.OUTPUTSELECT
game_over_in => state_n.e_countdown.OUTPUTSELECT
game_over_in => state_n.e_head.OUTPUTSELECT
game_over_in => state_n.OUTPUTSELECT
left => state_n.OUTPUTSELECT
left => state_n.OUTPUTSELECT
left => state_n.OUTPUTSELECT
left => state_n.OUTPUTSELECT
up => state_n.OUTPUTSELECT
up => state_n.OUTPUTSELECT
up => state_n.OUTPUTSELECT
up => state_n.OUTPUTSELECT
right => state_n.OUTPUTSELECT
right => state_n.OUTPUTSELECT
right => state_n.OUTPUTSELECT
right => state_n.OUTPUTSELECT
down => state_n.OUTPUTSELECT
down => state_n.OUTPUTSELECT
down => state_n.OUTPUTSELECT
down => state_n.OUTPUTSELECT
length[0] => counter256:counter.start_val[0]
length[1] => counter256:counter.start_val[1]
length[2] => counter256:counter.start_val[2]
length[3] => counter256:counter.start_val[3]
length[4] => counter256:counter.start_val[4]
length[5] => counter256:counter.start_val[5]
length[6] => counter256:counter.start_val[6]
length[7] => counter256:counter.start_val[7]
dir[0] => Mux0.IN5
dir[0] => Mux1.IN5
dir[0] => Mux2.IN5
dir[0] => Mux3.IN5
dir[1] => Mux0.IN4
dir[1] => Mux1.IN4
dir[1] => Mux2.IN4
dir[1] => Mux3.IN4
clk => counter256:counter.clk
clk => state_r~1.DATAIN
slow_edge => counter256:counter.slow_edge
slow_edge => state_r.OUTPUTSELECT
slow_edge => state_r.OUTPUTSELECT
slow_edge => state_r.OUTPUTSELECT
slow_edge => state_r.OUTPUTSELECT
reset => counter256:counter.reset
reset => state_r.OUTPUTSELECT
reset => state_r.OUTPUTSELECT
reset => state_r.OUTPUTSELECT
reset => state_r.OUTPUTSELECT
light_type[0] => counter256:counter.init_val[0]
light_type[0] => Equal1.IN1
light_type[0] => Equal2.IN1
light_type[1] => counter256:counter.init_val[1]
light_type[1] => Equal1.IN0
light_type[1] => Equal2.IN0


|lab8|snakes_and_apples:snake|grid_light:center_grid_row[11].center_grid_col[10].light|counter256:counter
count[0] <= count[0]~reg0.DB_MAX_OUTPUT_PORT_TYPE
count[1] <= count[1]~reg0.DB_MAX_OUTPUT_PORT_TYPE
count[2] <= count[2]~reg0.DB_MAX_OUTPUT_PORT_TYPE
count[3] <= count[3]~reg0.DB_MAX_OUTPUT_PORT_TYPE
count[4] <= count[4]~reg0.DB_MAX_OUTPUT_PORT_TYPE
count[5] <= count[5]~reg0.DB_MAX_OUTPUT_PORT_TYPE
count[6] <= count[6]~reg0.DB_MAX_OUTPUT_PORT_TYPE
count[7] <= count[7]~reg0.DB_MAX_OUTPUT_PORT_TYPE
start_val[0] => Add0.IN16
start_val[0] => count.DATAB
start_val[1] => Add0.IN15
start_val[1] => count.DATAB
start_val[2] => Add0.IN14
start_val[2] => count.DATAB
start_val[3] => Add0.IN13
start_val[3] => count.DATAB
start_val[4] => Add0.IN12
start_val[4] => count.DATAB
start_val[5] => Add0.IN11
start_val[5] => count.DATAB
start_val[6] => Add0.IN10
start_val[6] => count.DATAB
start_val[7] => Add0.IN9
start_val[7] => count.DATAB
inc => count.OUTPUTSELECT
inc => count.OUTPUTSELECT
inc => count.OUTPUTSELECT
inc => count.OUTPUTSELECT
inc => count.OUTPUTSELECT
inc => count.OUTPUTSELECT
inc => count.OUTPUTSELECT
inc => count.OUTPUTSELECT
inc => always0.IN0
enable => always0.IN1
enable => count.OUTPUTSELECT
enable => count.OUTPUTSELECT
enable => count.OUTPUTSELECT
enable => count.OUTPUTSELECT
enable => count.OUTPUTSELECT
enable => count.OUTPUTSELECT
enable => count.OUTPUTSELECT
enable => count.OUTPUTSELECT
clk => count[0]~reg0.CLK
clk => count[1]~reg0.CLK
clk => count[2]~reg0.CLK
clk => count[3]~reg0.CLK
clk => count[4]~reg0.CLK
clk => count[5]~reg0.CLK
clk => count[6]~reg0.CLK
clk => count[7]~reg0.CLK
slow_edge => count.OUTPUTSELECT
slow_edge => count.OUTPUTSELECT
slow_edge => count.OUTPUTSELECT
slow_edge => count.OUTPUTSELECT
slow_edge => count.OUTPUTSELECT
slow_edge => count.OUTPUTSELECT
slow_edge => count.OUTPUTSELECT
slow_edge => count.OUTPUTSELECT
reset => count.OUTPUTSELECT
reset => count.OUTPUTSELECT
reset => count.OUTPUTSELECT
reset => count.OUTPUTSELECT
reset => count.OUTPUTSELECT
reset => count.OUTPUTSELECT
reset => count.OUTPUTSELECT
reset => count.OUTPUTSELECT
init_val[0] => count.DATAB
init_val[1] => count.DATAB


|lab8|snakes_and_apples:snake|grid_light:center_grid_row[11].center_grid_col[11].light
green_light_on <= green_light_on.DB_MAX_OUTPUT_PORT_TYPE
head <= head.DB_MAX_OUTPUT_PORT_TYPE
game_over_out <= state_n.DB_MAX_OUTPUT_PORT_TYPE
eating => counter256:counter.inc
eating => always0.IN1
game_over_in => state_n.e_off.OUTPUTSELECT
game_over_in => state_n.e_countdown.OUTPUTSELECT
game_over_in => state_n.e_head.OUTPUTSELECT
game_over_in => state_n.OUTPUTSELECT
left => state_n.OUTPUTSELECT
left => state_n.OUTPUTSELECT
left => state_n.OUTPUTSELECT
left => state_n.OUTPUTSELECT
up => state_n.OUTPUTSELECT
up => state_n.OUTPUTSELECT
up => state_n.OUTPUTSELECT
up => state_n.OUTPUTSELECT
right => state_n.OUTPUTSELECT
right => state_n.OUTPUTSELECT
right => state_n.OUTPUTSELECT
right => state_n.OUTPUTSELECT
down => state_n.OUTPUTSELECT
down => state_n.OUTPUTSELECT
down => state_n.OUTPUTSELECT
down => state_n.OUTPUTSELECT
length[0] => counter256:counter.start_val[0]
length[1] => counter256:counter.start_val[1]
length[2] => counter256:counter.start_val[2]
length[3] => counter256:counter.start_val[3]
length[4] => counter256:counter.start_val[4]
length[5] => counter256:counter.start_val[5]
length[6] => counter256:counter.start_val[6]
length[7] => counter256:counter.start_val[7]
dir[0] => Mux0.IN5
dir[0] => Mux1.IN5
dir[0] => Mux2.IN5
dir[0] => Mux3.IN5
dir[1] => Mux0.IN4
dir[1] => Mux1.IN4
dir[1] => Mux2.IN4
dir[1] => Mux3.IN4
clk => counter256:counter.clk
clk => state_r~1.DATAIN
slow_edge => counter256:counter.slow_edge
slow_edge => state_r.OUTPUTSELECT
slow_edge => state_r.OUTPUTSELECT
slow_edge => state_r.OUTPUTSELECT
slow_edge => state_r.OUTPUTSELECT
reset => counter256:counter.reset
reset => state_r.OUTPUTSELECT
reset => state_r.OUTPUTSELECT
reset => state_r.OUTPUTSELECT
reset => state_r.OUTPUTSELECT
light_type[0] => counter256:counter.init_val[0]
light_type[0] => Equal1.IN1
light_type[0] => Equal2.IN1
light_type[1] => counter256:counter.init_val[1]
light_type[1] => Equal1.IN0
light_type[1] => Equal2.IN0


|lab8|snakes_and_apples:snake|grid_light:center_grid_row[11].center_grid_col[11].light|counter256:counter
count[0] <= count[0]~reg0.DB_MAX_OUTPUT_PORT_TYPE
count[1] <= count[1]~reg0.DB_MAX_OUTPUT_PORT_TYPE
count[2] <= count[2]~reg0.DB_MAX_OUTPUT_PORT_TYPE
count[3] <= count[3]~reg0.DB_MAX_OUTPUT_PORT_TYPE
count[4] <= count[4]~reg0.DB_MAX_OUTPUT_PORT_TYPE
count[5] <= count[5]~reg0.DB_MAX_OUTPUT_PORT_TYPE
count[6] <= count[6]~reg0.DB_MAX_OUTPUT_PORT_TYPE
count[7] <= count[7]~reg0.DB_MAX_OUTPUT_PORT_TYPE
start_val[0] => Add0.IN16
start_val[0] => count.DATAB
start_val[1] => Add0.IN15
start_val[1] => count.DATAB
start_val[2] => Add0.IN14
start_val[2] => count.DATAB
start_val[3] => Add0.IN13
start_val[3] => count.DATAB
start_val[4] => Add0.IN12
start_val[4] => count.DATAB
start_val[5] => Add0.IN11
start_val[5] => count.DATAB
start_val[6] => Add0.IN10
start_val[6] => count.DATAB
start_val[7] => Add0.IN9
start_val[7] => count.DATAB
inc => count.OUTPUTSELECT
inc => count.OUTPUTSELECT
inc => count.OUTPUTSELECT
inc => count.OUTPUTSELECT
inc => count.OUTPUTSELECT
inc => count.OUTPUTSELECT
inc => count.OUTPUTSELECT
inc => count.OUTPUTSELECT
inc => always0.IN0
enable => always0.IN1
enable => count.OUTPUTSELECT
enable => count.OUTPUTSELECT
enable => count.OUTPUTSELECT
enable => count.OUTPUTSELECT
enable => count.OUTPUTSELECT
enable => count.OUTPUTSELECT
enable => count.OUTPUTSELECT
enable => count.OUTPUTSELECT
clk => count[0]~reg0.CLK
clk => count[1]~reg0.CLK
clk => count[2]~reg0.CLK
clk => count[3]~reg0.CLK
clk => count[4]~reg0.CLK
clk => count[5]~reg0.CLK
clk => count[6]~reg0.CLK
clk => count[7]~reg0.CLK
slow_edge => count.OUTPUTSELECT
slow_edge => count.OUTPUTSELECT
slow_edge => count.OUTPUTSELECT
slow_edge => count.OUTPUTSELECT
slow_edge => count.OUTPUTSELECT
slow_edge => count.OUTPUTSELECT
slow_edge => count.OUTPUTSELECT
slow_edge => count.OUTPUTSELECT
reset => count.OUTPUTSELECT
reset => count.OUTPUTSELECT
reset => count.OUTPUTSELECT
reset => count.OUTPUTSELECT
reset => count.OUTPUTSELECT
reset => count.OUTPUTSELECT
reset => count.OUTPUTSELECT
reset => count.OUTPUTSELECT
init_val[0] => count.DATAB
init_val[1] => count.DATAB


|lab8|snakes_and_apples:snake|grid_light:center_grid_row[11].center_grid_col[12].light
green_light_on <= green_light_on.DB_MAX_OUTPUT_PORT_TYPE
head <= head.DB_MAX_OUTPUT_PORT_TYPE
game_over_out <= state_n.DB_MAX_OUTPUT_PORT_TYPE
eating => counter256:counter.inc
eating => always0.IN1
game_over_in => state_n.e_off.OUTPUTSELECT
game_over_in => state_n.e_countdown.OUTPUTSELECT
game_over_in => state_n.e_head.OUTPUTSELECT
game_over_in => state_n.OUTPUTSELECT
left => state_n.OUTPUTSELECT
left => state_n.OUTPUTSELECT
left => state_n.OUTPUTSELECT
left => state_n.OUTPUTSELECT
up => state_n.OUTPUTSELECT
up => state_n.OUTPUTSELECT
up => state_n.OUTPUTSELECT
up => state_n.OUTPUTSELECT
right => state_n.OUTPUTSELECT
right => state_n.OUTPUTSELECT
right => state_n.OUTPUTSELECT
right => state_n.OUTPUTSELECT
down => state_n.OUTPUTSELECT
down => state_n.OUTPUTSELECT
down => state_n.OUTPUTSELECT
down => state_n.OUTPUTSELECT
length[0] => counter256:counter.start_val[0]
length[1] => counter256:counter.start_val[1]
length[2] => counter256:counter.start_val[2]
length[3] => counter256:counter.start_val[3]
length[4] => counter256:counter.start_val[4]
length[5] => counter256:counter.start_val[5]
length[6] => counter256:counter.start_val[6]
length[7] => counter256:counter.start_val[7]
dir[0] => Mux0.IN5
dir[0] => Mux1.IN5
dir[0] => Mux2.IN5
dir[0] => Mux3.IN5
dir[1] => Mux0.IN4
dir[1] => Mux1.IN4
dir[1] => Mux2.IN4
dir[1] => Mux3.IN4
clk => counter256:counter.clk
clk => state_r~1.DATAIN
slow_edge => counter256:counter.slow_edge
slow_edge => state_r.OUTPUTSELECT
slow_edge => state_r.OUTPUTSELECT
slow_edge => state_r.OUTPUTSELECT
slow_edge => state_r.OUTPUTSELECT
reset => counter256:counter.reset
reset => state_r.OUTPUTSELECT
reset => state_r.OUTPUTSELECT
reset => state_r.OUTPUTSELECT
reset => state_r.OUTPUTSELECT
light_type[0] => counter256:counter.init_val[0]
light_type[0] => Equal1.IN1
light_type[0] => Equal2.IN1
light_type[1] => counter256:counter.init_val[1]
light_type[1] => Equal1.IN0
light_type[1] => Equal2.IN0


|lab8|snakes_and_apples:snake|grid_light:center_grid_row[11].center_grid_col[12].light|counter256:counter
count[0] <= count[0]~reg0.DB_MAX_OUTPUT_PORT_TYPE
count[1] <= count[1]~reg0.DB_MAX_OUTPUT_PORT_TYPE
count[2] <= count[2]~reg0.DB_MAX_OUTPUT_PORT_TYPE
count[3] <= count[3]~reg0.DB_MAX_OUTPUT_PORT_TYPE
count[4] <= count[4]~reg0.DB_MAX_OUTPUT_PORT_TYPE
count[5] <= count[5]~reg0.DB_MAX_OUTPUT_PORT_TYPE
count[6] <= count[6]~reg0.DB_MAX_OUTPUT_PORT_TYPE
count[7] <= count[7]~reg0.DB_MAX_OUTPUT_PORT_TYPE
start_val[0] => Add0.IN16
start_val[0] => count.DATAB
start_val[1] => Add0.IN15
start_val[1] => count.DATAB
start_val[2] => Add0.IN14
start_val[2] => count.DATAB
start_val[3] => Add0.IN13
start_val[3] => count.DATAB
start_val[4] => Add0.IN12
start_val[4] => count.DATAB
start_val[5] => Add0.IN11
start_val[5] => count.DATAB
start_val[6] => Add0.IN10
start_val[6] => count.DATAB
start_val[7] => Add0.IN9
start_val[7] => count.DATAB
inc => count.OUTPUTSELECT
inc => count.OUTPUTSELECT
inc => count.OUTPUTSELECT
inc => count.OUTPUTSELECT
inc => count.OUTPUTSELECT
inc => count.OUTPUTSELECT
inc => count.OUTPUTSELECT
inc => count.OUTPUTSELECT
inc => always0.IN0
enable => always0.IN1
enable => count.OUTPUTSELECT
enable => count.OUTPUTSELECT
enable => count.OUTPUTSELECT
enable => count.OUTPUTSELECT
enable => count.OUTPUTSELECT
enable => count.OUTPUTSELECT
enable => count.OUTPUTSELECT
enable => count.OUTPUTSELECT
clk => count[0]~reg0.CLK
clk => count[1]~reg0.CLK
clk => count[2]~reg0.CLK
clk => count[3]~reg0.CLK
clk => count[4]~reg0.CLK
clk => count[5]~reg0.CLK
clk => count[6]~reg0.CLK
clk => count[7]~reg0.CLK
slow_edge => count.OUTPUTSELECT
slow_edge => count.OUTPUTSELECT
slow_edge => count.OUTPUTSELECT
slow_edge => count.OUTPUTSELECT
slow_edge => count.OUTPUTSELECT
slow_edge => count.OUTPUTSELECT
slow_edge => count.OUTPUTSELECT
slow_edge => count.OUTPUTSELECT
reset => count.OUTPUTSELECT
reset => count.OUTPUTSELECT
reset => count.OUTPUTSELECT
reset => count.OUTPUTSELECT
reset => count.OUTPUTSELECT
reset => count.OUTPUTSELECT
reset => count.OUTPUTSELECT
reset => count.OUTPUTSELECT
init_val[0] => count.DATAB
init_val[1] => count.DATAB


|lab8|snakes_and_apples:snake|grid_light:center_grid_row[11].center_grid_col[13].light
green_light_on <= green_light_on.DB_MAX_OUTPUT_PORT_TYPE
head <= head.DB_MAX_OUTPUT_PORT_TYPE
game_over_out <= state_n.DB_MAX_OUTPUT_PORT_TYPE
eating => counter256:counter.inc
eating => always0.IN1
game_over_in => state_n.e_off.OUTPUTSELECT
game_over_in => state_n.e_countdown.OUTPUTSELECT
game_over_in => state_n.e_head.OUTPUTSELECT
game_over_in => state_n.OUTPUTSELECT
left => state_n.OUTPUTSELECT
left => state_n.OUTPUTSELECT
left => state_n.OUTPUTSELECT
left => state_n.OUTPUTSELECT
up => state_n.OUTPUTSELECT
up => state_n.OUTPUTSELECT
up => state_n.OUTPUTSELECT
up => state_n.OUTPUTSELECT
right => state_n.OUTPUTSELECT
right => state_n.OUTPUTSELECT
right => state_n.OUTPUTSELECT
right => state_n.OUTPUTSELECT
down => state_n.OUTPUTSELECT
down => state_n.OUTPUTSELECT
down => state_n.OUTPUTSELECT
down => state_n.OUTPUTSELECT
length[0] => counter256:counter.start_val[0]
length[1] => counter256:counter.start_val[1]
length[2] => counter256:counter.start_val[2]
length[3] => counter256:counter.start_val[3]
length[4] => counter256:counter.start_val[4]
length[5] => counter256:counter.start_val[5]
length[6] => counter256:counter.start_val[6]
length[7] => counter256:counter.start_val[7]
dir[0] => Mux0.IN5
dir[0] => Mux1.IN5
dir[0] => Mux2.IN5
dir[0] => Mux3.IN5
dir[1] => Mux0.IN4
dir[1] => Mux1.IN4
dir[1] => Mux2.IN4
dir[1] => Mux3.IN4
clk => counter256:counter.clk
clk => state_r~1.DATAIN
slow_edge => counter256:counter.slow_edge
slow_edge => state_r.OUTPUTSELECT
slow_edge => state_r.OUTPUTSELECT
slow_edge => state_r.OUTPUTSELECT
slow_edge => state_r.OUTPUTSELECT
reset => counter256:counter.reset
reset => state_r.OUTPUTSELECT
reset => state_r.OUTPUTSELECT
reset => state_r.OUTPUTSELECT
reset => state_r.OUTPUTSELECT
light_type[0] => counter256:counter.init_val[0]
light_type[0] => Equal1.IN1
light_type[0] => Equal2.IN1
light_type[1] => counter256:counter.init_val[1]
light_type[1] => Equal1.IN0
light_type[1] => Equal2.IN0


|lab8|snakes_and_apples:snake|grid_light:center_grid_row[11].center_grid_col[13].light|counter256:counter
count[0] <= count[0]~reg0.DB_MAX_OUTPUT_PORT_TYPE
count[1] <= count[1]~reg0.DB_MAX_OUTPUT_PORT_TYPE
count[2] <= count[2]~reg0.DB_MAX_OUTPUT_PORT_TYPE
count[3] <= count[3]~reg0.DB_MAX_OUTPUT_PORT_TYPE
count[4] <= count[4]~reg0.DB_MAX_OUTPUT_PORT_TYPE
count[5] <= count[5]~reg0.DB_MAX_OUTPUT_PORT_TYPE
count[6] <= count[6]~reg0.DB_MAX_OUTPUT_PORT_TYPE
count[7] <= count[7]~reg0.DB_MAX_OUTPUT_PORT_TYPE
start_val[0] => Add0.IN16
start_val[0] => count.DATAB
start_val[1] => Add0.IN15
start_val[1] => count.DATAB
start_val[2] => Add0.IN14
start_val[2] => count.DATAB
start_val[3] => Add0.IN13
start_val[3] => count.DATAB
start_val[4] => Add0.IN12
start_val[4] => count.DATAB
start_val[5] => Add0.IN11
start_val[5] => count.DATAB
start_val[6] => Add0.IN10
start_val[6] => count.DATAB
start_val[7] => Add0.IN9
start_val[7] => count.DATAB
inc => count.OUTPUTSELECT
inc => count.OUTPUTSELECT
inc => count.OUTPUTSELECT
inc => count.OUTPUTSELECT
inc => count.OUTPUTSELECT
inc => count.OUTPUTSELECT
inc => count.OUTPUTSELECT
inc => count.OUTPUTSELECT
inc => always0.IN0
enable => always0.IN1
enable => count.OUTPUTSELECT
enable => count.OUTPUTSELECT
enable => count.OUTPUTSELECT
enable => count.OUTPUTSELECT
enable => count.OUTPUTSELECT
enable => count.OUTPUTSELECT
enable => count.OUTPUTSELECT
enable => count.OUTPUTSELECT
clk => count[0]~reg0.CLK
clk => count[1]~reg0.CLK
clk => count[2]~reg0.CLK
clk => count[3]~reg0.CLK
clk => count[4]~reg0.CLK
clk => count[5]~reg0.CLK
clk => count[6]~reg0.CLK
clk => count[7]~reg0.CLK
slow_edge => count.OUTPUTSELECT
slow_edge => count.OUTPUTSELECT
slow_edge => count.OUTPUTSELECT
slow_edge => count.OUTPUTSELECT
slow_edge => count.OUTPUTSELECT
slow_edge => count.OUTPUTSELECT
slow_edge => count.OUTPUTSELECT
slow_edge => count.OUTPUTSELECT
reset => count.OUTPUTSELECT
reset => count.OUTPUTSELECT
reset => count.OUTPUTSELECT
reset => count.OUTPUTSELECT
reset => count.OUTPUTSELECT
reset => count.OUTPUTSELECT
reset => count.OUTPUTSELECT
reset => count.OUTPUTSELECT
init_val[0] => count.DATAB
init_val[1] => count.DATAB


|lab8|snakes_and_apples:snake|grid_light:center_grid_row[11].center_grid_col[14].light
green_light_on <= green_light_on.DB_MAX_OUTPUT_PORT_TYPE
head <= head.DB_MAX_OUTPUT_PORT_TYPE
game_over_out <= state_n.DB_MAX_OUTPUT_PORT_TYPE
eating => counter256:counter.inc
eating => always0.IN1
game_over_in => state_n.e_off.OUTPUTSELECT
game_over_in => state_n.e_countdown.OUTPUTSELECT
game_over_in => state_n.e_head.OUTPUTSELECT
game_over_in => state_n.OUTPUTSELECT
left => state_n.OUTPUTSELECT
left => state_n.OUTPUTSELECT
left => state_n.OUTPUTSELECT
left => state_n.OUTPUTSELECT
up => state_n.OUTPUTSELECT
up => state_n.OUTPUTSELECT
up => state_n.OUTPUTSELECT
up => state_n.OUTPUTSELECT
right => state_n.OUTPUTSELECT
right => state_n.OUTPUTSELECT
right => state_n.OUTPUTSELECT
right => state_n.OUTPUTSELECT
down => state_n.OUTPUTSELECT
down => state_n.OUTPUTSELECT
down => state_n.OUTPUTSELECT
down => state_n.OUTPUTSELECT
length[0] => counter256:counter.start_val[0]
length[1] => counter256:counter.start_val[1]
length[2] => counter256:counter.start_val[2]
length[3] => counter256:counter.start_val[3]
length[4] => counter256:counter.start_val[4]
length[5] => counter256:counter.start_val[5]
length[6] => counter256:counter.start_val[6]
length[7] => counter256:counter.start_val[7]
dir[0] => Mux0.IN5
dir[0] => Mux1.IN5
dir[0] => Mux2.IN5
dir[0] => Mux3.IN5
dir[1] => Mux0.IN4
dir[1] => Mux1.IN4
dir[1] => Mux2.IN4
dir[1] => Mux3.IN4
clk => counter256:counter.clk
clk => state_r~1.DATAIN
slow_edge => counter256:counter.slow_edge
slow_edge => state_r.OUTPUTSELECT
slow_edge => state_r.OUTPUTSELECT
slow_edge => state_r.OUTPUTSELECT
slow_edge => state_r.OUTPUTSELECT
reset => counter256:counter.reset
reset => state_r.OUTPUTSELECT
reset => state_r.OUTPUTSELECT
reset => state_r.OUTPUTSELECT
reset => state_r.OUTPUTSELECT
light_type[0] => counter256:counter.init_val[0]
light_type[0] => Equal1.IN1
light_type[0] => Equal2.IN1
light_type[1] => counter256:counter.init_val[1]
light_type[1] => Equal1.IN0
light_type[1] => Equal2.IN0


|lab8|snakes_and_apples:snake|grid_light:center_grid_row[11].center_grid_col[14].light|counter256:counter
count[0] <= count[0]~reg0.DB_MAX_OUTPUT_PORT_TYPE
count[1] <= count[1]~reg0.DB_MAX_OUTPUT_PORT_TYPE
count[2] <= count[2]~reg0.DB_MAX_OUTPUT_PORT_TYPE
count[3] <= count[3]~reg0.DB_MAX_OUTPUT_PORT_TYPE
count[4] <= count[4]~reg0.DB_MAX_OUTPUT_PORT_TYPE
count[5] <= count[5]~reg0.DB_MAX_OUTPUT_PORT_TYPE
count[6] <= count[6]~reg0.DB_MAX_OUTPUT_PORT_TYPE
count[7] <= count[7]~reg0.DB_MAX_OUTPUT_PORT_TYPE
start_val[0] => Add0.IN16
start_val[0] => count.DATAB
start_val[1] => Add0.IN15
start_val[1] => count.DATAB
start_val[2] => Add0.IN14
start_val[2] => count.DATAB
start_val[3] => Add0.IN13
start_val[3] => count.DATAB
start_val[4] => Add0.IN12
start_val[4] => count.DATAB
start_val[5] => Add0.IN11
start_val[5] => count.DATAB
start_val[6] => Add0.IN10
start_val[6] => count.DATAB
start_val[7] => Add0.IN9
start_val[7] => count.DATAB
inc => count.OUTPUTSELECT
inc => count.OUTPUTSELECT
inc => count.OUTPUTSELECT
inc => count.OUTPUTSELECT
inc => count.OUTPUTSELECT
inc => count.OUTPUTSELECT
inc => count.OUTPUTSELECT
inc => count.OUTPUTSELECT
inc => always0.IN0
enable => always0.IN1
enable => count.OUTPUTSELECT
enable => count.OUTPUTSELECT
enable => count.OUTPUTSELECT
enable => count.OUTPUTSELECT
enable => count.OUTPUTSELECT
enable => count.OUTPUTSELECT
enable => count.OUTPUTSELECT
enable => count.OUTPUTSELECT
clk => count[0]~reg0.CLK
clk => count[1]~reg0.CLK
clk => count[2]~reg0.CLK
clk => count[3]~reg0.CLK
clk => count[4]~reg0.CLK
clk => count[5]~reg0.CLK
clk => count[6]~reg0.CLK
clk => count[7]~reg0.CLK
slow_edge => count.OUTPUTSELECT
slow_edge => count.OUTPUTSELECT
slow_edge => count.OUTPUTSELECT
slow_edge => count.OUTPUTSELECT
slow_edge => count.OUTPUTSELECT
slow_edge => count.OUTPUTSELECT
slow_edge => count.OUTPUTSELECT
slow_edge => count.OUTPUTSELECT
reset => count.OUTPUTSELECT
reset => count.OUTPUTSELECT
reset => count.OUTPUTSELECT
reset => count.OUTPUTSELECT
reset => count.OUTPUTSELECT
reset => count.OUTPUTSELECT
reset => count.OUTPUTSELECT
reset => count.OUTPUTSELECT
init_val[0] => count.DATAB
init_val[1] => count.DATAB


|lab8|snakes_and_apples:snake|grid_light:center_grid_row[12].center_grid_col[1].light
green_light_on <= green_light_on.DB_MAX_OUTPUT_PORT_TYPE
head <= head.DB_MAX_OUTPUT_PORT_TYPE
game_over_out <= state_n.DB_MAX_OUTPUT_PORT_TYPE
eating => counter256:counter.inc
eating => always0.IN1
game_over_in => state_n.e_off.OUTPUTSELECT
game_over_in => state_n.e_countdown.OUTPUTSELECT
game_over_in => state_n.e_head.OUTPUTSELECT
game_over_in => state_n.OUTPUTSELECT
left => state_n.OUTPUTSELECT
left => state_n.OUTPUTSELECT
left => state_n.OUTPUTSELECT
left => state_n.OUTPUTSELECT
up => state_n.OUTPUTSELECT
up => state_n.OUTPUTSELECT
up => state_n.OUTPUTSELECT
up => state_n.OUTPUTSELECT
right => state_n.OUTPUTSELECT
right => state_n.OUTPUTSELECT
right => state_n.OUTPUTSELECT
right => state_n.OUTPUTSELECT
down => state_n.OUTPUTSELECT
down => state_n.OUTPUTSELECT
down => state_n.OUTPUTSELECT
down => state_n.OUTPUTSELECT
length[0] => counter256:counter.start_val[0]
length[1] => counter256:counter.start_val[1]
length[2] => counter256:counter.start_val[2]
length[3] => counter256:counter.start_val[3]
length[4] => counter256:counter.start_val[4]
length[5] => counter256:counter.start_val[5]
length[6] => counter256:counter.start_val[6]
length[7] => counter256:counter.start_val[7]
dir[0] => Mux0.IN5
dir[0] => Mux1.IN5
dir[0] => Mux2.IN5
dir[0] => Mux3.IN5
dir[1] => Mux0.IN4
dir[1] => Mux1.IN4
dir[1] => Mux2.IN4
dir[1] => Mux3.IN4
clk => counter256:counter.clk
clk => state_r~1.DATAIN
slow_edge => counter256:counter.slow_edge
slow_edge => state_r.OUTPUTSELECT
slow_edge => state_r.OUTPUTSELECT
slow_edge => state_r.OUTPUTSELECT
slow_edge => state_r.OUTPUTSELECT
reset => counter256:counter.reset
reset => state_r.OUTPUTSELECT
reset => state_r.OUTPUTSELECT
reset => state_r.OUTPUTSELECT
reset => state_r.OUTPUTSELECT
light_type[0] => counter256:counter.init_val[0]
light_type[0] => Equal1.IN1
light_type[0] => Equal2.IN1
light_type[1] => counter256:counter.init_val[1]
light_type[1] => Equal1.IN0
light_type[1] => Equal2.IN0


|lab8|snakes_and_apples:snake|grid_light:center_grid_row[12].center_grid_col[1].light|counter256:counter
count[0] <= count[0]~reg0.DB_MAX_OUTPUT_PORT_TYPE
count[1] <= count[1]~reg0.DB_MAX_OUTPUT_PORT_TYPE
count[2] <= count[2]~reg0.DB_MAX_OUTPUT_PORT_TYPE
count[3] <= count[3]~reg0.DB_MAX_OUTPUT_PORT_TYPE
count[4] <= count[4]~reg0.DB_MAX_OUTPUT_PORT_TYPE
count[5] <= count[5]~reg0.DB_MAX_OUTPUT_PORT_TYPE
count[6] <= count[6]~reg0.DB_MAX_OUTPUT_PORT_TYPE
count[7] <= count[7]~reg0.DB_MAX_OUTPUT_PORT_TYPE
start_val[0] => Add0.IN16
start_val[0] => count.DATAB
start_val[1] => Add0.IN15
start_val[1] => count.DATAB
start_val[2] => Add0.IN14
start_val[2] => count.DATAB
start_val[3] => Add0.IN13
start_val[3] => count.DATAB
start_val[4] => Add0.IN12
start_val[4] => count.DATAB
start_val[5] => Add0.IN11
start_val[5] => count.DATAB
start_val[6] => Add0.IN10
start_val[6] => count.DATAB
start_val[7] => Add0.IN9
start_val[7] => count.DATAB
inc => count.OUTPUTSELECT
inc => count.OUTPUTSELECT
inc => count.OUTPUTSELECT
inc => count.OUTPUTSELECT
inc => count.OUTPUTSELECT
inc => count.OUTPUTSELECT
inc => count.OUTPUTSELECT
inc => count.OUTPUTSELECT
inc => always0.IN0
enable => always0.IN1
enable => count.OUTPUTSELECT
enable => count.OUTPUTSELECT
enable => count.OUTPUTSELECT
enable => count.OUTPUTSELECT
enable => count.OUTPUTSELECT
enable => count.OUTPUTSELECT
enable => count.OUTPUTSELECT
enable => count.OUTPUTSELECT
clk => count[0]~reg0.CLK
clk => count[1]~reg0.CLK
clk => count[2]~reg0.CLK
clk => count[3]~reg0.CLK
clk => count[4]~reg0.CLK
clk => count[5]~reg0.CLK
clk => count[6]~reg0.CLK
clk => count[7]~reg0.CLK
slow_edge => count.OUTPUTSELECT
slow_edge => count.OUTPUTSELECT
slow_edge => count.OUTPUTSELECT
slow_edge => count.OUTPUTSELECT
slow_edge => count.OUTPUTSELECT
slow_edge => count.OUTPUTSELECT
slow_edge => count.OUTPUTSELECT
slow_edge => count.OUTPUTSELECT
reset => count.OUTPUTSELECT
reset => count.OUTPUTSELECT
reset => count.OUTPUTSELECT
reset => count.OUTPUTSELECT
reset => count.OUTPUTSELECT
reset => count.OUTPUTSELECT
reset => count.OUTPUTSELECT
reset => count.OUTPUTSELECT
init_val[0] => count.DATAB
init_val[1] => count.DATAB


|lab8|snakes_and_apples:snake|grid_light:center_grid_row[12].center_grid_col[2].light
green_light_on <= green_light_on.DB_MAX_OUTPUT_PORT_TYPE
head <= head.DB_MAX_OUTPUT_PORT_TYPE
game_over_out <= state_n.DB_MAX_OUTPUT_PORT_TYPE
eating => counter256:counter.inc
eating => always0.IN1
game_over_in => state_n.e_off.OUTPUTSELECT
game_over_in => state_n.e_countdown.OUTPUTSELECT
game_over_in => state_n.e_head.OUTPUTSELECT
game_over_in => state_n.OUTPUTSELECT
left => state_n.OUTPUTSELECT
left => state_n.OUTPUTSELECT
left => state_n.OUTPUTSELECT
left => state_n.OUTPUTSELECT
up => state_n.OUTPUTSELECT
up => state_n.OUTPUTSELECT
up => state_n.OUTPUTSELECT
up => state_n.OUTPUTSELECT
right => state_n.OUTPUTSELECT
right => state_n.OUTPUTSELECT
right => state_n.OUTPUTSELECT
right => state_n.OUTPUTSELECT
down => state_n.OUTPUTSELECT
down => state_n.OUTPUTSELECT
down => state_n.OUTPUTSELECT
down => state_n.OUTPUTSELECT
length[0] => counter256:counter.start_val[0]
length[1] => counter256:counter.start_val[1]
length[2] => counter256:counter.start_val[2]
length[3] => counter256:counter.start_val[3]
length[4] => counter256:counter.start_val[4]
length[5] => counter256:counter.start_val[5]
length[6] => counter256:counter.start_val[6]
length[7] => counter256:counter.start_val[7]
dir[0] => Mux0.IN5
dir[0] => Mux1.IN5
dir[0] => Mux2.IN5
dir[0] => Mux3.IN5
dir[1] => Mux0.IN4
dir[1] => Mux1.IN4
dir[1] => Mux2.IN4
dir[1] => Mux3.IN4
clk => counter256:counter.clk
clk => state_r~1.DATAIN
slow_edge => counter256:counter.slow_edge
slow_edge => state_r.OUTPUTSELECT
slow_edge => state_r.OUTPUTSELECT
slow_edge => state_r.OUTPUTSELECT
slow_edge => state_r.OUTPUTSELECT
reset => counter256:counter.reset
reset => state_r.OUTPUTSELECT
reset => state_r.OUTPUTSELECT
reset => state_r.OUTPUTSELECT
reset => state_r.OUTPUTSELECT
light_type[0] => counter256:counter.init_val[0]
light_type[0] => Equal1.IN1
light_type[0] => Equal2.IN1
light_type[1] => counter256:counter.init_val[1]
light_type[1] => Equal1.IN0
light_type[1] => Equal2.IN0


|lab8|snakes_and_apples:snake|grid_light:center_grid_row[12].center_grid_col[2].light|counter256:counter
count[0] <= count[0]~reg0.DB_MAX_OUTPUT_PORT_TYPE
count[1] <= count[1]~reg0.DB_MAX_OUTPUT_PORT_TYPE
count[2] <= count[2]~reg0.DB_MAX_OUTPUT_PORT_TYPE
count[3] <= count[3]~reg0.DB_MAX_OUTPUT_PORT_TYPE
count[4] <= count[4]~reg0.DB_MAX_OUTPUT_PORT_TYPE
count[5] <= count[5]~reg0.DB_MAX_OUTPUT_PORT_TYPE
count[6] <= count[6]~reg0.DB_MAX_OUTPUT_PORT_TYPE
count[7] <= count[7]~reg0.DB_MAX_OUTPUT_PORT_TYPE
start_val[0] => Add0.IN16
start_val[0] => count.DATAB
start_val[1] => Add0.IN15
start_val[1] => count.DATAB
start_val[2] => Add0.IN14
start_val[2] => count.DATAB
start_val[3] => Add0.IN13
start_val[3] => count.DATAB
start_val[4] => Add0.IN12
start_val[4] => count.DATAB
start_val[5] => Add0.IN11
start_val[5] => count.DATAB
start_val[6] => Add0.IN10
start_val[6] => count.DATAB
start_val[7] => Add0.IN9
start_val[7] => count.DATAB
inc => count.OUTPUTSELECT
inc => count.OUTPUTSELECT
inc => count.OUTPUTSELECT
inc => count.OUTPUTSELECT
inc => count.OUTPUTSELECT
inc => count.OUTPUTSELECT
inc => count.OUTPUTSELECT
inc => count.OUTPUTSELECT
inc => always0.IN0
enable => always0.IN1
enable => count.OUTPUTSELECT
enable => count.OUTPUTSELECT
enable => count.OUTPUTSELECT
enable => count.OUTPUTSELECT
enable => count.OUTPUTSELECT
enable => count.OUTPUTSELECT
enable => count.OUTPUTSELECT
enable => count.OUTPUTSELECT
clk => count[0]~reg0.CLK
clk => count[1]~reg0.CLK
clk => count[2]~reg0.CLK
clk => count[3]~reg0.CLK
clk => count[4]~reg0.CLK
clk => count[5]~reg0.CLK
clk => count[6]~reg0.CLK
clk => count[7]~reg0.CLK
slow_edge => count.OUTPUTSELECT
slow_edge => count.OUTPUTSELECT
slow_edge => count.OUTPUTSELECT
slow_edge => count.OUTPUTSELECT
slow_edge => count.OUTPUTSELECT
slow_edge => count.OUTPUTSELECT
slow_edge => count.OUTPUTSELECT
slow_edge => count.OUTPUTSELECT
reset => count.OUTPUTSELECT
reset => count.OUTPUTSELECT
reset => count.OUTPUTSELECT
reset => count.OUTPUTSELECT
reset => count.OUTPUTSELECT
reset => count.OUTPUTSELECT
reset => count.OUTPUTSELECT
reset => count.OUTPUTSELECT
init_val[0] => count.DATAB
init_val[1] => count.DATAB


|lab8|snakes_and_apples:snake|grid_light:center_grid_row[12].center_grid_col[3].light
green_light_on <= green_light_on.DB_MAX_OUTPUT_PORT_TYPE
head <= head.DB_MAX_OUTPUT_PORT_TYPE
game_over_out <= state_n.DB_MAX_OUTPUT_PORT_TYPE
eating => counter256:counter.inc
eating => always0.IN1
game_over_in => state_n.e_off.OUTPUTSELECT
game_over_in => state_n.e_countdown.OUTPUTSELECT
game_over_in => state_n.e_head.OUTPUTSELECT
game_over_in => state_n.OUTPUTSELECT
left => state_n.OUTPUTSELECT
left => state_n.OUTPUTSELECT
left => state_n.OUTPUTSELECT
left => state_n.OUTPUTSELECT
up => state_n.OUTPUTSELECT
up => state_n.OUTPUTSELECT
up => state_n.OUTPUTSELECT
up => state_n.OUTPUTSELECT
right => state_n.OUTPUTSELECT
right => state_n.OUTPUTSELECT
right => state_n.OUTPUTSELECT
right => state_n.OUTPUTSELECT
down => state_n.OUTPUTSELECT
down => state_n.OUTPUTSELECT
down => state_n.OUTPUTSELECT
down => state_n.OUTPUTSELECT
length[0] => counter256:counter.start_val[0]
length[1] => counter256:counter.start_val[1]
length[2] => counter256:counter.start_val[2]
length[3] => counter256:counter.start_val[3]
length[4] => counter256:counter.start_val[4]
length[5] => counter256:counter.start_val[5]
length[6] => counter256:counter.start_val[6]
length[7] => counter256:counter.start_val[7]
dir[0] => Mux0.IN5
dir[0] => Mux1.IN5
dir[0] => Mux2.IN5
dir[0] => Mux3.IN5
dir[1] => Mux0.IN4
dir[1] => Mux1.IN4
dir[1] => Mux2.IN4
dir[1] => Mux3.IN4
clk => counter256:counter.clk
clk => state_r~1.DATAIN
slow_edge => counter256:counter.slow_edge
slow_edge => state_r.OUTPUTSELECT
slow_edge => state_r.OUTPUTSELECT
slow_edge => state_r.OUTPUTSELECT
slow_edge => state_r.OUTPUTSELECT
reset => counter256:counter.reset
reset => state_r.OUTPUTSELECT
reset => state_r.OUTPUTSELECT
reset => state_r.OUTPUTSELECT
reset => state_r.OUTPUTSELECT
light_type[0] => counter256:counter.init_val[0]
light_type[0] => Equal1.IN1
light_type[0] => Equal2.IN1
light_type[1] => counter256:counter.init_val[1]
light_type[1] => Equal1.IN0
light_type[1] => Equal2.IN0


|lab8|snakes_and_apples:snake|grid_light:center_grid_row[12].center_grid_col[3].light|counter256:counter
count[0] <= count[0]~reg0.DB_MAX_OUTPUT_PORT_TYPE
count[1] <= count[1]~reg0.DB_MAX_OUTPUT_PORT_TYPE
count[2] <= count[2]~reg0.DB_MAX_OUTPUT_PORT_TYPE
count[3] <= count[3]~reg0.DB_MAX_OUTPUT_PORT_TYPE
count[4] <= count[4]~reg0.DB_MAX_OUTPUT_PORT_TYPE
count[5] <= count[5]~reg0.DB_MAX_OUTPUT_PORT_TYPE
count[6] <= count[6]~reg0.DB_MAX_OUTPUT_PORT_TYPE
count[7] <= count[7]~reg0.DB_MAX_OUTPUT_PORT_TYPE
start_val[0] => Add0.IN16
start_val[0] => count.DATAB
start_val[1] => Add0.IN15
start_val[1] => count.DATAB
start_val[2] => Add0.IN14
start_val[2] => count.DATAB
start_val[3] => Add0.IN13
start_val[3] => count.DATAB
start_val[4] => Add0.IN12
start_val[4] => count.DATAB
start_val[5] => Add0.IN11
start_val[5] => count.DATAB
start_val[6] => Add0.IN10
start_val[6] => count.DATAB
start_val[7] => Add0.IN9
start_val[7] => count.DATAB
inc => count.OUTPUTSELECT
inc => count.OUTPUTSELECT
inc => count.OUTPUTSELECT
inc => count.OUTPUTSELECT
inc => count.OUTPUTSELECT
inc => count.OUTPUTSELECT
inc => count.OUTPUTSELECT
inc => count.OUTPUTSELECT
inc => always0.IN0
enable => always0.IN1
enable => count.OUTPUTSELECT
enable => count.OUTPUTSELECT
enable => count.OUTPUTSELECT
enable => count.OUTPUTSELECT
enable => count.OUTPUTSELECT
enable => count.OUTPUTSELECT
enable => count.OUTPUTSELECT
enable => count.OUTPUTSELECT
clk => count[0]~reg0.CLK
clk => count[1]~reg0.CLK
clk => count[2]~reg0.CLK
clk => count[3]~reg0.CLK
clk => count[4]~reg0.CLK
clk => count[5]~reg0.CLK
clk => count[6]~reg0.CLK
clk => count[7]~reg0.CLK
slow_edge => count.OUTPUTSELECT
slow_edge => count.OUTPUTSELECT
slow_edge => count.OUTPUTSELECT
slow_edge => count.OUTPUTSELECT
slow_edge => count.OUTPUTSELECT
slow_edge => count.OUTPUTSELECT
slow_edge => count.OUTPUTSELECT
slow_edge => count.OUTPUTSELECT
reset => count.OUTPUTSELECT
reset => count.OUTPUTSELECT
reset => count.OUTPUTSELECT
reset => count.OUTPUTSELECT
reset => count.OUTPUTSELECT
reset => count.OUTPUTSELECT
reset => count.OUTPUTSELECT
reset => count.OUTPUTSELECT
init_val[0] => count.DATAB
init_val[1] => count.DATAB


|lab8|snakes_and_apples:snake|grid_light:center_grid_row[12].center_grid_col[4].light
green_light_on <= green_light_on.DB_MAX_OUTPUT_PORT_TYPE
head <= head.DB_MAX_OUTPUT_PORT_TYPE
game_over_out <= state_n.DB_MAX_OUTPUT_PORT_TYPE
eating => counter256:counter.inc
eating => always0.IN1
game_over_in => state_n.e_off.OUTPUTSELECT
game_over_in => state_n.e_countdown.OUTPUTSELECT
game_over_in => state_n.e_head.OUTPUTSELECT
game_over_in => state_n.OUTPUTSELECT
left => state_n.OUTPUTSELECT
left => state_n.OUTPUTSELECT
left => state_n.OUTPUTSELECT
left => state_n.OUTPUTSELECT
up => state_n.OUTPUTSELECT
up => state_n.OUTPUTSELECT
up => state_n.OUTPUTSELECT
up => state_n.OUTPUTSELECT
right => state_n.OUTPUTSELECT
right => state_n.OUTPUTSELECT
right => state_n.OUTPUTSELECT
right => state_n.OUTPUTSELECT
down => state_n.OUTPUTSELECT
down => state_n.OUTPUTSELECT
down => state_n.OUTPUTSELECT
down => state_n.OUTPUTSELECT
length[0] => counter256:counter.start_val[0]
length[1] => counter256:counter.start_val[1]
length[2] => counter256:counter.start_val[2]
length[3] => counter256:counter.start_val[3]
length[4] => counter256:counter.start_val[4]
length[5] => counter256:counter.start_val[5]
length[6] => counter256:counter.start_val[6]
length[7] => counter256:counter.start_val[7]
dir[0] => Mux0.IN5
dir[0] => Mux1.IN5
dir[0] => Mux2.IN5
dir[0] => Mux3.IN5
dir[1] => Mux0.IN4
dir[1] => Mux1.IN4
dir[1] => Mux2.IN4
dir[1] => Mux3.IN4
clk => counter256:counter.clk
clk => state_r~1.DATAIN
slow_edge => counter256:counter.slow_edge
slow_edge => state_r.OUTPUTSELECT
slow_edge => state_r.OUTPUTSELECT
slow_edge => state_r.OUTPUTSELECT
slow_edge => state_r.OUTPUTSELECT
reset => counter256:counter.reset
reset => state_r.OUTPUTSELECT
reset => state_r.OUTPUTSELECT
reset => state_r.OUTPUTSELECT
reset => state_r.OUTPUTSELECT
light_type[0] => counter256:counter.init_val[0]
light_type[0] => Equal1.IN1
light_type[0] => Equal2.IN1
light_type[1] => counter256:counter.init_val[1]
light_type[1] => Equal1.IN0
light_type[1] => Equal2.IN0


|lab8|snakes_and_apples:snake|grid_light:center_grid_row[12].center_grid_col[4].light|counter256:counter
count[0] <= count[0]~reg0.DB_MAX_OUTPUT_PORT_TYPE
count[1] <= count[1]~reg0.DB_MAX_OUTPUT_PORT_TYPE
count[2] <= count[2]~reg0.DB_MAX_OUTPUT_PORT_TYPE
count[3] <= count[3]~reg0.DB_MAX_OUTPUT_PORT_TYPE
count[4] <= count[4]~reg0.DB_MAX_OUTPUT_PORT_TYPE
count[5] <= count[5]~reg0.DB_MAX_OUTPUT_PORT_TYPE
count[6] <= count[6]~reg0.DB_MAX_OUTPUT_PORT_TYPE
count[7] <= count[7]~reg0.DB_MAX_OUTPUT_PORT_TYPE
start_val[0] => Add0.IN16
start_val[0] => count.DATAB
start_val[1] => Add0.IN15
start_val[1] => count.DATAB
start_val[2] => Add0.IN14
start_val[2] => count.DATAB
start_val[3] => Add0.IN13
start_val[3] => count.DATAB
start_val[4] => Add0.IN12
start_val[4] => count.DATAB
start_val[5] => Add0.IN11
start_val[5] => count.DATAB
start_val[6] => Add0.IN10
start_val[6] => count.DATAB
start_val[7] => Add0.IN9
start_val[7] => count.DATAB
inc => count.OUTPUTSELECT
inc => count.OUTPUTSELECT
inc => count.OUTPUTSELECT
inc => count.OUTPUTSELECT
inc => count.OUTPUTSELECT
inc => count.OUTPUTSELECT
inc => count.OUTPUTSELECT
inc => count.OUTPUTSELECT
inc => always0.IN0
enable => always0.IN1
enable => count.OUTPUTSELECT
enable => count.OUTPUTSELECT
enable => count.OUTPUTSELECT
enable => count.OUTPUTSELECT
enable => count.OUTPUTSELECT
enable => count.OUTPUTSELECT
enable => count.OUTPUTSELECT
enable => count.OUTPUTSELECT
clk => count[0]~reg0.CLK
clk => count[1]~reg0.CLK
clk => count[2]~reg0.CLK
clk => count[3]~reg0.CLK
clk => count[4]~reg0.CLK
clk => count[5]~reg0.CLK
clk => count[6]~reg0.CLK
clk => count[7]~reg0.CLK
slow_edge => count.OUTPUTSELECT
slow_edge => count.OUTPUTSELECT
slow_edge => count.OUTPUTSELECT
slow_edge => count.OUTPUTSELECT
slow_edge => count.OUTPUTSELECT
slow_edge => count.OUTPUTSELECT
slow_edge => count.OUTPUTSELECT
slow_edge => count.OUTPUTSELECT
reset => count.OUTPUTSELECT
reset => count.OUTPUTSELECT
reset => count.OUTPUTSELECT
reset => count.OUTPUTSELECT
reset => count.OUTPUTSELECT
reset => count.OUTPUTSELECT
reset => count.OUTPUTSELECT
reset => count.OUTPUTSELECT
init_val[0] => count.DATAB
init_val[1] => count.DATAB


|lab8|snakes_and_apples:snake|grid_light:center_grid_row[12].center_grid_col[5].light
green_light_on <= green_light_on.DB_MAX_OUTPUT_PORT_TYPE
head <= head.DB_MAX_OUTPUT_PORT_TYPE
game_over_out <= state_n.DB_MAX_OUTPUT_PORT_TYPE
eating => counter256:counter.inc
eating => always0.IN1
game_over_in => state_n.e_off.OUTPUTSELECT
game_over_in => state_n.e_countdown.OUTPUTSELECT
game_over_in => state_n.e_head.OUTPUTSELECT
game_over_in => state_n.OUTPUTSELECT
left => state_n.OUTPUTSELECT
left => state_n.OUTPUTSELECT
left => state_n.OUTPUTSELECT
left => state_n.OUTPUTSELECT
up => state_n.OUTPUTSELECT
up => state_n.OUTPUTSELECT
up => state_n.OUTPUTSELECT
up => state_n.OUTPUTSELECT
right => state_n.OUTPUTSELECT
right => state_n.OUTPUTSELECT
right => state_n.OUTPUTSELECT
right => state_n.OUTPUTSELECT
down => state_n.OUTPUTSELECT
down => state_n.OUTPUTSELECT
down => state_n.OUTPUTSELECT
down => state_n.OUTPUTSELECT
length[0] => counter256:counter.start_val[0]
length[1] => counter256:counter.start_val[1]
length[2] => counter256:counter.start_val[2]
length[3] => counter256:counter.start_val[3]
length[4] => counter256:counter.start_val[4]
length[5] => counter256:counter.start_val[5]
length[6] => counter256:counter.start_val[6]
length[7] => counter256:counter.start_val[7]
dir[0] => Mux0.IN5
dir[0] => Mux1.IN5
dir[0] => Mux2.IN5
dir[0] => Mux3.IN5
dir[1] => Mux0.IN4
dir[1] => Mux1.IN4
dir[1] => Mux2.IN4
dir[1] => Mux3.IN4
clk => counter256:counter.clk
clk => state_r~1.DATAIN
slow_edge => counter256:counter.slow_edge
slow_edge => state_r.OUTPUTSELECT
slow_edge => state_r.OUTPUTSELECT
slow_edge => state_r.OUTPUTSELECT
slow_edge => state_r.OUTPUTSELECT
reset => counter256:counter.reset
reset => state_r.OUTPUTSELECT
reset => state_r.OUTPUTSELECT
reset => state_r.OUTPUTSELECT
reset => state_r.OUTPUTSELECT
light_type[0] => counter256:counter.init_val[0]
light_type[0] => Equal1.IN1
light_type[0] => Equal2.IN1
light_type[1] => counter256:counter.init_val[1]
light_type[1] => Equal1.IN0
light_type[1] => Equal2.IN0


|lab8|snakes_and_apples:snake|grid_light:center_grid_row[12].center_grid_col[5].light|counter256:counter
count[0] <= count[0]~reg0.DB_MAX_OUTPUT_PORT_TYPE
count[1] <= count[1]~reg0.DB_MAX_OUTPUT_PORT_TYPE
count[2] <= count[2]~reg0.DB_MAX_OUTPUT_PORT_TYPE
count[3] <= count[3]~reg0.DB_MAX_OUTPUT_PORT_TYPE
count[4] <= count[4]~reg0.DB_MAX_OUTPUT_PORT_TYPE
count[5] <= count[5]~reg0.DB_MAX_OUTPUT_PORT_TYPE
count[6] <= count[6]~reg0.DB_MAX_OUTPUT_PORT_TYPE
count[7] <= count[7]~reg0.DB_MAX_OUTPUT_PORT_TYPE
start_val[0] => Add0.IN16
start_val[0] => count.DATAB
start_val[1] => Add0.IN15
start_val[1] => count.DATAB
start_val[2] => Add0.IN14
start_val[2] => count.DATAB
start_val[3] => Add0.IN13
start_val[3] => count.DATAB
start_val[4] => Add0.IN12
start_val[4] => count.DATAB
start_val[5] => Add0.IN11
start_val[5] => count.DATAB
start_val[6] => Add0.IN10
start_val[6] => count.DATAB
start_val[7] => Add0.IN9
start_val[7] => count.DATAB
inc => count.OUTPUTSELECT
inc => count.OUTPUTSELECT
inc => count.OUTPUTSELECT
inc => count.OUTPUTSELECT
inc => count.OUTPUTSELECT
inc => count.OUTPUTSELECT
inc => count.OUTPUTSELECT
inc => count.OUTPUTSELECT
inc => always0.IN0
enable => always0.IN1
enable => count.OUTPUTSELECT
enable => count.OUTPUTSELECT
enable => count.OUTPUTSELECT
enable => count.OUTPUTSELECT
enable => count.OUTPUTSELECT
enable => count.OUTPUTSELECT
enable => count.OUTPUTSELECT
enable => count.OUTPUTSELECT
clk => count[0]~reg0.CLK
clk => count[1]~reg0.CLK
clk => count[2]~reg0.CLK
clk => count[3]~reg0.CLK
clk => count[4]~reg0.CLK
clk => count[5]~reg0.CLK
clk => count[6]~reg0.CLK
clk => count[7]~reg0.CLK
slow_edge => count.OUTPUTSELECT
slow_edge => count.OUTPUTSELECT
slow_edge => count.OUTPUTSELECT
slow_edge => count.OUTPUTSELECT
slow_edge => count.OUTPUTSELECT
slow_edge => count.OUTPUTSELECT
slow_edge => count.OUTPUTSELECT
slow_edge => count.OUTPUTSELECT
reset => count.OUTPUTSELECT
reset => count.OUTPUTSELECT
reset => count.OUTPUTSELECT
reset => count.OUTPUTSELECT
reset => count.OUTPUTSELECT
reset => count.OUTPUTSELECT
reset => count.OUTPUTSELECT
reset => count.OUTPUTSELECT
init_val[0] => count.DATAB
init_val[1] => count.DATAB


|lab8|snakes_and_apples:snake|grid_light:center_grid_row[12].center_grid_col[6].light
green_light_on <= green_light_on.DB_MAX_OUTPUT_PORT_TYPE
head <= head.DB_MAX_OUTPUT_PORT_TYPE
game_over_out <= state_n.DB_MAX_OUTPUT_PORT_TYPE
eating => counter256:counter.inc
eating => always0.IN1
game_over_in => state_n.e_off.OUTPUTSELECT
game_over_in => state_n.e_countdown.OUTPUTSELECT
game_over_in => state_n.e_head.OUTPUTSELECT
game_over_in => state_n.OUTPUTSELECT
left => state_n.OUTPUTSELECT
left => state_n.OUTPUTSELECT
left => state_n.OUTPUTSELECT
left => state_n.OUTPUTSELECT
up => state_n.OUTPUTSELECT
up => state_n.OUTPUTSELECT
up => state_n.OUTPUTSELECT
up => state_n.OUTPUTSELECT
right => state_n.OUTPUTSELECT
right => state_n.OUTPUTSELECT
right => state_n.OUTPUTSELECT
right => state_n.OUTPUTSELECT
down => state_n.OUTPUTSELECT
down => state_n.OUTPUTSELECT
down => state_n.OUTPUTSELECT
down => state_n.OUTPUTSELECT
length[0] => counter256:counter.start_val[0]
length[1] => counter256:counter.start_val[1]
length[2] => counter256:counter.start_val[2]
length[3] => counter256:counter.start_val[3]
length[4] => counter256:counter.start_val[4]
length[5] => counter256:counter.start_val[5]
length[6] => counter256:counter.start_val[6]
length[7] => counter256:counter.start_val[7]
dir[0] => Mux0.IN5
dir[0] => Mux1.IN5
dir[0] => Mux2.IN5
dir[0] => Mux3.IN5
dir[1] => Mux0.IN4
dir[1] => Mux1.IN4
dir[1] => Mux2.IN4
dir[1] => Mux3.IN4
clk => counter256:counter.clk
clk => state_r~1.DATAIN
slow_edge => counter256:counter.slow_edge
slow_edge => state_r.OUTPUTSELECT
slow_edge => state_r.OUTPUTSELECT
slow_edge => state_r.OUTPUTSELECT
slow_edge => state_r.OUTPUTSELECT
reset => counter256:counter.reset
reset => state_r.OUTPUTSELECT
reset => state_r.OUTPUTSELECT
reset => state_r.OUTPUTSELECT
reset => state_r.OUTPUTSELECT
light_type[0] => counter256:counter.init_val[0]
light_type[0] => Equal1.IN1
light_type[0] => Equal2.IN1
light_type[1] => counter256:counter.init_val[1]
light_type[1] => Equal1.IN0
light_type[1] => Equal2.IN0


|lab8|snakes_and_apples:snake|grid_light:center_grid_row[12].center_grid_col[6].light|counter256:counter
count[0] <= count[0]~reg0.DB_MAX_OUTPUT_PORT_TYPE
count[1] <= count[1]~reg0.DB_MAX_OUTPUT_PORT_TYPE
count[2] <= count[2]~reg0.DB_MAX_OUTPUT_PORT_TYPE
count[3] <= count[3]~reg0.DB_MAX_OUTPUT_PORT_TYPE
count[4] <= count[4]~reg0.DB_MAX_OUTPUT_PORT_TYPE
count[5] <= count[5]~reg0.DB_MAX_OUTPUT_PORT_TYPE
count[6] <= count[6]~reg0.DB_MAX_OUTPUT_PORT_TYPE
count[7] <= count[7]~reg0.DB_MAX_OUTPUT_PORT_TYPE
start_val[0] => Add0.IN16
start_val[0] => count.DATAB
start_val[1] => Add0.IN15
start_val[1] => count.DATAB
start_val[2] => Add0.IN14
start_val[2] => count.DATAB
start_val[3] => Add0.IN13
start_val[3] => count.DATAB
start_val[4] => Add0.IN12
start_val[4] => count.DATAB
start_val[5] => Add0.IN11
start_val[5] => count.DATAB
start_val[6] => Add0.IN10
start_val[6] => count.DATAB
start_val[7] => Add0.IN9
start_val[7] => count.DATAB
inc => count.OUTPUTSELECT
inc => count.OUTPUTSELECT
inc => count.OUTPUTSELECT
inc => count.OUTPUTSELECT
inc => count.OUTPUTSELECT
inc => count.OUTPUTSELECT
inc => count.OUTPUTSELECT
inc => count.OUTPUTSELECT
inc => always0.IN0
enable => always0.IN1
enable => count.OUTPUTSELECT
enable => count.OUTPUTSELECT
enable => count.OUTPUTSELECT
enable => count.OUTPUTSELECT
enable => count.OUTPUTSELECT
enable => count.OUTPUTSELECT
enable => count.OUTPUTSELECT
enable => count.OUTPUTSELECT
clk => count[0]~reg0.CLK
clk => count[1]~reg0.CLK
clk => count[2]~reg0.CLK
clk => count[3]~reg0.CLK
clk => count[4]~reg0.CLK
clk => count[5]~reg0.CLK
clk => count[6]~reg0.CLK
clk => count[7]~reg0.CLK
slow_edge => count.OUTPUTSELECT
slow_edge => count.OUTPUTSELECT
slow_edge => count.OUTPUTSELECT
slow_edge => count.OUTPUTSELECT
slow_edge => count.OUTPUTSELECT
slow_edge => count.OUTPUTSELECT
slow_edge => count.OUTPUTSELECT
slow_edge => count.OUTPUTSELECT
reset => count.OUTPUTSELECT
reset => count.OUTPUTSELECT
reset => count.OUTPUTSELECT
reset => count.OUTPUTSELECT
reset => count.OUTPUTSELECT
reset => count.OUTPUTSELECT
reset => count.OUTPUTSELECT
reset => count.OUTPUTSELECT
init_val[0] => count.DATAB
init_val[1] => count.DATAB


|lab8|snakes_and_apples:snake|grid_light:center_grid_row[12].center_grid_col[7].light
green_light_on <= green_light_on.DB_MAX_OUTPUT_PORT_TYPE
head <= head.DB_MAX_OUTPUT_PORT_TYPE
game_over_out <= state_n.DB_MAX_OUTPUT_PORT_TYPE
eating => counter256:counter.inc
eating => always0.IN1
game_over_in => state_n.e_off.OUTPUTSELECT
game_over_in => state_n.e_countdown.OUTPUTSELECT
game_over_in => state_n.e_head.OUTPUTSELECT
game_over_in => state_n.OUTPUTSELECT
left => state_n.OUTPUTSELECT
left => state_n.OUTPUTSELECT
left => state_n.OUTPUTSELECT
left => state_n.OUTPUTSELECT
up => state_n.OUTPUTSELECT
up => state_n.OUTPUTSELECT
up => state_n.OUTPUTSELECT
up => state_n.OUTPUTSELECT
right => state_n.OUTPUTSELECT
right => state_n.OUTPUTSELECT
right => state_n.OUTPUTSELECT
right => state_n.OUTPUTSELECT
down => state_n.OUTPUTSELECT
down => state_n.OUTPUTSELECT
down => state_n.OUTPUTSELECT
down => state_n.OUTPUTSELECT
length[0] => counter256:counter.start_val[0]
length[1] => counter256:counter.start_val[1]
length[2] => counter256:counter.start_val[2]
length[3] => counter256:counter.start_val[3]
length[4] => counter256:counter.start_val[4]
length[5] => counter256:counter.start_val[5]
length[6] => counter256:counter.start_val[6]
length[7] => counter256:counter.start_val[7]
dir[0] => Mux0.IN5
dir[0] => Mux1.IN5
dir[0] => Mux2.IN5
dir[0] => Mux3.IN5
dir[1] => Mux0.IN4
dir[1] => Mux1.IN4
dir[1] => Mux2.IN4
dir[1] => Mux3.IN4
clk => counter256:counter.clk
clk => state_r~1.DATAIN
slow_edge => counter256:counter.slow_edge
slow_edge => state_r.OUTPUTSELECT
slow_edge => state_r.OUTPUTSELECT
slow_edge => state_r.OUTPUTSELECT
slow_edge => state_r.OUTPUTSELECT
reset => counter256:counter.reset
reset => state_r.OUTPUTSELECT
reset => state_r.OUTPUTSELECT
reset => state_r.OUTPUTSELECT
reset => state_r.OUTPUTSELECT
light_type[0] => counter256:counter.init_val[0]
light_type[0] => Equal1.IN1
light_type[0] => Equal2.IN1
light_type[1] => counter256:counter.init_val[1]
light_type[1] => Equal1.IN0
light_type[1] => Equal2.IN0


|lab8|snakes_and_apples:snake|grid_light:center_grid_row[12].center_grid_col[7].light|counter256:counter
count[0] <= count[0]~reg0.DB_MAX_OUTPUT_PORT_TYPE
count[1] <= count[1]~reg0.DB_MAX_OUTPUT_PORT_TYPE
count[2] <= count[2]~reg0.DB_MAX_OUTPUT_PORT_TYPE
count[3] <= count[3]~reg0.DB_MAX_OUTPUT_PORT_TYPE
count[4] <= count[4]~reg0.DB_MAX_OUTPUT_PORT_TYPE
count[5] <= count[5]~reg0.DB_MAX_OUTPUT_PORT_TYPE
count[6] <= count[6]~reg0.DB_MAX_OUTPUT_PORT_TYPE
count[7] <= count[7]~reg0.DB_MAX_OUTPUT_PORT_TYPE
start_val[0] => Add0.IN16
start_val[0] => count.DATAB
start_val[1] => Add0.IN15
start_val[1] => count.DATAB
start_val[2] => Add0.IN14
start_val[2] => count.DATAB
start_val[3] => Add0.IN13
start_val[3] => count.DATAB
start_val[4] => Add0.IN12
start_val[4] => count.DATAB
start_val[5] => Add0.IN11
start_val[5] => count.DATAB
start_val[6] => Add0.IN10
start_val[6] => count.DATAB
start_val[7] => Add0.IN9
start_val[7] => count.DATAB
inc => count.OUTPUTSELECT
inc => count.OUTPUTSELECT
inc => count.OUTPUTSELECT
inc => count.OUTPUTSELECT
inc => count.OUTPUTSELECT
inc => count.OUTPUTSELECT
inc => count.OUTPUTSELECT
inc => count.OUTPUTSELECT
inc => always0.IN0
enable => always0.IN1
enable => count.OUTPUTSELECT
enable => count.OUTPUTSELECT
enable => count.OUTPUTSELECT
enable => count.OUTPUTSELECT
enable => count.OUTPUTSELECT
enable => count.OUTPUTSELECT
enable => count.OUTPUTSELECT
enable => count.OUTPUTSELECT
clk => count[0]~reg0.CLK
clk => count[1]~reg0.CLK
clk => count[2]~reg0.CLK
clk => count[3]~reg0.CLK
clk => count[4]~reg0.CLK
clk => count[5]~reg0.CLK
clk => count[6]~reg0.CLK
clk => count[7]~reg0.CLK
slow_edge => count.OUTPUTSELECT
slow_edge => count.OUTPUTSELECT
slow_edge => count.OUTPUTSELECT
slow_edge => count.OUTPUTSELECT
slow_edge => count.OUTPUTSELECT
slow_edge => count.OUTPUTSELECT
slow_edge => count.OUTPUTSELECT
slow_edge => count.OUTPUTSELECT
reset => count.OUTPUTSELECT
reset => count.OUTPUTSELECT
reset => count.OUTPUTSELECT
reset => count.OUTPUTSELECT
reset => count.OUTPUTSELECT
reset => count.OUTPUTSELECT
reset => count.OUTPUTSELECT
reset => count.OUTPUTSELECT
init_val[0] => count.DATAB
init_val[1] => count.DATAB


|lab8|snakes_and_apples:snake|grid_light:center_grid_row[12].center_grid_col[8].light
green_light_on <= green_light_on.DB_MAX_OUTPUT_PORT_TYPE
head <= head.DB_MAX_OUTPUT_PORT_TYPE
game_over_out <= state_n.DB_MAX_OUTPUT_PORT_TYPE
eating => counter256:counter.inc
eating => always0.IN1
game_over_in => state_n.e_off.OUTPUTSELECT
game_over_in => state_n.e_countdown.OUTPUTSELECT
game_over_in => state_n.e_head.OUTPUTSELECT
game_over_in => state_n.OUTPUTSELECT
left => state_n.OUTPUTSELECT
left => state_n.OUTPUTSELECT
left => state_n.OUTPUTSELECT
left => state_n.OUTPUTSELECT
up => state_n.OUTPUTSELECT
up => state_n.OUTPUTSELECT
up => state_n.OUTPUTSELECT
up => state_n.OUTPUTSELECT
right => state_n.OUTPUTSELECT
right => state_n.OUTPUTSELECT
right => state_n.OUTPUTSELECT
right => state_n.OUTPUTSELECT
down => state_n.OUTPUTSELECT
down => state_n.OUTPUTSELECT
down => state_n.OUTPUTSELECT
down => state_n.OUTPUTSELECT
length[0] => counter256:counter.start_val[0]
length[1] => counter256:counter.start_val[1]
length[2] => counter256:counter.start_val[2]
length[3] => counter256:counter.start_val[3]
length[4] => counter256:counter.start_val[4]
length[5] => counter256:counter.start_val[5]
length[6] => counter256:counter.start_val[6]
length[7] => counter256:counter.start_val[7]
dir[0] => Mux0.IN5
dir[0] => Mux1.IN5
dir[0] => Mux2.IN5
dir[0] => Mux3.IN5
dir[1] => Mux0.IN4
dir[1] => Mux1.IN4
dir[1] => Mux2.IN4
dir[1] => Mux3.IN4
clk => counter256:counter.clk
clk => state_r~1.DATAIN
slow_edge => counter256:counter.slow_edge
slow_edge => state_r.OUTPUTSELECT
slow_edge => state_r.OUTPUTSELECT
slow_edge => state_r.OUTPUTSELECT
slow_edge => state_r.OUTPUTSELECT
reset => counter256:counter.reset
reset => state_r.OUTPUTSELECT
reset => state_r.OUTPUTSELECT
reset => state_r.OUTPUTSELECT
reset => state_r.OUTPUTSELECT
light_type[0] => counter256:counter.init_val[0]
light_type[0] => Equal1.IN1
light_type[0] => Equal2.IN1
light_type[1] => counter256:counter.init_val[1]
light_type[1] => Equal1.IN0
light_type[1] => Equal2.IN0


|lab8|snakes_and_apples:snake|grid_light:center_grid_row[12].center_grid_col[8].light|counter256:counter
count[0] <= count[0]~reg0.DB_MAX_OUTPUT_PORT_TYPE
count[1] <= count[1]~reg0.DB_MAX_OUTPUT_PORT_TYPE
count[2] <= count[2]~reg0.DB_MAX_OUTPUT_PORT_TYPE
count[3] <= count[3]~reg0.DB_MAX_OUTPUT_PORT_TYPE
count[4] <= count[4]~reg0.DB_MAX_OUTPUT_PORT_TYPE
count[5] <= count[5]~reg0.DB_MAX_OUTPUT_PORT_TYPE
count[6] <= count[6]~reg0.DB_MAX_OUTPUT_PORT_TYPE
count[7] <= count[7]~reg0.DB_MAX_OUTPUT_PORT_TYPE
start_val[0] => Add0.IN16
start_val[0] => count.DATAB
start_val[1] => Add0.IN15
start_val[1] => count.DATAB
start_val[2] => Add0.IN14
start_val[2] => count.DATAB
start_val[3] => Add0.IN13
start_val[3] => count.DATAB
start_val[4] => Add0.IN12
start_val[4] => count.DATAB
start_val[5] => Add0.IN11
start_val[5] => count.DATAB
start_val[6] => Add0.IN10
start_val[6] => count.DATAB
start_val[7] => Add0.IN9
start_val[7] => count.DATAB
inc => count.OUTPUTSELECT
inc => count.OUTPUTSELECT
inc => count.OUTPUTSELECT
inc => count.OUTPUTSELECT
inc => count.OUTPUTSELECT
inc => count.OUTPUTSELECT
inc => count.OUTPUTSELECT
inc => count.OUTPUTSELECT
inc => always0.IN0
enable => always0.IN1
enable => count.OUTPUTSELECT
enable => count.OUTPUTSELECT
enable => count.OUTPUTSELECT
enable => count.OUTPUTSELECT
enable => count.OUTPUTSELECT
enable => count.OUTPUTSELECT
enable => count.OUTPUTSELECT
enable => count.OUTPUTSELECT
clk => count[0]~reg0.CLK
clk => count[1]~reg0.CLK
clk => count[2]~reg0.CLK
clk => count[3]~reg0.CLK
clk => count[4]~reg0.CLK
clk => count[5]~reg0.CLK
clk => count[6]~reg0.CLK
clk => count[7]~reg0.CLK
slow_edge => count.OUTPUTSELECT
slow_edge => count.OUTPUTSELECT
slow_edge => count.OUTPUTSELECT
slow_edge => count.OUTPUTSELECT
slow_edge => count.OUTPUTSELECT
slow_edge => count.OUTPUTSELECT
slow_edge => count.OUTPUTSELECT
slow_edge => count.OUTPUTSELECT
reset => count.OUTPUTSELECT
reset => count.OUTPUTSELECT
reset => count.OUTPUTSELECT
reset => count.OUTPUTSELECT
reset => count.OUTPUTSELECT
reset => count.OUTPUTSELECT
reset => count.OUTPUTSELECT
reset => count.OUTPUTSELECT
init_val[0] => count.DATAB
init_val[1] => count.DATAB


|lab8|snakes_and_apples:snake|grid_light:center_grid_row[12].center_grid_col[9].light
green_light_on <= green_light_on.DB_MAX_OUTPUT_PORT_TYPE
head <= head.DB_MAX_OUTPUT_PORT_TYPE
game_over_out <= state_n.DB_MAX_OUTPUT_PORT_TYPE
eating => counter256:counter.inc
eating => always0.IN1
game_over_in => state_n.e_off.OUTPUTSELECT
game_over_in => state_n.e_countdown.OUTPUTSELECT
game_over_in => state_n.e_head.OUTPUTSELECT
game_over_in => state_n.OUTPUTSELECT
left => state_n.OUTPUTSELECT
left => state_n.OUTPUTSELECT
left => state_n.OUTPUTSELECT
left => state_n.OUTPUTSELECT
up => state_n.OUTPUTSELECT
up => state_n.OUTPUTSELECT
up => state_n.OUTPUTSELECT
up => state_n.OUTPUTSELECT
right => state_n.OUTPUTSELECT
right => state_n.OUTPUTSELECT
right => state_n.OUTPUTSELECT
right => state_n.OUTPUTSELECT
down => state_n.OUTPUTSELECT
down => state_n.OUTPUTSELECT
down => state_n.OUTPUTSELECT
down => state_n.OUTPUTSELECT
length[0] => counter256:counter.start_val[0]
length[1] => counter256:counter.start_val[1]
length[2] => counter256:counter.start_val[2]
length[3] => counter256:counter.start_val[3]
length[4] => counter256:counter.start_val[4]
length[5] => counter256:counter.start_val[5]
length[6] => counter256:counter.start_val[6]
length[7] => counter256:counter.start_val[7]
dir[0] => Mux0.IN5
dir[0] => Mux1.IN5
dir[0] => Mux2.IN5
dir[0] => Mux3.IN5
dir[1] => Mux0.IN4
dir[1] => Mux1.IN4
dir[1] => Mux2.IN4
dir[1] => Mux3.IN4
clk => counter256:counter.clk
clk => state_r~1.DATAIN
slow_edge => counter256:counter.slow_edge
slow_edge => state_r.OUTPUTSELECT
slow_edge => state_r.OUTPUTSELECT
slow_edge => state_r.OUTPUTSELECT
slow_edge => state_r.OUTPUTSELECT
reset => counter256:counter.reset
reset => state_r.OUTPUTSELECT
reset => state_r.OUTPUTSELECT
reset => state_r.OUTPUTSELECT
reset => state_r.OUTPUTSELECT
light_type[0] => counter256:counter.init_val[0]
light_type[0] => Equal1.IN1
light_type[0] => Equal2.IN1
light_type[1] => counter256:counter.init_val[1]
light_type[1] => Equal1.IN0
light_type[1] => Equal2.IN0


|lab8|snakes_and_apples:snake|grid_light:center_grid_row[12].center_grid_col[9].light|counter256:counter
count[0] <= count[0]~reg0.DB_MAX_OUTPUT_PORT_TYPE
count[1] <= count[1]~reg0.DB_MAX_OUTPUT_PORT_TYPE
count[2] <= count[2]~reg0.DB_MAX_OUTPUT_PORT_TYPE
count[3] <= count[3]~reg0.DB_MAX_OUTPUT_PORT_TYPE
count[4] <= count[4]~reg0.DB_MAX_OUTPUT_PORT_TYPE
count[5] <= count[5]~reg0.DB_MAX_OUTPUT_PORT_TYPE
count[6] <= count[6]~reg0.DB_MAX_OUTPUT_PORT_TYPE
count[7] <= count[7]~reg0.DB_MAX_OUTPUT_PORT_TYPE
start_val[0] => Add0.IN16
start_val[0] => count.DATAB
start_val[1] => Add0.IN15
start_val[1] => count.DATAB
start_val[2] => Add0.IN14
start_val[2] => count.DATAB
start_val[3] => Add0.IN13
start_val[3] => count.DATAB
start_val[4] => Add0.IN12
start_val[4] => count.DATAB
start_val[5] => Add0.IN11
start_val[5] => count.DATAB
start_val[6] => Add0.IN10
start_val[6] => count.DATAB
start_val[7] => Add0.IN9
start_val[7] => count.DATAB
inc => count.OUTPUTSELECT
inc => count.OUTPUTSELECT
inc => count.OUTPUTSELECT
inc => count.OUTPUTSELECT
inc => count.OUTPUTSELECT
inc => count.OUTPUTSELECT
inc => count.OUTPUTSELECT
inc => count.OUTPUTSELECT
inc => always0.IN0
enable => always0.IN1
enable => count.OUTPUTSELECT
enable => count.OUTPUTSELECT
enable => count.OUTPUTSELECT
enable => count.OUTPUTSELECT
enable => count.OUTPUTSELECT
enable => count.OUTPUTSELECT
enable => count.OUTPUTSELECT
enable => count.OUTPUTSELECT
clk => count[0]~reg0.CLK
clk => count[1]~reg0.CLK
clk => count[2]~reg0.CLK
clk => count[3]~reg0.CLK
clk => count[4]~reg0.CLK
clk => count[5]~reg0.CLK
clk => count[6]~reg0.CLK
clk => count[7]~reg0.CLK
slow_edge => count.OUTPUTSELECT
slow_edge => count.OUTPUTSELECT
slow_edge => count.OUTPUTSELECT
slow_edge => count.OUTPUTSELECT
slow_edge => count.OUTPUTSELECT
slow_edge => count.OUTPUTSELECT
slow_edge => count.OUTPUTSELECT
slow_edge => count.OUTPUTSELECT
reset => count.OUTPUTSELECT
reset => count.OUTPUTSELECT
reset => count.OUTPUTSELECT
reset => count.OUTPUTSELECT
reset => count.OUTPUTSELECT
reset => count.OUTPUTSELECT
reset => count.OUTPUTSELECT
reset => count.OUTPUTSELECT
init_val[0] => count.DATAB
init_val[1] => count.DATAB


|lab8|snakes_and_apples:snake|grid_light:center_grid_row[12].center_grid_col[10].light
green_light_on <= green_light_on.DB_MAX_OUTPUT_PORT_TYPE
head <= head.DB_MAX_OUTPUT_PORT_TYPE
game_over_out <= state_n.DB_MAX_OUTPUT_PORT_TYPE
eating => counter256:counter.inc
eating => always0.IN1
game_over_in => state_n.e_off.OUTPUTSELECT
game_over_in => state_n.e_countdown.OUTPUTSELECT
game_over_in => state_n.e_head.OUTPUTSELECT
game_over_in => state_n.OUTPUTSELECT
left => state_n.OUTPUTSELECT
left => state_n.OUTPUTSELECT
left => state_n.OUTPUTSELECT
left => state_n.OUTPUTSELECT
up => state_n.OUTPUTSELECT
up => state_n.OUTPUTSELECT
up => state_n.OUTPUTSELECT
up => state_n.OUTPUTSELECT
right => state_n.OUTPUTSELECT
right => state_n.OUTPUTSELECT
right => state_n.OUTPUTSELECT
right => state_n.OUTPUTSELECT
down => state_n.OUTPUTSELECT
down => state_n.OUTPUTSELECT
down => state_n.OUTPUTSELECT
down => state_n.OUTPUTSELECT
length[0] => counter256:counter.start_val[0]
length[1] => counter256:counter.start_val[1]
length[2] => counter256:counter.start_val[2]
length[3] => counter256:counter.start_val[3]
length[4] => counter256:counter.start_val[4]
length[5] => counter256:counter.start_val[5]
length[6] => counter256:counter.start_val[6]
length[7] => counter256:counter.start_val[7]
dir[0] => Mux0.IN5
dir[0] => Mux1.IN5
dir[0] => Mux2.IN5
dir[0] => Mux3.IN5
dir[1] => Mux0.IN4
dir[1] => Mux1.IN4
dir[1] => Mux2.IN4
dir[1] => Mux3.IN4
clk => counter256:counter.clk
clk => state_r~1.DATAIN
slow_edge => counter256:counter.slow_edge
slow_edge => state_r.OUTPUTSELECT
slow_edge => state_r.OUTPUTSELECT
slow_edge => state_r.OUTPUTSELECT
slow_edge => state_r.OUTPUTSELECT
reset => counter256:counter.reset
reset => state_r.OUTPUTSELECT
reset => state_r.OUTPUTSELECT
reset => state_r.OUTPUTSELECT
reset => state_r.OUTPUTSELECT
light_type[0] => counter256:counter.init_val[0]
light_type[0] => Equal1.IN1
light_type[0] => Equal2.IN1
light_type[1] => counter256:counter.init_val[1]
light_type[1] => Equal1.IN0
light_type[1] => Equal2.IN0


|lab8|snakes_and_apples:snake|grid_light:center_grid_row[12].center_grid_col[10].light|counter256:counter
count[0] <= count[0]~reg0.DB_MAX_OUTPUT_PORT_TYPE
count[1] <= count[1]~reg0.DB_MAX_OUTPUT_PORT_TYPE
count[2] <= count[2]~reg0.DB_MAX_OUTPUT_PORT_TYPE
count[3] <= count[3]~reg0.DB_MAX_OUTPUT_PORT_TYPE
count[4] <= count[4]~reg0.DB_MAX_OUTPUT_PORT_TYPE
count[5] <= count[5]~reg0.DB_MAX_OUTPUT_PORT_TYPE
count[6] <= count[6]~reg0.DB_MAX_OUTPUT_PORT_TYPE
count[7] <= count[7]~reg0.DB_MAX_OUTPUT_PORT_TYPE
start_val[0] => Add0.IN16
start_val[0] => count.DATAB
start_val[1] => Add0.IN15
start_val[1] => count.DATAB
start_val[2] => Add0.IN14
start_val[2] => count.DATAB
start_val[3] => Add0.IN13
start_val[3] => count.DATAB
start_val[4] => Add0.IN12
start_val[4] => count.DATAB
start_val[5] => Add0.IN11
start_val[5] => count.DATAB
start_val[6] => Add0.IN10
start_val[6] => count.DATAB
start_val[7] => Add0.IN9
start_val[7] => count.DATAB
inc => count.OUTPUTSELECT
inc => count.OUTPUTSELECT
inc => count.OUTPUTSELECT
inc => count.OUTPUTSELECT
inc => count.OUTPUTSELECT
inc => count.OUTPUTSELECT
inc => count.OUTPUTSELECT
inc => count.OUTPUTSELECT
inc => always0.IN0
enable => always0.IN1
enable => count.OUTPUTSELECT
enable => count.OUTPUTSELECT
enable => count.OUTPUTSELECT
enable => count.OUTPUTSELECT
enable => count.OUTPUTSELECT
enable => count.OUTPUTSELECT
enable => count.OUTPUTSELECT
enable => count.OUTPUTSELECT
clk => count[0]~reg0.CLK
clk => count[1]~reg0.CLK
clk => count[2]~reg0.CLK
clk => count[3]~reg0.CLK
clk => count[4]~reg0.CLK
clk => count[5]~reg0.CLK
clk => count[6]~reg0.CLK
clk => count[7]~reg0.CLK
slow_edge => count.OUTPUTSELECT
slow_edge => count.OUTPUTSELECT
slow_edge => count.OUTPUTSELECT
slow_edge => count.OUTPUTSELECT
slow_edge => count.OUTPUTSELECT
slow_edge => count.OUTPUTSELECT
slow_edge => count.OUTPUTSELECT
slow_edge => count.OUTPUTSELECT
reset => count.OUTPUTSELECT
reset => count.OUTPUTSELECT
reset => count.OUTPUTSELECT
reset => count.OUTPUTSELECT
reset => count.OUTPUTSELECT
reset => count.OUTPUTSELECT
reset => count.OUTPUTSELECT
reset => count.OUTPUTSELECT
init_val[0] => count.DATAB
init_val[1] => count.DATAB


|lab8|snakes_and_apples:snake|grid_light:center_grid_row[12].center_grid_col[11].light
green_light_on <= green_light_on.DB_MAX_OUTPUT_PORT_TYPE
head <= head.DB_MAX_OUTPUT_PORT_TYPE
game_over_out <= state_n.DB_MAX_OUTPUT_PORT_TYPE
eating => counter256:counter.inc
eating => always0.IN1
game_over_in => state_n.e_off.OUTPUTSELECT
game_over_in => state_n.e_countdown.OUTPUTSELECT
game_over_in => state_n.e_head.OUTPUTSELECT
game_over_in => state_n.OUTPUTSELECT
left => state_n.OUTPUTSELECT
left => state_n.OUTPUTSELECT
left => state_n.OUTPUTSELECT
left => state_n.OUTPUTSELECT
up => state_n.OUTPUTSELECT
up => state_n.OUTPUTSELECT
up => state_n.OUTPUTSELECT
up => state_n.OUTPUTSELECT
right => state_n.OUTPUTSELECT
right => state_n.OUTPUTSELECT
right => state_n.OUTPUTSELECT
right => state_n.OUTPUTSELECT
down => state_n.OUTPUTSELECT
down => state_n.OUTPUTSELECT
down => state_n.OUTPUTSELECT
down => state_n.OUTPUTSELECT
length[0] => counter256:counter.start_val[0]
length[1] => counter256:counter.start_val[1]
length[2] => counter256:counter.start_val[2]
length[3] => counter256:counter.start_val[3]
length[4] => counter256:counter.start_val[4]
length[5] => counter256:counter.start_val[5]
length[6] => counter256:counter.start_val[6]
length[7] => counter256:counter.start_val[7]
dir[0] => Mux0.IN5
dir[0] => Mux1.IN5
dir[0] => Mux2.IN5
dir[0] => Mux3.IN5
dir[1] => Mux0.IN4
dir[1] => Mux1.IN4
dir[1] => Mux2.IN4
dir[1] => Mux3.IN4
clk => counter256:counter.clk
clk => state_r~1.DATAIN
slow_edge => counter256:counter.slow_edge
slow_edge => state_r.OUTPUTSELECT
slow_edge => state_r.OUTPUTSELECT
slow_edge => state_r.OUTPUTSELECT
slow_edge => state_r.OUTPUTSELECT
reset => counter256:counter.reset
reset => state_r.OUTPUTSELECT
reset => state_r.OUTPUTSELECT
reset => state_r.OUTPUTSELECT
reset => state_r.OUTPUTSELECT
light_type[0] => counter256:counter.init_val[0]
light_type[0] => Equal1.IN1
light_type[0] => Equal2.IN1
light_type[1] => counter256:counter.init_val[1]
light_type[1] => Equal1.IN0
light_type[1] => Equal2.IN0


|lab8|snakes_and_apples:snake|grid_light:center_grid_row[12].center_grid_col[11].light|counter256:counter
count[0] <= count[0]~reg0.DB_MAX_OUTPUT_PORT_TYPE
count[1] <= count[1]~reg0.DB_MAX_OUTPUT_PORT_TYPE
count[2] <= count[2]~reg0.DB_MAX_OUTPUT_PORT_TYPE
count[3] <= count[3]~reg0.DB_MAX_OUTPUT_PORT_TYPE
count[4] <= count[4]~reg0.DB_MAX_OUTPUT_PORT_TYPE
count[5] <= count[5]~reg0.DB_MAX_OUTPUT_PORT_TYPE
count[6] <= count[6]~reg0.DB_MAX_OUTPUT_PORT_TYPE
count[7] <= count[7]~reg0.DB_MAX_OUTPUT_PORT_TYPE
start_val[0] => Add0.IN16
start_val[0] => count.DATAB
start_val[1] => Add0.IN15
start_val[1] => count.DATAB
start_val[2] => Add0.IN14
start_val[2] => count.DATAB
start_val[3] => Add0.IN13
start_val[3] => count.DATAB
start_val[4] => Add0.IN12
start_val[4] => count.DATAB
start_val[5] => Add0.IN11
start_val[5] => count.DATAB
start_val[6] => Add0.IN10
start_val[6] => count.DATAB
start_val[7] => Add0.IN9
start_val[7] => count.DATAB
inc => count.OUTPUTSELECT
inc => count.OUTPUTSELECT
inc => count.OUTPUTSELECT
inc => count.OUTPUTSELECT
inc => count.OUTPUTSELECT
inc => count.OUTPUTSELECT
inc => count.OUTPUTSELECT
inc => count.OUTPUTSELECT
inc => always0.IN0
enable => always0.IN1
enable => count.OUTPUTSELECT
enable => count.OUTPUTSELECT
enable => count.OUTPUTSELECT
enable => count.OUTPUTSELECT
enable => count.OUTPUTSELECT
enable => count.OUTPUTSELECT
enable => count.OUTPUTSELECT
enable => count.OUTPUTSELECT
clk => count[0]~reg0.CLK
clk => count[1]~reg0.CLK
clk => count[2]~reg0.CLK
clk => count[3]~reg0.CLK
clk => count[4]~reg0.CLK
clk => count[5]~reg0.CLK
clk => count[6]~reg0.CLK
clk => count[7]~reg0.CLK
slow_edge => count.OUTPUTSELECT
slow_edge => count.OUTPUTSELECT
slow_edge => count.OUTPUTSELECT
slow_edge => count.OUTPUTSELECT
slow_edge => count.OUTPUTSELECT
slow_edge => count.OUTPUTSELECT
slow_edge => count.OUTPUTSELECT
slow_edge => count.OUTPUTSELECT
reset => count.OUTPUTSELECT
reset => count.OUTPUTSELECT
reset => count.OUTPUTSELECT
reset => count.OUTPUTSELECT
reset => count.OUTPUTSELECT
reset => count.OUTPUTSELECT
reset => count.OUTPUTSELECT
reset => count.OUTPUTSELECT
init_val[0] => count.DATAB
init_val[1] => count.DATAB


|lab8|snakes_and_apples:snake|grid_light:center_grid_row[12].center_grid_col[12].light
green_light_on <= green_light_on.DB_MAX_OUTPUT_PORT_TYPE
head <= head.DB_MAX_OUTPUT_PORT_TYPE
game_over_out <= state_n.DB_MAX_OUTPUT_PORT_TYPE
eating => counter256:counter.inc
eating => always0.IN1
game_over_in => state_n.e_off.OUTPUTSELECT
game_over_in => state_n.e_countdown.OUTPUTSELECT
game_over_in => state_n.e_head.OUTPUTSELECT
game_over_in => state_n.OUTPUTSELECT
left => state_n.OUTPUTSELECT
left => state_n.OUTPUTSELECT
left => state_n.OUTPUTSELECT
left => state_n.OUTPUTSELECT
up => state_n.OUTPUTSELECT
up => state_n.OUTPUTSELECT
up => state_n.OUTPUTSELECT
up => state_n.OUTPUTSELECT
right => state_n.OUTPUTSELECT
right => state_n.OUTPUTSELECT
right => state_n.OUTPUTSELECT
right => state_n.OUTPUTSELECT
down => state_n.OUTPUTSELECT
down => state_n.OUTPUTSELECT
down => state_n.OUTPUTSELECT
down => state_n.OUTPUTSELECT
length[0] => counter256:counter.start_val[0]
length[1] => counter256:counter.start_val[1]
length[2] => counter256:counter.start_val[2]
length[3] => counter256:counter.start_val[3]
length[4] => counter256:counter.start_val[4]
length[5] => counter256:counter.start_val[5]
length[6] => counter256:counter.start_val[6]
length[7] => counter256:counter.start_val[7]
dir[0] => Mux0.IN5
dir[0] => Mux1.IN5
dir[0] => Mux2.IN5
dir[0] => Mux3.IN5
dir[1] => Mux0.IN4
dir[1] => Mux1.IN4
dir[1] => Mux2.IN4
dir[1] => Mux3.IN4
clk => counter256:counter.clk
clk => state_r~1.DATAIN
slow_edge => counter256:counter.slow_edge
slow_edge => state_r.OUTPUTSELECT
slow_edge => state_r.OUTPUTSELECT
slow_edge => state_r.OUTPUTSELECT
slow_edge => state_r.OUTPUTSELECT
reset => counter256:counter.reset
reset => state_r.OUTPUTSELECT
reset => state_r.OUTPUTSELECT
reset => state_r.OUTPUTSELECT
reset => state_r.OUTPUTSELECT
light_type[0] => counter256:counter.init_val[0]
light_type[0] => Equal1.IN1
light_type[0] => Equal2.IN1
light_type[1] => counter256:counter.init_val[1]
light_type[1] => Equal1.IN0
light_type[1] => Equal2.IN0


|lab8|snakes_and_apples:snake|grid_light:center_grid_row[12].center_grid_col[12].light|counter256:counter
count[0] <= count[0]~reg0.DB_MAX_OUTPUT_PORT_TYPE
count[1] <= count[1]~reg0.DB_MAX_OUTPUT_PORT_TYPE
count[2] <= count[2]~reg0.DB_MAX_OUTPUT_PORT_TYPE
count[3] <= count[3]~reg0.DB_MAX_OUTPUT_PORT_TYPE
count[4] <= count[4]~reg0.DB_MAX_OUTPUT_PORT_TYPE
count[5] <= count[5]~reg0.DB_MAX_OUTPUT_PORT_TYPE
count[6] <= count[6]~reg0.DB_MAX_OUTPUT_PORT_TYPE
count[7] <= count[7]~reg0.DB_MAX_OUTPUT_PORT_TYPE
start_val[0] => Add0.IN16
start_val[0] => count.DATAB
start_val[1] => Add0.IN15
start_val[1] => count.DATAB
start_val[2] => Add0.IN14
start_val[2] => count.DATAB
start_val[3] => Add0.IN13
start_val[3] => count.DATAB
start_val[4] => Add0.IN12
start_val[4] => count.DATAB
start_val[5] => Add0.IN11
start_val[5] => count.DATAB
start_val[6] => Add0.IN10
start_val[6] => count.DATAB
start_val[7] => Add0.IN9
start_val[7] => count.DATAB
inc => count.OUTPUTSELECT
inc => count.OUTPUTSELECT
inc => count.OUTPUTSELECT
inc => count.OUTPUTSELECT
inc => count.OUTPUTSELECT
inc => count.OUTPUTSELECT
inc => count.OUTPUTSELECT
inc => count.OUTPUTSELECT
inc => always0.IN0
enable => always0.IN1
enable => count.OUTPUTSELECT
enable => count.OUTPUTSELECT
enable => count.OUTPUTSELECT
enable => count.OUTPUTSELECT
enable => count.OUTPUTSELECT
enable => count.OUTPUTSELECT
enable => count.OUTPUTSELECT
enable => count.OUTPUTSELECT
clk => count[0]~reg0.CLK
clk => count[1]~reg0.CLK
clk => count[2]~reg0.CLK
clk => count[3]~reg0.CLK
clk => count[4]~reg0.CLK
clk => count[5]~reg0.CLK
clk => count[6]~reg0.CLK
clk => count[7]~reg0.CLK
slow_edge => count.OUTPUTSELECT
slow_edge => count.OUTPUTSELECT
slow_edge => count.OUTPUTSELECT
slow_edge => count.OUTPUTSELECT
slow_edge => count.OUTPUTSELECT
slow_edge => count.OUTPUTSELECT
slow_edge => count.OUTPUTSELECT
slow_edge => count.OUTPUTSELECT
reset => count.OUTPUTSELECT
reset => count.OUTPUTSELECT
reset => count.OUTPUTSELECT
reset => count.OUTPUTSELECT
reset => count.OUTPUTSELECT
reset => count.OUTPUTSELECT
reset => count.OUTPUTSELECT
reset => count.OUTPUTSELECT
init_val[0] => count.DATAB
init_val[1] => count.DATAB


|lab8|snakes_and_apples:snake|grid_light:center_grid_row[12].center_grid_col[13].light
green_light_on <= green_light_on.DB_MAX_OUTPUT_PORT_TYPE
head <= head.DB_MAX_OUTPUT_PORT_TYPE
game_over_out <= state_n.DB_MAX_OUTPUT_PORT_TYPE
eating => counter256:counter.inc
eating => always0.IN1
game_over_in => state_n.e_off.OUTPUTSELECT
game_over_in => state_n.e_countdown.OUTPUTSELECT
game_over_in => state_n.e_head.OUTPUTSELECT
game_over_in => state_n.OUTPUTSELECT
left => state_n.OUTPUTSELECT
left => state_n.OUTPUTSELECT
left => state_n.OUTPUTSELECT
left => state_n.OUTPUTSELECT
up => state_n.OUTPUTSELECT
up => state_n.OUTPUTSELECT
up => state_n.OUTPUTSELECT
up => state_n.OUTPUTSELECT
right => state_n.OUTPUTSELECT
right => state_n.OUTPUTSELECT
right => state_n.OUTPUTSELECT
right => state_n.OUTPUTSELECT
down => state_n.OUTPUTSELECT
down => state_n.OUTPUTSELECT
down => state_n.OUTPUTSELECT
down => state_n.OUTPUTSELECT
length[0] => counter256:counter.start_val[0]
length[1] => counter256:counter.start_val[1]
length[2] => counter256:counter.start_val[2]
length[3] => counter256:counter.start_val[3]
length[4] => counter256:counter.start_val[4]
length[5] => counter256:counter.start_val[5]
length[6] => counter256:counter.start_val[6]
length[7] => counter256:counter.start_val[7]
dir[0] => Mux0.IN5
dir[0] => Mux1.IN5
dir[0] => Mux2.IN5
dir[0] => Mux3.IN5
dir[1] => Mux0.IN4
dir[1] => Mux1.IN4
dir[1] => Mux2.IN4
dir[1] => Mux3.IN4
clk => counter256:counter.clk
clk => state_r~1.DATAIN
slow_edge => counter256:counter.slow_edge
slow_edge => state_r.OUTPUTSELECT
slow_edge => state_r.OUTPUTSELECT
slow_edge => state_r.OUTPUTSELECT
slow_edge => state_r.OUTPUTSELECT
reset => counter256:counter.reset
reset => state_r.OUTPUTSELECT
reset => state_r.OUTPUTSELECT
reset => state_r.OUTPUTSELECT
reset => state_r.OUTPUTSELECT
light_type[0] => counter256:counter.init_val[0]
light_type[0] => Equal1.IN1
light_type[0] => Equal2.IN1
light_type[1] => counter256:counter.init_val[1]
light_type[1] => Equal1.IN0
light_type[1] => Equal2.IN0


|lab8|snakes_and_apples:snake|grid_light:center_grid_row[12].center_grid_col[13].light|counter256:counter
count[0] <= count[0]~reg0.DB_MAX_OUTPUT_PORT_TYPE
count[1] <= count[1]~reg0.DB_MAX_OUTPUT_PORT_TYPE
count[2] <= count[2]~reg0.DB_MAX_OUTPUT_PORT_TYPE
count[3] <= count[3]~reg0.DB_MAX_OUTPUT_PORT_TYPE
count[4] <= count[4]~reg0.DB_MAX_OUTPUT_PORT_TYPE
count[5] <= count[5]~reg0.DB_MAX_OUTPUT_PORT_TYPE
count[6] <= count[6]~reg0.DB_MAX_OUTPUT_PORT_TYPE
count[7] <= count[7]~reg0.DB_MAX_OUTPUT_PORT_TYPE
start_val[0] => Add0.IN16
start_val[0] => count.DATAB
start_val[1] => Add0.IN15
start_val[1] => count.DATAB
start_val[2] => Add0.IN14
start_val[2] => count.DATAB
start_val[3] => Add0.IN13
start_val[3] => count.DATAB
start_val[4] => Add0.IN12
start_val[4] => count.DATAB
start_val[5] => Add0.IN11
start_val[5] => count.DATAB
start_val[6] => Add0.IN10
start_val[6] => count.DATAB
start_val[7] => Add0.IN9
start_val[7] => count.DATAB
inc => count.OUTPUTSELECT
inc => count.OUTPUTSELECT
inc => count.OUTPUTSELECT
inc => count.OUTPUTSELECT
inc => count.OUTPUTSELECT
inc => count.OUTPUTSELECT
inc => count.OUTPUTSELECT
inc => count.OUTPUTSELECT
inc => always0.IN0
enable => always0.IN1
enable => count.OUTPUTSELECT
enable => count.OUTPUTSELECT
enable => count.OUTPUTSELECT
enable => count.OUTPUTSELECT
enable => count.OUTPUTSELECT
enable => count.OUTPUTSELECT
enable => count.OUTPUTSELECT
enable => count.OUTPUTSELECT
clk => count[0]~reg0.CLK
clk => count[1]~reg0.CLK
clk => count[2]~reg0.CLK
clk => count[3]~reg0.CLK
clk => count[4]~reg0.CLK
clk => count[5]~reg0.CLK
clk => count[6]~reg0.CLK
clk => count[7]~reg0.CLK
slow_edge => count.OUTPUTSELECT
slow_edge => count.OUTPUTSELECT
slow_edge => count.OUTPUTSELECT
slow_edge => count.OUTPUTSELECT
slow_edge => count.OUTPUTSELECT
slow_edge => count.OUTPUTSELECT
slow_edge => count.OUTPUTSELECT
slow_edge => count.OUTPUTSELECT
reset => count.OUTPUTSELECT
reset => count.OUTPUTSELECT
reset => count.OUTPUTSELECT
reset => count.OUTPUTSELECT
reset => count.OUTPUTSELECT
reset => count.OUTPUTSELECT
reset => count.OUTPUTSELECT
reset => count.OUTPUTSELECT
init_val[0] => count.DATAB
init_val[1] => count.DATAB


|lab8|snakes_and_apples:snake|grid_light:center_grid_row[12].center_grid_col[14].light
green_light_on <= green_light_on.DB_MAX_OUTPUT_PORT_TYPE
head <= head.DB_MAX_OUTPUT_PORT_TYPE
game_over_out <= state_n.DB_MAX_OUTPUT_PORT_TYPE
eating => counter256:counter.inc
eating => always0.IN1
game_over_in => state_n.e_off.OUTPUTSELECT
game_over_in => state_n.e_countdown.OUTPUTSELECT
game_over_in => state_n.e_head.OUTPUTSELECT
game_over_in => state_n.OUTPUTSELECT
left => state_n.OUTPUTSELECT
left => state_n.OUTPUTSELECT
left => state_n.OUTPUTSELECT
left => state_n.OUTPUTSELECT
up => state_n.OUTPUTSELECT
up => state_n.OUTPUTSELECT
up => state_n.OUTPUTSELECT
up => state_n.OUTPUTSELECT
right => state_n.OUTPUTSELECT
right => state_n.OUTPUTSELECT
right => state_n.OUTPUTSELECT
right => state_n.OUTPUTSELECT
down => state_n.OUTPUTSELECT
down => state_n.OUTPUTSELECT
down => state_n.OUTPUTSELECT
down => state_n.OUTPUTSELECT
length[0] => counter256:counter.start_val[0]
length[1] => counter256:counter.start_val[1]
length[2] => counter256:counter.start_val[2]
length[3] => counter256:counter.start_val[3]
length[4] => counter256:counter.start_val[4]
length[5] => counter256:counter.start_val[5]
length[6] => counter256:counter.start_val[6]
length[7] => counter256:counter.start_val[7]
dir[0] => Mux0.IN5
dir[0] => Mux1.IN5
dir[0] => Mux2.IN5
dir[0] => Mux3.IN5
dir[1] => Mux0.IN4
dir[1] => Mux1.IN4
dir[1] => Mux2.IN4
dir[1] => Mux3.IN4
clk => counter256:counter.clk
clk => state_r~1.DATAIN
slow_edge => counter256:counter.slow_edge
slow_edge => state_r.OUTPUTSELECT
slow_edge => state_r.OUTPUTSELECT
slow_edge => state_r.OUTPUTSELECT
slow_edge => state_r.OUTPUTSELECT
reset => counter256:counter.reset
reset => state_r.OUTPUTSELECT
reset => state_r.OUTPUTSELECT
reset => state_r.OUTPUTSELECT
reset => state_r.OUTPUTSELECT
light_type[0] => counter256:counter.init_val[0]
light_type[0] => Equal1.IN1
light_type[0] => Equal2.IN1
light_type[1] => counter256:counter.init_val[1]
light_type[1] => Equal1.IN0
light_type[1] => Equal2.IN0


|lab8|snakes_and_apples:snake|grid_light:center_grid_row[12].center_grid_col[14].light|counter256:counter
count[0] <= count[0]~reg0.DB_MAX_OUTPUT_PORT_TYPE
count[1] <= count[1]~reg0.DB_MAX_OUTPUT_PORT_TYPE
count[2] <= count[2]~reg0.DB_MAX_OUTPUT_PORT_TYPE
count[3] <= count[3]~reg0.DB_MAX_OUTPUT_PORT_TYPE
count[4] <= count[4]~reg0.DB_MAX_OUTPUT_PORT_TYPE
count[5] <= count[5]~reg0.DB_MAX_OUTPUT_PORT_TYPE
count[6] <= count[6]~reg0.DB_MAX_OUTPUT_PORT_TYPE
count[7] <= count[7]~reg0.DB_MAX_OUTPUT_PORT_TYPE
start_val[0] => Add0.IN16
start_val[0] => count.DATAB
start_val[1] => Add0.IN15
start_val[1] => count.DATAB
start_val[2] => Add0.IN14
start_val[2] => count.DATAB
start_val[3] => Add0.IN13
start_val[3] => count.DATAB
start_val[4] => Add0.IN12
start_val[4] => count.DATAB
start_val[5] => Add0.IN11
start_val[5] => count.DATAB
start_val[6] => Add0.IN10
start_val[6] => count.DATAB
start_val[7] => Add0.IN9
start_val[7] => count.DATAB
inc => count.OUTPUTSELECT
inc => count.OUTPUTSELECT
inc => count.OUTPUTSELECT
inc => count.OUTPUTSELECT
inc => count.OUTPUTSELECT
inc => count.OUTPUTSELECT
inc => count.OUTPUTSELECT
inc => count.OUTPUTSELECT
inc => always0.IN0
enable => always0.IN1
enable => count.OUTPUTSELECT
enable => count.OUTPUTSELECT
enable => count.OUTPUTSELECT
enable => count.OUTPUTSELECT
enable => count.OUTPUTSELECT
enable => count.OUTPUTSELECT
enable => count.OUTPUTSELECT
enable => count.OUTPUTSELECT
clk => count[0]~reg0.CLK
clk => count[1]~reg0.CLK
clk => count[2]~reg0.CLK
clk => count[3]~reg0.CLK
clk => count[4]~reg0.CLK
clk => count[5]~reg0.CLK
clk => count[6]~reg0.CLK
clk => count[7]~reg0.CLK
slow_edge => count.OUTPUTSELECT
slow_edge => count.OUTPUTSELECT
slow_edge => count.OUTPUTSELECT
slow_edge => count.OUTPUTSELECT
slow_edge => count.OUTPUTSELECT
slow_edge => count.OUTPUTSELECT
slow_edge => count.OUTPUTSELECT
slow_edge => count.OUTPUTSELECT
reset => count.OUTPUTSELECT
reset => count.OUTPUTSELECT
reset => count.OUTPUTSELECT
reset => count.OUTPUTSELECT
reset => count.OUTPUTSELECT
reset => count.OUTPUTSELECT
reset => count.OUTPUTSELECT
reset => count.OUTPUTSELECT
init_val[0] => count.DATAB
init_val[1] => count.DATAB


|lab8|snakes_and_apples:snake|grid_light:center_grid_row[13].center_grid_col[1].light
green_light_on <= green_light_on.DB_MAX_OUTPUT_PORT_TYPE
head <= head.DB_MAX_OUTPUT_PORT_TYPE
game_over_out <= state_n.DB_MAX_OUTPUT_PORT_TYPE
eating => counter256:counter.inc
eating => always0.IN1
game_over_in => state_n.e_off.OUTPUTSELECT
game_over_in => state_n.e_countdown.OUTPUTSELECT
game_over_in => state_n.e_head.OUTPUTSELECT
game_over_in => state_n.OUTPUTSELECT
left => state_n.OUTPUTSELECT
left => state_n.OUTPUTSELECT
left => state_n.OUTPUTSELECT
left => state_n.OUTPUTSELECT
up => state_n.OUTPUTSELECT
up => state_n.OUTPUTSELECT
up => state_n.OUTPUTSELECT
up => state_n.OUTPUTSELECT
right => state_n.OUTPUTSELECT
right => state_n.OUTPUTSELECT
right => state_n.OUTPUTSELECT
right => state_n.OUTPUTSELECT
down => state_n.OUTPUTSELECT
down => state_n.OUTPUTSELECT
down => state_n.OUTPUTSELECT
down => state_n.OUTPUTSELECT
length[0] => counter256:counter.start_val[0]
length[1] => counter256:counter.start_val[1]
length[2] => counter256:counter.start_val[2]
length[3] => counter256:counter.start_val[3]
length[4] => counter256:counter.start_val[4]
length[5] => counter256:counter.start_val[5]
length[6] => counter256:counter.start_val[6]
length[7] => counter256:counter.start_val[7]
dir[0] => Mux0.IN5
dir[0] => Mux1.IN5
dir[0] => Mux2.IN5
dir[0] => Mux3.IN5
dir[1] => Mux0.IN4
dir[1] => Mux1.IN4
dir[1] => Mux2.IN4
dir[1] => Mux3.IN4
clk => counter256:counter.clk
clk => state_r~1.DATAIN
slow_edge => counter256:counter.slow_edge
slow_edge => state_r.OUTPUTSELECT
slow_edge => state_r.OUTPUTSELECT
slow_edge => state_r.OUTPUTSELECT
slow_edge => state_r.OUTPUTSELECT
reset => counter256:counter.reset
reset => state_r.OUTPUTSELECT
reset => state_r.OUTPUTSELECT
reset => state_r.OUTPUTSELECT
reset => state_r.OUTPUTSELECT
light_type[0] => counter256:counter.init_val[0]
light_type[0] => Equal1.IN1
light_type[0] => Equal2.IN1
light_type[1] => counter256:counter.init_val[1]
light_type[1] => Equal1.IN0
light_type[1] => Equal2.IN0


|lab8|snakes_and_apples:snake|grid_light:center_grid_row[13].center_grid_col[1].light|counter256:counter
count[0] <= count[0]~reg0.DB_MAX_OUTPUT_PORT_TYPE
count[1] <= count[1]~reg0.DB_MAX_OUTPUT_PORT_TYPE
count[2] <= count[2]~reg0.DB_MAX_OUTPUT_PORT_TYPE
count[3] <= count[3]~reg0.DB_MAX_OUTPUT_PORT_TYPE
count[4] <= count[4]~reg0.DB_MAX_OUTPUT_PORT_TYPE
count[5] <= count[5]~reg0.DB_MAX_OUTPUT_PORT_TYPE
count[6] <= count[6]~reg0.DB_MAX_OUTPUT_PORT_TYPE
count[7] <= count[7]~reg0.DB_MAX_OUTPUT_PORT_TYPE
start_val[0] => Add0.IN16
start_val[0] => count.DATAB
start_val[1] => Add0.IN15
start_val[1] => count.DATAB
start_val[2] => Add0.IN14
start_val[2] => count.DATAB
start_val[3] => Add0.IN13
start_val[3] => count.DATAB
start_val[4] => Add0.IN12
start_val[4] => count.DATAB
start_val[5] => Add0.IN11
start_val[5] => count.DATAB
start_val[6] => Add0.IN10
start_val[6] => count.DATAB
start_val[7] => Add0.IN9
start_val[7] => count.DATAB
inc => count.OUTPUTSELECT
inc => count.OUTPUTSELECT
inc => count.OUTPUTSELECT
inc => count.OUTPUTSELECT
inc => count.OUTPUTSELECT
inc => count.OUTPUTSELECT
inc => count.OUTPUTSELECT
inc => count.OUTPUTSELECT
inc => always0.IN0
enable => always0.IN1
enable => count.OUTPUTSELECT
enable => count.OUTPUTSELECT
enable => count.OUTPUTSELECT
enable => count.OUTPUTSELECT
enable => count.OUTPUTSELECT
enable => count.OUTPUTSELECT
enable => count.OUTPUTSELECT
enable => count.OUTPUTSELECT
clk => count[0]~reg0.CLK
clk => count[1]~reg0.CLK
clk => count[2]~reg0.CLK
clk => count[3]~reg0.CLK
clk => count[4]~reg0.CLK
clk => count[5]~reg0.CLK
clk => count[6]~reg0.CLK
clk => count[7]~reg0.CLK
slow_edge => count.OUTPUTSELECT
slow_edge => count.OUTPUTSELECT
slow_edge => count.OUTPUTSELECT
slow_edge => count.OUTPUTSELECT
slow_edge => count.OUTPUTSELECT
slow_edge => count.OUTPUTSELECT
slow_edge => count.OUTPUTSELECT
slow_edge => count.OUTPUTSELECT
reset => count.OUTPUTSELECT
reset => count.OUTPUTSELECT
reset => count.OUTPUTSELECT
reset => count.OUTPUTSELECT
reset => count.OUTPUTSELECT
reset => count.OUTPUTSELECT
reset => count.OUTPUTSELECT
reset => count.OUTPUTSELECT
init_val[0] => count.DATAB
init_val[1] => count.DATAB


|lab8|snakes_and_apples:snake|grid_light:center_grid_row[13].center_grid_col[2].light
green_light_on <= green_light_on.DB_MAX_OUTPUT_PORT_TYPE
head <= head.DB_MAX_OUTPUT_PORT_TYPE
game_over_out <= state_n.DB_MAX_OUTPUT_PORT_TYPE
eating => counter256:counter.inc
eating => always0.IN1
game_over_in => state_n.e_off.OUTPUTSELECT
game_over_in => state_n.e_countdown.OUTPUTSELECT
game_over_in => state_n.e_head.OUTPUTSELECT
game_over_in => state_n.OUTPUTSELECT
left => state_n.OUTPUTSELECT
left => state_n.OUTPUTSELECT
left => state_n.OUTPUTSELECT
left => state_n.OUTPUTSELECT
up => state_n.OUTPUTSELECT
up => state_n.OUTPUTSELECT
up => state_n.OUTPUTSELECT
up => state_n.OUTPUTSELECT
right => state_n.OUTPUTSELECT
right => state_n.OUTPUTSELECT
right => state_n.OUTPUTSELECT
right => state_n.OUTPUTSELECT
down => state_n.OUTPUTSELECT
down => state_n.OUTPUTSELECT
down => state_n.OUTPUTSELECT
down => state_n.OUTPUTSELECT
length[0] => counter256:counter.start_val[0]
length[1] => counter256:counter.start_val[1]
length[2] => counter256:counter.start_val[2]
length[3] => counter256:counter.start_val[3]
length[4] => counter256:counter.start_val[4]
length[5] => counter256:counter.start_val[5]
length[6] => counter256:counter.start_val[6]
length[7] => counter256:counter.start_val[7]
dir[0] => Mux0.IN5
dir[0] => Mux1.IN5
dir[0] => Mux2.IN5
dir[0] => Mux3.IN5
dir[1] => Mux0.IN4
dir[1] => Mux1.IN4
dir[1] => Mux2.IN4
dir[1] => Mux3.IN4
clk => counter256:counter.clk
clk => state_r~1.DATAIN
slow_edge => counter256:counter.slow_edge
slow_edge => state_r.OUTPUTSELECT
slow_edge => state_r.OUTPUTSELECT
slow_edge => state_r.OUTPUTSELECT
slow_edge => state_r.OUTPUTSELECT
reset => counter256:counter.reset
reset => state_r.OUTPUTSELECT
reset => state_r.OUTPUTSELECT
reset => state_r.OUTPUTSELECT
reset => state_r.OUTPUTSELECT
light_type[0] => counter256:counter.init_val[0]
light_type[0] => Equal1.IN1
light_type[0] => Equal2.IN1
light_type[1] => counter256:counter.init_val[1]
light_type[1] => Equal1.IN0
light_type[1] => Equal2.IN0


|lab8|snakes_and_apples:snake|grid_light:center_grid_row[13].center_grid_col[2].light|counter256:counter
count[0] <= count[0]~reg0.DB_MAX_OUTPUT_PORT_TYPE
count[1] <= count[1]~reg0.DB_MAX_OUTPUT_PORT_TYPE
count[2] <= count[2]~reg0.DB_MAX_OUTPUT_PORT_TYPE
count[3] <= count[3]~reg0.DB_MAX_OUTPUT_PORT_TYPE
count[4] <= count[4]~reg0.DB_MAX_OUTPUT_PORT_TYPE
count[5] <= count[5]~reg0.DB_MAX_OUTPUT_PORT_TYPE
count[6] <= count[6]~reg0.DB_MAX_OUTPUT_PORT_TYPE
count[7] <= count[7]~reg0.DB_MAX_OUTPUT_PORT_TYPE
start_val[0] => Add0.IN16
start_val[0] => count.DATAB
start_val[1] => Add0.IN15
start_val[1] => count.DATAB
start_val[2] => Add0.IN14
start_val[2] => count.DATAB
start_val[3] => Add0.IN13
start_val[3] => count.DATAB
start_val[4] => Add0.IN12
start_val[4] => count.DATAB
start_val[5] => Add0.IN11
start_val[5] => count.DATAB
start_val[6] => Add0.IN10
start_val[6] => count.DATAB
start_val[7] => Add0.IN9
start_val[7] => count.DATAB
inc => count.OUTPUTSELECT
inc => count.OUTPUTSELECT
inc => count.OUTPUTSELECT
inc => count.OUTPUTSELECT
inc => count.OUTPUTSELECT
inc => count.OUTPUTSELECT
inc => count.OUTPUTSELECT
inc => count.OUTPUTSELECT
inc => always0.IN0
enable => always0.IN1
enable => count.OUTPUTSELECT
enable => count.OUTPUTSELECT
enable => count.OUTPUTSELECT
enable => count.OUTPUTSELECT
enable => count.OUTPUTSELECT
enable => count.OUTPUTSELECT
enable => count.OUTPUTSELECT
enable => count.OUTPUTSELECT
clk => count[0]~reg0.CLK
clk => count[1]~reg0.CLK
clk => count[2]~reg0.CLK
clk => count[3]~reg0.CLK
clk => count[4]~reg0.CLK
clk => count[5]~reg0.CLK
clk => count[6]~reg0.CLK
clk => count[7]~reg0.CLK
slow_edge => count.OUTPUTSELECT
slow_edge => count.OUTPUTSELECT
slow_edge => count.OUTPUTSELECT
slow_edge => count.OUTPUTSELECT
slow_edge => count.OUTPUTSELECT
slow_edge => count.OUTPUTSELECT
slow_edge => count.OUTPUTSELECT
slow_edge => count.OUTPUTSELECT
reset => count.OUTPUTSELECT
reset => count.OUTPUTSELECT
reset => count.OUTPUTSELECT
reset => count.OUTPUTSELECT
reset => count.OUTPUTSELECT
reset => count.OUTPUTSELECT
reset => count.OUTPUTSELECT
reset => count.OUTPUTSELECT
init_val[0] => count.DATAB
init_val[1] => count.DATAB


|lab8|snakes_and_apples:snake|grid_light:center_grid_row[13].center_grid_col[3].light
green_light_on <= green_light_on.DB_MAX_OUTPUT_PORT_TYPE
head <= head.DB_MAX_OUTPUT_PORT_TYPE
game_over_out <= state_n.DB_MAX_OUTPUT_PORT_TYPE
eating => counter256:counter.inc
eating => always0.IN1
game_over_in => state_n.e_off.OUTPUTSELECT
game_over_in => state_n.e_countdown.OUTPUTSELECT
game_over_in => state_n.e_head.OUTPUTSELECT
game_over_in => state_n.OUTPUTSELECT
left => state_n.OUTPUTSELECT
left => state_n.OUTPUTSELECT
left => state_n.OUTPUTSELECT
left => state_n.OUTPUTSELECT
up => state_n.OUTPUTSELECT
up => state_n.OUTPUTSELECT
up => state_n.OUTPUTSELECT
up => state_n.OUTPUTSELECT
right => state_n.OUTPUTSELECT
right => state_n.OUTPUTSELECT
right => state_n.OUTPUTSELECT
right => state_n.OUTPUTSELECT
down => state_n.OUTPUTSELECT
down => state_n.OUTPUTSELECT
down => state_n.OUTPUTSELECT
down => state_n.OUTPUTSELECT
length[0] => counter256:counter.start_val[0]
length[1] => counter256:counter.start_val[1]
length[2] => counter256:counter.start_val[2]
length[3] => counter256:counter.start_val[3]
length[4] => counter256:counter.start_val[4]
length[5] => counter256:counter.start_val[5]
length[6] => counter256:counter.start_val[6]
length[7] => counter256:counter.start_val[7]
dir[0] => Mux0.IN5
dir[0] => Mux1.IN5
dir[0] => Mux2.IN5
dir[0] => Mux3.IN5
dir[1] => Mux0.IN4
dir[1] => Mux1.IN4
dir[1] => Mux2.IN4
dir[1] => Mux3.IN4
clk => counter256:counter.clk
clk => state_r~1.DATAIN
slow_edge => counter256:counter.slow_edge
slow_edge => state_r.OUTPUTSELECT
slow_edge => state_r.OUTPUTSELECT
slow_edge => state_r.OUTPUTSELECT
slow_edge => state_r.OUTPUTSELECT
reset => counter256:counter.reset
reset => state_r.OUTPUTSELECT
reset => state_r.OUTPUTSELECT
reset => state_r.OUTPUTSELECT
reset => state_r.OUTPUTSELECT
light_type[0] => counter256:counter.init_val[0]
light_type[0] => Equal1.IN1
light_type[0] => Equal2.IN1
light_type[1] => counter256:counter.init_val[1]
light_type[1] => Equal1.IN0
light_type[1] => Equal2.IN0


|lab8|snakes_and_apples:snake|grid_light:center_grid_row[13].center_grid_col[3].light|counter256:counter
count[0] <= count[0]~reg0.DB_MAX_OUTPUT_PORT_TYPE
count[1] <= count[1]~reg0.DB_MAX_OUTPUT_PORT_TYPE
count[2] <= count[2]~reg0.DB_MAX_OUTPUT_PORT_TYPE
count[3] <= count[3]~reg0.DB_MAX_OUTPUT_PORT_TYPE
count[4] <= count[4]~reg0.DB_MAX_OUTPUT_PORT_TYPE
count[5] <= count[5]~reg0.DB_MAX_OUTPUT_PORT_TYPE
count[6] <= count[6]~reg0.DB_MAX_OUTPUT_PORT_TYPE
count[7] <= count[7]~reg0.DB_MAX_OUTPUT_PORT_TYPE
start_val[0] => Add0.IN16
start_val[0] => count.DATAB
start_val[1] => Add0.IN15
start_val[1] => count.DATAB
start_val[2] => Add0.IN14
start_val[2] => count.DATAB
start_val[3] => Add0.IN13
start_val[3] => count.DATAB
start_val[4] => Add0.IN12
start_val[4] => count.DATAB
start_val[5] => Add0.IN11
start_val[5] => count.DATAB
start_val[6] => Add0.IN10
start_val[6] => count.DATAB
start_val[7] => Add0.IN9
start_val[7] => count.DATAB
inc => count.OUTPUTSELECT
inc => count.OUTPUTSELECT
inc => count.OUTPUTSELECT
inc => count.OUTPUTSELECT
inc => count.OUTPUTSELECT
inc => count.OUTPUTSELECT
inc => count.OUTPUTSELECT
inc => count.OUTPUTSELECT
inc => always0.IN0
enable => always0.IN1
enable => count.OUTPUTSELECT
enable => count.OUTPUTSELECT
enable => count.OUTPUTSELECT
enable => count.OUTPUTSELECT
enable => count.OUTPUTSELECT
enable => count.OUTPUTSELECT
enable => count.OUTPUTSELECT
enable => count.OUTPUTSELECT
clk => count[0]~reg0.CLK
clk => count[1]~reg0.CLK
clk => count[2]~reg0.CLK
clk => count[3]~reg0.CLK
clk => count[4]~reg0.CLK
clk => count[5]~reg0.CLK
clk => count[6]~reg0.CLK
clk => count[7]~reg0.CLK
slow_edge => count.OUTPUTSELECT
slow_edge => count.OUTPUTSELECT
slow_edge => count.OUTPUTSELECT
slow_edge => count.OUTPUTSELECT
slow_edge => count.OUTPUTSELECT
slow_edge => count.OUTPUTSELECT
slow_edge => count.OUTPUTSELECT
slow_edge => count.OUTPUTSELECT
reset => count.OUTPUTSELECT
reset => count.OUTPUTSELECT
reset => count.OUTPUTSELECT
reset => count.OUTPUTSELECT
reset => count.OUTPUTSELECT
reset => count.OUTPUTSELECT
reset => count.OUTPUTSELECT
reset => count.OUTPUTSELECT
init_val[0] => count.DATAB
init_val[1] => count.DATAB


|lab8|snakes_and_apples:snake|grid_light:center_grid_row[13].center_grid_col[4].light
green_light_on <= green_light_on.DB_MAX_OUTPUT_PORT_TYPE
head <= head.DB_MAX_OUTPUT_PORT_TYPE
game_over_out <= state_n.DB_MAX_OUTPUT_PORT_TYPE
eating => counter256:counter.inc
eating => always0.IN1
game_over_in => state_n.e_off.OUTPUTSELECT
game_over_in => state_n.e_countdown.OUTPUTSELECT
game_over_in => state_n.e_head.OUTPUTSELECT
game_over_in => state_n.OUTPUTSELECT
left => state_n.OUTPUTSELECT
left => state_n.OUTPUTSELECT
left => state_n.OUTPUTSELECT
left => state_n.OUTPUTSELECT
up => state_n.OUTPUTSELECT
up => state_n.OUTPUTSELECT
up => state_n.OUTPUTSELECT
up => state_n.OUTPUTSELECT
right => state_n.OUTPUTSELECT
right => state_n.OUTPUTSELECT
right => state_n.OUTPUTSELECT
right => state_n.OUTPUTSELECT
down => state_n.OUTPUTSELECT
down => state_n.OUTPUTSELECT
down => state_n.OUTPUTSELECT
down => state_n.OUTPUTSELECT
length[0] => counter256:counter.start_val[0]
length[1] => counter256:counter.start_val[1]
length[2] => counter256:counter.start_val[2]
length[3] => counter256:counter.start_val[3]
length[4] => counter256:counter.start_val[4]
length[5] => counter256:counter.start_val[5]
length[6] => counter256:counter.start_val[6]
length[7] => counter256:counter.start_val[7]
dir[0] => Mux0.IN5
dir[0] => Mux1.IN5
dir[0] => Mux2.IN5
dir[0] => Mux3.IN5
dir[1] => Mux0.IN4
dir[1] => Mux1.IN4
dir[1] => Mux2.IN4
dir[1] => Mux3.IN4
clk => counter256:counter.clk
clk => state_r~1.DATAIN
slow_edge => counter256:counter.slow_edge
slow_edge => state_r.OUTPUTSELECT
slow_edge => state_r.OUTPUTSELECT
slow_edge => state_r.OUTPUTSELECT
slow_edge => state_r.OUTPUTSELECT
reset => counter256:counter.reset
reset => state_r.OUTPUTSELECT
reset => state_r.OUTPUTSELECT
reset => state_r.OUTPUTSELECT
reset => state_r.OUTPUTSELECT
light_type[0] => counter256:counter.init_val[0]
light_type[0] => Equal1.IN1
light_type[0] => Equal2.IN1
light_type[1] => counter256:counter.init_val[1]
light_type[1] => Equal1.IN0
light_type[1] => Equal2.IN0


|lab8|snakes_and_apples:snake|grid_light:center_grid_row[13].center_grid_col[4].light|counter256:counter
count[0] <= count[0]~reg0.DB_MAX_OUTPUT_PORT_TYPE
count[1] <= count[1]~reg0.DB_MAX_OUTPUT_PORT_TYPE
count[2] <= count[2]~reg0.DB_MAX_OUTPUT_PORT_TYPE
count[3] <= count[3]~reg0.DB_MAX_OUTPUT_PORT_TYPE
count[4] <= count[4]~reg0.DB_MAX_OUTPUT_PORT_TYPE
count[5] <= count[5]~reg0.DB_MAX_OUTPUT_PORT_TYPE
count[6] <= count[6]~reg0.DB_MAX_OUTPUT_PORT_TYPE
count[7] <= count[7]~reg0.DB_MAX_OUTPUT_PORT_TYPE
start_val[0] => Add0.IN16
start_val[0] => count.DATAB
start_val[1] => Add0.IN15
start_val[1] => count.DATAB
start_val[2] => Add0.IN14
start_val[2] => count.DATAB
start_val[3] => Add0.IN13
start_val[3] => count.DATAB
start_val[4] => Add0.IN12
start_val[4] => count.DATAB
start_val[5] => Add0.IN11
start_val[5] => count.DATAB
start_val[6] => Add0.IN10
start_val[6] => count.DATAB
start_val[7] => Add0.IN9
start_val[7] => count.DATAB
inc => count.OUTPUTSELECT
inc => count.OUTPUTSELECT
inc => count.OUTPUTSELECT
inc => count.OUTPUTSELECT
inc => count.OUTPUTSELECT
inc => count.OUTPUTSELECT
inc => count.OUTPUTSELECT
inc => count.OUTPUTSELECT
inc => always0.IN0
enable => always0.IN1
enable => count.OUTPUTSELECT
enable => count.OUTPUTSELECT
enable => count.OUTPUTSELECT
enable => count.OUTPUTSELECT
enable => count.OUTPUTSELECT
enable => count.OUTPUTSELECT
enable => count.OUTPUTSELECT
enable => count.OUTPUTSELECT
clk => count[0]~reg0.CLK
clk => count[1]~reg0.CLK
clk => count[2]~reg0.CLK
clk => count[3]~reg0.CLK
clk => count[4]~reg0.CLK
clk => count[5]~reg0.CLK
clk => count[6]~reg0.CLK
clk => count[7]~reg0.CLK
slow_edge => count.OUTPUTSELECT
slow_edge => count.OUTPUTSELECT
slow_edge => count.OUTPUTSELECT
slow_edge => count.OUTPUTSELECT
slow_edge => count.OUTPUTSELECT
slow_edge => count.OUTPUTSELECT
slow_edge => count.OUTPUTSELECT
slow_edge => count.OUTPUTSELECT
reset => count.OUTPUTSELECT
reset => count.OUTPUTSELECT
reset => count.OUTPUTSELECT
reset => count.OUTPUTSELECT
reset => count.OUTPUTSELECT
reset => count.OUTPUTSELECT
reset => count.OUTPUTSELECT
reset => count.OUTPUTSELECT
init_val[0] => count.DATAB
init_val[1] => count.DATAB


|lab8|snakes_and_apples:snake|grid_light:center_grid_row[13].center_grid_col[5].light
green_light_on <= green_light_on.DB_MAX_OUTPUT_PORT_TYPE
head <= head.DB_MAX_OUTPUT_PORT_TYPE
game_over_out <= state_n.DB_MAX_OUTPUT_PORT_TYPE
eating => counter256:counter.inc
eating => always0.IN1
game_over_in => state_n.e_off.OUTPUTSELECT
game_over_in => state_n.e_countdown.OUTPUTSELECT
game_over_in => state_n.e_head.OUTPUTSELECT
game_over_in => state_n.OUTPUTSELECT
left => state_n.OUTPUTSELECT
left => state_n.OUTPUTSELECT
left => state_n.OUTPUTSELECT
left => state_n.OUTPUTSELECT
up => state_n.OUTPUTSELECT
up => state_n.OUTPUTSELECT
up => state_n.OUTPUTSELECT
up => state_n.OUTPUTSELECT
right => state_n.OUTPUTSELECT
right => state_n.OUTPUTSELECT
right => state_n.OUTPUTSELECT
right => state_n.OUTPUTSELECT
down => state_n.OUTPUTSELECT
down => state_n.OUTPUTSELECT
down => state_n.OUTPUTSELECT
down => state_n.OUTPUTSELECT
length[0] => counter256:counter.start_val[0]
length[1] => counter256:counter.start_val[1]
length[2] => counter256:counter.start_val[2]
length[3] => counter256:counter.start_val[3]
length[4] => counter256:counter.start_val[4]
length[5] => counter256:counter.start_val[5]
length[6] => counter256:counter.start_val[6]
length[7] => counter256:counter.start_val[7]
dir[0] => Mux0.IN5
dir[0] => Mux1.IN5
dir[0] => Mux2.IN5
dir[0] => Mux3.IN5
dir[1] => Mux0.IN4
dir[1] => Mux1.IN4
dir[1] => Mux2.IN4
dir[1] => Mux3.IN4
clk => counter256:counter.clk
clk => state_r~1.DATAIN
slow_edge => counter256:counter.slow_edge
slow_edge => state_r.OUTPUTSELECT
slow_edge => state_r.OUTPUTSELECT
slow_edge => state_r.OUTPUTSELECT
slow_edge => state_r.OUTPUTSELECT
reset => counter256:counter.reset
reset => state_r.OUTPUTSELECT
reset => state_r.OUTPUTSELECT
reset => state_r.OUTPUTSELECT
reset => state_r.OUTPUTSELECT
light_type[0] => counter256:counter.init_val[0]
light_type[0] => Equal1.IN1
light_type[0] => Equal2.IN1
light_type[1] => counter256:counter.init_val[1]
light_type[1] => Equal1.IN0
light_type[1] => Equal2.IN0


|lab8|snakes_and_apples:snake|grid_light:center_grid_row[13].center_grid_col[5].light|counter256:counter
count[0] <= count[0]~reg0.DB_MAX_OUTPUT_PORT_TYPE
count[1] <= count[1]~reg0.DB_MAX_OUTPUT_PORT_TYPE
count[2] <= count[2]~reg0.DB_MAX_OUTPUT_PORT_TYPE
count[3] <= count[3]~reg0.DB_MAX_OUTPUT_PORT_TYPE
count[4] <= count[4]~reg0.DB_MAX_OUTPUT_PORT_TYPE
count[5] <= count[5]~reg0.DB_MAX_OUTPUT_PORT_TYPE
count[6] <= count[6]~reg0.DB_MAX_OUTPUT_PORT_TYPE
count[7] <= count[7]~reg0.DB_MAX_OUTPUT_PORT_TYPE
start_val[0] => Add0.IN16
start_val[0] => count.DATAB
start_val[1] => Add0.IN15
start_val[1] => count.DATAB
start_val[2] => Add0.IN14
start_val[2] => count.DATAB
start_val[3] => Add0.IN13
start_val[3] => count.DATAB
start_val[4] => Add0.IN12
start_val[4] => count.DATAB
start_val[5] => Add0.IN11
start_val[5] => count.DATAB
start_val[6] => Add0.IN10
start_val[6] => count.DATAB
start_val[7] => Add0.IN9
start_val[7] => count.DATAB
inc => count.OUTPUTSELECT
inc => count.OUTPUTSELECT
inc => count.OUTPUTSELECT
inc => count.OUTPUTSELECT
inc => count.OUTPUTSELECT
inc => count.OUTPUTSELECT
inc => count.OUTPUTSELECT
inc => count.OUTPUTSELECT
inc => always0.IN0
enable => always0.IN1
enable => count.OUTPUTSELECT
enable => count.OUTPUTSELECT
enable => count.OUTPUTSELECT
enable => count.OUTPUTSELECT
enable => count.OUTPUTSELECT
enable => count.OUTPUTSELECT
enable => count.OUTPUTSELECT
enable => count.OUTPUTSELECT
clk => count[0]~reg0.CLK
clk => count[1]~reg0.CLK
clk => count[2]~reg0.CLK
clk => count[3]~reg0.CLK
clk => count[4]~reg0.CLK
clk => count[5]~reg0.CLK
clk => count[6]~reg0.CLK
clk => count[7]~reg0.CLK
slow_edge => count.OUTPUTSELECT
slow_edge => count.OUTPUTSELECT
slow_edge => count.OUTPUTSELECT
slow_edge => count.OUTPUTSELECT
slow_edge => count.OUTPUTSELECT
slow_edge => count.OUTPUTSELECT
slow_edge => count.OUTPUTSELECT
slow_edge => count.OUTPUTSELECT
reset => count.OUTPUTSELECT
reset => count.OUTPUTSELECT
reset => count.OUTPUTSELECT
reset => count.OUTPUTSELECT
reset => count.OUTPUTSELECT
reset => count.OUTPUTSELECT
reset => count.OUTPUTSELECT
reset => count.OUTPUTSELECT
init_val[0] => count.DATAB
init_val[1] => count.DATAB


|lab8|snakes_and_apples:snake|grid_light:center_grid_row[13].center_grid_col[6].light
green_light_on <= green_light_on.DB_MAX_OUTPUT_PORT_TYPE
head <= head.DB_MAX_OUTPUT_PORT_TYPE
game_over_out <= state_n.DB_MAX_OUTPUT_PORT_TYPE
eating => counter256:counter.inc
eating => always0.IN1
game_over_in => state_n.e_off.OUTPUTSELECT
game_over_in => state_n.e_countdown.OUTPUTSELECT
game_over_in => state_n.e_head.OUTPUTSELECT
game_over_in => state_n.OUTPUTSELECT
left => state_n.OUTPUTSELECT
left => state_n.OUTPUTSELECT
left => state_n.OUTPUTSELECT
left => state_n.OUTPUTSELECT
up => state_n.OUTPUTSELECT
up => state_n.OUTPUTSELECT
up => state_n.OUTPUTSELECT
up => state_n.OUTPUTSELECT
right => state_n.OUTPUTSELECT
right => state_n.OUTPUTSELECT
right => state_n.OUTPUTSELECT
right => state_n.OUTPUTSELECT
down => state_n.OUTPUTSELECT
down => state_n.OUTPUTSELECT
down => state_n.OUTPUTSELECT
down => state_n.OUTPUTSELECT
length[0] => counter256:counter.start_val[0]
length[1] => counter256:counter.start_val[1]
length[2] => counter256:counter.start_val[2]
length[3] => counter256:counter.start_val[3]
length[4] => counter256:counter.start_val[4]
length[5] => counter256:counter.start_val[5]
length[6] => counter256:counter.start_val[6]
length[7] => counter256:counter.start_val[7]
dir[0] => Mux0.IN5
dir[0] => Mux1.IN5
dir[0] => Mux2.IN5
dir[0] => Mux3.IN5
dir[1] => Mux0.IN4
dir[1] => Mux1.IN4
dir[1] => Mux2.IN4
dir[1] => Mux3.IN4
clk => counter256:counter.clk
clk => state_r~1.DATAIN
slow_edge => counter256:counter.slow_edge
slow_edge => state_r.OUTPUTSELECT
slow_edge => state_r.OUTPUTSELECT
slow_edge => state_r.OUTPUTSELECT
slow_edge => state_r.OUTPUTSELECT
reset => counter256:counter.reset
reset => state_r.OUTPUTSELECT
reset => state_r.OUTPUTSELECT
reset => state_r.OUTPUTSELECT
reset => state_r.OUTPUTSELECT
light_type[0] => counter256:counter.init_val[0]
light_type[0] => Equal1.IN1
light_type[0] => Equal2.IN1
light_type[1] => counter256:counter.init_val[1]
light_type[1] => Equal1.IN0
light_type[1] => Equal2.IN0


|lab8|snakes_and_apples:snake|grid_light:center_grid_row[13].center_grid_col[6].light|counter256:counter
count[0] <= count[0]~reg0.DB_MAX_OUTPUT_PORT_TYPE
count[1] <= count[1]~reg0.DB_MAX_OUTPUT_PORT_TYPE
count[2] <= count[2]~reg0.DB_MAX_OUTPUT_PORT_TYPE
count[3] <= count[3]~reg0.DB_MAX_OUTPUT_PORT_TYPE
count[4] <= count[4]~reg0.DB_MAX_OUTPUT_PORT_TYPE
count[5] <= count[5]~reg0.DB_MAX_OUTPUT_PORT_TYPE
count[6] <= count[6]~reg0.DB_MAX_OUTPUT_PORT_TYPE
count[7] <= count[7]~reg0.DB_MAX_OUTPUT_PORT_TYPE
start_val[0] => Add0.IN16
start_val[0] => count.DATAB
start_val[1] => Add0.IN15
start_val[1] => count.DATAB
start_val[2] => Add0.IN14
start_val[2] => count.DATAB
start_val[3] => Add0.IN13
start_val[3] => count.DATAB
start_val[4] => Add0.IN12
start_val[4] => count.DATAB
start_val[5] => Add0.IN11
start_val[5] => count.DATAB
start_val[6] => Add0.IN10
start_val[6] => count.DATAB
start_val[7] => Add0.IN9
start_val[7] => count.DATAB
inc => count.OUTPUTSELECT
inc => count.OUTPUTSELECT
inc => count.OUTPUTSELECT
inc => count.OUTPUTSELECT
inc => count.OUTPUTSELECT
inc => count.OUTPUTSELECT
inc => count.OUTPUTSELECT
inc => count.OUTPUTSELECT
inc => always0.IN0
enable => always0.IN1
enable => count.OUTPUTSELECT
enable => count.OUTPUTSELECT
enable => count.OUTPUTSELECT
enable => count.OUTPUTSELECT
enable => count.OUTPUTSELECT
enable => count.OUTPUTSELECT
enable => count.OUTPUTSELECT
enable => count.OUTPUTSELECT
clk => count[0]~reg0.CLK
clk => count[1]~reg0.CLK
clk => count[2]~reg0.CLK
clk => count[3]~reg0.CLK
clk => count[4]~reg0.CLK
clk => count[5]~reg0.CLK
clk => count[6]~reg0.CLK
clk => count[7]~reg0.CLK
slow_edge => count.OUTPUTSELECT
slow_edge => count.OUTPUTSELECT
slow_edge => count.OUTPUTSELECT
slow_edge => count.OUTPUTSELECT
slow_edge => count.OUTPUTSELECT
slow_edge => count.OUTPUTSELECT
slow_edge => count.OUTPUTSELECT
slow_edge => count.OUTPUTSELECT
reset => count.OUTPUTSELECT
reset => count.OUTPUTSELECT
reset => count.OUTPUTSELECT
reset => count.OUTPUTSELECT
reset => count.OUTPUTSELECT
reset => count.OUTPUTSELECT
reset => count.OUTPUTSELECT
reset => count.OUTPUTSELECT
init_val[0] => count.DATAB
init_val[1] => count.DATAB


|lab8|snakes_and_apples:snake|grid_light:center_grid_row[13].center_grid_col[7].light
green_light_on <= green_light_on.DB_MAX_OUTPUT_PORT_TYPE
head <= head.DB_MAX_OUTPUT_PORT_TYPE
game_over_out <= state_n.DB_MAX_OUTPUT_PORT_TYPE
eating => counter256:counter.inc
eating => always0.IN1
game_over_in => state_n.e_off.OUTPUTSELECT
game_over_in => state_n.e_countdown.OUTPUTSELECT
game_over_in => state_n.e_head.OUTPUTSELECT
game_over_in => state_n.OUTPUTSELECT
left => state_n.OUTPUTSELECT
left => state_n.OUTPUTSELECT
left => state_n.OUTPUTSELECT
left => state_n.OUTPUTSELECT
up => state_n.OUTPUTSELECT
up => state_n.OUTPUTSELECT
up => state_n.OUTPUTSELECT
up => state_n.OUTPUTSELECT
right => state_n.OUTPUTSELECT
right => state_n.OUTPUTSELECT
right => state_n.OUTPUTSELECT
right => state_n.OUTPUTSELECT
down => state_n.OUTPUTSELECT
down => state_n.OUTPUTSELECT
down => state_n.OUTPUTSELECT
down => state_n.OUTPUTSELECT
length[0] => counter256:counter.start_val[0]
length[1] => counter256:counter.start_val[1]
length[2] => counter256:counter.start_val[2]
length[3] => counter256:counter.start_val[3]
length[4] => counter256:counter.start_val[4]
length[5] => counter256:counter.start_val[5]
length[6] => counter256:counter.start_val[6]
length[7] => counter256:counter.start_val[7]
dir[0] => Mux0.IN5
dir[0] => Mux1.IN5
dir[0] => Mux2.IN5
dir[0] => Mux3.IN5
dir[1] => Mux0.IN4
dir[1] => Mux1.IN4
dir[1] => Mux2.IN4
dir[1] => Mux3.IN4
clk => counter256:counter.clk
clk => state_r~1.DATAIN
slow_edge => counter256:counter.slow_edge
slow_edge => state_r.OUTPUTSELECT
slow_edge => state_r.OUTPUTSELECT
slow_edge => state_r.OUTPUTSELECT
slow_edge => state_r.OUTPUTSELECT
reset => counter256:counter.reset
reset => state_r.OUTPUTSELECT
reset => state_r.OUTPUTSELECT
reset => state_r.OUTPUTSELECT
reset => state_r.OUTPUTSELECT
light_type[0] => counter256:counter.init_val[0]
light_type[0] => Equal1.IN1
light_type[0] => Equal2.IN1
light_type[1] => counter256:counter.init_val[1]
light_type[1] => Equal1.IN0
light_type[1] => Equal2.IN0


|lab8|snakes_and_apples:snake|grid_light:center_grid_row[13].center_grid_col[7].light|counter256:counter
count[0] <= count[0]~reg0.DB_MAX_OUTPUT_PORT_TYPE
count[1] <= count[1]~reg0.DB_MAX_OUTPUT_PORT_TYPE
count[2] <= count[2]~reg0.DB_MAX_OUTPUT_PORT_TYPE
count[3] <= count[3]~reg0.DB_MAX_OUTPUT_PORT_TYPE
count[4] <= count[4]~reg0.DB_MAX_OUTPUT_PORT_TYPE
count[5] <= count[5]~reg0.DB_MAX_OUTPUT_PORT_TYPE
count[6] <= count[6]~reg0.DB_MAX_OUTPUT_PORT_TYPE
count[7] <= count[7]~reg0.DB_MAX_OUTPUT_PORT_TYPE
start_val[0] => Add0.IN16
start_val[0] => count.DATAB
start_val[1] => Add0.IN15
start_val[1] => count.DATAB
start_val[2] => Add0.IN14
start_val[2] => count.DATAB
start_val[3] => Add0.IN13
start_val[3] => count.DATAB
start_val[4] => Add0.IN12
start_val[4] => count.DATAB
start_val[5] => Add0.IN11
start_val[5] => count.DATAB
start_val[6] => Add0.IN10
start_val[6] => count.DATAB
start_val[7] => Add0.IN9
start_val[7] => count.DATAB
inc => count.OUTPUTSELECT
inc => count.OUTPUTSELECT
inc => count.OUTPUTSELECT
inc => count.OUTPUTSELECT
inc => count.OUTPUTSELECT
inc => count.OUTPUTSELECT
inc => count.OUTPUTSELECT
inc => count.OUTPUTSELECT
inc => always0.IN0
enable => always0.IN1
enable => count.OUTPUTSELECT
enable => count.OUTPUTSELECT
enable => count.OUTPUTSELECT
enable => count.OUTPUTSELECT
enable => count.OUTPUTSELECT
enable => count.OUTPUTSELECT
enable => count.OUTPUTSELECT
enable => count.OUTPUTSELECT
clk => count[0]~reg0.CLK
clk => count[1]~reg0.CLK
clk => count[2]~reg0.CLK
clk => count[3]~reg0.CLK
clk => count[4]~reg0.CLK
clk => count[5]~reg0.CLK
clk => count[6]~reg0.CLK
clk => count[7]~reg0.CLK
slow_edge => count.OUTPUTSELECT
slow_edge => count.OUTPUTSELECT
slow_edge => count.OUTPUTSELECT
slow_edge => count.OUTPUTSELECT
slow_edge => count.OUTPUTSELECT
slow_edge => count.OUTPUTSELECT
slow_edge => count.OUTPUTSELECT
slow_edge => count.OUTPUTSELECT
reset => count.OUTPUTSELECT
reset => count.OUTPUTSELECT
reset => count.OUTPUTSELECT
reset => count.OUTPUTSELECT
reset => count.OUTPUTSELECT
reset => count.OUTPUTSELECT
reset => count.OUTPUTSELECT
reset => count.OUTPUTSELECT
init_val[0] => count.DATAB
init_val[1] => count.DATAB


|lab8|snakes_and_apples:snake|grid_light:center_grid_row[13].center_grid_col[8].light
green_light_on <= green_light_on.DB_MAX_OUTPUT_PORT_TYPE
head <= head.DB_MAX_OUTPUT_PORT_TYPE
game_over_out <= state_n.DB_MAX_OUTPUT_PORT_TYPE
eating => counter256:counter.inc
eating => always0.IN1
game_over_in => state_n.e_off.OUTPUTSELECT
game_over_in => state_n.e_countdown.OUTPUTSELECT
game_over_in => state_n.e_head.OUTPUTSELECT
game_over_in => state_n.OUTPUTSELECT
left => state_n.OUTPUTSELECT
left => state_n.OUTPUTSELECT
left => state_n.OUTPUTSELECT
left => state_n.OUTPUTSELECT
up => state_n.OUTPUTSELECT
up => state_n.OUTPUTSELECT
up => state_n.OUTPUTSELECT
up => state_n.OUTPUTSELECT
right => state_n.OUTPUTSELECT
right => state_n.OUTPUTSELECT
right => state_n.OUTPUTSELECT
right => state_n.OUTPUTSELECT
down => state_n.OUTPUTSELECT
down => state_n.OUTPUTSELECT
down => state_n.OUTPUTSELECT
down => state_n.OUTPUTSELECT
length[0] => counter256:counter.start_val[0]
length[1] => counter256:counter.start_val[1]
length[2] => counter256:counter.start_val[2]
length[3] => counter256:counter.start_val[3]
length[4] => counter256:counter.start_val[4]
length[5] => counter256:counter.start_val[5]
length[6] => counter256:counter.start_val[6]
length[7] => counter256:counter.start_val[7]
dir[0] => Mux0.IN5
dir[0] => Mux1.IN5
dir[0] => Mux2.IN5
dir[0] => Mux3.IN5
dir[1] => Mux0.IN4
dir[1] => Mux1.IN4
dir[1] => Mux2.IN4
dir[1] => Mux3.IN4
clk => counter256:counter.clk
clk => state_r~1.DATAIN
slow_edge => counter256:counter.slow_edge
slow_edge => state_r.OUTPUTSELECT
slow_edge => state_r.OUTPUTSELECT
slow_edge => state_r.OUTPUTSELECT
slow_edge => state_r.OUTPUTSELECT
reset => counter256:counter.reset
reset => state_r.OUTPUTSELECT
reset => state_r.OUTPUTSELECT
reset => state_r.OUTPUTSELECT
reset => state_r.OUTPUTSELECT
light_type[0] => counter256:counter.init_val[0]
light_type[0] => Equal1.IN1
light_type[0] => Equal2.IN1
light_type[1] => counter256:counter.init_val[1]
light_type[1] => Equal1.IN0
light_type[1] => Equal2.IN0


|lab8|snakes_and_apples:snake|grid_light:center_grid_row[13].center_grid_col[8].light|counter256:counter
count[0] <= count[0]~reg0.DB_MAX_OUTPUT_PORT_TYPE
count[1] <= count[1]~reg0.DB_MAX_OUTPUT_PORT_TYPE
count[2] <= count[2]~reg0.DB_MAX_OUTPUT_PORT_TYPE
count[3] <= count[3]~reg0.DB_MAX_OUTPUT_PORT_TYPE
count[4] <= count[4]~reg0.DB_MAX_OUTPUT_PORT_TYPE
count[5] <= count[5]~reg0.DB_MAX_OUTPUT_PORT_TYPE
count[6] <= count[6]~reg0.DB_MAX_OUTPUT_PORT_TYPE
count[7] <= count[7]~reg0.DB_MAX_OUTPUT_PORT_TYPE
start_val[0] => Add0.IN16
start_val[0] => count.DATAB
start_val[1] => Add0.IN15
start_val[1] => count.DATAB
start_val[2] => Add0.IN14
start_val[2] => count.DATAB
start_val[3] => Add0.IN13
start_val[3] => count.DATAB
start_val[4] => Add0.IN12
start_val[4] => count.DATAB
start_val[5] => Add0.IN11
start_val[5] => count.DATAB
start_val[6] => Add0.IN10
start_val[6] => count.DATAB
start_val[7] => Add0.IN9
start_val[7] => count.DATAB
inc => count.OUTPUTSELECT
inc => count.OUTPUTSELECT
inc => count.OUTPUTSELECT
inc => count.OUTPUTSELECT
inc => count.OUTPUTSELECT
inc => count.OUTPUTSELECT
inc => count.OUTPUTSELECT
inc => count.OUTPUTSELECT
inc => always0.IN0
enable => always0.IN1
enable => count.OUTPUTSELECT
enable => count.OUTPUTSELECT
enable => count.OUTPUTSELECT
enable => count.OUTPUTSELECT
enable => count.OUTPUTSELECT
enable => count.OUTPUTSELECT
enable => count.OUTPUTSELECT
enable => count.OUTPUTSELECT
clk => count[0]~reg0.CLK
clk => count[1]~reg0.CLK
clk => count[2]~reg0.CLK
clk => count[3]~reg0.CLK
clk => count[4]~reg0.CLK
clk => count[5]~reg0.CLK
clk => count[6]~reg0.CLK
clk => count[7]~reg0.CLK
slow_edge => count.OUTPUTSELECT
slow_edge => count.OUTPUTSELECT
slow_edge => count.OUTPUTSELECT
slow_edge => count.OUTPUTSELECT
slow_edge => count.OUTPUTSELECT
slow_edge => count.OUTPUTSELECT
slow_edge => count.OUTPUTSELECT
slow_edge => count.OUTPUTSELECT
reset => count.OUTPUTSELECT
reset => count.OUTPUTSELECT
reset => count.OUTPUTSELECT
reset => count.OUTPUTSELECT
reset => count.OUTPUTSELECT
reset => count.OUTPUTSELECT
reset => count.OUTPUTSELECT
reset => count.OUTPUTSELECT
init_val[0] => count.DATAB
init_val[1] => count.DATAB


|lab8|snakes_and_apples:snake|grid_light:center_grid_row[13].center_grid_col[9].light
green_light_on <= green_light_on.DB_MAX_OUTPUT_PORT_TYPE
head <= head.DB_MAX_OUTPUT_PORT_TYPE
game_over_out <= state_n.DB_MAX_OUTPUT_PORT_TYPE
eating => counter256:counter.inc
eating => always0.IN1
game_over_in => state_n.e_off.OUTPUTSELECT
game_over_in => state_n.e_countdown.OUTPUTSELECT
game_over_in => state_n.e_head.OUTPUTSELECT
game_over_in => state_n.OUTPUTSELECT
left => state_n.OUTPUTSELECT
left => state_n.OUTPUTSELECT
left => state_n.OUTPUTSELECT
left => state_n.OUTPUTSELECT
up => state_n.OUTPUTSELECT
up => state_n.OUTPUTSELECT
up => state_n.OUTPUTSELECT
up => state_n.OUTPUTSELECT
right => state_n.OUTPUTSELECT
right => state_n.OUTPUTSELECT
right => state_n.OUTPUTSELECT
right => state_n.OUTPUTSELECT
down => state_n.OUTPUTSELECT
down => state_n.OUTPUTSELECT
down => state_n.OUTPUTSELECT
down => state_n.OUTPUTSELECT
length[0] => counter256:counter.start_val[0]
length[1] => counter256:counter.start_val[1]
length[2] => counter256:counter.start_val[2]
length[3] => counter256:counter.start_val[3]
length[4] => counter256:counter.start_val[4]
length[5] => counter256:counter.start_val[5]
length[6] => counter256:counter.start_val[6]
length[7] => counter256:counter.start_val[7]
dir[0] => Mux0.IN5
dir[0] => Mux1.IN5
dir[0] => Mux2.IN5
dir[0] => Mux3.IN5
dir[1] => Mux0.IN4
dir[1] => Mux1.IN4
dir[1] => Mux2.IN4
dir[1] => Mux3.IN4
clk => counter256:counter.clk
clk => state_r~1.DATAIN
slow_edge => counter256:counter.slow_edge
slow_edge => state_r.OUTPUTSELECT
slow_edge => state_r.OUTPUTSELECT
slow_edge => state_r.OUTPUTSELECT
slow_edge => state_r.OUTPUTSELECT
reset => counter256:counter.reset
reset => state_r.OUTPUTSELECT
reset => state_r.OUTPUTSELECT
reset => state_r.OUTPUTSELECT
reset => state_r.OUTPUTSELECT
light_type[0] => counter256:counter.init_val[0]
light_type[0] => Equal1.IN1
light_type[0] => Equal2.IN1
light_type[1] => counter256:counter.init_val[1]
light_type[1] => Equal1.IN0
light_type[1] => Equal2.IN0


|lab8|snakes_and_apples:snake|grid_light:center_grid_row[13].center_grid_col[9].light|counter256:counter
count[0] <= count[0]~reg0.DB_MAX_OUTPUT_PORT_TYPE
count[1] <= count[1]~reg0.DB_MAX_OUTPUT_PORT_TYPE
count[2] <= count[2]~reg0.DB_MAX_OUTPUT_PORT_TYPE
count[3] <= count[3]~reg0.DB_MAX_OUTPUT_PORT_TYPE
count[4] <= count[4]~reg0.DB_MAX_OUTPUT_PORT_TYPE
count[5] <= count[5]~reg0.DB_MAX_OUTPUT_PORT_TYPE
count[6] <= count[6]~reg0.DB_MAX_OUTPUT_PORT_TYPE
count[7] <= count[7]~reg0.DB_MAX_OUTPUT_PORT_TYPE
start_val[0] => Add0.IN16
start_val[0] => count.DATAB
start_val[1] => Add0.IN15
start_val[1] => count.DATAB
start_val[2] => Add0.IN14
start_val[2] => count.DATAB
start_val[3] => Add0.IN13
start_val[3] => count.DATAB
start_val[4] => Add0.IN12
start_val[4] => count.DATAB
start_val[5] => Add0.IN11
start_val[5] => count.DATAB
start_val[6] => Add0.IN10
start_val[6] => count.DATAB
start_val[7] => Add0.IN9
start_val[7] => count.DATAB
inc => count.OUTPUTSELECT
inc => count.OUTPUTSELECT
inc => count.OUTPUTSELECT
inc => count.OUTPUTSELECT
inc => count.OUTPUTSELECT
inc => count.OUTPUTSELECT
inc => count.OUTPUTSELECT
inc => count.OUTPUTSELECT
inc => always0.IN0
enable => always0.IN1
enable => count.OUTPUTSELECT
enable => count.OUTPUTSELECT
enable => count.OUTPUTSELECT
enable => count.OUTPUTSELECT
enable => count.OUTPUTSELECT
enable => count.OUTPUTSELECT
enable => count.OUTPUTSELECT
enable => count.OUTPUTSELECT
clk => count[0]~reg0.CLK
clk => count[1]~reg0.CLK
clk => count[2]~reg0.CLK
clk => count[3]~reg0.CLK
clk => count[4]~reg0.CLK
clk => count[5]~reg0.CLK
clk => count[6]~reg0.CLK
clk => count[7]~reg0.CLK
slow_edge => count.OUTPUTSELECT
slow_edge => count.OUTPUTSELECT
slow_edge => count.OUTPUTSELECT
slow_edge => count.OUTPUTSELECT
slow_edge => count.OUTPUTSELECT
slow_edge => count.OUTPUTSELECT
slow_edge => count.OUTPUTSELECT
slow_edge => count.OUTPUTSELECT
reset => count.OUTPUTSELECT
reset => count.OUTPUTSELECT
reset => count.OUTPUTSELECT
reset => count.OUTPUTSELECT
reset => count.OUTPUTSELECT
reset => count.OUTPUTSELECT
reset => count.OUTPUTSELECT
reset => count.OUTPUTSELECT
init_val[0] => count.DATAB
init_val[1] => count.DATAB


|lab8|snakes_and_apples:snake|grid_light:center_grid_row[13].center_grid_col[10].light
green_light_on <= green_light_on.DB_MAX_OUTPUT_PORT_TYPE
head <= head.DB_MAX_OUTPUT_PORT_TYPE
game_over_out <= state_n.DB_MAX_OUTPUT_PORT_TYPE
eating => counter256:counter.inc
eating => always0.IN1
game_over_in => state_n.e_off.OUTPUTSELECT
game_over_in => state_n.e_countdown.OUTPUTSELECT
game_over_in => state_n.e_head.OUTPUTSELECT
game_over_in => state_n.OUTPUTSELECT
left => state_n.OUTPUTSELECT
left => state_n.OUTPUTSELECT
left => state_n.OUTPUTSELECT
left => state_n.OUTPUTSELECT
up => state_n.OUTPUTSELECT
up => state_n.OUTPUTSELECT
up => state_n.OUTPUTSELECT
up => state_n.OUTPUTSELECT
right => state_n.OUTPUTSELECT
right => state_n.OUTPUTSELECT
right => state_n.OUTPUTSELECT
right => state_n.OUTPUTSELECT
down => state_n.OUTPUTSELECT
down => state_n.OUTPUTSELECT
down => state_n.OUTPUTSELECT
down => state_n.OUTPUTSELECT
length[0] => counter256:counter.start_val[0]
length[1] => counter256:counter.start_val[1]
length[2] => counter256:counter.start_val[2]
length[3] => counter256:counter.start_val[3]
length[4] => counter256:counter.start_val[4]
length[5] => counter256:counter.start_val[5]
length[6] => counter256:counter.start_val[6]
length[7] => counter256:counter.start_val[7]
dir[0] => Mux0.IN5
dir[0] => Mux1.IN5
dir[0] => Mux2.IN5
dir[0] => Mux3.IN5
dir[1] => Mux0.IN4
dir[1] => Mux1.IN4
dir[1] => Mux2.IN4
dir[1] => Mux3.IN4
clk => counter256:counter.clk
clk => state_r~1.DATAIN
slow_edge => counter256:counter.slow_edge
slow_edge => state_r.OUTPUTSELECT
slow_edge => state_r.OUTPUTSELECT
slow_edge => state_r.OUTPUTSELECT
slow_edge => state_r.OUTPUTSELECT
reset => counter256:counter.reset
reset => state_r.OUTPUTSELECT
reset => state_r.OUTPUTSELECT
reset => state_r.OUTPUTSELECT
reset => state_r.OUTPUTSELECT
light_type[0] => counter256:counter.init_val[0]
light_type[0] => Equal1.IN1
light_type[0] => Equal2.IN1
light_type[1] => counter256:counter.init_val[1]
light_type[1] => Equal1.IN0
light_type[1] => Equal2.IN0


|lab8|snakes_and_apples:snake|grid_light:center_grid_row[13].center_grid_col[10].light|counter256:counter
count[0] <= count[0]~reg0.DB_MAX_OUTPUT_PORT_TYPE
count[1] <= count[1]~reg0.DB_MAX_OUTPUT_PORT_TYPE
count[2] <= count[2]~reg0.DB_MAX_OUTPUT_PORT_TYPE
count[3] <= count[3]~reg0.DB_MAX_OUTPUT_PORT_TYPE
count[4] <= count[4]~reg0.DB_MAX_OUTPUT_PORT_TYPE
count[5] <= count[5]~reg0.DB_MAX_OUTPUT_PORT_TYPE
count[6] <= count[6]~reg0.DB_MAX_OUTPUT_PORT_TYPE
count[7] <= count[7]~reg0.DB_MAX_OUTPUT_PORT_TYPE
start_val[0] => Add0.IN16
start_val[0] => count.DATAB
start_val[1] => Add0.IN15
start_val[1] => count.DATAB
start_val[2] => Add0.IN14
start_val[2] => count.DATAB
start_val[3] => Add0.IN13
start_val[3] => count.DATAB
start_val[4] => Add0.IN12
start_val[4] => count.DATAB
start_val[5] => Add0.IN11
start_val[5] => count.DATAB
start_val[6] => Add0.IN10
start_val[6] => count.DATAB
start_val[7] => Add0.IN9
start_val[7] => count.DATAB
inc => count.OUTPUTSELECT
inc => count.OUTPUTSELECT
inc => count.OUTPUTSELECT
inc => count.OUTPUTSELECT
inc => count.OUTPUTSELECT
inc => count.OUTPUTSELECT
inc => count.OUTPUTSELECT
inc => count.OUTPUTSELECT
inc => always0.IN0
enable => always0.IN1
enable => count.OUTPUTSELECT
enable => count.OUTPUTSELECT
enable => count.OUTPUTSELECT
enable => count.OUTPUTSELECT
enable => count.OUTPUTSELECT
enable => count.OUTPUTSELECT
enable => count.OUTPUTSELECT
enable => count.OUTPUTSELECT
clk => count[0]~reg0.CLK
clk => count[1]~reg0.CLK
clk => count[2]~reg0.CLK
clk => count[3]~reg0.CLK
clk => count[4]~reg0.CLK
clk => count[5]~reg0.CLK
clk => count[6]~reg0.CLK
clk => count[7]~reg0.CLK
slow_edge => count.OUTPUTSELECT
slow_edge => count.OUTPUTSELECT
slow_edge => count.OUTPUTSELECT
slow_edge => count.OUTPUTSELECT
slow_edge => count.OUTPUTSELECT
slow_edge => count.OUTPUTSELECT
slow_edge => count.OUTPUTSELECT
slow_edge => count.OUTPUTSELECT
reset => count.OUTPUTSELECT
reset => count.OUTPUTSELECT
reset => count.OUTPUTSELECT
reset => count.OUTPUTSELECT
reset => count.OUTPUTSELECT
reset => count.OUTPUTSELECT
reset => count.OUTPUTSELECT
reset => count.OUTPUTSELECT
init_val[0] => count.DATAB
init_val[1] => count.DATAB


|lab8|snakes_and_apples:snake|grid_light:center_grid_row[13].center_grid_col[11].light
green_light_on <= green_light_on.DB_MAX_OUTPUT_PORT_TYPE
head <= head.DB_MAX_OUTPUT_PORT_TYPE
game_over_out <= state_n.DB_MAX_OUTPUT_PORT_TYPE
eating => counter256:counter.inc
eating => always0.IN1
game_over_in => state_n.e_off.OUTPUTSELECT
game_over_in => state_n.e_countdown.OUTPUTSELECT
game_over_in => state_n.e_head.OUTPUTSELECT
game_over_in => state_n.OUTPUTSELECT
left => state_n.OUTPUTSELECT
left => state_n.OUTPUTSELECT
left => state_n.OUTPUTSELECT
left => state_n.OUTPUTSELECT
up => state_n.OUTPUTSELECT
up => state_n.OUTPUTSELECT
up => state_n.OUTPUTSELECT
up => state_n.OUTPUTSELECT
right => state_n.OUTPUTSELECT
right => state_n.OUTPUTSELECT
right => state_n.OUTPUTSELECT
right => state_n.OUTPUTSELECT
down => state_n.OUTPUTSELECT
down => state_n.OUTPUTSELECT
down => state_n.OUTPUTSELECT
down => state_n.OUTPUTSELECT
length[0] => counter256:counter.start_val[0]
length[1] => counter256:counter.start_val[1]
length[2] => counter256:counter.start_val[2]
length[3] => counter256:counter.start_val[3]
length[4] => counter256:counter.start_val[4]
length[5] => counter256:counter.start_val[5]
length[6] => counter256:counter.start_val[6]
length[7] => counter256:counter.start_val[7]
dir[0] => Mux0.IN5
dir[0] => Mux1.IN5
dir[0] => Mux2.IN5
dir[0] => Mux3.IN5
dir[1] => Mux0.IN4
dir[1] => Mux1.IN4
dir[1] => Mux2.IN4
dir[1] => Mux3.IN4
clk => counter256:counter.clk
clk => state_r~1.DATAIN
slow_edge => counter256:counter.slow_edge
slow_edge => state_r.OUTPUTSELECT
slow_edge => state_r.OUTPUTSELECT
slow_edge => state_r.OUTPUTSELECT
slow_edge => state_r.OUTPUTSELECT
reset => counter256:counter.reset
reset => state_r.OUTPUTSELECT
reset => state_r.OUTPUTSELECT
reset => state_r.OUTPUTSELECT
reset => state_r.OUTPUTSELECT
light_type[0] => counter256:counter.init_val[0]
light_type[0] => Equal1.IN1
light_type[0] => Equal2.IN1
light_type[1] => counter256:counter.init_val[1]
light_type[1] => Equal1.IN0
light_type[1] => Equal2.IN0


|lab8|snakes_and_apples:snake|grid_light:center_grid_row[13].center_grid_col[11].light|counter256:counter
count[0] <= count[0]~reg0.DB_MAX_OUTPUT_PORT_TYPE
count[1] <= count[1]~reg0.DB_MAX_OUTPUT_PORT_TYPE
count[2] <= count[2]~reg0.DB_MAX_OUTPUT_PORT_TYPE
count[3] <= count[3]~reg0.DB_MAX_OUTPUT_PORT_TYPE
count[4] <= count[4]~reg0.DB_MAX_OUTPUT_PORT_TYPE
count[5] <= count[5]~reg0.DB_MAX_OUTPUT_PORT_TYPE
count[6] <= count[6]~reg0.DB_MAX_OUTPUT_PORT_TYPE
count[7] <= count[7]~reg0.DB_MAX_OUTPUT_PORT_TYPE
start_val[0] => Add0.IN16
start_val[0] => count.DATAB
start_val[1] => Add0.IN15
start_val[1] => count.DATAB
start_val[2] => Add0.IN14
start_val[2] => count.DATAB
start_val[3] => Add0.IN13
start_val[3] => count.DATAB
start_val[4] => Add0.IN12
start_val[4] => count.DATAB
start_val[5] => Add0.IN11
start_val[5] => count.DATAB
start_val[6] => Add0.IN10
start_val[6] => count.DATAB
start_val[7] => Add0.IN9
start_val[7] => count.DATAB
inc => count.OUTPUTSELECT
inc => count.OUTPUTSELECT
inc => count.OUTPUTSELECT
inc => count.OUTPUTSELECT
inc => count.OUTPUTSELECT
inc => count.OUTPUTSELECT
inc => count.OUTPUTSELECT
inc => count.OUTPUTSELECT
inc => always0.IN0
enable => always0.IN1
enable => count.OUTPUTSELECT
enable => count.OUTPUTSELECT
enable => count.OUTPUTSELECT
enable => count.OUTPUTSELECT
enable => count.OUTPUTSELECT
enable => count.OUTPUTSELECT
enable => count.OUTPUTSELECT
enable => count.OUTPUTSELECT
clk => count[0]~reg0.CLK
clk => count[1]~reg0.CLK
clk => count[2]~reg0.CLK
clk => count[3]~reg0.CLK
clk => count[4]~reg0.CLK
clk => count[5]~reg0.CLK
clk => count[6]~reg0.CLK
clk => count[7]~reg0.CLK
slow_edge => count.OUTPUTSELECT
slow_edge => count.OUTPUTSELECT
slow_edge => count.OUTPUTSELECT
slow_edge => count.OUTPUTSELECT
slow_edge => count.OUTPUTSELECT
slow_edge => count.OUTPUTSELECT
slow_edge => count.OUTPUTSELECT
slow_edge => count.OUTPUTSELECT
reset => count.OUTPUTSELECT
reset => count.OUTPUTSELECT
reset => count.OUTPUTSELECT
reset => count.OUTPUTSELECT
reset => count.OUTPUTSELECT
reset => count.OUTPUTSELECT
reset => count.OUTPUTSELECT
reset => count.OUTPUTSELECT
init_val[0] => count.DATAB
init_val[1] => count.DATAB


|lab8|snakes_and_apples:snake|grid_light:center_grid_row[13].center_grid_col[12].light
green_light_on <= green_light_on.DB_MAX_OUTPUT_PORT_TYPE
head <= head.DB_MAX_OUTPUT_PORT_TYPE
game_over_out <= state_n.DB_MAX_OUTPUT_PORT_TYPE
eating => counter256:counter.inc
eating => always0.IN1
game_over_in => state_n.e_off.OUTPUTSELECT
game_over_in => state_n.e_countdown.OUTPUTSELECT
game_over_in => state_n.e_head.OUTPUTSELECT
game_over_in => state_n.OUTPUTSELECT
left => state_n.OUTPUTSELECT
left => state_n.OUTPUTSELECT
left => state_n.OUTPUTSELECT
left => state_n.OUTPUTSELECT
up => state_n.OUTPUTSELECT
up => state_n.OUTPUTSELECT
up => state_n.OUTPUTSELECT
up => state_n.OUTPUTSELECT
right => state_n.OUTPUTSELECT
right => state_n.OUTPUTSELECT
right => state_n.OUTPUTSELECT
right => state_n.OUTPUTSELECT
down => state_n.OUTPUTSELECT
down => state_n.OUTPUTSELECT
down => state_n.OUTPUTSELECT
down => state_n.OUTPUTSELECT
length[0] => counter256:counter.start_val[0]
length[1] => counter256:counter.start_val[1]
length[2] => counter256:counter.start_val[2]
length[3] => counter256:counter.start_val[3]
length[4] => counter256:counter.start_val[4]
length[5] => counter256:counter.start_val[5]
length[6] => counter256:counter.start_val[6]
length[7] => counter256:counter.start_val[7]
dir[0] => Mux0.IN5
dir[0] => Mux1.IN5
dir[0] => Mux2.IN5
dir[0] => Mux3.IN5
dir[1] => Mux0.IN4
dir[1] => Mux1.IN4
dir[1] => Mux2.IN4
dir[1] => Mux3.IN4
clk => counter256:counter.clk
clk => state_r~1.DATAIN
slow_edge => counter256:counter.slow_edge
slow_edge => state_r.OUTPUTSELECT
slow_edge => state_r.OUTPUTSELECT
slow_edge => state_r.OUTPUTSELECT
slow_edge => state_r.OUTPUTSELECT
reset => counter256:counter.reset
reset => state_r.OUTPUTSELECT
reset => state_r.OUTPUTSELECT
reset => state_r.OUTPUTSELECT
reset => state_r.OUTPUTSELECT
light_type[0] => counter256:counter.init_val[0]
light_type[0] => Equal1.IN1
light_type[0] => Equal2.IN1
light_type[1] => counter256:counter.init_val[1]
light_type[1] => Equal1.IN0
light_type[1] => Equal2.IN0


|lab8|snakes_and_apples:snake|grid_light:center_grid_row[13].center_grid_col[12].light|counter256:counter
count[0] <= count[0]~reg0.DB_MAX_OUTPUT_PORT_TYPE
count[1] <= count[1]~reg0.DB_MAX_OUTPUT_PORT_TYPE
count[2] <= count[2]~reg0.DB_MAX_OUTPUT_PORT_TYPE
count[3] <= count[3]~reg0.DB_MAX_OUTPUT_PORT_TYPE
count[4] <= count[4]~reg0.DB_MAX_OUTPUT_PORT_TYPE
count[5] <= count[5]~reg0.DB_MAX_OUTPUT_PORT_TYPE
count[6] <= count[6]~reg0.DB_MAX_OUTPUT_PORT_TYPE
count[7] <= count[7]~reg0.DB_MAX_OUTPUT_PORT_TYPE
start_val[0] => Add0.IN16
start_val[0] => count.DATAB
start_val[1] => Add0.IN15
start_val[1] => count.DATAB
start_val[2] => Add0.IN14
start_val[2] => count.DATAB
start_val[3] => Add0.IN13
start_val[3] => count.DATAB
start_val[4] => Add0.IN12
start_val[4] => count.DATAB
start_val[5] => Add0.IN11
start_val[5] => count.DATAB
start_val[6] => Add0.IN10
start_val[6] => count.DATAB
start_val[7] => Add0.IN9
start_val[7] => count.DATAB
inc => count.OUTPUTSELECT
inc => count.OUTPUTSELECT
inc => count.OUTPUTSELECT
inc => count.OUTPUTSELECT
inc => count.OUTPUTSELECT
inc => count.OUTPUTSELECT
inc => count.OUTPUTSELECT
inc => count.OUTPUTSELECT
inc => always0.IN0
enable => always0.IN1
enable => count.OUTPUTSELECT
enable => count.OUTPUTSELECT
enable => count.OUTPUTSELECT
enable => count.OUTPUTSELECT
enable => count.OUTPUTSELECT
enable => count.OUTPUTSELECT
enable => count.OUTPUTSELECT
enable => count.OUTPUTSELECT
clk => count[0]~reg0.CLK
clk => count[1]~reg0.CLK
clk => count[2]~reg0.CLK
clk => count[3]~reg0.CLK
clk => count[4]~reg0.CLK
clk => count[5]~reg0.CLK
clk => count[6]~reg0.CLK
clk => count[7]~reg0.CLK
slow_edge => count.OUTPUTSELECT
slow_edge => count.OUTPUTSELECT
slow_edge => count.OUTPUTSELECT
slow_edge => count.OUTPUTSELECT
slow_edge => count.OUTPUTSELECT
slow_edge => count.OUTPUTSELECT
slow_edge => count.OUTPUTSELECT
slow_edge => count.OUTPUTSELECT
reset => count.OUTPUTSELECT
reset => count.OUTPUTSELECT
reset => count.OUTPUTSELECT
reset => count.OUTPUTSELECT
reset => count.OUTPUTSELECT
reset => count.OUTPUTSELECT
reset => count.OUTPUTSELECT
reset => count.OUTPUTSELECT
init_val[0] => count.DATAB
init_val[1] => count.DATAB


|lab8|snakes_and_apples:snake|grid_light:center_grid_row[13].center_grid_col[13].light
green_light_on <= green_light_on.DB_MAX_OUTPUT_PORT_TYPE
head <= head.DB_MAX_OUTPUT_PORT_TYPE
game_over_out <= state_n.DB_MAX_OUTPUT_PORT_TYPE
eating => counter256:counter.inc
eating => always0.IN1
game_over_in => state_n.e_off.OUTPUTSELECT
game_over_in => state_n.e_countdown.OUTPUTSELECT
game_over_in => state_n.e_head.OUTPUTSELECT
game_over_in => state_n.OUTPUTSELECT
left => state_n.OUTPUTSELECT
left => state_n.OUTPUTSELECT
left => state_n.OUTPUTSELECT
left => state_n.OUTPUTSELECT
up => state_n.OUTPUTSELECT
up => state_n.OUTPUTSELECT
up => state_n.OUTPUTSELECT
up => state_n.OUTPUTSELECT
right => state_n.OUTPUTSELECT
right => state_n.OUTPUTSELECT
right => state_n.OUTPUTSELECT
right => state_n.OUTPUTSELECT
down => state_n.OUTPUTSELECT
down => state_n.OUTPUTSELECT
down => state_n.OUTPUTSELECT
down => state_n.OUTPUTSELECT
length[0] => counter256:counter.start_val[0]
length[1] => counter256:counter.start_val[1]
length[2] => counter256:counter.start_val[2]
length[3] => counter256:counter.start_val[3]
length[4] => counter256:counter.start_val[4]
length[5] => counter256:counter.start_val[5]
length[6] => counter256:counter.start_val[6]
length[7] => counter256:counter.start_val[7]
dir[0] => Mux0.IN5
dir[0] => Mux1.IN5
dir[0] => Mux2.IN5
dir[0] => Mux3.IN5
dir[1] => Mux0.IN4
dir[1] => Mux1.IN4
dir[1] => Mux2.IN4
dir[1] => Mux3.IN4
clk => counter256:counter.clk
clk => state_r~1.DATAIN
slow_edge => counter256:counter.slow_edge
slow_edge => state_r.OUTPUTSELECT
slow_edge => state_r.OUTPUTSELECT
slow_edge => state_r.OUTPUTSELECT
slow_edge => state_r.OUTPUTSELECT
reset => counter256:counter.reset
reset => state_r.OUTPUTSELECT
reset => state_r.OUTPUTSELECT
reset => state_r.OUTPUTSELECT
reset => state_r.OUTPUTSELECT
light_type[0] => counter256:counter.init_val[0]
light_type[0] => Equal1.IN1
light_type[0] => Equal2.IN1
light_type[1] => counter256:counter.init_val[1]
light_type[1] => Equal1.IN0
light_type[1] => Equal2.IN0


|lab8|snakes_and_apples:snake|grid_light:center_grid_row[13].center_grid_col[13].light|counter256:counter
count[0] <= count[0]~reg0.DB_MAX_OUTPUT_PORT_TYPE
count[1] <= count[1]~reg0.DB_MAX_OUTPUT_PORT_TYPE
count[2] <= count[2]~reg0.DB_MAX_OUTPUT_PORT_TYPE
count[3] <= count[3]~reg0.DB_MAX_OUTPUT_PORT_TYPE
count[4] <= count[4]~reg0.DB_MAX_OUTPUT_PORT_TYPE
count[5] <= count[5]~reg0.DB_MAX_OUTPUT_PORT_TYPE
count[6] <= count[6]~reg0.DB_MAX_OUTPUT_PORT_TYPE
count[7] <= count[7]~reg0.DB_MAX_OUTPUT_PORT_TYPE
start_val[0] => Add0.IN16
start_val[0] => count.DATAB
start_val[1] => Add0.IN15
start_val[1] => count.DATAB
start_val[2] => Add0.IN14
start_val[2] => count.DATAB
start_val[3] => Add0.IN13
start_val[3] => count.DATAB
start_val[4] => Add0.IN12
start_val[4] => count.DATAB
start_val[5] => Add0.IN11
start_val[5] => count.DATAB
start_val[6] => Add0.IN10
start_val[6] => count.DATAB
start_val[7] => Add0.IN9
start_val[7] => count.DATAB
inc => count.OUTPUTSELECT
inc => count.OUTPUTSELECT
inc => count.OUTPUTSELECT
inc => count.OUTPUTSELECT
inc => count.OUTPUTSELECT
inc => count.OUTPUTSELECT
inc => count.OUTPUTSELECT
inc => count.OUTPUTSELECT
inc => always0.IN0
enable => always0.IN1
enable => count.OUTPUTSELECT
enable => count.OUTPUTSELECT
enable => count.OUTPUTSELECT
enable => count.OUTPUTSELECT
enable => count.OUTPUTSELECT
enable => count.OUTPUTSELECT
enable => count.OUTPUTSELECT
enable => count.OUTPUTSELECT
clk => count[0]~reg0.CLK
clk => count[1]~reg0.CLK
clk => count[2]~reg0.CLK
clk => count[3]~reg0.CLK
clk => count[4]~reg0.CLK
clk => count[5]~reg0.CLK
clk => count[6]~reg0.CLK
clk => count[7]~reg0.CLK
slow_edge => count.OUTPUTSELECT
slow_edge => count.OUTPUTSELECT
slow_edge => count.OUTPUTSELECT
slow_edge => count.OUTPUTSELECT
slow_edge => count.OUTPUTSELECT
slow_edge => count.OUTPUTSELECT
slow_edge => count.OUTPUTSELECT
slow_edge => count.OUTPUTSELECT
reset => count.OUTPUTSELECT
reset => count.OUTPUTSELECT
reset => count.OUTPUTSELECT
reset => count.OUTPUTSELECT
reset => count.OUTPUTSELECT
reset => count.OUTPUTSELECT
reset => count.OUTPUTSELECT
reset => count.OUTPUTSELECT
init_val[0] => count.DATAB
init_val[1] => count.DATAB


|lab8|snakes_and_apples:snake|grid_light:center_grid_row[13].center_grid_col[14].light
green_light_on <= green_light_on.DB_MAX_OUTPUT_PORT_TYPE
head <= head.DB_MAX_OUTPUT_PORT_TYPE
game_over_out <= state_n.DB_MAX_OUTPUT_PORT_TYPE
eating => counter256:counter.inc
eating => always0.IN1
game_over_in => state_n.e_off.OUTPUTSELECT
game_over_in => state_n.e_countdown.OUTPUTSELECT
game_over_in => state_n.e_head.OUTPUTSELECT
game_over_in => state_n.OUTPUTSELECT
left => state_n.OUTPUTSELECT
left => state_n.OUTPUTSELECT
left => state_n.OUTPUTSELECT
left => state_n.OUTPUTSELECT
up => state_n.OUTPUTSELECT
up => state_n.OUTPUTSELECT
up => state_n.OUTPUTSELECT
up => state_n.OUTPUTSELECT
right => state_n.OUTPUTSELECT
right => state_n.OUTPUTSELECT
right => state_n.OUTPUTSELECT
right => state_n.OUTPUTSELECT
down => state_n.OUTPUTSELECT
down => state_n.OUTPUTSELECT
down => state_n.OUTPUTSELECT
down => state_n.OUTPUTSELECT
length[0] => counter256:counter.start_val[0]
length[1] => counter256:counter.start_val[1]
length[2] => counter256:counter.start_val[2]
length[3] => counter256:counter.start_val[3]
length[4] => counter256:counter.start_val[4]
length[5] => counter256:counter.start_val[5]
length[6] => counter256:counter.start_val[6]
length[7] => counter256:counter.start_val[7]
dir[0] => Mux0.IN5
dir[0] => Mux1.IN5
dir[0] => Mux2.IN5
dir[0] => Mux3.IN5
dir[1] => Mux0.IN4
dir[1] => Mux1.IN4
dir[1] => Mux2.IN4
dir[1] => Mux3.IN4
clk => counter256:counter.clk
clk => state_r~1.DATAIN
slow_edge => counter256:counter.slow_edge
slow_edge => state_r.OUTPUTSELECT
slow_edge => state_r.OUTPUTSELECT
slow_edge => state_r.OUTPUTSELECT
slow_edge => state_r.OUTPUTSELECT
reset => counter256:counter.reset
reset => state_r.OUTPUTSELECT
reset => state_r.OUTPUTSELECT
reset => state_r.OUTPUTSELECT
reset => state_r.OUTPUTSELECT
light_type[0] => counter256:counter.init_val[0]
light_type[0] => Equal1.IN1
light_type[0] => Equal2.IN1
light_type[1] => counter256:counter.init_val[1]
light_type[1] => Equal1.IN0
light_type[1] => Equal2.IN0


|lab8|snakes_and_apples:snake|grid_light:center_grid_row[13].center_grid_col[14].light|counter256:counter
count[0] <= count[0]~reg0.DB_MAX_OUTPUT_PORT_TYPE
count[1] <= count[1]~reg0.DB_MAX_OUTPUT_PORT_TYPE
count[2] <= count[2]~reg0.DB_MAX_OUTPUT_PORT_TYPE
count[3] <= count[3]~reg0.DB_MAX_OUTPUT_PORT_TYPE
count[4] <= count[4]~reg0.DB_MAX_OUTPUT_PORT_TYPE
count[5] <= count[5]~reg0.DB_MAX_OUTPUT_PORT_TYPE
count[6] <= count[6]~reg0.DB_MAX_OUTPUT_PORT_TYPE
count[7] <= count[7]~reg0.DB_MAX_OUTPUT_PORT_TYPE
start_val[0] => Add0.IN16
start_val[0] => count.DATAB
start_val[1] => Add0.IN15
start_val[1] => count.DATAB
start_val[2] => Add0.IN14
start_val[2] => count.DATAB
start_val[3] => Add0.IN13
start_val[3] => count.DATAB
start_val[4] => Add0.IN12
start_val[4] => count.DATAB
start_val[5] => Add0.IN11
start_val[5] => count.DATAB
start_val[6] => Add0.IN10
start_val[6] => count.DATAB
start_val[7] => Add0.IN9
start_val[7] => count.DATAB
inc => count.OUTPUTSELECT
inc => count.OUTPUTSELECT
inc => count.OUTPUTSELECT
inc => count.OUTPUTSELECT
inc => count.OUTPUTSELECT
inc => count.OUTPUTSELECT
inc => count.OUTPUTSELECT
inc => count.OUTPUTSELECT
inc => always0.IN0
enable => always0.IN1
enable => count.OUTPUTSELECT
enable => count.OUTPUTSELECT
enable => count.OUTPUTSELECT
enable => count.OUTPUTSELECT
enable => count.OUTPUTSELECT
enable => count.OUTPUTSELECT
enable => count.OUTPUTSELECT
enable => count.OUTPUTSELECT
clk => count[0]~reg0.CLK
clk => count[1]~reg0.CLK
clk => count[2]~reg0.CLK
clk => count[3]~reg0.CLK
clk => count[4]~reg0.CLK
clk => count[5]~reg0.CLK
clk => count[6]~reg0.CLK
clk => count[7]~reg0.CLK
slow_edge => count.OUTPUTSELECT
slow_edge => count.OUTPUTSELECT
slow_edge => count.OUTPUTSELECT
slow_edge => count.OUTPUTSELECT
slow_edge => count.OUTPUTSELECT
slow_edge => count.OUTPUTSELECT
slow_edge => count.OUTPUTSELECT
slow_edge => count.OUTPUTSELECT
reset => count.OUTPUTSELECT
reset => count.OUTPUTSELECT
reset => count.OUTPUTSELECT
reset => count.OUTPUTSELECT
reset => count.OUTPUTSELECT
reset => count.OUTPUTSELECT
reset => count.OUTPUTSELECT
reset => count.OUTPUTSELECT
init_val[0] => count.DATAB
init_val[1] => count.DATAB


|lab8|snakes_and_apples:snake|grid_light:center_grid_row[14].center_grid_col[1].light
green_light_on <= green_light_on.DB_MAX_OUTPUT_PORT_TYPE
head <= head.DB_MAX_OUTPUT_PORT_TYPE
game_over_out <= state_n.DB_MAX_OUTPUT_PORT_TYPE
eating => counter256:counter.inc
eating => always0.IN1
game_over_in => state_n.e_off.OUTPUTSELECT
game_over_in => state_n.e_countdown.OUTPUTSELECT
game_over_in => state_n.e_head.OUTPUTSELECT
game_over_in => state_n.OUTPUTSELECT
left => state_n.OUTPUTSELECT
left => state_n.OUTPUTSELECT
left => state_n.OUTPUTSELECT
left => state_n.OUTPUTSELECT
up => state_n.OUTPUTSELECT
up => state_n.OUTPUTSELECT
up => state_n.OUTPUTSELECT
up => state_n.OUTPUTSELECT
right => state_n.OUTPUTSELECT
right => state_n.OUTPUTSELECT
right => state_n.OUTPUTSELECT
right => state_n.OUTPUTSELECT
down => state_n.OUTPUTSELECT
down => state_n.OUTPUTSELECT
down => state_n.OUTPUTSELECT
down => state_n.OUTPUTSELECT
length[0] => counter256:counter.start_val[0]
length[1] => counter256:counter.start_val[1]
length[2] => counter256:counter.start_val[2]
length[3] => counter256:counter.start_val[3]
length[4] => counter256:counter.start_val[4]
length[5] => counter256:counter.start_val[5]
length[6] => counter256:counter.start_val[6]
length[7] => counter256:counter.start_val[7]
dir[0] => Mux0.IN5
dir[0] => Mux1.IN5
dir[0] => Mux2.IN5
dir[0] => Mux3.IN5
dir[1] => Mux0.IN4
dir[1] => Mux1.IN4
dir[1] => Mux2.IN4
dir[1] => Mux3.IN4
clk => counter256:counter.clk
clk => state_r~1.DATAIN
slow_edge => counter256:counter.slow_edge
slow_edge => state_r.OUTPUTSELECT
slow_edge => state_r.OUTPUTSELECT
slow_edge => state_r.OUTPUTSELECT
slow_edge => state_r.OUTPUTSELECT
reset => counter256:counter.reset
reset => state_r.OUTPUTSELECT
reset => state_r.OUTPUTSELECT
reset => state_r.OUTPUTSELECT
reset => state_r.OUTPUTSELECT
light_type[0] => counter256:counter.init_val[0]
light_type[0] => Equal1.IN1
light_type[0] => Equal2.IN1
light_type[1] => counter256:counter.init_val[1]
light_type[1] => Equal1.IN0
light_type[1] => Equal2.IN0


|lab8|snakes_and_apples:snake|grid_light:center_grid_row[14].center_grid_col[1].light|counter256:counter
count[0] <= count[0]~reg0.DB_MAX_OUTPUT_PORT_TYPE
count[1] <= count[1]~reg0.DB_MAX_OUTPUT_PORT_TYPE
count[2] <= count[2]~reg0.DB_MAX_OUTPUT_PORT_TYPE
count[3] <= count[3]~reg0.DB_MAX_OUTPUT_PORT_TYPE
count[4] <= count[4]~reg0.DB_MAX_OUTPUT_PORT_TYPE
count[5] <= count[5]~reg0.DB_MAX_OUTPUT_PORT_TYPE
count[6] <= count[6]~reg0.DB_MAX_OUTPUT_PORT_TYPE
count[7] <= count[7]~reg0.DB_MAX_OUTPUT_PORT_TYPE
start_val[0] => Add0.IN16
start_val[0] => count.DATAB
start_val[1] => Add0.IN15
start_val[1] => count.DATAB
start_val[2] => Add0.IN14
start_val[2] => count.DATAB
start_val[3] => Add0.IN13
start_val[3] => count.DATAB
start_val[4] => Add0.IN12
start_val[4] => count.DATAB
start_val[5] => Add0.IN11
start_val[5] => count.DATAB
start_val[6] => Add0.IN10
start_val[6] => count.DATAB
start_val[7] => Add0.IN9
start_val[7] => count.DATAB
inc => count.OUTPUTSELECT
inc => count.OUTPUTSELECT
inc => count.OUTPUTSELECT
inc => count.OUTPUTSELECT
inc => count.OUTPUTSELECT
inc => count.OUTPUTSELECT
inc => count.OUTPUTSELECT
inc => count.OUTPUTSELECT
inc => always0.IN0
enable => always0.IN1
enable => count.OUTPUTSELECT
enable => count.OUTPUTSELECT
enable => count.OUTPUTSELECT
enable => count.OUTPUTSELECT
enable => count.OUTPUTSELECT
enable => count.OUTPUTSELECT
enable => count.OUTPUTSELECT
enable => count.OUTPUTSELECT
clk => count[0]~reg0.CLK
clk => count[1]~reg0.CLK
clk => count[2]~reg0.CLK
clk => count[3]~reg0.CLK
clk => count[4]~reg0.CLK
clk => count[5]~reg0.CLK
clk => count[6]~reg0.CLK
clk => count[7]~reg0.CLK
slow_edge => count.OUTPUTSELECT
slow_edge => count.OUTPUTSELECT
slow_edge => count.OUTPUTSELECT
slow_edge => count.OUTPUTSELECT
slow_edge => count.OUTPUTSELECT
slow_edge => count.OUTPUTSELECT
slow_edge => count.OUTPUTSELECT
slow_edge => count.OUTPUTSELECT
reset => count.OUTPUTSELECT
reset => count.OUTPUTSELECT
reset => count.OUTPUTSELECT
reset => count.OUTPUTSELECT
reset => count.OUTPUTSELECT
reset => count.OUTPUTSELECT
reset => count.OUTPUTSELECT
reset => count.OUTPUTSELECT
init_val[0] => count.DATAB
init_val[1] => count.DATAB


|lab8|snakes_and_apples:snake|grid_light:center_grid_row[14].center_grid_col[2].light
green_light_on <= green_light_on.DB_MAX_OUTPUT_PORT_TYPE
head <= head.DB_MAX_OUTPUT_PORT_TYPE
game_over_out <= state_n.DB_MAX_OUTPUT_PORT_TYPE
eating => counter256:counter.inc
eating => always0.IN1
game_over_in => state_n.e_off.OUTPUTSELECT
game_over_in => state_n.e_countdown.OUTPUTSELECT
game_over_in => state_n.e_head.OUTPUTSELECT
game_over_in => state_n.OUTPUTSELECT
left => state_n.OUTPUTSELECT
left => state_n.OUTPUTSELECT
left => state_n.OUTPUTSELECT
left => state_n.OUTPUTSELECT
up => state_n.OUTPUTSELECT
up => state_n.OUTPUTSELECT
up => state_n.OUTPUTSELECT
up => state_n.OUTPUTSELECT
right => state_n.OUTPUTSELECT
right => state_n.OUTPUTSELECT
right => state_n.OUTPUTSELECT
right => state_n.OUTPUTSELECT
down => state_n.OUTPUTSELECT
down => state_n.OUTPUTSELECT
down => state_n.OUTPUTSELECT
down => state_n.OUTPUTSELECT
length[0] => counter256:counter.start_val[0]
length[1] => counter256:counter.start_val[1]
length[2] => counter256:counter.start_val[2]
length[3] => counter256:counter.start_val[3]
length[4] => counter256:counter.start_val[4]
length[5] => counter256:counter.start_val[5]
length[6] => counter256:counter.start_val[6]
length[7] => counter256:counter.start_val[7]
dir[0] => Mux0.IN5
dir[0] => Mux1.IN5
dir[0] => Mux2.IN5
dir[0] => Mux3.IN5
dir[1] => Mux0.IN4
dir[1] => Mux1.IN4
dir[1] => Mux2.IN4
dir[1] => Mux3.IN4
clk => counter256:counter.clk
clk => state_r~1.DATAIN
slow_edge => counter256:counter.slow_edge
slow_edge => state_r.OUTPUTSELECT
slow_edge => state_r.OUTPUTSELECT
slow_edge => state_r.OUTPUTSELECT
slow_edge => state_r.OUTPUTSELECT
reset => counter256:counter.reset
reset => state_r.OUTPUTSELECT
reset => state_r.OUTPUTSELECT
reset => state_r.OUTPUTSELECT
reset => state_r.OUTPUTSELECT
light_type[0] => counter256:counter.init_val[0]
light_type[0] => Equal1.IN1
light_type[0] => Equal2.IN1
light_type[1] => counter256:counter.init_val[1]
light_type[1] => Equal1.IN0
light_type[1] => Equal2.IN0


|lab8|snakes_and_apples:snake|grid_light:center_grid_row[14].center_grid_col[2].light|counter256:counter
count[0] <= count[0]~reg0.DB_MAX_OUTPUT_PORT_TYPE
count[1] <= count[1]~reg0.DB_MAX_OUTPUT_PORT_TYPE
count[2] <= count[2]~reg0.DB_MAX_OUTPUT_PORT_TYPE
count[3] <= count[3]~reg0.DB_MAX_OUTPUT_PORT_TYPE
count[4] <= count[4]~reg0.DB_MAX_OUTPUT_PORT_TYPE
count[5] <= count[5]~reg0.DB_MAX_OUTPUT_PORT_TYPE
count[6] <= count[6]~reg0.DB_MAX_OUTPUT_PORT_TYPE
count[7] <= count[7]~reg0.DB_MAX_OUTPUT_PORT_TYPE
start_val[0] => Add0.IN16
start_val[0] => count.DATAB
start_val[1] => Add0.IN15
start_val[1] => count.DATAB
start_val[2] => Add0.IN14
start_val[2] => count.DATAB
start_val[3] => Add0.IN13
start_val[3] => count.DATAB
start_val[4] => Add0.IN12
start_val[4] => count.DATAB
start_val[5] => Add0.IN11
start_val[5] => count.DATAB
start_val[6] => Add0.IN10
start_val[6] => count.DATAB
start_val[7] => Add0.IN9
start_val[7] => count.DATAB
inc => count.OUTPUTSELECT
inc => count.OUTPUTSELECT
inc => count.OUTPUTSELECT
inc => count.OUTPUTSELECT
inc => count.OUTPUTSELECT
inc => count.OUTPUTSELECT
inc => count.OUTPUTSELECT
inc => count.OUTPUTSELECT
inc => always0.IN0
enable => always0.IN1
enable => count.OUTPUTSELECT
enable => count.OUTPUTSELECT
enable => count.OUTPUTSELECT
enable => count.OUTPUTSELECT
enable => count.OUTPUTSELECT
enable => count.OUTPUTSELECT
enable => count.OUTPUTSELECT
enable => count.OUTPUTSELECT
clk => count[0]~reg0.CLK
clk => count[1]~reg0.CLK
clk => count[2]~reg0.CLK
clk => count[3]~reg0.CLK
clk => count[4]~reg0.CLK
clk => count[5]~reg0.CLK
clk => count[6]~reg0.CLK
clk => count[7]~reg0.CLK
slow_edge => count.OUTPUTSELECT
slow_edge => count.OUTPUTSELECT
slow_edge => count.OUTPUTSELECT
slow_edge => count.OUTPUTSELECT
slow_edge => count.OUTPUTSELECT
slow_edge => count.OUTPUTSELECT
slow_edge => count.OUTPUTSELECT
slow_edge => count.OUTPUTSELECT
reset => count.OUTPUTSELECT
reset => count.OUTPUTSELECT
reset => count.OUTPUTSELECT
reset => count.OUTPUTSELECT
reset => count.OUTPUTSELECT
reset => count.OUTPUTSELECT
reset => count.OUTPUTSELECT
reset => count.OUTPUTSELECT
init_val[0] => count.DATAB
init_val[1] => count.DATAB


|lab8|snakes_and_apples:snake|grid_light:center_grid_row[14].center_grid_col[3].light
green_light_on <= green_light_on.DB_MAX_OUTPUT_PORT_TYPE
head <= head.DB_MAX_OUTPUT_PORT_TYPE
game_over_out <= state_n.DB_MAX_OUTPUT_PORT_TYPE
eating => counter256:counter.inc
eating => always0.IN1
game_over_in => state_n.e_off.OUTPUTSELECT
game_over_in => state_n.e_countdown.OUTPUTSELECT
game_over_in => state_n.e_head.OUTPUTSELECT
game_over_in => state_n.OUTPUTSELECT
left => state_n.OUTPUTSELECT
left => state_n.OUTPUTSELECT
left => state_n.OUTPUTSELECT
left => state_n.OUTPUTSELECT
up => state_n.OUTPUTSELECT
up => state_n.OUTPUTSELECT
up => state_n.OUTPUTSELECT
up => state_n.OUTPUTSELECT
right => state_n.OUTPUTSELECT
right => state_n.OUTPUTSELECT
right => state_n.OUTPUTSELECT
right => state_n.OUTPUTSELECT
down => state_n.OUTPUTSELECT
down => state_n.OUTPUTSELECT
down => state_n.OUTPUTSELECT
down => state_n.OUTPUTSELECT
length[0] => counter256:counter.start_val[0]
length[1] => counter256:counter.start_val[1]
length[2] => counter256:counter.start_val[2]
length[3] => counter256:counter.start_val[3]
length[4] => counter256:counter.start_val[4]
length[5] => counter256:counter.start_val[5]
length[6] => counter256:counter.start_val[6]
length[7] => counter256:counter.start_val[7]
dir[0] => Mux0.IN5
dir[0] => Mux1.IN5
dir[0] => Mux2.IN5
dir[0] => Mux3.IN5
dir[1] => Mux0.IN4
dir[1] => Mux1.IN4
dir[1] => Mux2.IN4
dir[1] => Mux3.IN4
clk => counter256:counter.clk
clk => state_r~1.DATAIN
slow_edge => counter256:counter.slow_edge
slow_edge => state_r.OUTPUTSELECT
slow_edge => state_r.OUTPUTSELECT
slow_edge => state_r.OUTPUTSELECT
slow_edge => state_r.OUTPUTSELECT
reset => counter256:counter.reset
reset => state_r.OUTPUTSELECT
reset => state_r.OUTPUTSELECT
reset => state_r.OUTPUTSELECT
reset => state_r.OUTPUTSELECT
light_type[0] => counter256:counter.init_val[0]
light_type[0] => Equal1.IN1
light_type[0] => Equal2.IN1
light_type[1] => counter256:counter.init_val[1]
light_type[1] => Equal1.IN0
light_type[1] => Equal2.IN0


|lab8|snakes_and_apples:snake|grid_light:center_grid_row[14].center_grid_col[3].light|counter256:counter
count[0] <= count[0]~reg0.DB_MAX_OUTPUT_PORT_TYPE
count[1] <= count[1]~reg0.DB_MAX_OUTPUT_PORT_TYPE
count[2] <= count[2]~reg0.DB_MAX_OUTPUT_PORT_TYPE
count[3] <= count[3]~reg0.DB_MAX_OUTPUT_PORT_TYPE
count[4] <= count[4]~reg0.DB_MAX_OUTPUT_PORT_TYPE
count[5] <= count[5]~reg0.DB_MAX_OUTPUT_PORT_TYPE
count[6] <= count[6]~reg0.DB_MAX_OUTPUT_PORT_TYPE
count[7] <= count[7]~reg0.DB_MAX_OUTPUT_PORT_TYPE
start_val[0] => Add0.IN16
start_val[0] => count.DATAB
start_val[1] => Add0.IN15
start_val[1] => count.DATAB
start_val[2] => Add0.IN14
start_val[2] => count.DATAB
start_val[3] => Add0.IN13
start_val[3] => count.DATAB
start_val[4] => Add0.IN12
start_val[4] => count.DATAB
start_val[5] => Add0.IN11
start_val[5] => count.DATAB
start_val[6] => Add0.IN10
start_val[6] => count.DATAB
start_val[7] => Add0.IN9
start_val[7] => count.DATAB
inc => count.OUTPUTSELECT
inc => count.OUTPUTSELECT
inc => count.OUTPUTSELECT
inc => count.OUTPUTSELECT
inc => count.OUTPUTSELECT
inc => count.OUTPUTSELECT
inc => count.OUTPUTSELECT
inc => count.OUTPUTSELECT
inc => always0.IN0
enable => always0.IN1
enable => count.OUTPUTSELECT
enable => count.OUTPUTSELECT
enable => count.OUTPUTSELECT
enable => count.OUTPUTSELECT
enable => count.OUTPUTSELECT
enable => count.OUTPUTSELECT
enable => count.OUTPUTSELECT
enable => count.OUTPUTSELECT
clk => count[0]~reg0.CLK
clk => count[1]~reg0.CLK
clk => count[2]~reg0.CLK
clk => count[3]~reg0.CLK
clk => count[4]~reg0.CLK
clk => count[5]~reg0.CLK
clk => count[6]~reg0.CLK
clk => count[7]~reg0.CLK
slow_edge => count.OUTPUTSELECT
slow_edge => count.OUTPUTSELECT
slow_edge => count.OUTPUTSELECT
slow_edge => count.OUTPUTSELECT
slow_edge => count.OUTPUTSELECT
slow_edge => count.OUTPUTSELECT
slow_edge => count.OUTPUTSELECT
slow_edge => count.OUTPUTSELECT
reset => count.OUTPUTSELECT
reset => count.OUTPUTSELECT
reset => count.OUTPUTSELECT
reset => count.OUTPUTSELECT
reset => count.OUTPUTSELECT
reset => count.OUTPUTSELECT
reset => count.OUTPUTSELECT
reset => count.OUTPUTSELECT
init_val[0] => count.DATAB
init_val[1] => count.DATAB


|lab8|snakes_and_apples:snake|grid_light:center_grid_row[14].center_grid_col[4].light
green_light_on <= green_light_on.DB_MAX_OUTPUT_PORT_TYPE
head <= head.DB_MAX_OUTPUT_PORT_TYPE
game_over_out <= state_n.DB_MAX_OUTPUT_PORT_TYPE
eating => counter256:counter.inc
eating => always0.IN1
game_over_in => state_n.e_off.OUTPUTSELECT
game_over_in => state_n.e_countdown.OUTPUTSELECT
game_over_in => state_n.e_head.OUTPUTSELECT
game_over_in => state_n.OUTPUTSELECT
left => state_n.OUTPUTSELECT
left => state_n.OUTPUTSELECT
left => state_n.OUTPUTSELECT
left => state_n.OUTPUTSELECT
up => state_n.OUTPUTSELECT
up => state_n.OUTPUTSELECT
up => state_n.OUTPUTSELECT
up => state_n.OUTPUTSELECT
right => state_n.OUTPUTSELECT
right => state_n.OUTPUTSELECT
right => state_n.OUTPUTSELECT
right => state_n.OUTPUTSELECT
down => state_n.OUTPUTSELECT
down => state_n.OUTPUTSELECT
down => state_n.OUTPUTSELECT
down => state_n.OUTPUTSELECT
length[0] => counter256:counter.start_val[0]
length[1] => counter256:counter.start_val[1]
length[2] => counter256:counter.start_val[2]
length[3] => counter256:counter.start_val[3]
length[4] => counter256:counter.start_val[4]
length[5] => counter256:counter.start_val[5]
length[6] => counter256:counter.start_val[6]
length[7] => counter256:counter.start_val[7]
dir[0] => Mux0.IN5
dir[0] => Mux1.IN5
dir[0] => Mux2.IN5
dir[0] => Mux3.IN5
dir[1] => Mux0.IN4
dir[1] => Mux1.IN4
dir[1] => Mux2.IN4
dir[1] => Mux3.IN4
clk => counter256:counter.clk
clk => state_r~1.DATAIN
slow_edge => counter256:counter.slow_edge
slow_edge => state_r.OUTPUTSELECT
slow_edge => state_r.OUTPUTSELECT
slow_edge => state_r.OUTPUTSELECT
slow_edge => state_r.OUTPUTSELECT
reset => counter256:counter.reset
reset => state_r.OUTPUTSELECT
reset => state_r.OUTPUTSELECT
reset => state_r.OUTPUTSELECT
reset => state_r.OUTPUTSELECT
light_type[0] => counter256:counter.init_val[0]
light_type[0] => Equal1.IN1
light_type[0] => Equal2.IN1
light_type[1] => counter256:counter.init_val[1]
light_type[1] => Equal1.IN0
light_type[1] => Equal2.IN0


|lab8|snakes_and_apples:snake|grid_light:center_grid_row[14].center_grid_col[4].light|counter256:counter
count[0] <= count[0]~reg0.DB_MAX_OUTPUT_PORT_TYPE
count[1] <= count[1]~reg0.DB_MAX_OUTPUT_PORT_TYPE
count[2] <= count[2]~reg0.DB_MAX_OUTPUT_PORT_TYPE
count[3] <= count[3]~reg0.DB_MAX_OUTPUT_PORT_TYPE
count[4] <= count[4]~reg0.DB_MAX_OUTPUT_PORT_TYPE
count[5] <= count[5]~reg0.DB_MAX_OUTPUT_PORT_TYPE
count[6] <= count[6]~reg0.DB_MAX_OUTPUT_PORT_TYPE
count[7] <= count[7]~reg0.DB_MAX_OUTPUT_PORT_TYPE
start_val[0] => Add0.IN16
start_val[0] => count.DATAB
start_val[1] => Add0.IN15
start_val[1] => count.DATAB
start_val[2] => Add0.IN14
start_val[2] => count.DATAB
start_val[3] => Add0.IN13
start_val[3] => count.DATAB
start_val[4] => Add0.IN12
start_val[4] => count.DATAB
start_val[5] => Add0.IN11
start_val[5] => count.DATAB
start_val[6] => Add0.IN10
start_val[6] => count.DATAB
start_val[7] => Add0.IN9
start_val[7] => count.DATAB
inc => count.OUTPUTSELECT
inc => count.OUTPUTSELECT
inc => count.OUTPUTSELECT
inc => count.OUTPUTSELECT
inc => count.OUTPUTSELECT
inc => count.OUTPUTSELECT
inc => count.OUTPUTSELECT
inc => count.OUTPUTSELECT
inc => always0.IN0
enable => always0.IN1
enable => count.OUTPUTSELECT
enable => count.OUTPUTSELECT
enable => count.OUTPUTSELECT
enable => count.OUTPUTSELECT
enable => count.OUTPUTSELECT
enable => count.OUTPUTSELECT
enable => count.OUTPUTSELECT
enable => count.OUTPUTSELECT
clk => count[0]~reg0.CLK
clk => count[1]~reg0.CLK
clk => count[2]~reg0.CLK
clk => count[3]~reg0.CLK
clk => count[4]~reg0.CLK
clk => count[5]~reg0.CLK
clk => count[6]~reg0.CLK
clk => count[7]~reg0.CLK
slow_edge => count.OUTPUTSELECT
slow_edge => count.OUTPUTSELECT
slow_edge => count.OUTPUTSELECT
slow_edge => count.OUTPUTSELECT
slow_edge => count.OUTPUTSELECT
slow_edge => count.OUTPUTSELECT
slow_edge => count.OUTPUTSELECT
slow_edge => count.OUTPUTSELECT
reset => count.OUTPUTSELECT
reset => count.OUTPUTSELECT
reset => count.OUTPUTSELECT
reset => count.OUTPUTSELECT
reset => count.OUTPUTSELECT
reset => count.OUTPUTSELECT
reset => count.OUTPUTSELECT
reset => count.OUTPUTSELECT
init_val[0] => count.DATAB
init_val[1] => count.DATAB


|lab8|snakes_and_apples:snake|grid_light:center_grid_row[14].center_grid_col[5].light
green_light_on <= green_light_on.DB_MAX_OUTPUT_PORT_TYPE
head <= head.DB_MAX_OUTPUT_PORT_TYPE
game_over_out <= state_n.DB_MAX_OUTPUT_PORT_TYPE
eating => counter256:counter.inc
eating => always0.IN1
game_over_in => state_n.e_off.OUTPUTSELECT
game_over_in => state_n.e_countdown.OUTPUTSELECT
game_over_in => state_n.e_head.OUTPUTSELECT
game_over_in => state_n.OUTPUTSELECT
left => state_n.OUTPUTSELECT
left => state_n.OUTPUTSELECT
left => state_n.OUTPUTSELECT
left => state_n.OUTPUTSELECT
up => state_n.OUTPUTSELECT
up => state_n.OUTPUTSELECT
up => state_n.OUTPUTSELECT
up => state_n.OUTPUTSELECT
right => state_n.OUTPUTSELECT
right => state_n.OUTPUTSELECT
right => state_n.OUTPUTSELECT
right => state_n.OUTPUTSELECT
down => state_n.OUTPUTSELECT
down => state_n.OUTPUTSELECT
down => state_n.OUTPUTSELECT
down => state_n.OUTPUTSELECT
length[0] => counter256:counter.start_val[0]
length[1] => counter256:counter.start_val[1]
length[2] => counter256:counter.start_val[2]
length[3] => counter256:counter.start_val[3]
length[4] => counter256:counter.start_val[4]
length[5] => counter256:counter.start_val[5]
length[6] => counter256:counter.start_val[6]
length[7] => counter256:counter.start_val[7]
dir[0] => Mux0.IN5
dir[0] => Mux1.IN5
dir[0] => Mux2.IN5
dir[0] => Mux3.IN5
dir[1] => Mux0.IN4
dir[1] => Mux1.IN4
dir[1] => Mux2.IN4
dir[1] => Mux3.IN4
clk => counter256:counter.clk
clk => state_r~1.DATAIN
slow_edge => counter256:counter.slow_edge
slow_edge => state_r.OUTPUTSELECT
slow_edge => state_r.OUTPUTSELECT
slow_edge => state_r.OUTPUTSELECT
slow_edge => state_r.OUTPUTSELECT
reset => counter256:counter.reset
reset => state_r.OUTPUTSELECT
reset => state_r.OUTPUTSELECT
reset => state_r.OUTPUTSELECT
reset => state_r.OUTPUTSELECT
light_type[0] => counter256:counter.init_val[0]
light_type[0] => Equal1.IN1
light_type[0] => Equal2.IN1
light_type[1] => counter256:counter.init_val[1]
light_type[1] => Equal1.IN0
light_type[1] => Equal2.IN0


|lab8|snakes_and_apples:snake|grid_light:center_grid_row[14].center_grid_col[5].light|counter256:counter
count[0] <= count[0]~reg0.DB_MAX_OUTPUT_PORT_TYPE
count[1] <= count[1]~reg0.DB_MAX_OUTPUT_PORT_TYPE
count[2] <= count[2]~reg0.DB_MAX_OUTPUT_PORT_TYPE
count[3] <= count[3]~reg0.DB_MAX_OUTPUT_PORT_TYPE
count[4] <= count[4]~reg0.DB_MAX_OUTPUT_PORT_TYPE
count[5] <= count[5]~reg0.DB_MAX_OUTPUT_PORT_TYPE
count[6] <= count[6]~reg0.DB_MAX_OUTPUT_PORT_TYPE
count[7] <= count[7]~reg0.DB_MAX_OUTPUT_PORT_TYPE
start_val[0] => Add0.IN16
start_val[0] => count.DATAB
start_val[1] => Add0.IN15
start_val[1] => count.DATAB
start_val[2] => Add0.IN14
start_val[2] => count.DATAB
start_val[3] => Add0.IN13
start_val[3] => count.DATAB
start_val[4] => Add0.IN12
start_val[4] => count.DATAB
start_val[5] => Add0.IN11
start_val[5] => count.DATAB
start_val[6] => Add0.IN10
start_val[6] => count.DATAB
start_val[7] => Add0.IN9
start_val[7] => count.DATAB
inc => count.OUTPUTSELECT
inc => count.OUTPUTSELECT
inc => count.OUTPUTSELECT
inc => count.OUTPUTSELECT
inc => count.OUTPUTSELECT
inc => count.OUTPUTSELECT
inc => count.OUTPUTSELECT
inc => count.OUTPUTSELECT
inc => always0.IN0
enable => always0.IN1
enable => count.OUTPUTSELECT
enable => count.OUTPUTSELECT
enable => count.OUTPUTSELECT
enable => count.OUTPUTSELECT
enable => count.OUTPUTSELECT
enable => count.OUTPUTSELECT
enable => count.OUTPUTSELECT
enable => count.OUTPUTSELECT
clk => count[0]~reg0.CLK
clk => count[1]~reg0.CLK
clk => count[2]~reg0.CLK
clk => count[3]~reg0.CLK
clk => count[4]~reg0.CLK
clk => count[5]~reg0.CLK
clk => count[6]~reg0.CLK
clk => count[7]~reg0.CLK
slow_edge => count.OUTPUTSELECT
slow_edge => count.OUTPUTSELECT
slow_edge => count.OUTPUTSELECT
slow_edge => count.OUTPUTSELECT
slow_edge => count.OUTPUTSELECT
slow_edge => count.OUTPUTSELECT
slow_edge => count.OUTPUTSELECT
slow_edge => count.OUTPUTSELECT
reset => count.OUTPUTSELECT
reset => count.OUTPUTSELECT
reset => count.OUTPUTSELECT
reset => count.OUTPUTSELECT
reset => count.OUTPUTSELECT
reset => count.OUTPUTSELECT
reset => count.OUTPUTSELECT
reset => count.OUTPUTSELECT
init_val[0] => count.DATAB
init_val[1] => count.DATAB


|lab8|snakes_and_apples:snake|grid_light:center_grid_row[14].center_grid_col[6].light
green_light_on <= green_light_on.DB_MAX_OUTPUT_PORT_TYPE
head <= head.DB_MAX_OUTPUT_PORT_TYPE
game_over_out <= state_n.DB_MAX_OUTPUT_PORT_TYPE
eating => counter256:counter.inc
eating => always0.IN1
game_over_in => state_n.e_off.OUTPUTSELECT
game_over_in => state_n.e_countdown.OUTPUTSELECT
game_over_in => state_n.e_head.OUTPUTSELECT
game_over_in => state_n.OUTPUTSELECT
left => state_n.OUTPUTSELECT
left => state_n.OUTPUTSELECT
left => state_n.OUTPUTSELECT
left => state_n.OUTPUTSELECT
up => state_n.OUTPUTSELECT
up => state_n.OUTPUTSELECT
up => state_n.OUTPUTSELECT
up => state_n.OUTPUTSELECT
right => state_n.OUTPUTSELECT
right => state_n.OUTPUTSELECT
right => state_n.OUTPUTSELECT
right => state_n.OUTPUTSELECT
down => state_n.OUTPUTSELECT
down => state_n.OUTPUTSELECT
down => state_n.OUTPUTSELECT
down => state_n.OUTPUTSELECT
length[0] => counter256:counter.start_val[0]
length[1] => counter256:counter.start_val[1]
length[2] => counter256:counter.start_val[2]
length[3] => counter256:counter.start_val[3]
length[4] => counter256:counter.start_val[4]
length[5] => counter256:counter.start_val[5]
length[6] => counter256:counter.start_val[6]
length[7] => counter256:counter.start_val[7]
dir[0] => Mux0.IN5
dir[0] => Mux1.IN5
dir[0] => Mux2.IN5
dir[0] => Mux3.IN5
dir[1] => Mux0.IN4
dir[1] => Mux1.IN4
dir[1] => Mux2.IN4
dir[1] => Mux3.IN4
clk => counter256:counter.clk
clk => state_r~1.DATAIN
slow_edge => counter256:counter.slow_edge
slow_edge => state_r.OUTPUTSELECT
slow_edge => state_r.OUTPUTSELECT
slow_edge => state_r.OUTPUTSELECT
slow_edge => state_r.OUTPUTSELECT
reset => counter256:counter.reset
reset => state_r.OUTPUTSELECT
reset => state_r.OUTPUTSELECT
reset => state_r.OUTPUTSELECT
reset => state_r.OUTPUTSELECT
light_type[0] => counter256:counter.init_val[0]
light_type[0] => Equal1.IN1
light_type[0] => Equal2.IN1
light_type[1] => counter256:counter.init_val[1]
light_type[1] => Equal1.IN0
light_type[1] => Equal2.IN0


|lab8|snakes_and_apples:snake|grid_light:center_grid_row[14].center_grid_col[6].light|counter256:counter
count[0] <= count[0]~reg0.DB_MAX_OUTPUT_PORT_TYPE
count[1] <= count[1]~reg0.DB_MAX_OUTPUT_PORT_TYPE
count[2] <= count[2]~reg0.DB_MAX_OUTPUT_PORT_TYPE
count[3] <= count[3]~reg0.DB_MAX_OUTPUT_PORT_TYPE
count[4] <= count[4]~reg0.DB_MAX_OUTPUT_PORT_TYPE
count[5] <= count[5]~reg0.DB_MAX_OUTPUT_PORT_TYPE
count[6] <= count[6]~reg0.DB_MAX_OUTPUT_PORT_TYPE
count[7] <= count[7]~reg0.DB_MAX_OUTPUT_PORT_TYPE
start_val[0] => Add0.IN16
start_val[0] => count.DATAB
start_val[1] => Add0.IN15
start_val[1] => count.DATAB
start_val[2] => Add0.IN14
start_val[2] => count.DATAB
start_val[3] => Add0.IN13
start_val[3] => count.DATAB
start_val[4] => Add0.IN12
start_val[4] => count.DATAB
start_val[5] => Add0.IN11
start_val[5] => count.DATAB
start_val[6] => Add0.IN10
start_val[6] => count.DATAB
start_val[7] => Add0.IN9
start_val[7] => count.DATAB
inc => count.OUTPUTSELECT
inc => count.OUTPUTSELECT
inc => count.OUTPUTSELECT
inc => count.OUTPUTSELECT
inc => count.OUTPUTSELECT
inc => count.OUTPUTSELECT
inc => count.OUTPUTSELECT
inc => count.OUTPUTSELECT
inc => always0.IN0
enable => always0.IN1
enable => count.OUTPUTSELECT
enable => count.OUTPUTSELECT
enable => count.OUTPUTSELECT
enable => count.OUTPUTSELECT
enable => count.OUTPUTSELECT
enable => count.OUTPUTSELECT
enable => count.OUTPUTSELECT
enable => count.OUTPUTSELECT
clk => count[0]~reg0.CLK
clk => count[1]~reg0.CLK
clk => count[2]~reg0.CLK
clk => count[3]~reg0.CLK
clk => count[4]~reg0.CLK
clk => count[5]~reg0.CLK
clk => count[6]~reg0.CLK
clk => count[7]~reg0.CLK
slow_edge => count.OUTPUTSELECT
slow_edge => count.OUTPUTSELECT
slow_edge => count.OUTPUTSELECT
slow_edge => count.OUTPUTSELECT
slow_edge => count.OUTPUTSELECT
slow_edge => count.OUTPUTSELECT
slow_edge => count.OUTPUTSELECT
slow_edge => count.OUTPUTSELECT
reset => count.OUTPUTSELECT
reset => count.OUTPUTSELECT
reset => count.OUTPUTSELECT
reset => count.OUTPUTSELECT
reset => count.OUTPUTSELECT
reset => count.OUTPUTSELECT
reset => count.OUTPUTSELECT
reset => count.OUTPUTSELECT
init_val[0] => count.DATAB
init_val[1] => count.DATAB


|lab8|snakes_and_apples:snake|grid_light:center_grid_row[14].center_grid_col[7].light
green_light_on <= green_light_on.DB_MAX_OUTPUT_PORT_TYPE
head <= head.DB_MAX_OUTPUT_PORT_TYPE
game_over_out <= state_n.DB_MAX_OUTPUT_PORT_TYPE
eating => counter256:counter.inc
eating => always0.IN1
game_over_in => state_n.e_off.OUTPUTSELECT
game_over_in => state_n.e_countdown.OUTPUTSELECT
game_over_in => state_n.e_head.OUTPUTSELECT
game_over_in => state_n.OUTPUTSELECT
left => state_n.OUTPUTSELECT
left => state_n.OUTPUTSELECT
left => state_n.OUTPUTSELECT
left => state_n.OUTPUTSELECT
up => state_n.OUTPUTSELECT
up => state_n.OUTPUTSELECT
up => state_n.OUTPUTSELECT
up => state_n.OUTPUTSELECT
right => state_n.OUTPUTSELECT
right => state_n.OUTPUTSELECT
right => state_n.OUTPUTSELECT
right => state_n.OUTPUTSELECT
down => state_n.OUTPUTSELECT
down => state_n.OUTPUTSELECT
down => state_n.OUTPUTSELECT
down => state_n.OUTPUTSELECT
length[0] => counter256:counter.start_val[0]
length[1] => counter256:counter.start_val[1]
length[2] => counter256:counter.start_val[2]
length[3] => counter256:counter.start_val[3]
length[4] => counter256:counter.start_val[4]
length[5] => counter256:counter.start_val[5]
length[6] => counter256:counter.start_val[6]
length[7] => counter256:counter.start_val[7]
dir[0] => Mux0.IN5
dir[0] => Mux1.IN5
dir[0] => Mux2.IN5
dir[0] => Mux3.IN5
dir[1] => Mux0.IN4
dir[1] => Mux1.IN4
dir[1] => Mux2.IN4
dir[1] => Mux3.IN4
clk => counter256:counter.clk
clk => state_r~1.DATAIN
slow_edge => counter256:counter.slow_edge
slow_edge => state_r.OUTPUTSELECT
slow_edge => state_r.OUTPUTSELECT
slow_edge => state_r.OUTPUTSELECT
slow_edge => state_r.OUTPUTSELECT
reset => counter256:counter.reset
reset => state_r.OUTPUTSELECT
reset => state_r.OUTPUTSELECT
reset => state_r.OUTPUTSELECT
reset => state_r.OUTPUTSELECT
light_type[0] => counter256:counter.init_val[0]
light_type[0] => Equal1.IN1
light_type[0] => Equal2.IN1
light_type[1] => counter256:counter.init_val[1]
light_type[1] => Equal1.IN0
light_type[1] => Equal2.IN0


|lab8|snakes_and_apples:snake|grid_light:center_grid_row[14].center_grid_col[7].light|counter256:counter
count[0] <= count[0]~reg0.DB_MAX_OUTPUT_PORT_TYPE
count[1] <= count[1]~reg0.DB_MAX_OUTPUT_PORT_TYPE
count[2] <= count[2]~reg0.DB_MAX_OUTPUT_PORT_TYPE
count[3] <= count[3]~reg0.DB_MAX_OUTPUT_PORT_TYPE
count[4] <= count[4]~reg0.DB_MAX_OUTPUT_PORT_TYPE
count[5] <= count[5]~reg0.DB_MAX_OUTPUT_PORT_TYPE
count[6] <= count[6]~reg0.DB_MAX_OUTPUT_PORT_TYPE
count[7] <= count[7]~reg0.DB_MAX_OUTPUT_PORT_TYPE
start_val[0] => Add0.IN16
start_val[0] => count.DATAB
start_val[1] => Add0.IN15
start_val[1] => count.DATAB
start_val[2] => Add0.IN14
start_val[2] => count.DATAB
start_val[3] => Add0.IN13
start_val[3] => count.DATAB
start_val[4] => Add0.IN12
start_val[4] => count.DATAB
start_val[5] => Add0.IN11
start_val[5] => count.DATAB
start_val[6] => Add0.IN10
start_val[6] => count.DATAB
start_val[7] => Add0.IN9
start_val[7] => count.DATAB
inc => count.OUTPUTSELECT
inc => count.OUTPUTSELECT
inc => count.OUTPUTSELECT
inc => count.OUTPUTSELECT
inc => count.OUTPUTSELECT
inc => count.OUTPUTSELECT
inc => count.OUTPUTSELECT
inc => count.OUTPUTSELECT
inc => always0.IN0
enable => always0.IN1
enable => count.OUTPUTSELECT
enable => count.OUTPUTSELECT
enable => count.OUTPUTSELECT
enable => count.OUTPUTSELECT
enable => count.OUTPUTSELECT
enable => count.OUTPUTSELECT
enable => count.OUTPUTSELECT
enable => count.OUTPUTSELECT
clk => count[0]~reg0.CLK
clk => count[1]~reg0.CLK
clk => count[2]~reg0.CLK
clk => count[3]~reg0.CLK
clk => count[4]~reg0.CLK
clk => count[5]~reg0.CLK
clk => count[6]~reg0.CLK
clk => count[7]~reg0.CLK
slow_edge => count.OUTPUTSELECT
slow_edge => count.OUTPUTSELECT
slow_edge => count.OUTPUTSELECT
slow_edge => count.OUTPUTSELECT
slow_edge => count.OUTPUTSELECT
slow_edge => count.OUTPUTSELECT
slow_edge => count.OUTPUTSELECT
slow_edge => count.OUTPUTSELECT
reset => count.OUTPUTSELECT
reset => count.OUTPUTSELECT
reset => count.OUTPUTSELECT
reset => count.OUTPUTSELECT
reset => count.OUTPUTSELECT
reset => count.OUTPUTSELECT
reset => count.OUTPUTSELECT
reset => count.OUTPUTSELECT
init_val[0] => count.DATAB
init_val[1] => count.DATAB


|lab8|snakes_and_apples:snake|grid_light:center_grid_row[14].center_grid_col[8].light
green_light_on <= green_light_on.DB_MAX_OUTPUT_PORT_TYPE
head <= head.DB_MAX_OUTPUT_PORT_TYPE
game_over_out <= state_n.DB_MAX_OUTPUT_PORT_TYPE
eating => counter256:counter.inc
eating => always0.IN1
game_over_in => state_n.e_off.OUTPUTSELECT
game_over_in => state_n.e_countdown.OUTPUTSELECT
game_over_in => state_n.e_head.OUTPUTSELECT
game_over_in => state_n.OUTPUTSELECT
left => state_n.OUTPUTSELECT
left => state_n.OUTPUTSELECT
left => state_n.OUTPUTSELECT
left => state_n.OUTPUTSELECT
up => state_n.OUTPUTSELECT
up => state_n.OUTPUTSELECT
up => state_n.OUTPUTSELECT
up => state_n.OUTPUTSELECT
right => state_n.OUTPUTSELECT
right => state_n.OUTPUTSELECT
right => state_n.OUTPUTSELECT
right => state_n.OUTPUTSELECT
down => state_n.OUTPUTSELECT
down => state_n.OUTPUTSELECT
down => state_n.OUTPUTSELECT
down => state_n.OUTPUTSELECT
length[0] => counter256:counter.start_val[0]
length[1] => counter256:counter.start_val[1]
length[2] => counter256:counter.start_val[2]
length[3] => counter256:counter.start_val[3]
length[4] => counter256:counter.start_val[4]
length[5] => counter256:counter.start_val[5]
length[6] => counter256:counter.start_val[6]
length[7] => counter256:counter.start_val[7]
dir[0] => Mux0.IN5
dir[0] => Mux1.IN5
dir[0] => Mux2.IN5
dir[0] => Mux3.IN5
dir[1] => Mux0.IN4
dir[1] => Mux1.IN4
dir[1] => Mux2.IN4
dir[1] => Mux3.IN4
clk => counter256:counter.clk
clk => state_r~1.DATAIN
slow_edge => counter256:counter.slow_edge
slow_edge => state_r.OUTPUTSELECT
slow_edge => state_r.OUTPUTSELECT
slow_edge => state_r.OUTPUTSELECT
slow_edge => state_r.OUTPUTSELECT
reset => counter256:counter.reset
reset => state_r.OUTPUTSELECT
reset => state_r.OUTPUTSELECT
reset => state_r.OUTPUTSELECT
reset => state_r.OUTPUTSELECT
light_type[0] => counter256:counter.init_val[0]
light_type[0] => Equal1.IN1
light_type[0] => Equal2.IN1
light_type[1] => counter256:counter.init_val[1]
light_type[1] => Equal1.IN0
light_type[1] => Equal2.IN0


|lab8|snakes_and_apples:snake|grid_light:center_grid_row[14].center_grid_col[8].light|counter256:counter
count[0] <= count[0]~reg0.DB_MAX_OUTPUT_PORT_TYPE
count[1] <= count[1]~reg0.DB_MAX_OUTPUT_PORT_TYPE
count[2] <= count[2]~reg0.DB_MAX_OUTPUT_PORT_TYPE
count[3] <= count[3]~reg0.DB_MAX_OUTPUT_PORT_TYPE
count[4] <= count[4]~reg0.DB_MAX_OUTPUT_PORT_TYPE
count[5] <= count[5]~reg0.DB_MAX_OUTPUT_PORT_TYPE
count[6] <= count[6]~reg0.DB_MAX_OUTPUT_PORT_TYPE
count[7] <= count[7]~reg0.DB_MAX_OUTPUT_PORT_TYPE
start_val[0] => Add0.IN16
start_val[0] => count.DATAB
start_val[1] => Add0.IN15
start_val[1] => count.DATAB
start_val[2] => Add0.IN14
start_val[2] => count.DATAB
start_val[3] => Add0.IN13
start_val[3] => count.DATAB
start_val[4] => Add0.IN12
start_val[4] => count.DATAB
start_val[5] => Add0.IN11
start_val[5] => count.DATAB
start_val[6] => Add0.IN10
start_val[6] => count.DATAB
start_val[7] => Add0.IN9
start_val[7] => count.DATAB
inc => count.OUTPUTSELECT
inc => count.OUTPUTSELECT
inc => count.OUTPUTSELECT
inc => count.OUTPUTSELECT
inc => count.OUTPUTSELECT
inc => count.OUTPUTSELECT
inc => count.OUTPUTSELECT
inc => count.OUTPUTSELECT
inc => always0.IN0
enable => always0.IN1
enable => count.OUTPUTSELECT
enable => count.OUTPUTSELECT
enable => count.OUTPUTSELECT
enable => count.OUTPUTSELECT
enable => count.OUTPUTSELECT
enable => count.OUTPUTSELECT
enable => count.OUTPUTSELECT
enable => count.OUTPUTSELECT
clk => count[0]~reg0.CLK
clk => count[1]~reg0.CLK
clk => count[2]~reg0.CLK
clk => count[3]~reg0.CLK
clk => count[4]~reg0.CLK
clk => count[5]~reg0.CLK
clk => count[6]~reg0.CLK
clk => count[7]~reg0.CLK
slow_edge => count.OUTPUTSELECT
slow_edge => count.OUTPUTSELECT
slow_edge => count.OUTPUTSELECT
slow_edge => count.OUTPUTSELECT
slow_edge => count.OUTPUTSELECT
slow_edge => count.OUTPUTSELECT
slow_edge => count.OUTPUTSELECT
slow_edge => count.OUTPUTSELECT
reset => count.OUTPUTSELECT
reset => count.OUTPUTSELECT
reset => count.OUTPUTSELECT
reset => count.OUTPUTSELECT
reset => count.OUTPUTSELECT
reset => count.OUTPUTSELECT
reset => count.OUTPUTSELECT
reset => count.OUTPUTSELECT
init_val[0] => count.DATAB
init_val[1] => count.DATAB


|lab8|snakes_and_apples:snake|grid_light:center_grid_row[14].center_grid_col[9].light
green_light_on <= green_light_on.DB_MAX_OUTPUT_PORT_TYPE
head <= head.DB_MAX_OUTPUT_PORT_TYPE
game_over_out <= state_n.DB_MAX_OUTPUT_PORT_TYPE
eating => counter256:counter.inc
eating => always0.IN1
game_over_in => state_n.e_off.OUTPUTSELECT
game_over_in => state_n.e_countdown.OUTPUTSELECT
game_over_in => state_n.e_head.OUTPUTSELECT
game_over_in => state_n.OUTPUTSELECT
left => state_n.OUTPUTSELECT
left => state_n.OUTPUTSELECT
left => state_n.OUTPUTSELECT
left => state_n.OUTPUTSELECT
up => state_n.OUTPUTSELECT
up => state_n.OUTPUTSELECT
up => state_n.OUTPUTSELECT
up => state_n.OUTPUTSELECT
right => state_n.OUTPUTSELECT
right => state_n.OUTPUTSELECT
right => state_n.OUTPUTSELECT
right => state_n.OUTPUTSELECT
down => state_n.OUTPUTSELECT
down => state_n.OUTPUTSELECT
down => state_n.OUTPUTSELECT
down => state_n.OUTPUTSELECT
length[0] => counter256:counter.start_val[0]
length[1] => counter256:counter.start_val[1]
length[2] => counter256:counter.start_val[2]
length[3] => counter256:counter.start_val[3]
length[4] => counter256:counter.start_val[4]
length[5] => counter256:counter.start_val[5]
length[6] => counter256:counter.start_val[6]
length[7] => counter256:counter.start_val[7]
dir[0] => Mux0.IN5
dir[0] => Mux1.IN5
dir[0] => Mux2.IN5
dir[0] => Mux3.IN5
dir[1] => Mux0.IN4
dir[1] => Mux1.IN4
dir[1] => Mux2.IN4
dir[1] => Mux3.IN4
clk => counter256:counter.clk
clk => state_r~1.DATAIN
slow_edge => counter256:counter.slow_edge
slow_edge => state_r.OUTPUTSELECT
slow_edge => state_r.OUTPUTSELECT
slow_edge => state_r.OUTPUTSELECT
slow_edge => state_r.OUTPUTSELECT
reset => counter256:counter.reset
reset => state_r.OUTPUTSELECT
reset => state_r.OUTPUTSELECT
reset => state_r.OUTPUTSELECT
reset => state_r.OUTPUTSELECT
light_type[0] => counter256:counter.init_val[0]
light_type[0] => Equal1.IN1
light_type[0] => Equal2.IN1
light_type[1] => counter256:counter.init_val[1]
light_type[1] => Equal1.IN0
light_type[1] => Equal2.IN0


|lab8|snakes_and_apples:snake|grid_light:center_grid_row[14].center_grid_col[9].light|counter256:counter
count[0] <= count[0]~reg0.DB_MAX_OUTPUT_PORT_TYPE
count[1] <= count[1]~reg0.DB_MAX_OUTPUT_PORT_TYPE
count[2] <= count[2]~reg0.DB_MAX_OUTPUT_PORT_TYPE
count[3] <= count[3]~reg0.DB_MAX_OUTPUT_PORT_TYPE
count[4] <= count[4]~reg0.DB_MAX_OUTPUT_PORT_TYPE
count[5] <= count[5]~reg0.DB_MAX_OUTPUT_PORT_TYPE
count[6] <= count[6]~reg0.DB_MAX_OUTPUT_PORT_TYPE
count[7] <= count[7]~reg0.DB_MAX_OUTPUT_PORT_TYPE
start_val[0] => Add0.IN16
start_val[0] => count.DATAB
start_val[1] => Add0.IN15
start_val[1] => count.DATAB
start_val[2] => Add0.IN14
start_val[2] => count.DATAB
start_val[3] => Add0.IN13
start_val[3] => count.DATAB
start_val[4] => Add0.IN12
start_val[4] => count.DATAB
start_val[5] => Add0.IN11
start_val[5] => count.DATAB
start_val[6] => Add0.IN10
start_val[6] => count.DATAB
start_val[7] => Add0.IN9
start_val[7] => count.DATAB
inc => count.OUTPUTSELECT
inc => count.OUTPUTSELECT
inc => count.OUTPUTSELECT
inc => count.OUTPUTSELECT
inc => count.OUTPUTSELECT
inc => count.OUTPUTSELECT
inc => count.OUTPUTSELECT
inc => count.OUTPUTSELECT
inc => always0.IN0
enable => always0.IN1
enable => count.OUTPUTSELECT
enable => count.OUTPUTSELECT
enable => count.OUTPUTSELECT
enable => count.OUTPUTSELECT
enable => count.OUTPUTSELECT
enable => count.OUTPUTSELECT
enable => count.OUTPUTSELECT
enable => count.OUTPUTSELECT
clk => count[0]~reg0.CLK
clk => count[1]~reg0.CLK
clk => count[2]~reg0.CLK
clk => count[3]~reg0.CLK
clk => count[4]~reg0.CLK
clk => count[5]~reg0.CLK
clk => count[6]~reg0.CLK
clk => count[7]~reg0.CLK
slow_edge => count.OUTPUTSELECT
slow_edge => count.OUTPUTSELECT
slow_edge => count.OUTPUTSELECT
slow_edge => count.OUTPUTSELECT
slow_edge => count.OUTPUTSELECT
slow_edge => count.OUTPUTSELECT
slow_edge => count.OUTPUTSELECT
slow_edge => count.OUTPUTSELECT
reset => count.OUTPUTSELECT
reset => count.OUTPUTSELECT
reset => count.OUTPUTSELECT
reset => count.OUTPUTSELECT
reset => count.OUTPUTSELECT
reset => count.OUTPUTSELECT
reset => count.OUTPUTSELECT
reset => count.OUTPUTSELECT
init_val[0] => count.DATAB
init_val[1] => count.DATAB


|lab8|snakes_and_apples:snake|grid_light:center_grid_row[14].center_grid_col[10].light
green_light_on <= green_light_on.DB_MAX_OUTPUT_PORT_TYPE
head <= head.DB_MAX_OUTPUT_PORT_TYPE
game_over_out <= state_n.DB_MAX_OUTPUT_PORT_TYPE
eating => counter256:counter.inc
eating => always0.IN1
game_over_in => state_n.e_off.OUTPUTSELECT
game_over_in => state_n.e_countdown.OUTPUTSELECT
game_over_in => state_n.e_head.OUTPUTSELECT
game_over_in => state_n.OUTPUTSELECT
left => state_n.OUTPUTSELECT
left => state_n.OUTPUTSELECT
left => state_n.OUTPUTSELECT
left => state_n.OUTPUTSELECT
up => state_n.OUTPUTSELECT
up => state_n.OUTPUTSELECT
up => state_n.OUTPUTSELECT
up => state_n.OUTPUTSELECT
right => state_n.OUTPUTSELECT
right => state_n.OUTPUTSELECT
right => state_n.OUTPUTSELECT
right => state_n.OUTPUTSELECT
down => state_n.OUTPUTSELECT
down => state_n.OUTPUTSELECT
down => state_n.OUTPUTSELECT
down => state_n.OUTPUTSELECT
length[0] => counter256:counter.start_val[0]
length[1] => counter256:counter.start_val[1]
length[2] => counter256:counter.start_val[2]
length[3] => counter256:counter.start_val[3]
length[4] => counter256:counter.start_val[4]
length[5] => counter256:counter.start_val[5]
length[6] => counter256:counter.start_val[6]
length[7] => counter256:counter.start_val[7]
dir[0] => Mux0.IN5
dir[0] => Mux1.IN5
dir[0] => Mux2.IN5
dir[0] => Mux3.IN5
dir[1] => Mux0.IN4
dir[1] => Mux1.IN4
dir[1] => Mux2.IN4
dir[1] => Mux3.IN4
clk => counter256:counter.clk
clk => state_r~1.DATAIN
slow_edge => counter256:counter.slow_edge
slow_edge => state_r.OUTPUTSELECT
slow_edge => state_r.OUTPUTSELECT
slow_edge => state_r.OUTPUTSELECT
slow_edge => state_r.OUTPUTSELECT
reset => counter256:counter.reset
reset => state_r.OUTPUTSELECT
reset => state_r.OUTPUTSELECT
reset => state_r.OUTPUTSELECT
reset => state_r.OUTPUTSELECT
light_type[0] => counter256:counter.init_val[0]
light_type[0] => Equal1.IN1
light_type[0] => Equal2.IN1
light_type[1] => counter256:counter.init_val[1]
light_type[1] => Equal1.IN0
light_type[1] => Equal2.IN0


|lab8|snakes_and_apples:snake|grid_light:center_grid_row[14].center_grid_col[10].light|counter256:counter
count[0] <= count[0]~reg0.DB_MAX_OUTPUT_PORT_TYPE
count[1] <= count[1]~reg0.DB_MAX_OUTPUT_PORT_TYPE
count[2] <= count[2]~reg0.DB_MAX_OUTPUT_PORT_TYPE
count[3] <= count[3]~reg0.DB_MAX_OUTPUT_PORT_TYPE
count[4] <= count[4]~reg0.DB_MAX_OUTPUT_PORT_TYPE
count[5] <= count[5]~reg0.DB_MAX_OUTPUT_PORT_TYPE
count[6] <= count[6]~reg0.DB_MAX_OUTPUT_PORT_TYPE
count[7] <= count[7]~reg0.DB_MAX_OUTPUT_PORT_TYPE
start_val[0] => Add0.IN16
start_val[0] => count.DATAB
start_val[1] => Add0.IN15
start_val[1] => count.DATAB
start_val[2] => Add0.IN14
start_val[2] => count.DATAB
start_val[3] => Add0.IN13
start_val[3] => count.DATAB
start_val[4] => Add0.IN12
start_val[4] => count.DATAB
start_val[5] => Add0.IN11
start_val[5] => count.DATAB
start_val[6] => Add0.IN10
start_val[6] => count.DATAB
start_val[7] => Add0.IN9
start_val[7] => count.DATAB
inc => count.OUTPUTSELECT
inc => count.OUTPUTSELECT
inc => count.OUTPUTSELECT
inc => count.OUTPUTSELECT
inc => count.OUTPUTSELECT
inc => count.OUTPUTSELECT
inc => count.OUTPUTSELECT
inc => count.OUTPUTSELECT
inc => always0.IN0
enable => always0.IN1
enable => count.OUTPUTSELECT
enable => count.OUTPUTSELECT
enable => count.OUTPUTSELECT
enable => count.OUTPUTSELECT
enable => count.OUTPUTSELECT
enable => count.OUTPUTSELECT
enable => count.OUTPUTSELECT
enable => count.OUTPUTSELECT
clk => count[0]~reg0.CLK
clk => count[1]~reg0.CLK
clk => count[2]~reg0.CLK
clk => count[3]~reg0.CLK
clk => count[4]~reg0.CLK
clk => count[5]~reg0.CLK
clk => count[6]~reg0.CLK
clk => count[7]~reg0.CLK
slow_edge => count.OUTPUTSELECT
slow_edge => count.OUTPUTSELECT
slow_edge => count.OUTPUTSELECT
slow_edge => count.OUTPUTSELECT
slow_edge => count.OUTPUTSELECT
slow_edge => count.OUTPUTSELECT
slow_edge => count.OUTPUTSELECT
slow_edge => count.OUTPUTSELECT
reset => count.OUTPUTSELECT
reset => count.OUTPUTSELECT
reset => count.OUTPUTSELECT
reset => count.OUTPUTSELECT
reset => count.OUTPUTSELECT
reset => count.OUTPUTSELECT
reset => count.OUTPUTSELECT
reset => count.OUTPUTSELECT
init_val[0] => count.DATAB
init_val[1] => count.DATAB


|lab8|snakes_and_apples:snake|grid_light:center_grid_row[14].center_grid_col[11].light
green_light_on <= green_light_on.DB_MAX_OUTPUT_PORT_TYPE
head <= head.DB_MAX_OUTPUT_PORT_TYPE
game_over_out <= state_n.DB_MAX_OUTPUT_PORT_TYPE
eating => counter256:counter.inc
eating => always0.IN1
game_over_in => state_n.e_off.OUTPUTSELECT
game_over_in => state_n.e_countdown.OUTPUTSELECT
game_over_in => state_n.e_head.OUTPUTSELECT
game_over_in => state_n.OUTPUTSELECT
left => state_n.OUTPUTSELECT
left => state_n.OUTPUTSELECT
left => state_n.OUTPUTSELECT
left => state_n.OUTPUTSELECT
up => state_n.OUTPUTSELECT
up => state_n.OUTPUTSELECT
up => state_n.OUTPUTSELECT
up => state_n.OUTPUTSELECT
right => state_n.OUTPUTSELECT
right => state_n.OUTPUTSELECT
right => state_n.OUTPUTSELECT
right => state_n.OUTPUTSELECT
down => state_n.OUTPUTSELECT
down => state_n.OUTPUTSELECT
down => state_n.OUTPUTSELECT
down => state_n.OUTPUTSELECT
length[0] => counter256:counter.start_val[0]
length[1] => counter256:counter.start_val[1]
length[2] => counter256:counter.start_val[2]
length[3] => counter256:counter.start_val[3]
length[4] => counter256:counter.start_val[4]
length[5] => counter256:counter.start_val[5]
length[6] => counter256:counter.start_val[6]
length[7] => counter256:counter.start_val[7]
dir[0] => Mux0.IN5
dir[0] => Mux1.IN5
dir[0] => Mux2.IN5
dir[0] => Mux3.IN5
dir[1] => Mux0.IN4
dir[1] => Mux1.IN4
dir[1] => Mux2.IN4
dir[1] => Mux3.IN4
clk => counter256:counter.clk
clk => state_r~1.DATAIN
slow_edge => counter256:counter.slow_edge
slow_edge => state_r.OUTPUTSELECT
slow_edge => state_r.OUTPUTSELECT
slow_edge => state_r.OUTPUTSELECT
slow_edge => state_r.OUTPUTSELECT
reset => counter256:counter.reset
reset => state_r.OUTPUTSELECT
reset => state_r.OUTPUTSELECT
reset => state_r.OUTPUTSELECT
reset => state_r.OUTPUTSELECT
light_type[0] => counter256:counter.init_val[0]
light_type[0] => Equal1.IN1
light_type[0] => Equal2.IN1
light_type[1] => counter256:counter.init_val[1]
light_type[1] => Equal1.IN0
light_type[1] => Equal2.IN0


|lab8|snakes_and_apples:snake|grid_light:center_grid_row[14].center_grid_col[11].light|counter256:counter
count[0] <= count[0]~reg0.DB_MAX_OUTPUT_PORT_TYPE
count[1] <= count[1]~reg0.DB_MAX_OUTPUT_PORT_TYPE
count[2] <= count[2]~reg0.DB_MAX_OUTPUT_PORT_TYPE
count[3] <= count[3]~reg0.DB_MAX_OUTPUT_PORT_TYPE
count[4] <= count[4]~reg0.DB_MAX_OUTPUT_PORT_TYPE
count[5] <= count[5]~reg0.DB_MAX_OUTPUT_PORT_TYPE
count[6] <= count[6]~reg0.DB_MAX_OUTPUT_PORT_TYPE
count[7] <= count[7]~reg0.DB_MAX_OUTPUT_PORT_TYPE
start_val[0] => Add0.IN16
start_val[0] => count.DATAB
start_val[1] => Add0.IN15
start_val[1] => count.DATAB
start_val[2] => Add0.IN14
start_val[2] => count.DATAB
start_val[3] => Add0.IN13
start_val[3] => count.DATAB
start_val[4] => Add0.IN12
start_val[4] => count.DATAB
start_val[5] => Add0.IN11
start_val[5] => count.DATAB
start_val[6] => Add0.IN10
start_val[6] => count.DATAB
start_val[7] => Add0.IN9
start_val[7] => count.DATAB
inc => count.OUTPUTSELECT
inc => count.OUTPUTSELECT
inc => count.OUTPUTSELECT
inc => count.OUTPUTSELECT
inc => count.OUTPUTSELECT
inc => count.OUTPUTSELECT
inc => count.OUTPUTSELECT
inc => count.OUTPUTSELECT
inc => always0.IN0
enable => always0.IN1
enable => count.OUTPUTSELECT
enable => count.OUTPUTSELECT
enable => count.OUTPUTSELECT
enable => count.OUTPUTSELECT
enable => count.OUTPUTSELECT
enable => count.OUTPUTSELECT
enable => count.OUTPUTSELECT
enable => count.OUTPUTSELECT
clk => count[0]~reg0.CLK
clk => count[1]~reg0.CLK
clk => count[2]~reg0.CLK
clk => count[3]~reg0.CLK
clk => count[4]~reg0.CLK
clk => count[5]~reg0.CLK
clk => count[6]~reg0.CLK
clk => count[7]~reg0.CLK
slow_edge => count.OUTPUTSELECT
slow_edge => count.OUTPUTSELECT
slow_edge => count.OUTPUTSELECT
slow_edge => count.OUTPUTSELECT
slow_edge => count.OUTPUTSELECT
slow_edge => count.OUTPUTSELECT
slow_edge => count.OUTPUTSELECT
slow_edge => count.OUTPUTSELECT
reset => count.OUTPUTSELECT
reset => count.OUTPUTSELECT
reset => count.OUTPUTSELECT
reset => count.OUTPUTSELECT
reset => count.OUTPUTSELECT
reset => count.OUTPUTSELECT
reset => count.OUTPUTSELECT
reset => count.OUTPUTSELECT
init_val[0] => count.DATAB
init_val[1] => count.DATAB


|lab8|snakes_and_apples:snake|grid_light:center_grid_row[14].center_grid_col[12].light
green_light_on <= green_light_on.DB_MAX_OUTPUT_PORT_TYPE
head <= head.DB_MAX_OUTPUT_PORT_TYPE
game_over_out <= state_n.DB_MAX_OUTPUT_PORT_TYPE
eating => counter256:counter.inc
eating => always0.IN1
game_over_in => state_n.e_off.OUTPUTSELECT
game_over_in => state_n.e_countdown.OUTPUTSELECT
game_over_in => state_n.e_head.OUTPUTSELECT
game_over_in => state_n.OUTPUTSELECT
left => state_n.OUTPUTSELECT
left => state_n.OUTPUTSELECT
left => state_n.OUTPUTSELECT
left => state_n.OUTPUTSELECT
up => state_n.OUTPUTSELECT
up => state_n.OUTPUTSELECT
up => state_n.OUTPUTSELECT
up => state_n.OUTPUTSELECT
right => state_n.OUTPUTSELECT
right => state_n.OUTPUTSELECT
right => state_n.OUTPUTSELECT
right => state_n.OUTPUTSELECT
down => state_n.OUTPUTSELECT
down => state_n.OUTPUTSELECT
down => state_n.OUTPUTSELECT
down => state_n.OUTPUTSELECT
length[0] => counter256:counter.start_val[0]
length[1] => counter256:counter.start_val[1]
length[2] => counter256:counter.start_val[2]
length[3] => counter256:counter.start_val[3]
length[4] => counter256:counter.start_val[4]
length[5] => counter256:counter.start_val[5]
length[6] => counter256:counter.start_val[6]
length[7] => counter256:counter.start_val[7]
dir[0] => Mux0.IN5
dir[0] => Mux1.IN5
dir[0] => Mux2.IN5
dir[0] => Mux3.IN5
dir[1] => Mux0.IN4
dir[1] => Mux1.IN4
dir[1] => Mux2.IN4
dir[1] => Mux3.IN4
clk => counter256:counter.clk
clk => state_r~1.DATAIN
slow_edge => counter256:counter.slow_edge
slow_edge => state_r.OUTPUTSELECT
slow_edge => state_r.OUTPUTSELECT
slow_edge => state_r.OUTPUTSELECT
slow_edge => state_r.OUTPUTSELECT
reset => counter256:counter.reset
reset => state_r.OUTPUTSELECT
reset => state_r.OUTPUTSELECT
reset => state_r.OUTPUTSELECT
reset => state_r.OUTPUTSELECT
light_type[0] => counter256:counter.init_val[0]
light_type[0] => Equal1.IN1
light_type[0] => Equal2.IN1
light_type[1] => counter256:counter.init_val[1]
light_type[1] => Equal1.IN0
light_type[1] => Equal2.IN0


|lab8|snakes_and_apples:snake|grid_light:center_grid_row[14].center_grid_col[12].light|counter256:counter
count[0] <= count[0]~reg0.DB_MAX_OUTPUT_PORT_TYPE
count[1] <= count[1]~reg0.DB_MAX_OUTPUT_PORT_TYPE
count[2] <= count[2]~reg0.DB_MAX_OUTPUT_PORT_TYPE
count[3] <= count[3]~reg0.DB_MAX_OUTPUT_PORT_TYPE
count[4] <= count[4]~reg0.DB_MAX_OUTPUT_PORT_TYPE
count[5] <= count[5]~reg0.DB_MAX_OUTPUT_PORT_TYPE
count[6] <= count[6]~reg0.DB_MAX_OUTPUT_PORT_TYPE
count[7] <= count[7]~reg0.DB_MAX_OUTPUT_PORT_TYPE
start_val[0] => Add0.IN16
start_val[0] => count.DATAB
start_val[1] => Add0.IN15
start_val[1] => count.DATAB
start_val[2] => Add0.IN14
start_val[2] => count.DATAB
start_val[3] => Add0.IN13
start_val[3] => count.DATAB
start_val[4] => Add0.IN12
start_val[4] => count.DATAB
start_val[5] => Add0.IN11
start_val[5] => count.DATAB
start_val[6] => Add0.IN10
start_val[6] => count.DATAB
start_val[7] => Add0.IN9
start_val[7] => count.DATAB
inc => count.OUTPUTSELECT
inc => count.OUTPUTSELECT
inc => count.OUTPUTSELECT
inc => count.OUTPUTSELECT
inc => count.OUTPUTSELECT
inc => count.OUTPUTSELECT
inc => count.OUTPUTSELECT
inc => count.OUTPUTSELECT
inc => always0.IN0
enable => always0.IN1
enable => count.OUTPUTSELECT
enable => count.OUTPUTSELECT
enable => count.OUTPUTSELECT
enable => count.OUTPUTSELECT
enable => count.OUTPUTSELECT
enable => count.OUTPUTSELECT
enable => count.OUTPUTSELECT
enable => count.OUTPUTSELECT
clk => count[0]~reg0.CLK
clk => count[1]~reg0.CLK
clk => count[2]~reg0.CLK
clk => count[3]~reg0.CLK
clk => count[4]~reg0.CLK
clk => count[5]~reg0.CLK
clk => count[6]~reg0.CLK
clk => count[7]~reg0.CLK
slow_edge => count.OUTPUTSELECT
slow_edge => count.OUTPUTSELECT
slow_edge => count.OUTPUTSELECT
slow_edge => count.OUTPUTSELECT
slow_edge => count.OUTPUTSELECT
slow_edge => count.OUTPUTSELECT
slow_edge => count.OUTPUTSELECT
slow_edge => count.OUTPUTSELECT
reset => count.OUTPUTSELECT
reset => count.OUTPUTSELECT
reset => count.OUTPUTSELECT
reset => count.OUTPUTSELECT
reset => count.OUTPUTSELECT
reset => count.OUTPUTSELECT
reset => count.OUTPUTSELECT
reset => count.OUTPUTSELECT
init_val[0] => count.DATAB
init_val[1] => count.DATAB


|lab8|snakes_and_apples:snake|grid_light:center_grid_row[14].center_grid_col[13].light
green_light_on <= green_light_on.DB_MAX_OUTPUT_PORT_TYPE
head <= head.DB_MAX_OUTPUT_PORT_TYPE
game_over_out <= state_n.DB_MAX_OUTPUT_PORT_TYPE
eating => counter256:counter.inc
eating => always0.IN1
game_over_in => state_n.e_off.OUTPUTSELECT
game_over_in => state_n.e_countdown.OUTPUTSELECT
game_over_in => state_n.e_head.OUTPUTSELECT
game_over_in => state_n.OUTPUTSELECT
left => state_n.OUTPUTSELECT
left => state_n.OUTPUTSELECT
left => state_n.OUTPUTSELECT
left => state_n.OUTPUTSELECT
up => state_n.OUTPUTSELECT
up => state_n.OUTPUTSELECT
up => state_n.OUTPUTSELECT
up => state_n.OUTPUTSELECT
right => state_n.OUTPUTSELECT
right => state_n.OUTPUTSELECT
right => state_n.OUTPUTSELECT
right => state_n.OUTPUTSELECT
down => state_n.OUTPUTSELECT
down => state_n.OUTPUTSELECT
down => state_n.OUTPUTSELECT
down => state_n.OUTPUTSELECT
length[0] => counter256:counter.start_val[0]
length[1] => counter256:counter.start_val[1]
length[2] => counter256:counter.start_val[2]
length[3] => counter256:counter.start_val[3]
length[4] => counter256:counter.start_val[4]
length[5] => counter256:counter.start_val[5]
length[6] => counter256:counter.start_val[6]
length[7] => counter256:counter.start_val[7]
dir[0] => Mux0.IN5
dir[0] => Mux1.IN5
dir[0] => Mux2.IN5
dir[0] => Mux3.IN5
dir[1] => Mux0.IN4
dir[1] => Mux1.IN4
dir[1] => Mux2.IN4
dir[1] => Mux3.IN4
clk => counter256:counter.clk
clk => state_r~1.DATAIN
slow_edge => counter256:counter.slow_edge
slow_edge => state_r.OUTPUTSELECT
slow_edge => state_r.OUTPUTSELECT
slow_edge => state_r.OUTPUTSELECT
slow_edge => state_r.OUTPUTSELECT
reset => counter256:counter.reset
reset => state_r.OUTPUTSELECT
reset => state_r.OUTPUTSELECT
reset => state_r.OUTPUTSELECT
reset => state_r.OUTPUTSELECT
light_type[0] => counter256:counter.init_val[0]
light_type[0] => Equal1.IN1
light_type[0] => Equal2.IN1
light_type[1] => counter256:counter.init_val[1]
light_type[1] => Equal1.IN0
light_type[1] => Equal2.IN0


|lab8|snakes_and_apples:snake|grid_light:center_grid_row[14].center_grid_col[13].light|counter256:counter
count[0] <= count[0]~reg0.DB_MAX_OUTPUT_PORT_TYPE
count[1] <= count[1]~reg0.DB_MAX_OUTPUT_PORT_TYPE
count[2] <= count[2]~reg0.DB_MAX_OUTPUT_PORT_TYPE
count[3] <= count[3]~reg0.DB_MAX_OUTPUT_PORT_TYPE
count[4] <= count[4]~reg0.DB_MAX_OUTPUT_PORT_TYPE
count[5] <= count[5]~reg0.DB_MAX_OUTPUT_PORT_TYPE
count[6] <= count[6]~reg0.DB_MAX_OUTPUT_PORT_TYPE
count[7] <= count[7]~reg0.DB_MAX_OUTPUT_PORT_TYPE
start_val[0] => Add0.IN16
start_val[0] => count.DATAB
start_val[1] => Add0.IN15
start_val[1] => count.DATAB
start_val[2] => Add0.IN14
start_val[2] => count.DATAB
start_val[3] => Add0.IN13
start_val[3] => count.DATAB
start_val[4] => Add0.IN12
start_val[4] => count.DATAB
start_val[5] => Add0.IN11
start_val[5] => count.DATAB
start_val[6] => Add0.IN10
start_val[6] => count.DATAB
start_val[7] => Add0.IN9
start_val[7] => count.DATAB
inc => count.OUTPUTSELECT
inc => count.OUTPUTSELECT
inc => count.OUTPUTSELECT
inc => count.OUTPUTSELECT
inc => count.OUTPUTSELECT
inc => count.OUTPUTSELECT
inc => count.OUTPUTSELECT
inc => count.OUTPUTSELECT
inc => always0.IN0
enable => always0.IN1
enable => count.OUTPUTSELECT
enable => count.OUTPUTSELECT
enable => count.OUTPUTSELECT
enable => count.OUTPUTSELECT
enable => count.OUTPUTSELECT
enable => count.OUTPUTSELECT
enable => count.OUTPUTSELECT
enable => count.OUTPUTSELECT
clk => count[0]~reg0.CLK
clk => count[1]~reg0.CLK
clk => count[2]~reg0.CLK
clk => count[3]~reg0.CLK
clk => count[4]~reg0.CLK
clk => count[5]~reg0.CLK
clk => count[6]~reg0.CLK
clk => count[7]~reg0.CLK
slow_edge => count.OUTPUTSELECT
slow_edge => count.OUTPUTSELECT
slow_edge => count.OUTPUTSELECT
slow_edge => count.OUTPUTSELECT
slow_edge => count.OUTPUTSELECT
slow_edge => count.OUTPUTSELECT
slow_edge => count.OUTPUTSELECT
slow_edge => count.OUTPUTSELECT
reset => count.OUTPUTSELECT
reset => count.OUTPUTSELECT
reset => count.OUTPUTSELECT
reset => count.OUTPUTSELECT
reset => count.OUTPUTSELECT
reset => count.OUTPUTSELECT
reset => count.OUTPUTSELECT
reset => count.OUTPUTSELECT
init_val[0] => count.DATAB
init_val[1] => count.DATAB


|lab8|snakes_and_apples:snake|grid_light:center_grid_row[14].center_grid_col[14].light
green_light_on <= green_light_on.DB_MAX_OUTPUT_PORT_TYPE
head <= head.DB_MAX_OUTPUT_PORT_TYPE
game_over_out <= state_n.DB_MAX_OUTPUT_PORT_TYPE
eating => counter256:counter.inc
eating => always0.IN1
game_over_in => state_n.e_off.OUTPUTSELECT
game_over_in => state_n.e_countdown.OUTPUTSELECT
game_over_in => state_n.e_head.OUTPUTSELECT
game_over_in => state_n.OUTPUTSELECT
left => state_n.OUTPUTSELECT
left => state_n.OUTPUTSELECT
left => state_n.OUTPUTSELECT
left => state_n.OUTPUTSELECT
up => state_n.OUTPUTSELECT
up => state_n.OUTPUTSELECT
up => state_n.OUTPUTSELECT
up => state_n.OUTPUTSELECT
right => state_n.OUTPUTSELECT
right => state_n.OUTPUTSELECT
right => state_n.OUTPUTSELECT
right => state_n.OUTPUTSELECT
down => state_n.OUTPUTSELECT
down => state_n.OUTPUTSELECT
down => state_n.OUTPUTSELECT
down => state_n.OUTPUTSELECT
length[0] => counter256:counter.start_val[0]
length[1] => counter256:counter.start_val[1]
length[2] => counter256:counter.start_val[2]
length[3] => counter256:counter.start_val[3]
length[4] => counter256:counter.start_val[4]
length[5] => counter256:counter.start_val[5]
length[6] => counter256:counter.start_val[6]
length[7] => counter256:counter.start_val[7]
dir[0] => Mux0.IN5
dir[0] => Mux1.IN5
dir[0] => Mux2.IN5
dir[0] => Mux3.IN5
dir[1] => Mux0.IN4
dir[1] => Mux1.IN4
dir[1] => Mux2.IN4
dir[1] => Mux3.IN4
clk => counter256:counter.clk
clk => state_r~1.DATAIN
slow_edge => counter256:counter.slow_edge
slow_edge => state_r.OUTPUTSELECT
slow_edge => state_r.OUTPUTSELECT
slow_edge => state_r.OUTPUTSELECT
slow_edge => state_r.OUTPUTSELECT
reset => counter256:counter.reset
reset => state_r.OUTPUTSELECT
reset => state_r.OUTPUTSELECT
reset => state_r.OUTPUTSELECT
reset => state_r.OUTPUTSELECT
light_type[0] => counter256:counter.init_val[0]
light_type[0] => Equal1.IN1
light_type[0] => Equal2.IN1
light_type[1] => counter256:counter.init_val[1]
light_type[1] => Equal1.IN0
light_type[1] => Equal2.IN0


|lab8|snakes_and_apples:snake|grid_light:center_grid_row[14].center_grid_col[14].light|counter256:counter
count[0] <= count[0]~reg0.DB_MAX_OUTPUT_PORT_TYPE
count[1] <= count[1]~reg0.DB_MAX_OUTPUT_PORT_TYPE
count[2] <= count[2]~reg0.DB_MAX_OUTPUT_PORT_TYPE
count[3] <= count[3]~reg0.DB_MAX_OUTPUT_PORT_TYPE
count[4] <= count[4]~reg0.DB_MAX_OUTPUT_PORT_TYPE
count[5] <= count[5]~reg0.DB_MAX_OUTPUT_PORT_TYPE
count[6] <= count[6]~reg0.DB_MAX_OUTPUT_PORT_TYPE
count[7] <= count[7]~reg0.DB_MAX_OUTPUT_PORT_TYPE
start_val[0] => Add0.IN16
start_val[0] => count.DATAB
start_val[1] => Add0.IN15
start_val[1] => count.DATAB
start_val[2] => Add0.IN14
start_val[2] => count.DATAB
start_val[3] => Add0.IN13
start_val[3] => count.DATAB
start_val[4] => Add0.IN12
start_val[4] => count.DATAB
start_val[5] => Add0.IN11
start_val[5] => count.DATAB
start_val[6] => Add0.IN10
start_val[6] => count.DATAB
start_val[7] => Add0.IN9
start_val[7] => count.DATAB
inc => count.OUTPUTSELECT
inc => count.OUTPUTSELECT
inc => count.OUTPUTSELECT
inc => count.OUTPUTSELECT
inc => count.OUTPUTSELECT
inc => count.OUTPUTSELECT
inc => count.OUTPUTSELECT
inc => count.OUTPUTSELECT
inc => always0.IN0
enable => always0.IN1
enable => count.OUTPUTSELECT
enable => count.OUTPUTSELECT
enable => count.OUTPUTSELECT
enable => count.OUTPUTSELECT
enable => count.OUTPUTSELECT
enable => count.OUTPUTSELECT
enable => count.OUTPUTSELECT
enable => count.OUTPUTSELECT
clk => count[0]~reg0.CLK
clk => count[1]~reg0.CLK
clk => count[2]~reg0.CLK
clk => count[3]~reg0.CLK
clk => count[4]~reg0.CLK
clk => count[5]~reg0.CLK
clk => count[6]~reg0.CLK
clk => count[7]~reg0.CLK
slow_edge => count.OUTPUTSELECT
slow_edge => count.OUTPUTSELECT
slow_edge => count.OUTPUTSELECT
slow_edge => count.OUTPUTSELECT
slow_edge => count.OUTPUTSELECT
slow_edge => count.OUTPUTSELECT
slow_edge => count.OUTPUTSELECT
slow_edge => count.OUTPUTSELECT
reset => count.OUTPUTSELECT
reset => count.OUTPUTSELECT
reset => count.OUTPUTSELECT
reset => count.OUTPUTSELECT
reset => count.OUTPUTSELECT
reset => count.OUTPUTSELECT
reset => count.OUTPUTSELECT
reset => count.OUTPUTSELECT
init_val[0] => count.DATAB
init_val[1] => count.DATAB


|lab8|snakes_and_apples:snake|check_eating_light:tl
eating <= eating.DB_MAX_OUTPUT_PORT_TYPE
apple => eating.OUTPUTSELECT
left => Mux0.IN0
up => Mux0.IN1
right => Mux0.IN2
down => Mux0.IN3
dir[0] => Mux0.IN5
dir[1] => Mux0.IN4


|lab8|snakes_and_apples:snake|check_eating_light:tr
eating <= eating.DB_MAX_OUTPUT_PORT_TYPE
apple => eating.OUTPUTSELECT
left => Mux0.IN0
up => Mux0.IN1
right => Mux0.IN2
down => Mux0.IN3
dir[0] => Mux0.IN5
dir[1] => Mux0.IN4


|lab8|snakes_and_apples:snake|check_eating_light:bl
eating <= eating.DB_MAX_OUTPUT_PORT_TYPE
apple => eating.OUTPUTSELECT
left => Mux0.IN0
up => Mux0.IN1
right => Mux0.IN2
down => Mux0.IN3
dir[0] => Mux0.IN5
dir[1] => Mux0.IN4


|lab8|snakes_and_apples:snake|check_eating_light:br
eating <= eating.DB_MAX_OUTPUT_PORT_TYPE
apple => eating.OUTPUTSELECT
left => Mux0.IN0
up => Mux0.IN1
right => Mux0.IN2
down => Mux0.IN3
dir[0] => Mux0.IN5
dir[1] => Mux0.IN4


|lab8|snakes_and_apples:snake|check_eating_light:vertical_cell[1].left_col
eating <= eating.DB_MAX_OUTPUT_PORT_TYPE
apple => eating.OUTPUTSELECT
left => Mux0.IN0
up => Mux0.IN1
right => Mux0.IN2
down => Mux0.IN3
dir[0] => Mux0.IN5
dir[1] => Mux0.IN4


|lab8|snakes_and_apples:snake|check_eating_light:vertical_cell[1].right_col
eating <= eating.DB_MAX_OUTPUT_PORT_TYPE
apple => eating.OUTPUTSELECT
left => Mux0.IN0
up => Mux0.IN1
right => Mux0.IN2
down => Mux0.IN3
dir[0] => Mux0.IN5
dir[1] => Mux0.IN4


|lab8|snakes_and_apples:snake|check_eating_light:vertical_cell[2].left_col
eating <= eating.DB_MAX_OUTPUT_PORT_TYPE
apple => eating.OUTPUTSELECT
left => Mux0.IN0
up => Mux0.IN1
right => Mux0.IN2
down => Mux0.IN3
dir[0] => Mux0.IN5
dir[1] => Mux0.IN4


|lab8|snakes_and_apples:snake|check_eating_light:vertical_cell[2].right_col
eating <= eating.DB_MAX_OUTPUT_PORT_TYPE
apple => eating.OUTPUTSELECT
left => Mux0.IN0
up => Mux0.IN1
right => Mux0.IN2
down => Mux0.IN3
dir[0] => Mux0.IN5
dir[1] => Mux0.IN4


|lab8|snakes_and_apples:snake|check_eating_light:vertical_cell[3].left_col
eating <= eating.DB_MAX_OUTPUT_PORT_TYPE
apple => eating.OUTPUTSELECT
left => Mux0.IN0
up => Mux0.IN1
right => Mux0.IN2
down => Mux0.IN3
dir[0] => Mux0.IN5
dir[1] => Mux0.IN4


|lab8|snakes_and_apples:snake|check_eating_light:vertical_cell[3].right_col
eating <= eating.DB_MAX_OUTPUT_PORT_TYPE
apple => eating.OUTPUTSELECT
left => Mux0.IN0
up => Mux0.IN1
right => Mux0.IN2
down => Mux0.IN3
dir[0] => Mux0.IN5
dir[1] => Mux0.IN4


|lab8|snakes_and_apples:snake|check_eating_light:vertical_cell[4].left_col
eating <= eating.DB_MAX_OUTPUT_PORT_TYPE
apple => eating.OUTPUTSELECT
left => Mux0.IN0
up => Mux0.IN1
right => Mux0.IN2
down => Mux0.IN3
dir[0] => Mux0.IN5
dir[1] => Mux0.IN4


|lab8|snakes_and_apples:snake|check_eating_light:vertical_cell[4].right_col
eating <= eating.DB_MAX_OUTPUT_PORT_TYPE
apple => eating.OUTPUTSELECT
left => Mux0.IN0
up => Mux0.IN1
right => Mux0.IN2
down => Mux0.IN3
dir[0] => Mux0.IN5
dir[1] => Mux0.IN4


|lab8|snakes_and_apples:snake|check_eating_light:vertical_cell[5].left_col
eating <= eating.DB_MAX_OUTPUT_PORT_TYPE
apple => eating.OUTPUTSELECT
left => Mux0.IN0
up => Mux0.IN1
right => Mux0.IN2
down => Mux0.IN3
dir[0] => Mux0.IN5
dir[1] => Mux0.IN4


|lab8|snakes_and_apples:snake|check_eating_light:vertical_cell[5].right_col
eating <= eating.DB_MAX_OUTPUT_PORT_TYPE
apple => eating.OUTPUTSELECT
left => Mux0.IN0
up => Mux0.IN1
right => Mux0.IN2
down => Mux0.IN3
dir[0] => Mux0.IN5
dir[1] => Mux0.IN4


|lab8|snakes_and_apples:snake|check_eating_light:vertical_cell[6].left_col
eating <= eating.DB_MAX_OUTPUT_PORT_TYPE
apple => eating.OUTPUTSELECT
left => Mux0.IN0
up => Mux0.IN1
right => Mux0.IN2
down => Mux0.IN3
dir[0] => Mux0.IN5
dir[1] => Mux0.IN4


|lab8|snakes_and_apples:snake|check_eating_light:vertical_cell[6].right_col
eating <= eating.DB_MAX_OUTPUT_PORT_TYPE
apple => eating.OUTPUTSELECT
left => Mux0.IN0
up => Mux0.IN1
right => Mux0.IN2
down => Mux0.IN3
dir[0] => Mux0.IN5
dir[1] => Mux0.IN4


|lab8|snakes_and_apples:snake|check_eating_light:vertical_cell[7].left_col
eating <= eating.DB_MAX_OUTPUT_PORT_TYPE
apple => eating.OUTPUTSELECT
left => Mux0.IN0
up => Mux0.IN1
right => Mux0.IN2
down => Mux0.IN3
dir[0] => Mux0.IN5
dir[1] => Mux0.IN4


|lab8|snakes_and_apples:snake|check_eating_light:vertical_cell[7].right_col
eating <= eating.DB_MAX_OUTPUT_PORT_TYPE
apple => eating.OUTPUTSELECT
left => Mux0.IN0
up => Mux0.IN1
right => Mux0.IN2
down => Mux0.IN3
dir[0] => Mux0.IN5
dir[1] => Mux0.IN4


|lab8|snakes_and_apples:snake|check_eating_light:vertical_cell[8].left_col
eating <= eating.DB_MAX_OUTPUT_PORT_TYPE
apple => eating.OUTPUTSELECT
left => Mux0.IN0
up => Mux0.IN1
right => Mux0.IN2
down => Mux0.IN3
dir[0] => Mux0.IN5
dir[1] => Mux0.IN4


|lab8|snakes_and_apples:snake|check_eating_light:vertical_cell[8].right_col
eating <= eating.DB_MAX_OUTPUT_PORT_TYPE
apple => eating.OUTPUTSELECT
left => Mux0.IN0
up => Mux0.IN1
right => Mux0.IN2
down => Mux0.IN3
dir[0] => Mux0.IN5
dir[1] => Mux0.IN4


|lab8|snakes_and_apples:snake|check_eating_light:vertical_cell[9].left_col
eating <= eating.DB_MAX_OUTPUT_PORT_TYPE
apple => eating.OUTPUTSELECT
left => Mux0.IN0
up => Mux0.IN1
right => Mux0.IN2
down => Mux0.IN3
dir[0] => Mux0.IN5
dir[1] => Mux0.IN4


|lab8|snakes_and_apples:snake|check_eating_light:vertical_cell[9].right_col
eating <= eating.DB_MAX_OUTPUT_PORT_TYPE
apple => eating.OUTPUTSELECT
left => Mux0.IN0
up => Mux0.IN1
right => Mux0.IN2
down => Mux0.IN3
dir[0] => Mux0.IN5
dir[1] => Mux0.IN4


|lab8|snakes_and_apples:snake|check_eating_light:vertical_cell[10].left_col
eating <= eating.DB_MAX_OUTPUT_PORT_TYPE
apple => eating.OUTPUTSELECT
left => Mux0.IN0
up => Mux0.IN1
right => Mux0.IN2
down => Mux0.IN3
dir[0] => Mux0.IN5
dir[1] => Mux0.IN4


|lab8|snakes_and_apples:snake|check_eating_light:vertical_cell[10].right_col
eating <= eating.DB_MAX_OUTPUT_PORT_TYPE
apple => eating.OUTPUTSELECT
left => Mux0.IN0
up => Mux0.IN1
right => Mux0.IN2
down => Mux0.IN3
dir[0] => Mux0.IN5
dir[1] => Mux0.IN4


|lab8|snakes_and_apples:snake|check_eating_light:vertical_cell[11].left_col
eating <= eating.DB_MAX_OUTPUT_PORT_TYPE
apple => eating.OUTPUTSELECT
left => Mux0.IN0
up => Mux0.IN1
right => Mux0.IN2
down => Mux0.IN3
dir[0] => Mux0.IN5
dir[1] => Mux0.IN4


|lab8|snakes_and_apples:snake|check_eating_light:vertical_cell[11].right_col
eating <= eating.DB_MAX_OUTPUT_PORT_TYPE
apple => eating.OUTPUTSELECT
left => Mux0.IN0
up => Mux0.IN1
right => Mux0.IN2
down => Mux0.IN3
dir[0] => Mux0.IN5
dir[1] => Mux0.IN4


|lab8|snakes_and_apples:snake|check_eating_light:vertical_cell[12].left_col
eating <= eating.DB_MAX_OUTPUT_PORT_TYPE
apple => eating.OUTPUTSELECT
left => Mux0.IN0
up => Mux0.IN1
right => Mux0.IN2
down => Mux0.IN3
dir[0] => Mux0.IN5
dir[1] => Mux0.IN4


|lab8|snakes_and_apples:snake|check_eating_light:vertical_cell[12].right_col
eating <= eating.DB_MAX_OUTPUT_PORT_TYPE
apple => eating.OUTPUTSELECT
left => Mux0.IN0
up => Mux0.IN1
right => Mux0.IN2
down => Mux0.IN3
dir[0] => Mux0.IN5
dir[1] => Mux0.IN4


|lab8|snakes_and_apples:snake|check_eating_light:vertical_cell[13].left_col
eating <= eating.DB_MAX_OUTPUT_PORT_TYPE
apple => eating.OUTPUTSELECT
left => Mux0.IN0
up => Mux0.IN1
right => Mux0.IN2
down => Mux0.IN3
dir[0] => Mux0.IN5
dir[1] => Mux0.IN4


|lab8|snakes_and_apples:snake|check_eating_light:vertical_cell[13].right_col
eating <= eating.DB_MAX_OUTPUT_PORT_TYPE
apple => eating.OUTPUTSELECT
left => Mux0.IN0
up => Mux0.IN1
right => Mux0.IN2
down => Mux0.IN3
dir[0] => Mux0.IN5
dir[1] => Mux0.IN4


|lab8|snakes_and_apples:snake|check_eating_light:vertical_cell[14].left_col
eating <= eating.DB_MAX_OUTPUT_PORT_TYPE
apple => eating.OUTPUTSELECT
left => Mux0.IN0
up => Mux0.IN1
right => Mux0.IN2
down => Mux0.IN3
dir[0] => Mux0.IN5
dir[1] => Mux0.IN4


|lab8|snakes_and_apples:snake|check_eating_light:vertical_cell[14].right_col
eating <= eating.DB_MAX_OUTPUT_PORT_TYPE
apple => eating.OUTPUTSELECT
left => Mux0.IN0
up => Mux0.IN1
right => Mux0.IN2
down => Mux0.IN3
dir[0] => Mux0.IN5
dir[1] => Mux0.IN4


|lab8|snakes_and_apples:snake|check_eating_light:horizontal_cell[1].left_col
eating <= eating.DB_MAX_OUTPUT_PORT_TYPE
apple => eating.OUTPUTSELECT
left => Mux0.IN0
up => Mux0.IN1
right => Mux0.IN2
down => Mux0.IN3
dir[0] => Mux0.IN5
dir[1] => Mux0.IN4


|lab8|snakes_and_apples:snake|check_eating_light:horizontal_cell[1].right_col
eating <= eating.DB_MAX_OUTPUT_PORT_TYPE
apple => eating.OUTPUTSELECT
left => Mux0.IN0
up => Mux0.IN1
right => Mux0.IN2
down => Mux0.IN3
dir[0] => Mux0.IN5
dir[1] => Mux0.IN4


|lab8|snakes_and_apples:snake|check_eating_light:horizontal_cell[2].left_col
eating <= eating.DB_MAX_OUTPUT_PORT_TYPE
apple => eating.OUTPUTSELECT
left => Mux0.IN0
up => Mux0.IN1
right => Mux0.IN2
down => Mux0.IN3
dir[0] => Mux0.IN5
dir[1] => Mux0.IN4


|lab8|snakes_and_apples:snake|check_eating_light:horizontal_cell[2].right_col
eating <= eating.DB_MAX_OUTPUT_PORT_TYPE
apple => eating.OUTPUTSELECT
left => Mux0.IN0
up => Mux0.IN1
right => Mux0.IN2
down => Mux0.IN3
dir[0] => Mux0.IN5
dir[1] => Mux0.IN4


|lab8|snakes_and_apples:snake|check_eating_light:horizontal_cell[3].left_col
eating <= eating.DB_MAX_OUTPUT_PORT_TYPE
apple => eating.OUTPUTSELECT
left => Mux0.IN0
up => Mux0.IN1
right => Mux0.IN2
down => Mux0.IN3
dir[0] => Mux0.IN5
dir[1] => Mux0.IN4


|lab8|snakes_and_apples:snake|check_eating_light:horizontal_cell[3].right_col
eating <= eating.DB_MAX_OUTPUT_PORT_TYPE
apple => eating.OUTPUTSELECT
left => Mux0.IN0
up => Mux0.IN1
right => Mux0.IN2
down => Mux0.IN3
dir[0] => Mux0.IN5
dir[1] => Mux0.IN4


|lab8|snakes_and_apples:snake|check_eating_light:horizontal_cell[4].left_col
eating <= eating.DB_MAX_OUTPUT_PORT_TYPE
apple => eating.OUTPUTSELECT
left => Mux0.IN0
up => Mux0.IN1
right => Mux0.IN2
down => Mux0.IN3
dir[0] => Mux0.IN5
dir[1] => Mux0.IN4


|lab8|snakes_and_apples:snake|check_eating_light:horizontal_cell[4].right_col
eating <= eating.DB_MAX_OUTPUT_PORT_TYPE
apple => eating.OUTPUTSELECT
left => Mux0.IN0
up => Mux0.IN1
right => Mux0.IN2
down => Mux0.IN3
dir[0] => Mux0.IN5
dir[1] => Mux0.IN4


|lab8|snakes_and_apples:snake|check_eating_light:horizontal_cell[5].left_col
eating <= eating.DB_MAX_OUTPUT_PORT_TYPE
apple => eating.OUTPUTSELECT
left => Mux0.IN0
up => Mux0.IN1
right => Mux0.IN2
down => Mux0.IN3
dir[0] => Mux0.IN5
dir[1] => Mux0.IN4


|lab8|snakes_and_apples:snake|check_eating_light:horizontal_cell[5].right_col
eating <= eating.DB_MAX_OUTPUT_PORT_TYPE
apple => eating.OUTPUTSELECT
left => Mux0.IN0
up => Mux0.IN1
right => Mux0.IN2
down => Mux0.IN3
dir[0] => Mux0.IN5
dir[1] => Mux0.IN4


|lab8|snakes_and_apples:snake|check_eating_light:horizontal_cell[6].left_col
eating <= eating.DB_MAX_OUTPUT_PORT_TYPE
apple => eating.OUTPUTSELECT
left => Mux0.IN0
up => Mux0.IN1
right => Mux0.IN2
down => Mux0.IN3
dir[0] => Mux0.IN5
dir[1] => Mux0.IN4


|lab8|snakes_and_apples:snake|check_eating_light:horizontal_cell[6].right_col
eating <= eating.DB_MAX_OUTPUT_PORT_TYPE
apple => eating.OUTPUTSELECT
left => Mux0.IN0
up => Mux0.IN1
right => Mux0.IN2
down => Mux0.IN3
dir[0] => Mux0.IN5
dir[1] => Mux0.IN4


|lab8|snakes_and_apples:snake|check_eating_light:horizontal_cell[7].left_col
eating <= eating.DB_MAX_OUTPUT_PORT_TYPE
apple => eating.OUTPUTSELECT
left => Mux0.IN0
up => Mux0.IN1
right => Mux0.IN2
down => Mux0.IN3
dir[0] => Mux0.IN5
dir[1] => Mux0.IN4


|lab8|snakes_and_apples:snake|check_eating_light:horizontal_cell[7].right_col
eating <= eating.DB_MAX_OUTPUT_PORT_TYPE
apple => eating.OUTPUTSELECT
left => Mux0.IN0
up => Mux0.IN1
right => Mux0.IN2
down => Mux0.IN3
dir[0] => Mux0.IN5
dir[1] => Mux0.IN4


|lab8|snakes_and_apples:snake|check_eating_light:horizontal_cell[8].left_col
eating <= eating.DB_MAX_OUTPUT_PORT_TYPE
apple => eating.OUTPUTSELECT
left => Mux0.IN0
up => Mux0.IN1
right => Mux0.IN2
down => Mux0.IN3
dir[0] => Mux0.IN5
dir[1] => Mux0.IN4


|lab8|snakes_and_apples:snake|check_eating_light:horizontal_cell[8].right_col
eating <= eating.DB_MAX_OUTPUT_PORT_TYPE
apple => eating.OUTPUTSELECT
left => Mux0.IN0
up => Mux0.IN1
right => Mux0.IN2
down => Mux0.IN3
dir[0] => Mux0.IN5
dir[1] => Mux0.IN4


|lab8|snakes_and_apples:snake|check_eating_light:horizontal_cell[9].left_col
eating <= eating.DB_MAX_OUTPUT_PORT_TYPE
apple => eating.OUTPUTSELECT
left => Mux0.IN0
up => Mux0.IN1
right => Mux0.IN2
down => Mux0.IN3
dir[0] => Mux0.IN5
dir[1] => Mux0.IN4


|lab8|snakes_and_apples:snake|check_eating_light:horizontal_cell[9].right_col
eating <= eating.DB_MAX_OUTPUT_PORT_TYPE
apple => eating.OUTPUTSELECT
left => Mux0.IN0
up => Mux0.IN1
right => Mux0.IN2
down => Mux0.IN3
dir[0] => Mux0.IN5
dir[1] => Mux0.IN4


|lab8|snakes_and_apples:snake|check_eating_light:horizontal_cell[10].left_col
eating <= eating.DB_MAX_OUTPUT_PORT_TYPE
apple => eating.OUTPUTSELECT
left => Mux0.IN0
up => Mux0.IN1
right => Mux0.IN2
down => Mux0.IN3
dir[0] => Mux0.IN5
dir[1] => Mux0.IN4


|lab8|snakes_and_apples:snake|check_eating_light:horizontal_cell[10].right_col
eating <= eating.DB_MAX_OUTPUT_PORT_TYPE
apple => eating.OUTPUTSELECT
left => Mux0.IN0
up => Mux0.IN1
right => Mux0.IN2
down => Mux0.IN3
dir[0] => Mux0.IN5
dir[1] => Mux0.IN4


|lab8|snakes_and_apples:snake|check_eating_light:horizontal_cell[11].left_col
eating <= eating.DB_MAX_OUTPUT_PORT_TYPE
apple => eating.OUTPUTSELECT
left => Mux0.IN0
up => Mux0.IN1
right => Mux0.IN2
down => Mux0.IN3
dir[0] => Mux0.IN5
dir[1] => Mux0.IN4


|lab8|snakes_and_apples:snake|check_eating_light:horizontal_cell[11].right_col
eating <= eating.DB_MAX_OUTPUT_PORT_TYPE
apple => eating.OUTPUTSELECT
left => Mux0.IN0
up => Mux0.IN1
right => Mux0.IN2
down => Mux0.IN3
dir[0] => Mux0.IN5
dir[1] => Mux0.IN4


|lab8|snakes_and_apples:snake|check_eating_light:horizontal_cell[12].left_col
eating <= eating.DB_MAX_OUTPUT_PORT_TYPE
apple => eating.OUTPUTSELECT
left => Mux0.IN0
up => Mux0.IN1
right => Mux0.IN2
down => Mux0.IN3
dir[0] => Mux0.IN5
dir[1] => Mux0.IN4


|lab8|snakes_and_apples:snake|check_eating_light:horizontal_cell[12].right_col
eating <= eating.DB_MAX_OUTPUT_PORT_TYPE
apple => eating.OUTPUTSELECT
left => Mux0.IN0
up => Mux0.IN1
right => Mux0.IN2
down => Mux0.IN3
dir[0] => Mux0.IN5
dir[1] => Mux0.IN4


|lab8|snakes_and_apples:snake|check_eating_light:horizontal_cell[13].left_col
eating <= eating.DB_MAX_OUTPUT_PORT_TYPE
apple => eating.OUTPUTSELECT
left => Mux0.IN0
up => Mux0.IN1
right => Mux0.IN2
down => Mux0.IN3
dir[0] => Mux0.IN5
dir[1] => Mux0.IN4


|lab8|snakes_and_apples:snake|check_eating_light:horizontal_cell[13].right_col
eating <= eating.DB_MAX_OUTPUT_PORT_TYPE
apple => eating.OUTPUTSELECT
left => Mux0.IN0
up => Mux0.IN1
right => Mux0.IN2
down => Mux0.IN3
dir[0] => Mux0.IN5
dir[1] => Mux0.IN4


|lab8|snakes_and_apples:snake|check_eating_light:horizontal_cell[14].left_col
eating <= eating.DB_MAX_OUTPUT_PORT_TYPE
apple => eating.OUTPUTSELECT
left => Mux0.IN0
up => Mux0.IN1
right => Mux0.IN2
down => Mux0.IN3
dir[0] => Mux0.IN5
dir[1] => Mux0.IN4


|lab8|snakes_and_apples:snake|check_eating_light:horizontal_cell[14].right_col
eating <= eating.DB_MAX_OUTPUT_PORT_TYPE
apple => eating.OUTPUTSELECT
left => Mux0.IN0
up => Mux0.IN1
right => Mux0.IN2
down => Mux0.IN3
dir[0] => Mux0.IN5
dir[1] => Mux0.IN4


|lab8|snakes_and_apples:snake|check_eating_light:center_cell_row[1].center_cell_col[1].right_col
eating <= eating.DB_MAX_OUTPUT_PORT_TYPE
apple => eating.OUTPUTSELECT
left => Mux0.IN0
up => Mux0.IN1
right => Mux0.IN2
down => Mux0.IN3
dir[0] => Mux0.IN5
dir[1] => Mux0.IN4


|lab8|snakes_and_apples:snake|check_eating_light:center_cell_row[1].center_cell_col[2].right_col
eating <= eating.DB_MAX_OUTPUT_PORT_TYPE
apple => eating.OUTPUTSELECT
left => Mux0.IN0
up => Mux0.IN1
right => Mux0.IN2
down => Mux0.IN3
dir[0] => Mux0.IN5
dir[1] => Mux0.IN4


|lab8|snakes_and_apples:snake|check_eating_light:center_cell_row[1].center_cell_col[3].right_col
eating <= eating.DB_MAX_OUTPUT_PORT_TYPE
apple => eating.OUTPUTSELECT
left => Mux0.IN0
up => Mux0.IN1
right => Mux0.IN2
down => Mux0.IN3
dir[0] => Mux0.IN5
dir[1] => Mux0.IN4


|lab8|snakes_and_apples:snake|check_eating_light:center_cell_row[1].center_cell_col[4].right_col
eating <= eating.DB_MAX_OUTPUT_PORT_TYPE
apple => eating.OUTPUTSELECT
left => Mux0.IN0
up => Mux0.IN1
right => Mux0.IN2
down => Mux0.IN3
dir[0] => Mux0.IN5
dir[1] => Mux0.IN4


|lab8|snakes_and_apples:snake|check_eating_light:center_cell_row[1].center_cell_col[5].right_col
eating <= eating.DB_MAX_OUTPUT_PORT_TYPE
apple => eating.OUTPUTSELECT
left => Mux0.IN0
up => Mux0.IN1
right => Mux0.IN2
down => Mux0.IN3
dir[0] => Mux0.IN5
dir[1] => Mux0.IN4


|lab8|snakes_and_apples:snake|check_eating_light:center_cell_row[1].center_cell_col[6].right_col
eating <= eating.DB_MAX_OUTPUT_PORT_TYPE
apple => eating.OUTPUTSELECT
left => Mux0.IN0
up => Mux0.IN1
right => Mux0.IN2
down => Mux0.IN3
dir[0] => Mux0.IN5
dir[1] => Mux0.IN4


|lab8|snakes_and_apples:snake|check_eating_light:center_cell_row[1].center_cell_col[7].right_col
eating <= eating.DB_MAX_OUTPUT_PORT_TYPE
apple => eating.OUTPUTSELECT
left => Mux0.IN0
up => Mux0.IN1
right => Mux0.IN2
down => Mux0.IN3
dir[0] => Mux0.IN5
dir[1] => Mux0.IN4


|lab8|snakes_and_apples:snake|check_eating_light:center_cell_row[1].center_cell_col[8].right_col
eating <= eating.DB_MAX_OUTPUT_PORT_TYPE
apple => eating.OUTPUTSELECT
left => Mux0.IN0
up => Mux0.IN1
right => Mux0.IN2
down => Mux0.IN3
dir[0] => Mux0.IN5
dir[1] => Mux0.IN4


|lab8|snakes_and_apples:snake|check_eating_light:center_cell_row[1].center_cell_col[9].right_col
eating <= eating.DB_MAX_OUTPUT_PORT_TYPE
apple => eating.OUTPUTSELECT
left => Mux0.IN0
up => Mux0.IN1
right => Mux0.IN2
down => Mux0.IN3
dir[0] => Mux0.IN5
dir[1] => Mux0.IN4


|lab8|snakes_and_apples:snake|check_eating_light:center_cell_row[1].center_cell_col[10].right_col
eating <= eating.DB_MAX_OUTPUT_PORT_TYPE
apple => eating.OUTPUTSELECT
left => Mux0.IN0
up => Mux0.IN1
right => Mux0.IN2
down => Mux0.IN3
dir[0] => Mux0.IN5
dir[1] => Mux0.IN4


|lab8|snakes_and_apples:snake|check_eating_light:center_cell_row[1].center_cell_col[11].right_col
eating <= eating.DB_MAX_OUTPUT_PORT_TYPE
apple => eating.OUTPUTSELECT
left => Mux0.IN0
up => Mux0.IN1
right => Mux0.IN2
down => Mux0.IN3
dir[0] => Mux0.IN5
dir[1] => Mux0.IN4


|lab8|snakes_and_apples:snake|check_eating_light:center_cell_row[1].center_cell_col[12].right_col
eating <= eating.DB_MAX_OUTPUT_PORT_TYPE
apple => eating.OUTPUTSELECT
left => Mux0.IN0
up => Mux0.IN1
right => Mux0.IN2
down => Mux0.IN3
dir[0] => Mux0.IN5
dir[1] => Mux0.IN4


|lab8|snakes_and_apples:snake|check_eating_light:center_cell_row[1].center_cell_col[13].right_col
eating <= eating.DB_MAX_OUTPUT_PORT_TYPE
apple => eating.OUTPUTSELECT
left => Mux0.IN0
up => Mux0.IN1
right => Mux0.IN2
down => Mux0.IN3
dir[0] => Mux0.IN5
dir[1] => Mux0.IN4


|lab8|snakes_and_apples:snake|check_eating_light:center_cell_row[1].center_cell_col[14].right_col
eating <= eating.DB_MAX_OUTPUT_PORT_TYPE
apple => eating.OUTPUTSELECT
left => Mux0.IN0
up => Mux0.IN1
right => Mux0.IN2
down => Mux0.IN3
dir[0] => Mux0.IN5
dir[1] => Mux0.IN4


|lab8|snakes_and_apples:snake|check_eating_light:center_cell_row[2].center_cell_col[1].right_col
eating <= eating.DB_MAX_OUTPUT_PORT_TYPE
apple => eating.OUTPUTSELECT
left => Mux0.IN0
up => Mux0.IN1
right => Mux0.IN2
down => Mux0.IN3
dir[0] => Mux0.IN5
dir[1] => Mux0.IN4


|lab8|snakes_and_apples:snake|check_eating_light:center_cell_row[2].center_cell_col[2].right_col
eating <= eating.DB_MAX_OUTPUT_PORT_TYPE
apple => eating.OUTPUTSELECT
left => Mux0.IN0
up => Mux0.IN1
right => Mux0.IN2
down => Mux0.IN3
dir[0] => Mux0.IN5
dir[1] => Mux0.IN4


|lab8|snakes_and_apples:snake|check_eating_light:center_cell_row[2].center_cell_col[3].right_col
eating <= eating.DB_MAX_OUTPUT_PORT_TYPE
apple => eating.OUTPUTSELECT
left => Mux0.IN0
up => Mux0.IN1
right => Mux0.IN2
down => Mux0.IN3
dir[0] => Mux0.IN5
dir[1] => Mux0.IN4


|lab8|snakes_and_apples:snake|check_eating_light:center_cell_row[2].center_cell_col[4].right_col
eating <= eating.DB_MAX_OUTPUT_PORT_TYPE
apple => eating.OUTPUTSELECT
left => Mux0.IN0
up => Mux0.IN1
right => Mux0.IN2
down => Mux0.IN3
dir[0] => Mux0.IN5
dir[1] => Mux0.IN4


|lab8|snakes_and_apples:snake|check_eating_light:center_cell_row[2].center_cell_col[5].right_col
eating <= eating.DB_MAX_OUTPUT_PORT_TYPE
apple => eating.OUTPUTSELECT
left => Mux0.IN0
up => Mux0.IN1
right => Mux0.IN2
down => Mux0.IN3
dir[0] => Mux0.IN5
dir[1] => Mux0.IN4


|lab8|snakes_and_apples:snake|check_eating_light:center_cell_row[2].center_cell_col[6].right_col
eating <= eating.DB_MAX_OUTPUT_PORT_TYPE
apple => eating.OUTPUTSELECT
left => Mux0.IN0
up => Mux0.IN1
right => Mux0.IN2
down => Mux0.IN3
dir[0] => Mux0.IN5
dir[1] => Mux0.IN4


|lab8|snakes_and_apples:snake|check_eating_light:center_cell_row[2].center_cell_col[7].right_col
eating <= eating.DB_MAX_OUTPUT_PORT_TYPE
apple => eating.OUTPUTSELECT
left => Mux0.IN0
up => Mux0.IN1
right => Mux0.IN2
down => Mux0.IN3
dir[0] => Mux0.IN5
dir[1] => Mux0.IN4


|lab8|snakes_and_apples:snake|check_eating_light:center_cell_row[2].center_cell_col[8].right_col
eating <= eating.DB_MAX_OUTPUT_PORT_TYPE
apple => eating.OUTPUTSELECT
left => Mux0.IN0
up => Mux0.IN1
right => Mux0.IN2
down => Mux0.IN3
dir[0] => Mux0.IN5
dir[1] => Mux0.IN4


|lab8|snakes_and_apples:snake|check_eating_light:center_cell_row[2].center_cell_col[9].right_col
eating <= eating.DB_MAX_OUTPUT_PORT_TYPE
apple => eating.OUTPUTSELECT
left => Mux0.IN0
up => Mux0.IN1
right => Mux0.IN2
down => Mux0.IN3
dir[0] => Mux0.IN5
dir[1] => Mux0.IN4


|lab8|snakes_and_apples:snake|check_eating_light:center_cell_row[2].center_cell_col[10].right_col
eating <= eating.DB_MAX_OUTPUT_PORT_TYPE
apple => eating.OUTPUTSELECT
left => Mux0.IN0
up => Mux0.IN1
right => Mux0.IN2
down => Mux0.IN3
dir[0] => Mux0.IN5
dir[1] => Mux0.IN4


|lab8|snakes_and_apples:snake|check_eating_light:center_cell_row[2].center_cell_col[11].right_col
eating <= eating.DB_MAX_OUTPUT_PORT_TYPE
apple => eating.OUTPUTSELECT
left => Mux0.IN0
up => Mux0.IN1
right => Mux0.IN2
down => Mux0.IN3
dir[0] => Mux0.IN5
dir[1] => Mux0.IN4


|lab8|snakes_and_apples:snake|check_eating_light:center_cell_row[2].center_cell_col[12].right_col
eating <= eating.DB_MAX_OUTPUT_PORT_TYPE
apple => eating.OUTPUTSELECT
left => Mux0.IN0
up => Mux0.IN1
right => Mux0.IN2
down => Mux0.IN3
dir[0] => Mux0.IN5
dir[1] => Mux0.IN4


|lab8|snakes_and_apples:snake|check_eating_light:center_cell_row[2].center_cell_col[13].right_col
eating <= eating.DB_MAX_OUTPUT_PORT_TYPE
apple => eating.OUTPUTSELECT
left => Mux0.IN0
up => Mux0.IN1
right => Mux0.IN2
down => Mux0.IN3
dir[0] => Mux0.IN5
dir[1] => Mux0.IN4


|lab8|snakes_and_apples:snake|check_eating_light:center_cell_row[2].center_cell_col[14].right_col
eating <= eating.DB_MAX_OUTPUT_PORT_TYPE
apple => eating.OUTPUTSELECT
left => Mux0.IN0
up => Mux0.IN1
right => Mux0.IN2
down => Mux0.IN3
dir[0] => Mux0.IN5
dir[1] => Mux0.IN4


|lab8|snakes_and_apples:snake|check_eating_light:center_cell_row[3].center_cell_col[1].right_col
eating <= eating.DB_MAX_OUTPUT_PORT_TYPE
apple => eating.OUTPUTSELECT
left => Mux0.IN0
up => Mux0.IN1
right => Mux0.IN2
down => Mux0.IN3
dir[0] => Mux0.IN5
dir[1] => Mux0.IN4


|lab8|snakes_and_apples:snake|check_eating_light:center_cell_row[3].center_cell_col[2].right_col
eating <= eating.DB_MAX_OUTPUT_PORT_TYPE
apple => eating.OUTPUTSELECT
left => Mux0.IN0
up => Mux0.IN1
right => Mux0.IN2
down => Mux0.IN3
dir[0] => Mux0.IN5
dir[1] => Mux0.IN4


|lab8|snakes_and_apples:snake|check_eating_light:center_cell_row[3].center_cell_col[3].right_col
eating <= eating.DB_MAX_OUTPUT_PORT_TYPE
apple => eating.OUTPUTSELECT
left => Mux0.IN0
up => Mux0.IN1
right => Mux0.IN2
down => Mux0.IN3
dir[0] => Mux0.IN5
dir[1] => Mux0.IN4


|lab8|snakes_and_apples:snake|check_eating_light:center_cell_row[3].center_cell_col[4].right_col
eating <= eating.DB_MAX_OUTPUT_PORT_TYPE
apple => eating.OUTPUTSELECT
left => Mux0.IN0
up => Mux0.IN1
right => Mux0.IN2
down => Mux0.IN3
dir[0] => Mux0.IN5
dir[1] => Mux0.IN4


|lab8|snakes_and_apples:snake|check_eating_light:center_cell_row[3].center_cell_col[5].right_col
eating <= eating.DB_MAX_OUTPUT_PORT_TYPE
apple => eating.OUTPUTSELECT
left => Mux0.IN0
up => Mux0.IN1
right => Mux0.IN2
down => Mux0.IN3
dir[0] => Mux0.IN5
dir[1] => Mux0.IN4


|lab8|snakes_and_apples:snake|check_eating_light:center_cell_row[3].center_cell_col[6].right_col
eating <= eating.DB_MAX_OUTPUT_PORT_TYPE
apple => eating.OUTPUTSELECT
left => Mux0.IN0
up => Mux0.IN1
right => Mux0.IN2
down => Mux0.IN3
dir[0] => Mux0.IN5
dir[1] => Mux0.IN4


|lab8|snakes_and_apples:snake|check_eating_light:center_cell_row[3].center_cell_col[7].right_col
eating <= eating.DB_MAX_OUTPUT_PORT_TYPE
apple => eating.OUTPUTSELECT
left => Mux0.IN0
up => Mux0.IN1
right => Mux0.IN2
down => Mux0.IN3
dir[0] => Mux0.IN5
dir[1] => Mux0.IN4


|lab8|snakes_and_apples:snake|check_eating_light:center_cell_row[3].center_cell_col[8].right_col
eating <= eating.DB_MAX_OUTPUT_PORT_TYPE
apple => eating.OUTPUTSELECT
left => Mux0.IN0
up => Mux0.IN1
right => Mux0.IN2
down => Mux0.IN3
dir[0] => Mux0.IN5
dir[1] => Mux0.IN4


|lab8|snakes_and_apples:snake|check_eating_light:center_cell_row[3].center_cell_col[9].right_col
eating <= eating.DB_MAX_OUTPUT_PORT_TYPE
apple => eating.OUTPUTSELECT
left => Mux0.IN0
up => Mux0.IN1
right => Mux0.IN2
down => Mux0.IN3
dir[0] => Mux0.IN5
dir[1] => Mux0.IN4


|lab8|snakes_and_apples:snake|check_eating_light:center_cell_row[3].center_cell_col[10].right_col
eating <= eating.DB_MAX_OUTPUT_PORT_TYPE
apple => eating.OUTPUTSELECT
left => Mux0.IN0
up => Mux0.IN1
right => Mux0.IN2
down => Mux0.IN3
dir[0] => Mux0.IN5
dir[1] => Mux0.IN4


|lab8|snakes_and_apples:snake|check_eating_light:center_cell_row[3].center_cell_col[11].right_col
eating <= eating.DB_MAX_OUTPUT_PORT_TYPE
apple => eating.OUTPUTSELECT
left => Mux0.IN0
up => Mux0.IN1
right => Mux0.IN2
down => Mux0.IN3
dir[0] => Mux0.IN5
dir[1] => Mux0.IN4


|lab8|snakes_and_apples:snake|check_eating_light:center_cell_row[3].center_cell_col[12].right_col
eating <= eating.DB_MAX_OUTPUT_PORT_TYPE
apple => eating.OUTPUTSELECT
left => Mux0.IN0
up => Mux0.IN1
right => Mux0.IN2
down => Mux0.IN3
dir[0] => Mux0.IN5
dir[1] => Mux0.IN4


|lab8|snakes_and_apples:snake|check_eating_light:center_cell_row[3].center_cell_col[13].right_col
eating <= eating.DB_MAX_OUTPUT_PORT_TYPE
apple => eating.OUTPUTSELECT
left => Mux0.IN0
up => Mux0.IN1
right => Mux0.IN2
down => Mux0.IN3
dir[0] => Mux0.IN5
dir[1] => Mux0.IN4


|lab8|snakes_and_apples:snake|check_eating_light:center_cell_row[3].center_cell_col[14].right_col
eating <= eating.DB_MAX_OUTPUT_PORT_TYPE
apple => eating.OUTPUTSELECT
left => Mux0.IN0
up => Mux0.IN1
right => Mux0.IN2
down => Mux0.IN3
dir[0] => Mux0.IN5
dir[1] => Mux0.IN4


|lab8|snakes_and_apples:snake|check_eating_light:center_cell_row[4].center_cell_col[1].right_col
eating <= eating.DB_MAX_OUTPUT_PORT_TYPE
apple => eating.OUTPUTSELECT
left => Mux0.IN0
up => Mux0.IN1
right => Mux0.IN2
down => Mux0.IN3
dir[0] => Mux0.IN5
dir[1] => Mux0.IN4


|lab8|snakes_and_apples:snake|check_eating_light:center_cell_row[4].center_cell_col[2].right_col
eating <= eating.DB_MAX_OUTPUT_PORT_TYPE
apple => eating.OUTPUTSELECT
left => Mux0.IN0
up => Mux0.IN1
right => Mux0.IN2
down => Mux0.IN3
dir[0] => Mux0.IN5
dir[1] => Mux0.IN4


|lab8|snakes_and_apples:snake|check_eating_light:center_cell_row[4].center_cell_col[3].right_col
eating <= eating.DB_MAX_OUTPUT_PORT_TYPE
apple => eating.OUTPUTSELECT
left => Mux0.IN0
up => Mux0.IN1
right => Mux0.IN2
down => Mux0.IN3
dir[0] => Mux0.IN5
dir[1] => Mux0.IN4


|lab8|snakes_and_apples:snake|check_eating_light:center_cell_row[4].center_cell_col[4].right_col
eating <= eating.DB_MAX_OUTPUT_PORT_TYPE
apple => eating.OUTPUTSELECT
left => Mux0.IN0
up => Mux0.IN1
right => Mux0.IN2
down => Mux0.IN3
dir[0] => Mux0.IN5
dir[1] => Mux0.IN4


|lab8|snakes_and_apples:snake|check_eating_light:center_cell_row[4].center_cell_col[5].right_col
eating <= eating.DB_MAX_OUTPUT_PORT_TYPE
apple => eating.OUTPUTSELECT
left => Mux0.IN0
up => Mux0.IN1
right => Mux0.IN2
down => Mux0.IN3
dir[0] => Mux0.IN5
dir[1] => Mux0.IN4


|lab8|snakes_and_apples:snake|check_eating_light:center_cell_row[4].center_cell_col[6].right_col
eating <= eating.DB_MAX_OUTPUT_PORT_TYPE
apple => eating.OUTPUTSELECT
left => Mux0.IN0
up => Mux0.IN1
right => Mux0.IN2
down => Mux0.IN3
dir[0] => Mux0.IN5
dir[1] => Mux0.IN4


|lab8|snakes_and_apples:snake|check_eating_light:center_cell_row[4].center_cell_col[7].right_col
eating <= eating.DB_MAX_OUTPUT_PORT_TYPE
apple => eating.OUTPUTSELECT
left => Mux0.IN0
up => Mux0.IN1
right => Mux0.IN2
down => Mux0.IN3
dir[0] => Mux0.IN5
dir[1] => Mux0.IN4


|lab8|snakes_and_apples:snake|check_eating_light:center_cell_row[4].center_cell_col[8].right_col
eating <= eating.DB_MAX_OUTPUT_PORT_TYPE
apple => eating.OUTPUTSELECT
left => Mux0.IN0
up => Mux0.IN1
right => Mux0.IN2
down => Mux0.IN3
dir[0] => Mux0.IN5
dir[1] => Mux0.IN4


|lab8|snakes_and_apples:snake|check_eating_light:center_cell_row[4].center_cell_col[9].right_col
eating <= eating.DB_MAX_OUTPUT_PORT_TYPE
apple => eating.OUTPUTSELECT
left => Mux0.IN0
up => Mux0.IN1
right => Mux0.IN2
down => Mux0.IN3
dir[0] => Mux0.IN5
dir[1] => Mux0.IN4


|lab8|snakes_and_apples:snake|check_eating_light:center_cell_row[4].center_cell_col[10].right_col
eating <= eating.DB_MAX_OUTPUT_PORT_TYPE
apple => eating.OUTPUTSELECT
left => Mux0.IN0
up => Mux0.IN1
right => Mux0.IN2
down => Mux0.IN3
dir[0] => Mux0.IN5
dir[1] => Mux0.IN4


|lab8|snakes_and_apples:snake|check_eating_light:center_cell_row[4].center_cell_col[11].right_col
eating <= eating.DB_MAX_OUTPUT_PORT_TYPE
apple => eating.OUTPUTSELECT
left => Mux0.IN0
up => Mux0.IN1
right => Mux0.IN2
down => Mux0.IN3
dir[0] => Mux0.IN5
dir[1] => Mux0.IN4


|lab8|snakes_and_apples:snake|check_eating_light:center_cell_row[4].center_cell_col[12].right_col
eating <= eating.DB_MAX_OUTPUT_PORT_TYPE
apple => eating.OUTPUTSELECT
left => Mux0.IN0
up => Mux0.IN1
right => Mux0.IN2
down => Mux0.IN3
dir[0] => Mux0.IN5
dir[1] => Mux0.IN4


|lab8|snakes_and_apples:snake|check_eating_light:center_cell_row[4].center_cell_col[13].right_col
eating <= eating.DB_MAX_OUTPUT_PORT_TYPE
apple => eating.OUTPUTSELECT
left => Mux0.IN0
up => Mux0.IN1
right => Mux0.IN2
down => Mux0.IN3
dir[0] => Mux0.IN5
dir[1] => Mux0.IN4


|lab8|snakes_and_apples:snake|check_eating_light:center_cell_row[4].center_cell_col[14].right_col
eating <= eating.DB_MAX_OUTPUT_PORT_TYPE
apple => eating.OUTPUTSELECT
left => Mux0.IN0
up => Mux0.IN1
right => Mux0.IN2
down => Mux0.IN3
dir[0] => Mux0.IN5
dir[1] => Mux0.IN4


|lab8|snakes_and_apples:snake|check_eating_light:center_cell_row[5].center_cell_col[1].right_col
eating <= eating.DB_MAX_OUTPUT_PORT_TYPE
apple => eating.OUTPUTSELECT
left => Mux0.IN0
up => Mux0.IN1
right => Mux0.IN2
down => Mux0.IN3
dir[0] => Mux0.IN5
dir[1] => Mux0.IN4


|lab8|snakes_and_apples:snake|check_eating_light:center_cell_row[5].center_cell_col[2].right_col
eating <= eating.DB_MAX_OUTPUT_PORT_TYPE
apple => eating.OUTPUTSELECT
left => Mux0.IN0
up => Mux0.IN1
right => Mux0.IN2
down => Mux0.IN3
dir[0] => Mux0.IN5
dir[1] => Mux0.IN4


|lab8|snakes_and_apples:snake|check_eating_light:center_cell_row[5].center_cell_col[3].right_col
eating <= eating.DB_MAX_OUTPUT_PORT_TYPE
apple => eating.OUTPUTSELECT
left => Mux0.IN0
up => Mux0.IN1
right => Mux0.IN2
down => Mux0.IN3
dir[0] => Mux0.IN5
dir[1] => Mux0.IN4


|lab8|snakes_and_apples:snake|check_eating_light:center_cell_row[5].center_cell_col[4].right_col
eating <= eating.DB_MAX_OUTPUT_PORT_TYPE
apple => eating.OUTPUTSELECT
left => Mux0.IN0
up => Mux0.IN1
right => Mux0.IN2
down => Mux0.IN3
dir[0] => Mux0.IN5
dir[1] => Mux0.IN4


|lab8|snakes_and_apples:snake|check_eating_light:center_cell_row[5].center_cell_col[5].right_col
eating <= eating.DB_MAX_OUTPUT_PORT_TYPE
apple => eating.OUTPUTSELECT
left => Mux0.IN0
up => Mux0.IN1
right => Mux0.IN2
down => Mux0.IN3
dir[0] => Mux0.IN5
dir[1] => Mux0.IN4


|lab8|snakes_and_apples:snake|check_eating_light:center_cell_row[5].center_cell_col[6].right_col
eating <= eating.DB_MAX_OUTPUT_PORT_TYPE
apple => eating.OUTPUTSELECT
left => Mux0.IN0
up => Mux0.IN1
right => Mux0.IN2
down => Mux0.IN3
dir[0] => Mux0.IN5
dir[1] => Mux0.IN4


|lab8|snakes_and_apples:snake|check_eating_light:center_cell_row[5].center_cell_col[7].right_col
eating <= eating.DB_MAX_OUTPUT_PORT_TYPE
apple => eating.OUTPUTSELECT
left => Mux0.IN0
up => Mux0.IN1
right => Mux0.IN2
down => Mux0.IN3
dir[0] => Mux0.IN5
dir[1] => Mux0.IN4


|lab8|snakes_and_apples:snake|check_eating_light:center_cell_row[5].center_cell_col[8].right_col
eating <= eating.DB_MAX_OUTPUT_PORT_TYPE
apple => eating.OUTPUTSELECT
left => Mux0.IN0
up => Mux0.IN1
right => Mux0.IN2
down => Mux0.IN3
dir[0] => Mux0.IN5
dir[1] => Mux0.IN4


|lab8|snakes_and_apples:snake|check_eating_light:center_cell_row[5].center_cell_col[9].right_col
eating <= eating.DB_MAX_OUTPUT_PORT_TYPE
apple => eating.OUTPUTSELECT
left => Mux0.IN0
up => Mux0.IN1
right => Mux0.IN2
down => Mux0.IN3
dir[0] => Mux0.IN5
dir[1] => Mux0.IN4


|lab8|snakes_and_apples:snake|check_eating_light:center_cell_row[5].center_cell_col[10].right_col
eating <= eating.DB_MAX_OUTPUT_PORT_TYPE
apple => eating.OUTPUTSELECT
left => Mux0.IN0
up => Mux0.IN1
right => Mux0.IN2
down => Mux0.IN3
dir[0] => Mux0.IN5
dir[1] => Mux0.IN4


|lab8|snakes_and_apples:snake|check_eating_light:center_cell_row[5].center_cell_col[11].right_col
eating <= eating.DB_MAX_OUTPUT_PORT_TYPE
apple => eating.OUTPUTSELECT
left => Mux0.IN0
up => Mux0.IN1
right => Mux0.IN2
down => Mux0.IN3
dir[0] => Mux0.IN5
dir[1] => Mux0.IN4


|lab8|snakes_and_apples:snake|check_eating_light:center_cell_row[5].center_cell_col[12].right_col
eating <= eating.DB_MAX_OUTPUT_PORT_TYPE
apple => eating.OUTPUTSELECT
left => Mux0.IN0
up => Mux0.IN1
right => Mux0.IN2
down => Mux0.IN3
dir[0] => Mux0.IN5
dir[1] => Mux0.IN4


|lab8|snakes_and_apples:snake|check_eating_light:center_cell_row[5].center_cell_col[13].right_col
eating <= eating.DB_MAX_OUTPUT_PORT_TYPE
apple => eating.OUTPUTSELECT
left => Mux0.IN0
up => Mux0.IN1
right => Mux0.IN2
down => Mux0.IN3
dir[0] => Mux0.IN5
dir[1] => Mux0.IN4


|lab8|snakes_and_apples:snake|check_eating_light:center_cell_row[5].center_cell_col[14].right_col
eating <= eating.DB_MAX_OUTPUT_PORT_TYPE
apple => eating.OUTPUTSELECT
left => Mux0.IN0
up => Mux0.IN1
right => Mux0.IN2
down => Mux0.IN3
dir[0] => Mux0.IN5
dir[1] => Mux0.IN4


|lab8|snakes_and_apples:snake|check_eating_light:center_cell_row[6].center_cell_col[1].right_col
eating <= eating.DB_MAX_OUTPUT_PORT_TYPE
apple => eating.OUTPUTSELECT
left => Mux0.IN0
up => Mux0.IN1
right => Mux0.IN2
down => Mux0.IN3
dir[0] => Mux0.IN5
dir[1] => Mux0.IN4


|lab8|snakes_and_apples:snake|check_eating_light:center_cell_row[6].center_cell_col[2].right_col
eating <= eating.DB_MAX_OUTPUT_PORT_TYPE
apple => eating.OUTPUTSELECT
left => Mux0.IN0
up => Mux0.IN1
right => Mux0.IN2
down => Mux0.IN3
dir[0] => Mux0.IN5
dir[1] => Mux0.IN4


|lab8|snakes_and_apples:snake|check_eating_light:center_cell_row[6].center_cell_col[3].right_col
eating <= eating.DB_MAX_OUTPUT_PORT_TYPE
apple => eating.OUTPUTSELECT
left => Mux0.IN0
up => Mux0.IN1
right => Mux0.IN2
down => Mux0.IN3
dir[0] => Mux0.IN5
dir[1] => Mux0.IN4


|lab8|snakes_and_apples:snake|check_eating_light:center_cell_row[6].center_cell_col[4].right_col
eating <= eating.DB_MAX_OUTPUT_PORT_TYPE
apple => eating.OUTPUTSELECT
left => Mux0.IN0
up => Mux0.IN1
right => Mux0.IN2
down => Mux0.IN3
dir[0] => Mux0.IN5
dir[1] => Mux0.IN4


|lab8|snakes_and_apples:snake|check_eating_light:center_cell_row[6].center_cell_col[5].right_col
eating <= eating.DB_MAX_OUTPUT_PORT_TYPE
apple => eating.OUTPUTSELECT
left => Mux0.IN0
up => Mux0.IN1
right => Mux0.IN2
down => Mux0.IN3
dir[0] => Mux0.IN5
dir[1] => Mux0.IN4


|lab8|snakes_and_apples:snake|check_eating_light:center_cell_row[6].center_cell_col[6].right_col
eating <= eating.DB_MAX_OUTPUT_PORT_TYPE
apple => eating.OUTPUTSELECT
left => Mux0.IN0
up => Mux0.IN1
right => Mux0.IN2
down => Mux0.IN3
dir[0] => Mux0.IN5
dir[1] => Mux0.IN4


|lab8|snakes_and_apples:snake|check_eating_light:center_cell_row[6].center_cell_col[7].right_col
eating <= eating.DB_MAX_OUTPUT_PORT_TYPE
apple => eating.OUTPUTSELECT
left => Mux0.IN0
up => Mux0.IN1
right => Mux0.IN2
down => Mux0.IN3
dir[0] => Mux0.IN5
dir[1] => Mux0.IN4


|lab8|snakes_and_apples:snake|check_eating_light:center_cell_row[6].center_cell_col[8].right_col
eating <= eating.DB_MAX_OUTPUT_PORT_TYPE
apple => eating.OUTPUTSELECT
left => Mux0.IN0
up => Mux0.IN1
right => Mux0.IN2
down => Mux0.IN3
dir[0] => Mux0.IN5
dir[1] => Mux0.IN4


|lab8|snakes_and_apples:snake|check_eating_light:center_cell_row[6].center_cell_col[9].right_col
eating <= eating.DB_MAX_OUTPUT_PORT_TYPE
apple => eating.OUTPUTSELECT
left => Mux0.IN0
up => Mux0.IN1
right => Mux0.IN2
down => Mux0.IN3
dir[0] => Mux0.IN5
dir[1] => Mux0.IN4


|lab8|snakes_and_apples:snake|check_eating_light:center_cell_row[6].center_cell_col[10].right_col
eating <= eating.DB_MAX_OUTPUT_PORT_TYPE
apple => eating.OUTPUTSELECT
left => Mux0.IN0
up => Mux0.IN1
right => Mux0.IN2
down => Mux0.IN3
dir[0] => Mux0.IN5
dir[1] => Mux0.IN4


|lab8|snakes_and_apples:snake|check_eating_light:center_cell_row[6].center_cell_col[11].right_col
eating <= eating.DB_MAX_OUTPUT_PORT_TYPE
apple => eating.OUTPUTSELECT
left => Mux0.IN0
up => Mux0.IN1
right => Mux0.IN2
down => Mux0.IN3
dir[0] => Mux0.IN5
dir[1] => Mux0.IN4


|lab8|snakes_and_apples:snake|check_eating_light:center_cell_row[6].center_cell_col[12].right_col
eating <= eating.DB_MAX_OUTPUT_PORT_TYPE
apple => eating.OUTPUTSELECT
left => Mux0.IN0
up => Mux0.IN1
right => Mux0.IN2
down => Mux0.IN3
dir[0] => Mux0.IN5
dir[1] => Mux0.IN4


|lab8|snakes_and_apples:snake|check_eating_light:center_cell_row[6].center_cell_col[13].right_col
eating <= eating.DB_MAX_OUTPUT_PORT_TYPE
apple => eating.OUTPUTSELECT
left => Mux0.IN0
up => Mux0.IN1
right => Mux0.IN2
down => Mux0.IN3
dir[0] => Mux0.IN5
dir[1] => Mux0.IN4


|lab8|snakes_and_apples:snake|check_eating_light:center_cell_row[6].center_cell_col[14].right_col
eating <= eating.DB_MAX_OUTPUT_PORT_TYPE
apple => eating.OUTPUTSELECT
left => Mux0.IN0
up => Mux0.IN1
right => Mux0.IN2
down => Mux0.IN3
dir[0] => Mux0.IN5
dir[1] => Mux0.IN4


|lab8|snakes_and_apples:snake|check_eating_light:center_cell_row[7].center_cell_col[1].right_col
eating <= eating.DB_MAX_OUTPUT_PORT_TYPE
apple => eating.OUTPUTSELECT
left => Mux0.IN0
up => Mux0.IN1
right => Mux0.IN2
down => Mux0.IN3
dir[0] => Mux0.IN5
dir[1] => Mux0.IN4


|lab8|snakes_and_apples:snake|check_eating_light:center_cell_row[7].center_cell_col[2].right_col
eating <= eating.DB_MAX_OUTPUT_PORT_TYPE
apple => eating.OUTPUTSELECT
left => Mux0.IN0
up => Mux0.IN1
right => Mux0.IN2
down => Mux0.IN3
dir[0] => Mux0.IN5
dir[1] => Mux0.IN4


|lab8|snakes_and_apples:snake|check_eating_light:center_cell_row[7].center_cell_col[3].right_col
eating <= eating.DB_MAX_OUTPUT_PORT_TYPE
apple => eating.OUTPUTSELECT
left => Mux0.IN0
up => Mux0.IN1
right => Mux0.IN2
down => Mux0.IN3
dir[0] => Mux0.IN5
dir[1] => Mux0.IN4


|lab8|snakes_and_apples:snake|check_eating_light:center_cell_row[7].center_cell_col[4].right_col
eating <= eating.DB_MAX_OUTPUT_PORT_TYPE
apple => eating.OUTPUTSELECT
left => Mux0.IN0
up => Mux0.IN1
right => Mux0.IN2
down => Mux0.IN3
dir[0] => Mux0.IN5
dir[1] => Mux0.IN4


|lab8|snakes_and_apples:snake|check_eating_light:center_cell_row[7].center_cell_col[5].right_col
eating <= eating.DB_MAX_OUTPUT_PORT_TYPE
apple => eating.OUTPUTSELECT
left => Mux0.IN0
up => Mux0.IN1
right => Mux0.IN2
down => Mux0.IN3
dir[0] => Mux0.IN5
dir[1] => Mux0.IN4


|lab8|snakes_and_apples:snake|check_eating_light:center_cell_row[7].center_cell_col[6].right_col
eating <= eating.DB_MAX_OUTPUT_PORT_TYPE
apple => eating.OUTPUTSELECT
left => Mux0.IN0
up => Mux0.IN1
right => Mux0.IN2
down => Mux0.IN3
dir[0] => Mux0.IN5
dir[1] => Mux0.IN4


|lab8|snakes_and_apples:snake|check_eating_light:center_cell_row[7].center_cell_col[7].right_col
eating <= eating.DB_MAX_OUTPUT_PORT_TYPE
apple => eating.OUTPUTSELECT
left => Mux0.IN0
up => Mux0.IN1
right => Mux0.IN2
down => Mux0.IN3
dir[0] => Mux0.IN5
dir[1] => Mux0.IN4


|lab8|snakes_and_apples:snake|check_eating_light:center_cell_row[7].center_cell_col[8].right_col
eating <= eating.DB_MAX_OUTPUT_PORT_TYPE
apple => eating.OUTPUTSELECT
left => Mux0.IN0
up => Mux0.IN1
right => Mux0.IN2
down => Mux0.IN3
dir[0] => Mux0.IN5
dir[1] => Mux0.IN4


|lab8|snakes_and_apples:snake|check_eating_light:center_cell_row[7].center_cell_col[9].right_col
eating <= eating.DB_MAX_OUTPUT_PORT_TYPE
apple => eating.OUTPUTSELECT
left => Mux0.IN0
up => Mux0.IN1
right => Mux0.IN2
down => Mux0.IN3
dir[0] => Mux0.IN5
dir[1] => Mux0.IN4


|lab8|snakes_and_apples:snake|check_eating_light:center_cell_row[7].center_cell_col[10].right_col
eating <= eating.DB_MAX_OUTPUT_PORT_TYPE
apple => eating.OUTPUTSELECT
left => Mux0.IN0
up => Mux0.IN1
right => Mux0.IN2
down => Mux0.IN3
dir[0] => Mux0.IN5
dir[1] => Mux0.IN4


|lab8|snakes_and_apples:snake|check_eating_light:center_cell_row[7].center_cell_col[11].right_col
eating <= eating.DB_MAX_OUTPUT_PORT_TYPE
apple => eating.OUTPUTSELECT
left => Mux0.IN0
up => Mux0.IN1
right => Mux0.IN2
down => Mux0.IN3
dir[0] => Mux0.IN5
dir[1] => Mux0.IN4


|lab8|snakes_and_apples:snake|check_eating_light:center_cell_row[7].center_cell_col[12].right_col
eating <= eating.DB_MAX_OUTPUT_PORT_TYPE
apple => eating.OUTPUTSELECT
left => Mux0.IN0
up => Mux0.IN1
right => Mux0.IN2
down => Mux0.IN3
dir[0] => Mux0.IN5
dir[1] => Mux0.IN4


|lab8|snakes_and_apples:snake|check_eating_light:center_cell_row[7].center_cell_col[13].right_col
eating <= eating.DB_MAX_OUTPUT_PORT_TYPE
apple => eating.OUTPUTSELECT
left => Mux0.IN0
up => Mux0.IN1
right => Mux0.IN2
down => Mux0.IN3
dir[0] => Mux0.IN5
dir[1] => Mux0.IN4


|lab8|snakes_and_apples:snake|check_eating_light:center_cell_row[7].center_cell_col[14].right_col
eating <= eating.DB_MAX_OUTPUT_PORT_TYPE
apple => eating.OUTPUTSELECT
left => Mux0.IN0
up => Mux0.IN1
right => Mux0.IN2
down => Mux0.IN3
dir[0] => Mux0.IN5
dir[1] => Mux0.IN4


|lab8|snakes_and_apples:snake|check_eating_light:center_cell_row[8].center_cell_col[1].right_col
eating <= eating.DB_MAX_OUTPUT_PORT_TYPE
apple => eating.OUTPUTSELECT
left => Mux0.IN0
up => Mux0.IN1
right => Mux0.IN2
down => Mux0.IN3
dir[0] => Mux0.IN5
dir[1] => Mux0.IN4


|lab8|snakes_and_apples:snake|check_eating_light:center_cell_row[8].center_cell_col[2].right_col
eating <= eating.DB_MAX_OUTPUT_PORT_TYPE
apple => eating.OUTPUTSELECT
left => Mux0.IN0
up => Mux0.IN1
right => Mux0.IN2
down => Mux0.IN3
dir[0] => Mux0.IN5
dir[1] => Mux0.IN4


|lab8|snakes_and_apples:snake|check_eating_light:center_cell_row[8].center_cell_col[3].right_col
eating <= eating.DB_MAX_OUTPUT_PORT_TYPE
apple => eating.OUTPUTSELECT
left => Mux0.IN0
up => Mux0.IN1
right => Mux0.IN2
down => Mux0.IN3
dir[0] => Mux0.IN5
dir[1] => Mux0.IN4


|lab8|snakes_and_apples:snake|check_eating_light:center_cell_row[8].center_cell_col[4].right_col
eating <= eating.DB_MAX_OUTPUT_PORT_TYPE
apple => eating.OUTPUTSELECT
left => Mux0.IN0
up => Mux0.IN1
right => Mux0.IN2
down => Mux0.IN3
dir[0] => Mux0.IN5
dir[1] => Mux0.IN4


|lab8|snakes_and_apples:snake|check_eating_light:center_cell_row[8].center_cell_col[5].right_col
eating <= eating.DB_MAX_OUTPUT_PORT_TYPE
apple => eating.OUTPUTSELECT
left => Mux0.IN0
up => Mux0.IN1
right => Mux0.IN2
down => Mux0.IN3
dir[0] => Mux0.IN5
dir[1] => Mux0.IN4


|lab8|snakes_and_apples:snake|check_eating_light:center_cell_row[8].center_cell_col[6].right_col
eating <= eating.DB_MAX_OUTPUT_PORT_TYPE
apple => eating.OUTPUTSELECT
left => Mux0.IN0
up => Mux0.IN1
right => Mux0.IN2
down => Mux0.IN3
dir[0] => Mux0.IN5
dir[1] => Mux0.IN4


|lab8|snakes_and_apples:snake|check_eating_light:center_cell_row[8].center_cell_col[7].right_col
eating <= eating.DB_MAX_OUTPUT_PORT_TYPE
apple => eating.OUTPUTSELECT
left => Mux0.IN0
up => Mux0.IN1
right => Mux0.IN2
down => Mux0.IN3
dir[0] => Mux0.IN5
dir[1] => Mux0.IN4


|lab8|snakes_and_apples:snake|check_eating_light:center_cell_row[8].center_cell_col[8].right_col
eating <= eating.DB_MAX_OUTPUT_PORT_TYPE
apple => eating.OUTPUTSELECT
left => Mux0.IN0
up => Mux0.IN1
right => Mux0.IN2
down => Mux0.IN3
dir[0] => Mux0.IN5
dir[1] => Mux0.IN4


|lab8|snakes_and_apples:snake|check_eating_light:center_cell_row[8].center_cell_col[9].right_col
eating <= eating.DB_MAX_OUTPUT_PORT_TYPE
apple => eating.OUTPUTSELECT
left => Mux0.IN0
up => Mux0.IN1
right => Mux0.IN2
down => Mux0.IN3
dir[0] => Mux0.IN5
dir[1] => Mux0.IN4


|lab8|snakes_and_apples:snake|check_eating_light:center_cell_row[8].center_cell_col[10].right_col
eating <= eating.DB_MAX_OUTPUT_PORT_TYPE
apple => eating.OUTPUTSELECT
left => Mux0.IN0
up => Mux0.IN1
right => Mux0.IN2
down => Mux0.IN3
dir[0] => Mux0.IN5
dir[1] => Mux0.IN4


|lab8|snakes_and_apples:snake|check_eating_light:center_cell_row[8].center_cell_col[11].right_col
eating <= eating.DB_MAX_OUTPUT_PORT_TYPE
apple => eating.OUTPUTSELECT
left => Mux0.IN0
up => Mux0.IN1
right => Mux0.IN2
down => Mux0.IN3
dir[0] => Mux0.IN5
dir[1] => Mux0.IN4


|lab8|snakes_and_apples:snake|check_eating_light:center_cell_row[8].center_cell_col[12].right_col
eating <= eating.DB_MAX_OUTPUT_PORT_TYPE
apple => eating.OUTPUTSELECT
left => Mux0.IN0
up => Mux0.IN1
right => Mux0.IN2
down => Mux0.IN3
dir[0] => Mux0.IN5
dir[1] => Mux0.IN4


|lab8|snakes_and_apples:snake|check_eating_light:center_cell_row[8].center_cell_col[13].right_col
eating <= eating.DB_MAX_OUTPUT_PORT_TYPE
apple => eating.OUTPUTSELECT
left => Mux0.IN0
up => Mux0.IN1
right => Mux0.IN2
down => Mux0.IN3
dir[0] => Mux0.IN5
dir[1] => Mux0.IN4


|lab8|snakes_and_apples:snake|check_eating_light:center_cell_row[8].center_cell_col[14].right_col
eating <= eating.DB_MAX_OUTPUT_PORT_TYPE
apple => eating.OUTPUTSELECT
left => Mux0.IN0
up => Mux0.IN1
right => Mux0.IN2
down => Mux0.IN3
dir[0] => Mux0.IN5
dir[1] => Mux0.IN4


|lab8|snakes_and_apples:snake|check_eating_light:center_cell_row[9].center_cell_col[1].right_col
eating <= eating.DB_MAX_OUTPUT_PORT_TYPE
apple => eating.OUTPUTSELECT
left => Mux0.IN0
up => Mux0.IN1
right => Mux0.IN2
down => Mux0.IN3
dir[0] => Mux0.IN5
dir[1] => Mux0.IN4


|lab8|snakes_and_apples:snake|check_eating_light:center_cell_row[9].center_cell_col[2].right_col
eating <= eating.DB_MAX_OUTPUT_PORT_TYPE
apple => eating.OUTPUTSELECT
left => Mux0.IN0
up => Mux0.IN1
right => Mux0.IN2
down => Mux0.IN3
dir[0] => Mux0.IN5
dir[1] => Mux0.IN4


|lab8|snakes_and_apples:snake|check_eating_light:center_cell_row[9].center_cell_col[3].right_col
eating <= eating.DB_MAX_OUTPUT_PORT_TYPE
apple => eating.OUTPUTSELECT
left => Mux0.IN0
up => Mux0.IN1
right => Mux0.IN2
down => Mux0.IN3
dir[0] => Mux0.IN5
dir[1] => Mux0.IN4


|lab8|snakes_and_apples:snake|check_eating_light:center_cell_row[9].center_cell_col[4].right_col
eating <= eating.DB_MAX_OUTPUT_PORT_TYPE
apple => eating.OUTPUTSELECT
left => Mux0.IN0
up => Mux0.IN1
right => Mux0.IN2
down => Mux0.IN3
dir[0] => Mux0.IN5
dir[1] => Mux0.IN4


|lab8|snakes_and_apples:snake|check_eating_light:center_cell_row[9].center_cell_col[5].right_col
eating <= eating.DB_MAX_OUTPUT_PORT_TYPE
apple => eating.OUTPUTSELECT
left => Mux0.IN0
up => Mux0.IN1
right => Mux0.IN2
down => Mux0.IN3
dir[0] => Mux0.IN5
dir[1] => Mux0.IN4


|lab8|snakes_and_apples:snake|check_eating_light:center_cell_row[9].center_cell_col[6].right_col
eating <= eating.DB_MAX_OUTPUT_PORT_TYPE
apple => eating.OUTPUTSELECT
left => Mux0.IN0
up => Mux0.IN1
right => Mux0.IN2
down => Mux0.IN3
dir[0] => Mux0.IN5
dir[1] => Mux0.IN4


|lab8|snakes_and_apples:snake|check_eating_light:center_cell_row[9].center_cell_col[7].right_col
eating <= eating.DB_MAX_OUTPUT_PORT_TYPE
apple => eating.OUTPUTSELECT
left => Mux0.IN0
up => Mux0.IN1
right => Mux0.IN2
down => Mux0.IN3
dir[0] => Mux0.IN5
dir[1] => Mux0.IN4


|lab8|snakes_and_apples:snake|check_eating_light:center_cell_row[9].center_cell_col[8].right_col
eating <= eating.DB_MAX_OUTPUT_PORT_TYPE
apple => eating.OUTPUTSELECT
left => Mux0.IN0
up => Mux0.IN1
right => Mux0.IN2
down => Mux0.IN3
dir[0] => Mux0.IN5
dir[1] => Mux0.IN4


|lab8|snakes_and_apples:snake|check_eating_light:center_cell_row[9].center_cell_col[9].right_col
eating <= eating.DB_MAX_OUTPUT_PORT_TYPE
apple => eating.OUTPUTSELECT
left => Mux0.IN0
up => Mux0.IN1
right => Mux0.IN2
down => Mux0.IN3
dir[0] => Mux0.IN5
dir[1] => Mux0.IN4


|lab8|snakes_and_apples:snake|check_eating_light:center_cell_row[9].center_cell_col[10].right_col
eating <= eating.DB_MAX_OUTPUT_PORT_TYPE
apple => eating.OUTPUTSELECT
left => Mux0.IN0
up => Mux0.IN1
right => Mux0.IN2
down => Mux0.IN3
dir[0] => Mux0.IN5
dir[1] => Mux0.IN4


|lab8|snakes_and_apples:snake|check_eating_light:center_cell_row[9].center_cell_col[11].right_col
eating <= eating.DB_MAX_OUTPUT_PORT_TYPE
apple => eating.OUTPUTSELECT
left => Mux0.IN0
up => Mux0.IN1
right => Mux0.IN2
down => Mux0.IN3
dir[0] => Mux0.IN5
dir[1] => Mux0.IN4


|lab8|snakes_and_apples:snake|check_eating_light:center_cell_row[9].center_cell_col[12].right_col
eating <= eating.DB_MAX_OUTPUT_PORT_TYPE
apple => eating.OUTPUTSELECT
left => Mux0.IN0
up => Mux0.IN1
right => Mux0.IN2
down => Mux0.IN3
dir[0] => Mux0.IN5
dir[1] => Mux0.IN4


|lab8|snakes_and_apples:snake|check_eating_light:center_cell_row[9].center_cell_col[13].right_col
eating <= eating.DB_MAX_OUTPUT_PORT_TYPE
apple => eating.OUTPUTSELECT
left => Mux0.IN0
up => Mux0.IN1
right => Mux0.IN2
down => Mux0.IN3
dir[0] => Mux0.IN5
dir[1] => Mux0.IN4


|lab8|snakes_and_apples:snake|check_eating_light:center_cell_row[9].center_cell_col[14].right_col
eating <= eating.DB_MAX_OUTPUT_PORT_TYPE
apple => eating.OUTPUTSELECT
left => Mux0.IN0
up => Mux0.IN1
right => Mux0.IN2
down => Mux0.IN3
dir[0] => Mux0.IN5
dir[1] => Mux0.IN4


|lab8|snakes_and_apples:snake|check_eating_light:center_cell_row[10].center_cell_col[1].right_col
eating <= eating.DB_MAX_OUTPUT_PORT_TYPE
apple => eating.OUTPUTSELECT
left => Mux0.IN0
up => Mux0.IN1
right => Mux0.IN2
down => Mux0.IN3
dir[0] => Mux0.IN5
dir[1] => Mux0.IN4


|lab8|snakes_and_apples:snake|check_eating_light:center_cell_row[10].center_cell_col[2].right_col
eating <= eating.DB_MAX_OUTPUT_PORT_TYPE
apple => eating.OUTPUTSELECT
left => Mux0.IN0
up => Mux0.IN1
right => Mux0.IN2
down => Mux0.IN3
dir[0] => Mux0.IN5
dir[1] => Mux0.IN4


|lab8|snakes_and_apples:snake|check_eating_light:center_cell_row[10].center_cell_col[3].right_col
eating <= eating.DB_MAX_OUTPUT_PORT_TYPE
apple => eating.OUTPUTSELECT
left => Mux0.IN0
up => Mux0.IN1
right => Mux0.IN2
down => Mux0.IN3
dir[0] => Mux0.IN5
dir[1] => Mux0.IN4


|lab8|snakes_and_apples:snake|check_eating_light:center_cell_row[10].center_cell_col[4].right_col
eating <= eating.DB_MAX_OUTPUT_PORT_TYPE
apple => eating.OUTPUTSELECT
left => Mux0.IN0
up => Mux0.IN1
right => Mux0.IN2
down => Mux0.IN3
dir[0] => Mux0.IN5
dir[1] => Mux0.IN4


|lab8|snakes_and_apples:snake|check_eating_light:center_cell_row[10].center_cell_col[5].right_col
eating <= eating.DB_MAX_OUTPUT_PORT_TYPE
apple => eating.OUTPUTSELECT
left => Mux0.IN0
up => Mux0.IN1
right => Mux0.IN2
down => Mux0.IN3
dir[0] => Mux0.IN5
dir[1] => Mux0.IN4


|lab8|snakes_and_apples:snake|check_eating_light:center_cell_row[10].center_cell_col[6].right_col
eating <= eating.DB_MAX_OUTPUT_PORT_TYPE
apple => eating.OUTPUTSELECT
left => Mux0.IN0
up => Mux0.IN1
right => Mux0.IN2
down => Mux0.IN3
dir[0] => Mux0.IN5
dir[1] => Mux0.IN4


|lab8|snakes_and_apples:snake|check_eating_light:center_cell_row[10].center_cell_col[7].right_col
eating <= eating.DB_MAX_OUTPUT_PORT_TYPE
apple => eating.OUTPUTSELECT
left => Mux0.IN0
up => Mux0.IN1
right => Mux0.IN2
down => Mux0.IN3
dir[0] => Mux0.IN5
dir[1] => Mux0.IN4


|lab8|snakes_and_apples:snake|check_eating_light:center_cell_row[10].center_cell_col[8].right_col
eating <= eating.DB_MAX_OUTPUT_PORT_TYPE
apple => eating.OUTPUTSELECT
left => Mux0.IN0
up => Mux0.IN1
right => Mux0.IN2
down => Mux0.IN3
dir[0] => Mux0.IN5
dir[1] => Mux0.IN4


|lab8|snakes_and_apples:snake|check_eating_light:center_cell_row[10].center_cell_col[9].right_col
eating <= eating.DB_MAX_OUTPUT_PORT_TYPE
apple => eating.OUTPUTSELECT
left => Mux0.IN0
up => Mux0.IN1
right => Mux0.IN2
down => Mux0.IN3
dir[0] => Mux0.IN5
dir[1] => Mux0.IN4


|lab8|snakes_and_apples:snake|check_eating_light:center_cell_row[10].center_cell_col[10].right_col
eating <= eating.DB_MAX_OUTPUT_PORT_TYPE
apple => eating.OUTPUTSELECT
left => Mux0.IN0
up => Mux0.IN1
right => Mux0.IN2
down => Mux0.IN3
dir[0] => Mux0.IN5
dir[1] => Mux0.IN4


|lab8|snakes_and_apples:snake|check_eating_light:center_cell_row[10].center_cell_col[11].right_col
eating <= eating.DB_MAX_OUTPUT_PORT_TYPE
apple => eating.OUTPUTSELECT
left => Mux0.IN0
up => Mux0.IN1
right => Mux0.IN2
down => Mux0.IN3
dir[0] => Mux0.IN5
dir[1] => Mux0.IN4


|lab8|snakes_and_apples:snake|check_eating_light:center_cell_row[10].center_cell_col[12].right_col
eating <= eating.DB_MAX_OUTPUT_PORT_TYPE
apple => eating.OUTPUTSELECT
left => Mux0.IN0
up => Mux0.IN1
right => Mux0.IN2
down => Mux0.IN3
dir[0] => Mux0.IN5
dir[1] => Mux0.IN4


|lab8|snakes_and_apples:snake|check_eating_light:center_cell_row[10].center_cell_col[13].right_col
eating <= eating.DB_MAX_OUTPUT_PORT_TYPE
apple => eating.OUTPUTSELECT
left => Mux0.IN0
up => Mux0.IN1
right => Mux0.IN2
down => Mux0.IN3
dir[0] => Mux0.IN5
dir[1] => Mux0.IN4


|lab8|snakes_and_apples:snake|check_eating_light:center_cell_row[10].center_cell_col[14].right_col
eating <= eating.DB_MAX_OUTPUT_PORT_TYPE
apple => eating.OUTPUTSELECT
left => Mux0.IN0
up => Mux0.IN1
right => Mux0.IN2
down => Mux0.IN3
dir[0] => Mux0.IN5
dir[1] => Mux0.IN4


|lab8|snakes_and_apples:snake|check_eating_light:center_cell_row[11].center_cell_col[1].right_col
eating <= eating.DB_MAX_OUTPUT_PORT_TYPE
apple => eating.OUTPUTSELECT
left => Mux0.IN0
up => Mux0.IN1
right => Mux0.IN2
down => Mux0.IN3
dir[0] => Mux0.IN5
dir[1] => Mux0.IN4


|lab8|snakes_and_apples:snake|check_eating_light:center_cell_row[11].center_cell_col[2].right_col
eating <= eating.DB_MAX_OUTPUT_PORT_TYPE
apple => eating.OUTPUTSELECT
left => Mux0.IN0
up => Mux0.IN1
right => Mux0.IN2
down => Mux0.IN3
dir[0] => Mux0.IN5
dir[1] => Mux0.IN4


|lab8|snakes_and_apples:snake|check_eating_light:center_cell_row[11].center_cell_col[3].right_col
eating <= eating.DB_MAX_OUTPUT_PORT_TYPE
apple => eating.OUTPUTSELECT
left => Mux0.IN0
up => Mux0.IN1
right => Mux0.IN2
down => Mux0.IN3
dir[0] => Mux0.IN5
dir[1] => Mux0.IN4


|lab8|snakes_and_apples:snake|check_eating_light:center_cell_row[11].center_cell_col[4].right_col
eating <= eating.DB_MAX_OUTPUT_PORT_TYPE
apple => eating.OUTPUTSELECT
left => Mux0.IN0
up => Mux0.IN1
right => Mux0.IN2
down => Mux0.IN3
dir[0] => Mux0.IN5
dir[1] => Mux0.IN4


|lab8|snakes_and_apples:snake|check_eating_light:center_cell_row[11].center_cell_col[5].right_col
eating <= eating.DB_MAX_OUTPUT_PORT_TYPE
apple => eating.OUTPUTSELECT
left => Mux0.IN0
up => Mux0.IN1
right => Mux0.IN2
down => Mux0.IN3
dir[0] => Mux0.IN5
dir[1] => Mux0.IN4


|lab8|snakes_and_apples:snake|check_eating_light:center_cell_row[11].center_cell_col[6].right_col
eating <= eating.DB_MAX_OUTPUT_PORT_TYPE
apple => eating.OUTPUTSELECT
left => Mux0.IN0
up => Mux0.IN1
right => Mux0.IN2
down => Mux0.IN3
dir[0] => Mux0.IN5
dir[1] => Mux0.IN4


|lab8|snakes_and_apples:snake|check_eating_light:center_cell_row[11].center_cell_col[7].right_col
eating <= eating.DB_MAX_OUTPUT_PORT_TYPE
apple => eating.OUTPUTSELECT
left => Mux0.IN0
up => Mux0.IN1
right => Mux0.IN2
down => Mux0.IN3
dir[0] => Mux0.IN5
dir[1] => Mux0.IN4


|lab8|snakes_and_apples:snake|check_eating_light:center_cell_row[11].center_cell_col[8].right_col
eating <= eating.DB_MAX_OUTPUT_PORT_TYPE
apple => eating.OUTPUTSELECT
left => Mux0.IN0
up => Mux0.IN1
right => Mux0.IN2
down => Mux0.IN3
dir[0] => Mux0.IN5
dir[1] => Mux0.IN4


|lab8|snakes_and_apples:snake|check_eating_light:center_cell_row[11].center_cell_col[9].right_col
eating <= eating.DB_MAX_OUTPUT_PORT_TYPE
apple => eating.OUTPUTSELECT
left => Mux0.IN0
up => Mux0.IN1
right => Mux0.IN2
down => Mux0.IN3
dir[0] => Mux0.IN5
dir[1] => Mux0.IN4


|lab8|snakes_and_apples:snake|check_eating_light:center_cell_row[11].center_cell_col[10].right_col
eating <= eating.DB_MAX_OUTPUT_PORT_TYPE
apple => eating.OUTPUTSELECT
left => Mux0.IN0
up => Mux0.IN1
right => Mux0.IN2
down => Mux0.IN3
dir[0] => Mux0.IN5
dir[1] => Mux0.IN4


|lab8|snakes_and_apples:snake|check_eating_light:center_cell_row[11].center_cell_col[11].right_col
eating <= eating.DB_MAX_OUTPUT_PORT_TYPE
apple => eating.OUTPUTSELECT
left => Mux0.IN0
up => Mux0.IN1
right => Mux0.IN2
down => Mux0.IN3
dir[0] => Mux0.IN5
dir[1] => Mux0.IN4


|lab8|snakes_and_apples:snake|check_eating_light:center_cell_row[11].center_cell_col[12].right_col
eating <= eating.DB_MAX_OUTPUT_PORT_TYPE
apple => eating.OUTPUTSELECT
left => Mux0.IN0
up => Mux0.IN1
right => Mux0.IN2
down => Mux0.IN3
dir[0] => Mux0.IN5
dir[1] => Mux0.IN4


|lab8|snakes_and_apples:snake|check_eating_light:center_cell_row[11].center_cell_col[13].right_col
eating <= eating.DB_MAX_OUTPUT_PORT_TYPE
apple => eating.OUTPUTSELECT
left => Mux0.IN0
up => Mux0.IN1
right => Mux0.IN2
down => Mux0.IN3
dir[0] => Mux0.IN5
dir[1] => Mux0.IN4


|lab8|snakes_and_apples:snake|check_eating_light:center_cell_row[11].center_cell_col[14].right_col
eating <= eating.DB_MAX_OUTPUT_PORT_TYPE
apple => eating.OUTPUTSELECT
left => Mux0.IN0
up => Mux0.IN1
right => Mux0.IN2
down => Mux0.IN3
dir[0] => Mux0.IN5
dir[1] => Mux0.IN4


|lab8|snakes_and_apples:snake|check_eating_light:center_cell_row[12].center_cell_col[1].right_col
eating <= eating.DB_MAX_OUTPUT_PORT_TYPE
apple => eating.OUTPUTSELECT
left => Mux0.IN0
up => Mux0.IN1
right => Mux0.IN2
down => Mux0.IN3
dir[0] => Mux0.IN5
dir[1] => Mux0.IN4


|lab8|snakes_and_apples:snake|check_eating_light:center_cell_row[12].center_cell_col[2].right_col
eating <= eating.DB_MAX_OUTPUT_PORT_TYPE
apple => eating.OUTPUTSELECT
left => Mux0.IN0
up => Mux0.IN1
right => Mux0.IN2
down => Mux0.IN3
dir[0] => Mux0.IN5
dir[1] => Mux0.IN4


|lab8|snakes_and_apples:snake|check_eating_light:center_cell_row[12].center_cell_col[3].right_col
eating <= eating.DB_MAX_OUTPUT_PORT_TYPE
apple => eating.OUTPUTSELECT
left => Mux0.IN0
up => Mux0.IN1
right => Mux0.IN2
down => Mux0.IN3
dir[0] => Mux0.IN5
dir[1] => Mux0.IN4


|lab8|snakes_and_apples:snake|check_eating_light:center_cell_row[12].center_cell_col[4].right_col
eating <= eating.DB_MAX_OUTPUT_PORT_TYPE
apple => eating.OUTPUTSELECT
left => Mux0.IN0
up => Mux0.IN1
right => Mux0.IN2
down => Mux0.IN3
dir[0] => Mux0.IN5
dir[1] => Mux0.IN4


|lab8|snakes_and_apples:snake|check_eating_light:center_cell_row[12].center_cell_col[5].right_col
eating <= eating.DB_MAX_OUTPUT_PORT_TYPE
apple => eating.OUTPUTSELECT
left => Mux0.IN0
up => Mux0.IN1
right => Mux0.IN2
down => Mux0.IN3
dir[0] => Mux0.IN5
dir[1] => Mux0.IN4


|lab8|snakes_and_apples:snake|check_eating_light:center_cell_row[12].center_cell_col[6].right_col
eating <= eating.DB_MAX_OUTPUT_PORT_TYPE
apple => eating.OUTPUTSELECT
left => Mux0.IN0
up => Mux0.IN1
right => Mux0.IN2
down => Mux0.IN3
dir[0] => Mux0.IN5
dir[1] => Mux0.IN4


|lab8|snakes_and_apples:snake|check_eating_light:center_cell_row[12].center_cell_col[7].right_col
eating <= eating.DB_MAX_OUTPUT_PORT_TYPE
apple => eating.OUTPUTSELECT
left => Mux0.IN0
up => Mux0.IN1
right => Mux0.IN2
down => Mux0.IN3
dir[0] => Mux0.IN5
dir[1] => Mux0.IN4


|lab8|snakes_and_apples:snake|check_eating_light:center_cell_row[12].center_cell_col[8].right_col
eating <= eating.DB_MAX_OUTPUT_PORT_TYPE
apple => eating.OUTPUTSELECT
left => Mux0.IN0
up => Mux0.IN1
right => Mux0.IN2
down => Mux0.IN3
dir[0] => Mux0.IN5
dir[1] => Mux0.IN4


|lab8|snakes_and_apples:snake|check_eating_light:center_cell_row[12].center_cell_col[9].right_col
eating <= eating.DB_MAX_OUTPUT_PORT_TYPE
apple => eating.OUTPUTSELECT
left => Mux0.IN0
up => Mux0.IN1
right => Mux0.IN2
down => Mux0.IN3
dir[0] => Mux0.IN5
dir[1] => Mux0.IN4


|lab8|snakes_and_apples:snake|check_eating_light:center_cell_row[12].center_cell_col[10].right_col
eating <= eating.DB_MAX_OUTPUT_PORT_TYPE
apple => eating.OUTPUTSELECT
left => Mux0.IN0
up => Mux0.IN1
right => Mux0.IN2
down => Mux0.IN3
dir[0] => Mux0.IN5
dir[1] => Mux0.IN4


|lab8|snakes_and_apples:snake|check_eating_light:center_cell_row[12].center_cell_col[11].right_col
eating <= eating.DB_MAX_OUTPUT_PORT_TYPE
apple => eating.OUTPUTSELECT
left => Mux0.IN0
up => Mux0.IN1
right => Mux0.IN2
down => Mux0.IN3
dir[0] => Mux0.IN5
dir[1] => Mux0.IN4


|lab8|snakes_and_apples:snake|check_eating_light:center_cell_row[12].center_cell_col[12].right_col
eating <= eating.DB_MAX_OUTPUT_PORT_TYPE
apple => eating.OUTPUTSELECT
left => Mux0.IN0
up => Mux0.IN1
right => Mux0.IN2
down => Mux0.IN3
dir[0] => Mux0.IN5
dir[1] => Mux0.IN4


|lab8|snakes_and_apples:snake|check_eating_light:center_cell_row[12].center_cell_col[13].right_col
eating <= eating.DB_MAX_OUTPUT_PORT_TYPE
apple => eating.OUTPUTSELECT
left => Mux0.IN0
up => Mux0.IN1
right => Mux0.IN2
down => Mux0.IN3
dir[0] => Mux0.IN5
dir[1] => Mux0.IN4


|lab8|snakes_and_apples:snake|check_eating_light:center_cell_row[12].center_cell_col[14].right_col
eating <= eating.DB_MAX_OUTPUT_PORT_TYPE
apple => eating.OUTPUTSELECT
left => Mux0.IN0
up => Mux0.IN1
right => Mux0.IN2
down => Mux0.IN3
dir[0] => Mux0.IN5
dir[1] => Mux0.IN4


|lab8|snakes_and_apples:snake|check_eating_light:center_cell_row[13].center_cell_col[1].right_col
eating <= eating.DB_MAX_OUTPUT_PORT_TYPE
apple => eating.OUTPUTSELECT
left => Mux0.IN0
up => Mux0.IN1
right => Mux0.IN2
down => Mux0.IN3
dir[0] => Mux0.IN5
dir[1] => Mux0.IN4


|lab8|snakes_and_apples:snake|check_eating_light:center_cell_row[13].center_cell_col[2].right_col
eating <= eating.DB_MAX_OUTPUT_PORT_TYPE
apple => eating.OUTPUTSELECT
left => Mux0.IN0
up => Mux0.IN1
right => Mux0.IN2
down => Mux0.IN3
dir[0] => Mux0.IN5
dir[1] => Mux0.IN4


|lab8|snakes_and_apples:snake|check_eating_light:center_cell_row[13].center_cell_col[3].right_col
eating <= eating.DB_MAX_OUTPUT_PORT_TYPE
apple => eating.OUTPUTSELECT
left => Mux0.IN0
up => Mux0.IN1
right => Mux0.IN2
down => Mux0.IN3
dir[0] => Mux0.IN5
dir[1] => Mux0.IN4


|lab8|snakes_and_apples:snake|check_eating_light:center_cell_row[13].center_cell_col[4].right_col
eating <= eating.DB_MAX_OUTPUT_PORT_TYPE
apple => eating.OUTPUTSELECT
left => Mux0.IN0
up => Mux0.IN1
right => Mux0.IN2
down => Mux0.IN3
dir[0] => Mux0.IN5
dir[1] => Mux0.IN4


|lab8|snakes_and_apples:snake|check_eating_light:center_cell_row[13].center_cell_col[5].right_col
eating <= eating.DB_MAX_OUTPUT_PORT_TYPE
apple => eating.OUTPUTSELECT
left => Mux0.IN0
up => Mux0.IN1
right => Mux0.IN2
down => Mux0.IN3
dir[0] => Mux0.IN5
dir[1] => Mux0.IN4


|lab8|snakes_and_apples:snake|check_eating_light:center_cell_row[13].center_cell_col[6].right_col
eating <= eating.DB_MAX_OUTPUT_PORT_TYPE
apple => eating.OUTPUTSELECT
left => Mux0.IN0
up => Mux0.IN1
right => Mux0.IN2
down => Mux0.IN3
dir[0] => Mux0.IN5
dir[1] => Mux0.IN4


|lab8|snakes_and_apples:snake|check_eating_light:center_cell_row[13].center_cell_col[7].right_col
eating <= eating.DB_MAX_OUTPUT_PORT_TYPE
apple => eating.OUTPUTSELECT
left => Mux0.IN0
up => Mux0.IN1
right => Mux0.IN2
down => Mux0.IN3
dir[0] => Mux0.IN5
dir[1] => Mux0.IN4


|lab8|snakes_and_apples:snake|check_eating_light:center_cell_row[13].center_cell_col[8].right_col
eating <= eating.DB_MAX_OUTPUT_PORT_TYPE
apple => eating.OUTPUTSELECT
left => Mux0.IN0
up => Mux0.IN1
right => Mux0.IN2
down => Mux0.IN3
dir[0] => Mux0.IN5
dir[1] => Mux0.IN4


|lab8|snakes_and_apples:snake|check_eating_light:center_cell_row[13].center_cell_col[9].right_col
eating <= eating.DB_MAX_OUTPUT_PORT_TYPE
apple => eating.OUTPUTSELECT
left => Mux0.IN0
up => Mux0.IN1
right => Mux0.IN2
down => Mux0.IN3
dir[0] => Mux0.IN5
dir[1] => Mux0.IN4


|lab8|snakes_and_apples:snake|check_eating_light:center_cell_row[13].center_cell_col[10].right_col
eating <= eating.DB_MAX_OUTPUT_PORT_TYPE
apple => eating.OUTPUTSELECT
left => Mux0.IN0
up => Mux0.IN1
right => Mux0.IN2
down => Mux0.IN3
dir[0] => Mux0.IN5
dir[1] => Mux0.IN4


|lab8|snakes_and_apples:snake|check_eating_light:center_cell_row[13].center_cell_col[11].right_col
eating <= eating.DB_MAX_OUTPUT_PORT_TYPE
apple => eating.OUTPUTSELECT
left => Mux0.IN0
up => Mux0.IN1
right => Mux0.IN2
down => Mux0.IN3
dir[0] => Mux0.IN5
dir[1] => Mux0.IN4


|lab8|snakes_and_apples:snake|check_eating_light:center_cell_row[13].center_cell_col[12].right_col
eating <= eating.DB_MAX_OUTPUT_PORT_TYPE
apple => eating.OUTPUTSELECT
left => Mux0.IN0
up => Mux0.IN1
right => Mux0.IN2
down => Mux0.IN3
dir[0] => Mux0.IN5
dir[1] => Mux0.IN4


|lab8|snakes_and_apples:snake|check_eating_light:center_cell_row[13].center_cell_col[13].right_col
eating <= eating.DB_MAX_OUTPUT_PORT_TYPE
apple => eating.OUTPUTSELECT
left => Mux0.IN0
up => Mux0.IN1
right => Mux0.IN2
down => Mux0.IN3
dir[0] => Mux0.IN5
dir[1] => Mux0.IN4


|lab8|snakes_and_apples:snake|check_eating_light:center_cell_row[13].center_cell_col[14].right_col
eating <= eating.DB_MAX_OUTPUT_PORT_TYPE
apple => eating.OUTPUTSELECT
left => Mux0.IN0
up => Mux0.IN1
right => Mux0.IN2
down => Mux0.IN3
dir[0] => Mux0.IN5
dir[1] => Mux0.IN4


|lab8|snakes_and_apples:snake|check_eating_light:center_cell_row[14].center_cell_col[1].right_col
eating <= eating.DB_MAX_OUTPUT_PORT_TYPE
apple => eating.OUTPUTSELECT
left => Mux0.IN0
up => Mux0.IN1
right => Mux0.IN2
down => Mux0.IN3
dir[0] => Mux0.IN5
dir[1] => Mux0.IN4


|lab8|snakes_and_apples:snake|check_eating_light:center_cell_row[14].center_cell_col[2].right_col
eating <= eating.DB_MAX_OUTPUT_PORT_TYPE
apple => eating.OUTPUTSELECT
left => Mux0.IN0
up => Mux0.IN1
right => Mux0.IN2
down => Mux0.IN3
dir[0] => Mux0.IN5
dir[1] => Mux0.IN4


|lab8|snakes_and_apples:snake|check_eating_light:center_cell_row[14].center_cell_col[3].right_col
eating <= eating.DB_MAX_OUTPUT_PORT_TYPE
apple => eating.OUTPUTSELECT
left => Mux0.IN0
up => Mux0.IN1
right => Mux0.IN2
down => Mux0.IN3
dir[0] => Mux0.IN5
dir[1] => Mux0.IN4


|lab8|snakes_and_apples:snake|check_eating_light:center_cell_row[14].center_cell_col[4].right_col
eating <= eating.DB_MAX_OUTPUT_PORT_TYPE
apple => eating.OUTPUTSELECT
left => Mux0.IN0
up => Mux0.IN1
right => Mux0.IN2
down => Mux0.IN3
dir[0] => Mux0.IN5
dir[1] => Mux0.IN4


|lab8|snakes_and_apples:snake|check_eating_light:center_cell_row[14].center_cell_col[5].right_col
eating <= eating.DB_MAX_OUTPUT_PORT_TYPE
apple => eating.OUTPUTSELECT
left => Mux0.IN0
up => Mux0.IN1
right => Mux0.IN2
down => Mux0.IN3
dir[0] => Mux0.IN5
dir[1] => Mux0.IN4


|lab8|snakes_and_apples:snake|check_eating_light:center_cell_row[14].center_cell_col[6].right_col
eating <= eating.DB_MAX_OUTPUT_PORT_TYPE
apple => eating.OUTPUTSELECT
left => Mux0.IN0
up => Mux0.IN1
right => Mux0.IN2
down => Mux0.IN3
dir[0] => Mux0.IN5
dir[1] => Mux0.IN4


|lab8|snakes_and_apples:snake|check_eating_light:center_cell_row[14].center_cell_col[7].right_col
eating <= eating.DB_MAX_OUTPUT_PORT_TYPE
apple => eating.OUTPUTSELECT
left => Mux0.IN0
up => Mux0.IN1
right => Mux0.IN2
down => Mux0.IN3
dir[0] => Mux0.IN5
dir[1] => Mux0.IN4


|lab8|snakes_and_apples:snake|check_eating_light:center_cell_row[14].center_cell_col[8].right_col
eating <= eating.DB_MAX_OUTPUT_PORT_TYPE
apple => eating.OUTPUTSELECT
left => Mux0.IN0
up => Mux0.IN1
right => Mux0.IN2
down => Mux0.IN3
dir[0] => Mux0.IN5
dir[1] => Mux0.IN4


|lab8|snakes_and_apples:snake|check_eating_light:center_cell_row[14].center_cell_col[9].right_col
eating <= eating.DB_MAX_OUTPUT_PORT_TYPE
apple => eating.OUTPUTSELECT
left => Mux0.IN0
up => Mux0.IN1
right => Mux0.IN2
down => Mux0.IN3
dir[0] => Mux0.IN5
dir[1] => Mux0.IN4


|lab8|snakes_and_apples:snake|check_eating_light:center_cell_row[14].center_cell_col[10].right_col
eating <= eating.DB_MAX_OUTPUT_PORT_TYPE
apple => eating.OUTPUTSELECT
left => Mux0.IN0
up => Mux0.IN1
right => Mux0.IN2
down => Mux0.IN3
dir[0] => Mux0.IN5
dir[1] => Mux0.IN4


|lab8|snakes_and_apples:snake|check_eating_light:center_cell_row[14].center_cell_col[11].right_col
eating <= eating.DB_MAX_OUTPUT_PORT_TYPE
apple => eating.OUTPUTSELECT
left => Mux0.IN0
up => Mux0.IN1
right => Mux0.IN2
down => Mux0.IN3
dir[0] => Mux0.IN5
dir[1] => Mux0.IN4


|lab8|snakes_and_apples:snake|check_eating_light:center_cell_row[14].center_cell_col[12].right_col
eating <= eating.DB_MAX_OUTPUT_PORT_TYPE
apple => eating.OUTPUTSELECT
left => Mux0.IN0
up => Mux0.IN1
right => Mux0.IN2
down => Mux0.IN3
dir[0] => Mux0.IN5
dir[1] => Mux0.IN4


|lab8|snakes_and_apples:snake|check_eating_light:center_cell_row[14].center_cell_col[13].right_col
eating <= eating.DB_MAX_OUTPUT_PORT_TYPE
apple => eating.OUTPUTSELECT
left => Mux0.IN0
up => Mux0.IN1
right => Mux0.IN2
down => Mux0.IN3
dir[0] => Mux0.IN5
dir[1] => Mux0.IN4


|lab8|snakes_and_apples:snake|check_eating_light:center_cell_row[14].center_cell_col[14].right_col
eating <= eating.DB_MAX_OUTPUT_PORT_TYPE
apple => eating.OUTPUTSELECT
left => Mux0.IN0
up => Mux0.IN1
right => Mux0.IN2
down => Mux0.IN3
dir[0] => Mux0.IN5
dir[1] => Mux0.IN4


|lab8|triple_seg7:hex_display
HEX0[0] <= Ram0.DATAOUT
HEX0[1] <= Ram0.DATAOUT1
HEX0[2] <= Ram0.DATAOUT2
HEX0[3] <= Ram0.DATAOUT3
HEX0[4] <= Ram0.DATAOUT4
HEX0[5] <= Ram0.DATAOUT5
HEX0[6] <= Ram0.DATAOUT6
HEX1[0] <= Ram1.DATAOUT
HEX1[1] <= Ram1.DATAOUT1
HEX1[2] <= Ram1.DATAOUT2
HEX1[3] <= Ram1.DATAOUT3
HEX1[4] <= Ram1.DATAOUT4
HEX1[5] <= Ram1.DATAOUT5
HEX1[6] <= Ram1.DATAOUT6
HEX2[0] <= Ram2.DATAOUT
HEX2[1] <= Ram2.DATAOUT1
HEX2[2] <= Ram2.DATAOUT2
HEX2[3] <= Ram2.DATAOUT3
HEX2[4] <= Ram2.DATAOUT4
HEX2[5] <= Ram2.DATAOUT5
HEX2[6] <= Ram2.DATAOUT6
number[0] => Ram0.RADDR
number[0] => Ram1.RADDR
number[0] => Ram2.RADDR
number[1] => Ram0.RADDR1
number[1] => Ram1.RADDR1
number[1] => Ram2.RADDR1
number[2] => Ram0.RADDR2
number[2] => Ram1.RADDR2
number[2] => Ram2.RADDR2
number[3] => Ram0.RADDR3
number[3] => Ram1.RADDR3
number[3] => Ram2.RADDR3
number[4] => Ram0.RADDR4
number[4] => Ram1.RADDR4
number[4] => Ram2.RADDR4
number[5] => Ram0.RADDR5
number[5] => Ram1.RADDR5
number[5] => Ram2.RADDR5
number[6] => Ram0.RADDR6
number[6] => Ram1.RADDR6
number[6] => Ram2.RADDR6
number[7] => Ram0.RADDR7
number[7] => Ram1.RADDR7
number[7] => Ram2.RADDR7


|lab8|lfsr_8:rand_gen
out[0] <= out[0]~reg0.DB_MAX_OUTPUT_PORT_TYPE
out[1] <= out[1]~reg0.DB_MAX_OUTPUT_PORT_TYPE
out[2] <= out[2]~reg0.DB_MAX_OUTPUT_PORT_TYPE
out[3] <= out[3]~reg0.DB_MAX_OUTPUT_PORT_TYPE
out[4] <= out[4]~reg0.DB_MAX_OUTPUT_PORT_TYPE
out[5] <= out[5]~reg0.DB_MAX_OUTPUT_PORT_TYPE
out[6] <= out[6]~reg0.DB_MAX_OUTPUT_PORT_TYPE
out[7] <= out[7]~reg0.DB_MAX_OUTPUT_PORT_TYPE
clk => out[0]~reg0.CLK
clk => out[1]~reg0.CLK
clk => out[2]~reg0.CLK
clk => out[3]~reg0.CLK
clk => out[4]~reg0.CLK
clk => out[5]~reg0.CLK
clk => out[6]~reg0.CLK
clk => out[7]~reg0.CLK
reset => out.OUTPUTSELECT
reset => out.OUTPUTSELECT
reset => out.OUTPUTSELECT
reset => out.OUTPUTSELECT
reset => out.OUTPUTSELECT
reset => out.OUTPUTSELECT
reset => out.OUTPUTSELECT
reset => out.OUTPUTSELECT


|lab8|apple_generator:gen
RedPixels[0][0] <= RedPixels[0][0]~reg0.DB_MAX_OUTPUT_PORT_TYPE
RedPixels[0][1] <= RedPixels[0][1]~reg0.DB_MAX_OUTPUT_PORT_TYPE
RedPixels[0][2] <= RedPixels[0][2]~reg0.DB_MAX_OUTPUT_PORT_TYPE
RedPixels[0][3] <= RedPixels[0][3]~reg0.DB_MAX_OUTPUT_PORT_TYPE
RedPixels[0][4] <= RedPixels[0][4]~reg0.DB_MAX_OUTPUT_PORT_TYPE
RedPixels[0][5] <= RedPixels[0][5]~reg0.DB_MAX_OUTPUT_PORT_TYPE
RedPixels[0][6] <= RedPixels[0][6]~reg0.DB_MAX_OUTPUT_PORT_TYPE
RedPixels[0][7] <= RedPixels[0][7]~reg0.DB_MAX_OUTPUT_PORT_TYPE
RedPixels[0][8] <= RedPixels[0][8]~reg0.DB_MAX_OUTPUT_PORT_TYPE
RedPixels[0][9] <= RedPixels[0][9]~reg0.DB_MAX_OUTPUT_PORT_TYPE
RedPixels[0][10] <= RedPixels[0][10]~reg0.DB_MAX_OUTPUT_PORT_TYPE
RedPixels[0][11] <= RedPixels[0][11]~reg0.DB_MAX_OUTPUT_PORT_TYPE
RedPixels[0][12] <= RedPixels[0][12]~reg0.DB_MAX_OUTPUT_PORT_TYPE
RedPixels[0][13] <= RedPixels[0][13]~reg0.DB_MAX_OUTPUT_PORT_TYPE
RedPixels[0][14] <= RedPixels[0][14]~reg0.DB_MAX_OUTPUT_PORT_TYPE
RedPixels[0][15] <= RedPixels[0][15]~reg0.DB_MAX_OUTPUT_PORT_TYPE
RedPixels[1][0] <= RedPixels[1][0]~reg0.DB_MAX_OUTPUT_PORT_TYPE
RedPixels[1][1] <= RedPixels[1][1]~reg0.DB_MAX_OUTPUT_PORT_TYPE
RedPixels[1][2] <= RedPixels[1][2]~reg0.DB_MAX_OUTPUT_PORT_TYPE
RedPixels[1][3] <= RedPixels[1][3]~reg0.DB_MAX_OUTPUT_PORT_TYPE
RedPixels[1][4] <= RedPixels[1][4]~reg0.DB_MAX_OUTPUT_PORT_TYPE
RedPixels[1][5] <= RedPixels[1][5]~reg0.DB_MAX_OUTPUT_PORT_TYPE
RedPixels[1][6] <= RedPixels[1][6]~reg0.DB_MAX_OUTPUT_PORT_TYPE
RedPixels[1][7] <= RedPixels[1][7]~reg0.DB_MAX_OUTPUT_PORT_TYPE
RedPixels[1][8] <= RedPixels[1][8]~reg0.DB_MAX_OUTPUT_PORT_TYPE
RedPixels[1][9] <= RedPixels[1][9]~reg0.DB_MAX_OUTPUT_PORT_TYPE
RedPixels[1][10] <= RedPixels[1][10]~reg0.DB_MAX_OUTPUT_PORT_TYPE
RedPixels[1][11] <= RedPixels[1][11]~reg0.DB_MAX_OUTPUT_PORT_TYPE
RedPixels[1][12] <= RedPixels[1][12]~reg0.DB_MAX_OUTPUT_PORT_TYPE
RedPixels[1][13] <= RedPixels[1][13]~reg0.DB_MAX_OUTPUT_PORT_TYPE
RedPixels[1][14] <= RedPixels[1][14]~reg0.DB_MAX_OUTPUT_PORT_TYPE
RedPixels[1][15] <= RedPixels[1][15]~reg0.DB_MAX_OUTPUT_PORT_TYPE
RedPixels[2][0] <= RedPixels[2][0]~reg0.DB_MAX_OUTPUT_PORT_TYPE
RedPixels[2][1] <= RedPixels[2][1]~reg0.DB_MAX_OUTPUT_PORT_TYPE
RedPixels[2][2] <= RedPixels[2][2]~reg0.DB_MAX_OUTPUT_PORT_TYPE
RedPixels[2][3] <= RedPixels[2][3]~reg0.DB_MAX_OUTPUT_PORT_TYPE
RedPixels[2][4] <= RedPixels[2][4]~reg0.DB_MAX_OUTPUT_PORT_TYPE
RedPixels[2][5] <= RedPixels[2][5]~reg0.DB_MAX_OUTPUT_PORT_TYPE
RedPixels[2][6] <= RedPixels[2][6]~reg0.DB_MAX_OUTPUT_PORT_TYPE
RedPixels[2][7] <= RedPixels[2][7]~reg0.DB_MAX_OUTPUT_PORT_TYPE
RedPixels[2][8] <= RedPixels[2][8]~reg0.DB_MAX_OUTPUT_PORT_TYPE
RedPixels[2][9] <= RedPixels[2][9]~reg0.DB_MAX_OUTPUT_PORT_TYPE
RedPixels[2][10] <= RedPixels[2][10]~reg0.DB_MAX_OUTPUT_PORT_TYPE
RedPixels[2][11] <= RedPixels[2][11]~reg0.DB_MAX_OUTPUT_PORT_TYPE
RedPixels[2][12] <= RedPixels[2][12]~reg0.DB_MAX_OUTPUT_PORT_TYPE
RedPixels[2][13] <= RedPixels[2][13]~reg0.DB_MAX_OUTPUT_PORT_TYPE
RedPixels[2][14] <= RedPixels[2][14]~reg0.DB_MAX_OUTPUT_PORT_TYPE
RedPixels[2][15] <= RedPixels[2][15]~reg0.DB_MAX_OUTPUT_PORT_TYPE
RedPixels[3][0] <= RedPixels[3][0]~reg0.DB_MAX_OUTPUT_PORT_TYPE
RedPixels[3][1] <= RedPixels[3][1]~reg0.DB_MAX_OUTPUT_PORT_TYPE
RedPixels[3][2] <= RedPixels[3][2]~reg0.DB_MAX_OUTPUT_PORT_TYPE
RedPixels[3][3] <= RedPixels[3][3]~reg0.DB_MAX_OUTPUT_PORT_TYPE
RedPixels[3][4] <= RedPixels[3][4]~reg0.DB_MAX_OUTPUT_PORT_TYPE
RedPixels[3][5] <= RedPixels[3][5]~reg0.DB_MAX_OUTPUT_PORT_TYPE
RedPixels[3][6] <= RedPixels[3][6]~reg0.DB_MAX_OUTPUT_PORT_TYPE
RedPixels[3][7] <= RedPixels[3][7]~reg0.DB_MAX_OUTPUT_PORT_TYPE
RedPixels[3][8] <= RedPixels[3][8]~reg0.DB_MAX_OUTPUT_PORT_TYPE
RedPixels[3][9] <= RedPixels[3][9]~reg0.DB_MAX_OUTPUT_PORT_TYPE
RedPixels[3][10] <= RedPixels[3][10]~reg0.DB_MAX_OUTPUT_PORT_TYPE
RedPixels[3][11] <= RedPixels[3][11]~reg0.DB_MAX_OUTPUT_PORT_TYPE
RedPixels[3][12] <= RedPixels[3][12]~reg0.DB_MAX_OUTPUT_PORT_TYPE
RedPixels[3][13] <= RedPixels[3][13]~reg0.DB_MAX_OUTPUT_PORT_TYPE
RedPixels[3][14] <= RedPixels[3][14]~reg0.DB_MAX_OUTPUT_PORT_TYPE
RedPixels[3][15] <= RedPixels[3][15]~reg0.DB_MAX_OUTPUT_PORT_TYPE
RedPixels[4][0] <= RedPixels[4][0]~reg0.DB_MAX_OUTPUT_PORT_TYPE
RedPixels[4][1] <= RedPixels[4][1]~reg0.DB_MAX_OUTPUT_PORT_TYPE
RedPixels[4][2] <= RedPixels[4][2]~reg0.DB_MAX_OUTPUT_PORT_TYPE
RedPixels[4][3] <= RedPixels[4][3]~reg0.DB_MAX_OUTPUT_PORT_TYPE
RedPixels[4][4] <= RedPixels[4][4]~reg0.DB_MAX_OUTPUT_PORT_TYPE
RedPixels[4][5] <= RedPixels[4][5]~reg0.DB_MAX_OUTPUT_PORT_TYPE
RedPixels[4][6] <= RedPixels[4][6]~reg0.DB_MAX_OUTPUT_PORT_TYPE
RedPixels[4][7] <= RedPixels[4][7]~reg0.DB_MAX_OUTPUT_PORT_TYPE
RedPixels[4][8] <= RedPixels[4][8]~reg0.DB_MAX_OUTPUT_PORT_TYPE
RedPixels[4][9] <= RedPixels[4][9]~reg0.DB_MAX_OUTPUT_PORT_TYPE
RedPixels[4][10] <= RedPixels[4][10]~reg0.DB_MAX_OUTPUT_PORT_TYPE
RedPixels[4][11] <= RedPixels[4][11]~reg0.DB_MAX_OUTPUT_PORT_TYPE
RedPixels[4][12] <= RedPixels[4][12]~reg0.DB_MAX_OUTPUT_PORT_TYPE
RedPixels[4][13] <= RedPixels[4][13]~reg0.DB_MAX_OUTPUT_PORT_TYPE
RedPixels[4][14] <= RedPixels[4][14]~reg0.DB_MAX_OUTPUT_PORT_TYPE
RedPixels[4][15] <= RedPixels[4][15]~reg0.DB_MAX_OUTPUT_PORT_TYPE
RedPixels[5][0] <= RedPixels[5][0]~reg0.DB_MAX_OUTPUT_PORT_TYPE
RedPixels[5][1] <= RedPixels[5][1]~reg0.DB_MAX_OUTPUT_PORT_TYPE
RedPixels[5][2] <= RedPixels[5][2]~reg0.DB_MAX_OUTPUT_PORT_TYPE
RedPixels[5][3] <= RedPixels[5][3]~reg0.DB_MAX_OUTPUT_PORT_TYPE
RedPixels[5][4] <= RedPixels[5][4]~reg0.DB_MAX_OUTPUT_PORT_TYPE
RedPixels[5][5] <= RedPixels[5][5]~reg0.DB_MAX_OUTPUT_PORT_TYPE
RedPixels[5][6] <= RedPixels[5][6]~reg0.DB_MAX_OUTPUT_PORT_TYPE
RedPixels[5][7] <= RedPixels[5][7]~reg0.DB_MAX_OUTPUT_PORT_TYPE
RedPixels[5][8] <= RedPixels[5][8]~reg0.DB_MAX_OUTPUT_PORT_TYPE
RedPixels[5][9] <= RedPixels[5][9]~reg0.DB_MAX_OUTPUT_PORT_TYPE
RedPixels[5][10] <= RedPixels[5][10]~reg0.DB_MAX_OUTPUT_PORT_TYPE
RedPixels[5][11] <= RedPixels[5][11]~reg0.DB_MAX_OUTPUT_PORT_TYPE
RedPixels[5][12] <= RedPixels[5][12]~reg0.DB_MAX_OUTPUT_PORT_TYPE
RedPixels[5][13] <= RedPixels[5][13]~reg0.DB_MAX_OUTPUT_PORT_TYPE
RedPixels[5][14] <= RedPixels[5][14]~reg0.DB_MAX_OUTPUT_PORT_TYPE
RedPixels[5][15] <= RedPixels[5][15]~reg0.DB_MAX_OUTPUT_PORT_TYPE
RedPixels[6][0] <= RedPixels[6][0]~reg0.DB_MAX_OUTPUT_PORT_TYPE
RedPixels[6][1] <= RedPixels[6][1]~reg0.DB_MAX_OUTPUT_PORT_TYPE
RedPixels[6][2] <= RedPixels[6][2]~reg0.DB_MAX_OUTPUT_PORT_TYPE
RedPixels[6][3] <= RedPixels[6][3]~reg0.DB_MAX_OUTPUT_PORT_TYPE
RedPixels[6][4] <= RedPixels[6][4]~reg0.DB_MAX_OUTPUT_PORT_TYPE
RedPixels[6][5] <= RedPixels[6][5]~reg0.DB_MAX_OUTPUT_PORT_TYPE
RedPixels[6][6] <= RedPixels[6][6]~reg0.DB_MAX_OUTPUT_PORT_TYPE
RedPixels[6][7] <= RedPixels[6][7]~reg0.DB_MAX_OUTPUT_PORT_TYPE
RedPixels[6][8] <= RedPixels[6][8]~reg0.DB_MAX_OUTPUT_PORT_TYPE
RedPixels[6][9] <= RedPixels[6][9]~reg0.DB_MAX_OUTPUT_PORT_TYPE
RedPixels[6][10] <= RedPixels[6][10]~reg0.DB_MAX_OUTPUT_PORT_TYPE
RedPixels[6][11] <= RedPixels[6][11]~reg0.DB_MAX_OUTPUT_PORT_TYPE
RedPixels[6][12] <= RedPixels[6][12]~reg0.DB_MAX_OUTPUT_PORT_TYPE
RedPixels[6][13] <= RedPixels[6][13]~reg0.DB_MAX_OUTPUT_PORT_TYPE
RedPixels[6][14] <= RedPixels[6][14]~reg0.DB_MAX_OUTPUT_PORT_TYPE
RedPixels[6][15] <= RedPixels[6][15]~reg0.DB_MAX_OUTPUT_PORT_TYPE
RedPixels[7][0] <= RedPixels[7][0]~reg0.DB_MAX_OUTPUT_PORT_TYPE
RedPixels[7][1] <= RedPixels[7][1]~reg0.DB_MAX_OUTPUT_PORT_TYPE
RedPixels[7][2] <= RedPixels[7][2]~reg0.DB_MAX_OUTPUT_PORT_TYPE
RedPixels[7][3] <= RedPixels[7][3]~reg0.DB_MAX_OUTPUT_PORT_TYPE
RedPixels[7][4] <= RedPixels[7][4]~reg0.DB_MAX_OUTPUT_PORT_TYPE
RedPixels[7][5] <= RedPixels[7][5]~reg0.DB_MAX_OUTPUT_PORT_TYPE
RedPixels[7][6] <= RedPixels[7][6]~reg0.DB_MAX_OUTPUT_PORT_TYPE
RedPixels[7][7] <= RedPixels[7][7]~reg0.DB_MAX_OUTPUT_PORT_TYPE
RedPixels[7][8] <= RedPixels[7][8]~reg0.DB_MAX_OUTPUT_PORT_TYPE
RedPixels[7][9] <= RedPixels[7][9]~reg0.DB_MAX_OUTPUT_PORT_TYPE
RedPixels[7][10] <= RedPixels[7][10]~reg0.DB_MAX_OUTPUT_PORT_TYPE
RedPixels[7][11] <= RedPixels[7][11]~reg0.DB_MAX_OUTPUT_PORT_TYPE
RedPixels[7][12] <= RedPixels[7][12]~reg0.DB_MAX_OUTPUT_PORT_TYPE
RedPixels[7][13] <= RedPixels[7][13]~reg0.DB_MAX_OUTPUT_PORT_TYPE
RedPixels[7][14] <= RedPixels[7][14]~reg0.DB_MAX_OUTPUT_PORT_TYPE
RedPixels[7][15] <= RedPixels[7][15]~reg0.DB_MAX_OUTPUT_PORT_TYPE
RedPixels[8][0] <= RedPixels[8][0]~reg0.DB_MAX_OUTPUT_PORT_TYPE
RedPixels[8][1] <= RedPixels[8][1]~reg0.DB_MAX_OUTPUT_PORT_TYPE
RedPixels[8][2] <= RedPixels[8][2]~reg0.DB_MAX_OUTPUT_PORT_TYPE
RedPixels[8][3] <= RedPixels[8][3]~reg0.DB_MAX_OUTPUT_PORT_TYPE
RedPixels[8][4] <= RedPixels[8][4]~reg0.DB_MAX_OUTPUT_PORT_TYPE
RedPixels[8][5] <= RedPixels[8][5]~reg0.DB_MAX_OUTPUT_PORT_TYPE
RedPixels[8][6] <= RedPixels[8][6]~reg0.DB_MAX_OUTPUT_PORT_TYPE
RedPixels[8][7] <= RedPixels[8][7]~reg0.DB_MAX_OUTPUT_PORT_TYPE
RedPixels[8][8] <= RedPixels[8][8]~reg0.DB_MAX_OUTPUT_PORT_TYPE
RedPixels[8][9] <= RedPixels[8][9]~reg0.DB_MAX_OUTPUT_PORT_TYPE
RedPixels[8][10] <= RedPixels[8][10]~reg0.DB_MAX_OUTPUT_PORT_TYPE
RedPixels[8][11] <= RedPixels[8][11]~reg0.DB_MAX_OUTPUT_PORT_TYPE
RedPixels[8][12] <= RedPixels[8][12]~reg0.DB_MAX_OUTPUT_PORT_TYPE
RedPixels[8][13] <= RedPixels[8][13]~reg0.DB_MAX_OUTPUT_PORT_TYPE
RedPixels[8][14] <= RedPixels[8][14]~reg0.DB_MAX_OUTPUT_PORT_TYPE
RedPixels[8][15] <= RedPixels[8][15]~reg0.DB_MAX_OUTPUT_PORT_TYPE
RedPixels[9][0] <= RedPixels[9][0]~reg0.DB_MAX_OUTPUT_PORT_TYPE
RedPixels[9][1] <= RedPixels[9][1]~reg0.DB_MAX_OUTPUT_PORT_TYPE
RedPixels[9][2] <= RedPixels[9][2]~reg0.DB_MAX_OUTPUT_PORT_TYPE
RedPixels[9][3] <= RedPixels[9][3]~reg0.DB_MAX_OUTPUT_PORT_TYPE
RedPixels[9][4] <= RedPixels[9][4]~reg0.DB_MAX_OUTPUT_PORT_TYPE
RedPixels[9][5] <= RedPixels[9][5]~reg0.DB_MAX_OUTPUT_PORT_TYPE
RedPixels[9][6] <= RedPixels[9][6]~reg0.DB_MAX_OUTPUT_PORT_TYPE
RedPixels[9][7] <= RedPixels[9][7]~reg0.DB_MAX_OUTPUT_PORT_TYPE
RedPixels[9][8] <= RedPixels[9][8]~reg0.DB_MAX_OUTPUT_PORT_TYPE
RedPixels[9][9] <= RedPixels[9][9]~reg0.DB_MAX_OUTPUT_PORT_TYPE
RedPixels[9][10] <= RedPixels[9][10]~reg0.DB_MAX_OUTPUT_PORT_TYPE
RedPixels[9][11] <= RedPixels[9][11]~reg0.DB_MAX_OUTPUT_PORT_TYPE
RedPixels[9][12] <= RedPixels[9][12]~reg0.DB_MAX_OUTPUT_PORT_TYPE
RedPixels[9][13] <= RedPixels[9][13]~reg0.DB_MAX_OUTPUT_PORT_TYPE
RedPixels[9][14] <= RedPixels[9][14]~reg0.DB_MAX_OUTPUT_PORT_TYPE
RedPixels[9][15] <= RedPixels[9][15]~reg0.DB_MAX_OUTPUT_PORT_TYPE
RedPixels[10][0] <= RedPixels[10][0]~reg0.DB_MAX_OUTPUT_PORT_TYPE
RedPixels[10][1] <= RedPixels[10][1]~reg0.DB_MAX_OUTPUT_PORT_TYPE
RedPixels[10][2] <= RedPixels[10][2]~reg0.DB_MAX_OUTPUT_PORT_TYPE
RedPixels[10][3] <= RedPixels[10][3]~reg0.DB_MAX_OUTPUT_PORT_TYPE
RedPixels[10][4] <= RedPixels[10][4]~reg0.DB_MAX_OUTPUT_PORT_TYPE
RedPixels[10][5] <= RedPixels[10][5]~reg0.DB_MAX_OUTPUT_PORT_TYPE
RedPixels[10][6] <= RedPixels[10][6]~reg0.DB_MAX_OUTPUT_PORT_TYPE
RedPixels[10][7] <= RedPixels[10][7]~reg0.DB_MAX_OUTPUT_PORT_TYPE
RedPixels[10][8] <= RedPixels[10][8]~reg0.DB_MAX_OUTPUT_PORT_TYPE
RedPixels[10][9] <= RedPixels[10][9]~reg0.DB_MAX_OUTPUT_PORT_TYPE
RedPixels[10][10] <= RedPixels[10][10]~reg0.DB_MAX_OUTPUT_PORT_TYPE
RedPixels[10][11] <= RedPixels[10][11]~reg0.DB_MAX_OUTPUT_PORT_TYPE
RedPixels[10][12] <= RedPixels[10][12]~reg0.DB_MAX_OUTPUT_PORT_TYPE
RedPixels[10][13] <= RedPixels[10][13]~reg0.DB_MAX_OUTPUT_PORT_TYPE
RedPixels[10][14] <= RedPixels[10][14]~reg0.DB_MAX_OUTPUT_PORT_TYPE
RedPixels[10][15] <= RedPixels[10][15]~reg0.DB_MAX_OUTPUT_PORT_TYPE
RedPixels[11][0] <= RedPixels[11][0]~reg0.DB_MAX_OUTPUT_PORT_TYPE
RedPixels[11][1] <= RedPixels[11][1]~reg0.DB_MAX_OUTPUT_PORT_TYPE
RedPixels[11][2] <= RedPixels[11][2]~reg0.DB_MAX_OUTPUT_PORT_TYPE
RedPixels[11][3] <= RedPixels[11][3]~reg0.DB_MAX_OUTPUT_PORT_TYPE
RedPixels[11][4] <= RedPixels[11][4]~reg0.DB_MAX_OUTPUT_PORT_TYPE
RedPixels[11][5] <= RedPixels[11][5]~reg0.DB_MAX_OUTPUT_PORT_TYPE
RedPixels[11][6] <= RedPixels[11][6]~reg0.DB_MAX_OUTPUT_PORT_TYPE
RedPixels[11][7] <= RedPixels[11][7]~reg0.DB_MAX_OUTPUT_PORT_TYPE
RedPixels[11][8] <= RedPixels[11][8]~reg0.DB_MAX_OUTPUT_PORT_TYPE
RedPixels[11][9] <= RedPixels[11][9]~reg0.DB_MAX_OUTPUT_PORT_TYPE
RedPixels[11][10] <= RedPixels[11][10]~reg0.DB_MAX_OUTPUT_PORT_TYPE
RedPixels[11][11] <= RedPixels[11][11]~reg0.DB_MAX_OUTPUT_PORT_TYPE
RedPixels[11][12] <= RedPixels[11][12]~reg0.DB_MAX_OUTPUT_PORT_TYPE
RedPixels[11][13] <= RedPixels[11][13]~reg0.DB_MAX_OUTPUT_PORT_TYPE
RedPixels[11][14] <= RedPixels[11][14]~reg0.DB_MAX_OUTPUT_PORT_TYPE
RedPixels[11][15] <= RedPixels[11][15]~reg0.DB_MAX_OUTPUT_PORT_TYPE
RedPixels[12][0] <= RedPixels[12][0]~reg0.DB_MAX_OUTPUT_PORT_TYPE
RedPixels[12][1] <= RedPixels[12][1]~reg0.DB_MAX_OUTPUT_PORT_TYPE
RedPixels[12][2] <= RedPixels[12][2]~reg0.DB_MAX_OUTPUT_PORT_TYPE
RedPixels[12][3] <= RedPixels[12][3]~reg0.DB_MAX_OUTPUT_PORT_TYPE
RedPixels[12][4] <= RedPixels[12][4]~reg0.DB_MAX_OUTPUT_PORT_TYPE
RedPixels[12][5] <= RedPixels[12][5]~reg0.DB_MAX_OUTPUT_PORT_TYPE
RedPixels[12][6] <= RedPixels[12][6]~reg0.DB_MAX_OUTPUT_PORT_TYPE
RedPixels[12][7] <= RedPixels[12][7]~reg0.DB_MAX_OUTPUT_PORT_TYPE
RedPixels[12][8] <= RedPixels[12][8]~reg0.DB_MAX_OUTPUT_PORT_TYPE
RedPixels[12][9] <= RedPixels[12][9]~reg0.DB_MAX_OUTPUT_PORT_TYPE
RedPixels[12][10] <= RedPixels[12][10]~reg0.DB_MAX_OUTPUT_PORT_TYPE
RedPixels[12][11] <= RedPixels[12][11]~reg0.DB_MAX_OUTPUT_PORT_TYPE
RedPixels[12][12] <= RedPixels[12][12]~reg0.DB_MAX_OUTPUT_PORT_TYPE
RedPixels[12][13] <= RedPixels[12][13]~reg0.DB_MAX_OUTPUT_PORT_TYPE
RedPixels[12][14] <= RedPixels[12][14]~reg0.DB_MAX_OUTPUT_PORT_TYPE
RedPixels[12][15] <= RedPixels[12][15]~reg0.DB_MAX_OUTPUT_PORT_TYPE
RedPixels[13][0] <= RedPixels[13][0]~reg0.DB_MAX_OUTPUT_PORT_TYPE
RedPixels[13][1] <= RedPixels[13][1]~reg0.DB_MAX_OUTPUT_PORT_TYPE
RedPixels[13][2] <= RedPixels[13][2]~reg0.DB_MAX_OUTPUT_PORT_TYPE
RedPixels[13][3] <= RedPixels[13][3]~reg0.DB_MAX_OUTPUT_PORT_TYPE
RedPixels[13][4] <= RedPixels[13][4]~reg0.DB_MAX_OUTPUT_PORT_TYPE
RedPixels[13][5] <= RedPixels[13][5]~reg0.DB_MAX_OUTPUT_PORT_TYPE
RedPixels[13][6] <= RedPixels[13][6]~reg0.DB_MAX_OUTPUT_PORT_TYPE
RedPixels[13][7] <= RedPixels[13][7]~reg0.DB_MAX_OUTPUT_PORT_TYPE
RedPixels[13][8] <= RedPixels[13][8]~reg0.DB_MAX_OUTPUT_PORT_TYPE
RedPixels[13][9] <= RedPixels[13][9]~reg0.DB_MAX_OUTPUT_PORT_TYPE
RedPixels[13][10] <= RedPixels[13][10]~reg0.DB_MAX_OUTPUT_PORT_TYPE
RedPixels[13][11] <= RedPixels[13][11]~reg0.DB_MAX_OUTPUT_PORT_TYPE
RedPixels[13][12] <= RedPixels[13][12]~reg0.DB_MAX_OUTPUT_PORT_TYPE
RedPixels[13][13] <= RedPixels[13][13]~reg0.DB_MAX_OUTPUT_PORT_TYPE
RedPixels[13][14] <= RedPixels[13][14]~reg0.DB_MAX_OUTPUT_PORT_TYPE
RedPixels[13][15] <= RedPixels[13][15]~reg0.DB_MAX_OUTPUT_PORT_TYPE
RedPixels[14][0] <= RedPixels[14][0]~reg0.DB_MAX_OUTPUT_PORT_TYPE
RedPixels[14][1] <= RedPixels[14][1]~reg0.DB_MAX_OUTPUT_PORT_TYPE
RedPixels[14][2] <= RedPixels[14][2]~reg0.DB_MAX_OUTPUT_PORT_TYPE
RedPixels[14][3] <= RedPixels[14][3]~reg0.DB_MAX_OUTPUT_PORT_TYPE
RedPixels[14][4] <= RedPixels[14][4]~reg0.DB_MAX_OUTPUT_PORT_TYPE
RedPixels[14][5] <= RedPixels[14][5]~reg0.DB_MAX_OUTPUT_PORT_TYPE
RedPixels[14][6] <= RedPixels[14][6]~reg0.DB_MAX_OUTPUT_PORT_TYPE
RedPixels[14][7] <= RedPixels[14][7]~reg0.DB_MAX_OUTPUT_PORT_TYPE
RedPixels[14][8] <= RedPixels[14][8]~reg0.DB_MAX_OUTPUT_PORT_TYPE
RedPixels[14][9] <= RedPixels[14][9]~reg0.DB_MAX_OUTPUT_PORT_TYPE
RedPixels[14][10] <= RedPixels[14][10]~reg0.DB_MAX_OUTPUT_PORT_TYPE
RedPixels[14][11] <= RedPixels[14][11]~reg0.DB_MAX_OUTPUT_PORT_TYPE
RedPixels[14][12] <= RedPixels[14][12]~reg0.DB_MAX_OUTPUT_PORT_TYPE
RedPixels[14][13] <= RedPixels[14][13]~reg0.DB_MAX_OUTPUT_PORT_TYPE
RedPixels[14][14] <= RedPixels[14][14]~reg0.DB_MAX_OUTPUT_PORT_TYPE
RedPixels[14][15] <= RedPixels[14][15]~reg0.DB_MAX_OUTPUT_PORT_TYPE
RedPixels[15][0] <= RedPixels[15][0]~reg0.DB_MAX_OUTPUT_PORT_TYPE
RedPixels[15][1] <= RedPixels[15][1]~reg0.DB_MAX_OUTPUT_PORT_TYPE
RedPixels[15][2] <= RedPixels[15][2]~reg0.DB_MAX_OUTPUT_PORT_TYPE
RedPixels[15][3] <= RedPixels[15][3]~reg0.DB_MAX_OUTPUT_PORT_TYPE
RedPixels[15][4] <= RedPixels[15][4]~reg0.DB_MAX_OUTPUT_PORT_TYPE
RedPixels[15][5] <= RedPixels[15][5]~reg0.DB_MAX_OUTPUT_PORT_TYPE
RedPixels[15][6] <= RedPixels[15][6]~reg0.DB_MAX_OUTPUT_PORT_TYPE
RedPixels[15][7] <= RedPixels[15][7]~reg0.DB_MAX_OUTPUT_PORT_TYPE
RedPixels[15][8] <= RedPixels[15][8]~reg0.DB_MAX_OUTPUT_PORT_TYPE
RedPixels[15][9] <= RedPixels[15][9]~reg0.DB_MAX_OUTPUT_PORT_TYPE
RedPixels[15][10] <= RedPixels[15][10]~reg0.DB_MAX_OUTPUT_PORT_TYPE
RedPixels[15][11] <= RedPixels[15][11]~reg0.DB_MAX_OUTPUT_PORT_TYPE
RedPixels[15][12] <= RedPixels[15][12]~reg0.DB_MAX_OUTPUT_PORT_TYPE
RedPixels[15][13] <= RedPixels[15][13]~reg0.DB_MAX_OUTPUT_PORT_TYPE
RedPixels[15][14] <= RedPixels[15][14]~reg0.DB_MAX_OUTPUT_PORT_TYPE
RedPixels[15][15] <= RedPixels[15][15]~reg0.DB_MAX_OUTPUT_PORT_TYPE
GrnPixels[0][0] => check_conflict:chk.grn[0][0]
GrnPixels[0][1] => check_conflict:chk.grn[0][1]
GrnPixels[0][2] => check_conflict:chk.grn[0][2]
GrnPixels[0][3] => check_conflict:chk.grn[0][3]
GrnPixels[0][4] => check_conflict:chk.grn[0][4]
GrnPixels[0][5] => check_conflict:chk.grn[0][5]
GrnPixels[0][6] => check_conflict:chk.grn[0][6]
GrnPixels[0][7] => check_conflict:chk.grn[0][7]
GrnPixels[0][8] => check_conflict:chk.grn[0][8]
GrnPixels[0][9] => check_conflict:chk.grn[0][9]
GrnPixels[0][10] => check_conflict:chk.grn[0][10]
GrnPixels[0][11] => check_conflict:chk.grn[0][11]
GrnPixels[0][12] => check_conflict:chk.grn[0][12]
GrnPixels[0][13] => check_conflict:chk.grn[0][13]
GrnPixels[0][14] => check_conflict:chk.grn[0][14]
GrnPixels[0][15] => check_conflict:chk.grn[0][15]
GrnPixels[1][0] => check_conflict:chk.grn[1][0]
GrnPixels[1][1] => check_conflict:chk.grn[1][1]
GrnPixels[1][2] => check_conflict:chk.grn[1][2]
GrnPixels[1][3] => check_conflict:chk.grn[1][3]
GrnPixels[1][4] => check_conflict:chk.grn[1][4]
GrnPixels[1][5] => check_conflict:chk.grn[1][5]
GrnPixels[1][6] => check_conflict:chk.grn[1][6]
GrnPixels[1][7] => check_conflict:chk.grn[1][7]
GrnPixels[1][8] => check_conflict:chk.grn[1][8]
GrnPixels[1][9] => check_conflict:chk.grn[1][9]
GrnPixels[1][10] => check_conflict:chk.grn[1][10]
GrnPixels[1][11] => check_conflict:chk.grn[1][11]
GrnPixels[1][12] => check_conflict:chk.grn[1][12]
GrnPixels[1][13] => check_conflict:chk.grn[1][13]
GrnPixels[1][14] => check_conflict:chk.grn[1][14]
GrnPixels[1][15] => check_conflict:chk.grn[1][15]
GrnPixels[2][0] => check_conflict:chk.grn[2][0]
GrnPixels[2][1] => check_conflict:chk.grn[2][1]
GrnPixels[2][2] => check_conflict:chk.grn[2][2]
GrnPixels[2][3] => check_conflict:chk.grn[2][3]
GrnPixels[2][4] => check_conflict:chk.grn[2][4]
GrnPixels[2][5] => check_conflict:chk.grn[2][5]
GrnPixels[2][6] => check_conflict:chk.grn[2][6]
GrnPixels[2][7] => check_conflict:chk.grn[2][7]
GrnPixels[2][8] => check_conflict:chk.grn[2][8]
GrnPixels[2][9] => check_conflict:chk.grn[2][9]
GrnPixels[2][10] => check_conflict:chk.grn[2][10]
GrnPixels[2][11] => check_conflict:chk.grn[2][11]
GrnPixels[2][12] => check_conflict:chk.grn[2][12]
GrnPixels[2][13] => check_conflict:chk.grn[2][13]
GrnPixels[2][14] => check_conflict:chk.grn[2][14]
GrnPixels[2][15] => check_conflict:chk.grn[2][15]
GrnPixels[3][0] => check_conflict:chk.grn[3][0]
GrnPixels[3][1] => check_conflict:chk.grn[3][1]
GrnPixels[3][2] => check_conflict:chk.grn[3][2]
GrnPixels[3][3] => check_conflict:chk.grn[3][3]
GrnPixels[3][4] => check_conflict:chk.grn[3][4]
GrnPixels[3][5] => check_conflict:chk.grn[3][5]
GrnPixels[3][6] => check_conflict:chk.grn[3][6]
GrnPixels[3][7] => check_conflict:chk.grn[3][7]
GrnPixels[3][8] => check_conflict:chk.grn[3][8]
GrnPixels[3][9] => check_conflict:chk.grn[3][9]
GrnPixels[3][10] => check_conflict:chk.grn[3][10]
GrnPixels[3][11] => check_conflict:chk.grn[3][11]
GrnPixels[3][12] => check_conflict:chk.grn[3][12]
GrnPixels[3][13] => check_conflict:chk.grn[3][13]
GrnPixels[3][14] => check_conflict:chk.grn[3][14]
GrnPixels[3][15] => check_conflict:chk.grn[3][15]
GrnPixels[4][0] => check_conflict:chk.grn[4][0]
GrnPixels[4][1] => check_conflict:chk.grn[4][1]
GrnPixels[4][2] => check_conflict:chk.grn[4][2]
GrnPixels[4][3] => check_conflict:chk.grn[4][3]
GrnPixels[4][4] => check_conflict:chk.grn[4][4]
GrnPixels[4][5] => check_conflict:chk.grn[4][5]
GrnPixels[4][6] => check_conflict:chk.grn[4][6]
GrnPixels[4][7] => check_conflict:chk.grn[4][7]
GrnPixels[4][8] => check_conflict:chk.grn[4][8]
GrnPixels[4][9] => check_conflict:chk.grn[4][9]
GrnPixels[4][10] => check_conflict:chk.grn[4][10]
GrnPixels[4][11] => check_conflict:chk.grn[4][11]
GrnPixels[4][12] => check_conflict:chk.grn[4][12]
GrnPixels[4][13] => check_conflict:chk.grn[4][13]
GrnPixels[4][14] => check_conflict:chk.grn[4][14]
GrnPixels[4][15] => check_conflict:chk.grn[4][15]
GrnPixels[5][0] => check_conflict:chk.grn[5][0]
GrnPixels[5][1] => check_conflict:chk.grn[5][1]
GrnPixels[5][2] => check_conflict:chk.grn[5][2]
GrnPixels[5][3] => check_conflict:chk.grn[5][3]
GrnPixels[5][4] => check_conflict:chk.grn[5][4]
GrnPixels[5][5] => check_conflict:chk.grn[5][5]
GrnPixels[5][6] => check_conflict:chk.grn[5][6]
GrnPixels[5][7] => check_conflict:chk.grn[5][7]
GrnPixels[5][8] => check_conflict:chk.grn[5][8]
GrnPixels[5][9] => check_conflict:chk.grn[5][9]
GrnPixels[5][10] => check_conflict:chk.grn[5][10]
GrnPixels[5][11] => check_conflict:chk.grn[5][11]
GrnPixels[5][12] => check_conflict:chk.grn[5][12]
GrnPixels[5][13] => check_conflict:chk.grn[5][13]
GrnPixels[5][14] => check_conflict:chk.grn[5][14]
GrnPixels[5][15] => check_conflict:chk.grn[5][15]
GrnPixels[6][0] => check_conflict:chk.grn[6][0]
GrnPixels[6][1] => check_conflict:chk.grn[6][1]
GrnPixels[6][2] => check_conflict:chk.grn[6][2]
GrnPixels[6][3] => check_conflict:chk.grn[6][3]
GrnPixels[6][4] => check_conflict:chk.grn[6][4]
GrnPixels[6][5] => check_conflict:chk.grn[6][5]
GrnPixels[6][6] => check_conflict:chk.grn[6][6]
GrnPixels[6][7] => check_conflict:chk.grn[6][7]
GrnPixels[6][8] => check_conflict:chk.grn[6][8]
GrnPixels[6][9] => check_conflict:chk.grn[6][9]
GrnPixels[6][10] => check_conflict:chk.grn[6][10]
GrnPixels[6][11] => check_conflict:chk.grn[6][11]
GrnPixels[6][12] => check_conflict:chk.grn[6][12]
GrnPixels[6][13] => check_conflict:chk.grn[6][13]
GrnPixels[6][14] => check_conflict:chk.grn[6][14]
GrnPixels[6][15] => check_conflict:chk.grn[6][15]
GrnPixels[7][0] => check_conflict:chk.grn[7][0]
GrnPixels[7][1] => check_conflict:chk.grn[7][1]
GrnPixels[7][2] => check_conflict:chk.grn[7][2]
GrnPixels[7][3] => check_conflict:chk.grn[7][3]
GrnPixels[7][4] => check_conflict:chk.grn[7][4]
GrnPixels[7][5] => check_conflict:chk.grn[7][5]
GrnPixels[7][6] => check_conflict:chk.grn[7][6]
GrnPixels[7][7] => check_conflict:chk.grn[7][7]
GrnPixels[7][8] => check_conflict:chk.grn[7][8]
GrnPixels[7][9] => check_conflict:chk.grn[7][9]
GrnPixels[7][10] => check_conflict:chk.grn[7][10]
GrnPixels[7][11] => check_conflict:chk.grn[7][11]
GrnPixels[7][12] => check_conflict:chk.grn[7][12]
GrnPixels[7][13] => check_conflict:chk.grn[7][13]
GrnPixels[7][14] => check_conflict:chk.grn[7][14]
GrnPixels[7][15] => check_conflict:chk.grn[7][15]
GrnPixels[8][0] => check_conflict:chk.grn[8][0]
GrnPixels[8][1] => check_conflict:chk.grn[8][1]
GrnPixels[8][2] => check_conflict:chk.grn[8][2]
GrnPixels[8][3] => check_conflict:chk.grn[8][3]
GrnPixels[8][4] => check_conflict:chk.grn[8][4]
GrnPixels[8][5] => check_conflict:chk.grn[8][5]
GrnPixels[8][6] => check_conflict:chk.grn[8][6]
GrnPixels[8][7] => check_conflict:chk.grn[8][7]
GrnPixels[8][8] => check_conflict:chk.grn[8][8]
GrnPixels[8][9] => check_conflict:chk.grn[8][9]
GrnPixels[8][10] => check_conflict:chk.grn[8][10]
GrnPixels[8][11] => check_conflict:chk.grn[8][11]
GrnPixels[8][12] => check_conflict:chk.grn[8][12]
GrnPixels[8][13] => check_conflict:chk.grn[8][13]
GrnPixels[8][14] => check_conflict:chk.grn[8][14]
GrnPixels[8][15] => check_conflict:chk.grn[8][15]
GrnPixels[9][0] => check_conflict:chk.grn[9][0]
GrnPixels[9][1] => check_conflict:chk.grn[9][1]
GrnPixels[9][2] => check_conflict:chk.grn[9][2]
GrnPixels[9][3] => check_conflict:chk.grn[9][3]
GrnPixels[9][4] => check_conflict:chk.grn[9][4]
GrnPixels[9][5] => check_conflict:chk.grn[9][5]
GrnPixels[9][6] => check_conflict:chk.grn[9][6]
GrnPixels[9][7] => check_conflict:chk.grn[9][7]
GrnPixels[9][8] => check_conflict:chk.grn[9][8]
GrnPixels[9][9] => check_conflict:chk.grn[9][9]
GrnPixels[9][10] => check_conflict:chk.grn[9][10]
GrnPixels[9][11] => check_conflict:chk.grn[9][11]
GrnPixels[9][12] => check_conflict:chk.grn[9][12]
GrnPixels[9][13] => check_conflict:chk.grn[9][13]
GrnPixels[9][14] => check_conflict:chk.grn[9][14]
GrnPixels[9][15] => check_conflict:chk.grn[9][15]
GrnPixels[10][0] => check_conflict:chk.grn[10][0]
GrnPixels[10][1] => check_conflict:chk.grn[10][1]
GrnPixels[10][2] => check_conflict:chk.grn[10][2]
GrnPixels[10][3] => check_conflict:chk.grn[10][3]
GrnPixels[10][4] => check_conflict:chk.grn[10][4]
GrnPixels[10][5] => check_conflict:chk.grn[10][5]
GrnPixels[10][6] => check_conflict:chk.grn[10][6]
GrnPixels[10][7] => check_conflict:chk.grn[10][7]
GrnPixels[10][8] => check_conflict:chk.grn[10][8]
GrnPixels[10][9] => check_conflict:chk.grn[10][9]
GrnPixels[10][10] => check_conflict:chk.grn[10][10]
GrnPixels[10][11] => check_conflict:chk.grn[10][11]
GrnPixels[10][12] => check_conflict:chk.grn[10][12]
GrnPixels[10][13] => check_conflict:chk.grn[10][13]
GrnPixels[10][14] => check_conflict:chk.grn[10][14]
GrnPixels[10][15] => check_conflict:chk.grn[10][15]
GrnPixels[11][0] => check_conflict:chk.grn[11][0]
GrnPixels[11][1] => check_conflict:chk.grn[11][1]
GrnPixels[11][2] => check_conflict:chk.grn[11][2]
GrnPixels[11][3] => check_conflict:chk.grn[11][3]
GrnPixels[11][4] => check_conflict:chk.grn[11][4]
GrnPixels[11][5] => check_conflict:chk.grn[11][5]
GrnPixels[11][6] => check_conflict:chk.grn[11][6]
GrnPixels[11][7] => check_conflict:chk.grn[11][7]
GrnPixels[11][8] => check_conflict:chk.grn[11][8]
GrnPixels[11][9] => check_conflict:chk.grn[11][9]
GrnPixels[11][10] => check_conflict:chk.grn[11][10]
GrnPixels[11][11] => check_conflict:chk.grn[11][11]
GrnPixels[11][12] => check_conflict:chk.grn[11][12]
GrnPixels[11][13] => check_conflict:chk.grn[11][13]
GrnPixels[11][14] => check_conflict:chk.grn[11][14]
GrnPixels[11][15] => check_conflict:chk.grn[11][15]
GrnPixels[12][0] => check_conflict:chk.grn[12][0]
GrnPixels[12][1] => check_conflict:chk.grn[12][1]
GrnPixels[12][2] => check_conflict:chk.grn[12][2]
GrnPixels[12][3] => check_conflict:chk.grn[12][3]
GrnPixels[12][4] => check_conflict:chk.grn[12][4]
GrnPixels[12][5] => check_conflict:chk.grn[12][5]
GrnPixels[12][6] => check_conflict:chk.grn[12][6]
GrnPixels[12][7] => check_conflict:chk.grn[12][7]
GrnPixels[12][8] => check_conflict:chk.grn[12][8]
GrnPixels[12][9] => check_conflict:chk.grn[12][9]
GrnPixels[12][10] => check_conflict:chk.grn[12][10]
GrnPixels[12][11] => check_conflict:chk.grn[12][11]
GrnPixels[12][12] => check_conflict:chk.grn[12][12]
GrnPixels[12][13] => check_conflict:chk.grn[12][13]
GrnPixels[12][14] => check_conflict:chk.grn[12][14]
GrnPixels[12][15] => check_conflict:chk.grn[12][15]
GrnPixels[13][0] => check_conflict:chk.grn[13][0]
GrnPixels[13][1] => check_conflict:chk.grn[13][1]
GrnPixels[13][2] => check_conflict:chk.grn[13][2]
GrnPixels[13][3] => check_conflict:chk.grn[13][3]
GrnPixels[13][4] => check_conflict:chk.grn[13][4]
GrnPixels[13][5] => check_conflict:chk.grn[13][5]
GrnPixels[13][6] => check_conflict:chk.grn[13][6]
GrnPixels[13][7] => check_conflict:chk.grn[13][7]
GrnPixels[13][8] => check_conflict:chk.grn[13][8]
GrnPixels[13][9] => check_conflict:chk.grn[13][9]
GrnPixels[13][10] => check_conflict:chk.grn[13][10]
GrnPixels[13][11] => check_conflict:chk.grn[13][11]
GrnPixels[13][12] => check_conflict:chk.grn[13][12]
GrnPixels[13][13] => check_conflict:chk.grn[13][13]
GrnPixels[13][14] => check_conflict:chk.grn[13][14]
GrnPixels[13][15] => check_conflict:chk.grn[13][15]
GrnPixels[14][0] => check_conflict:chk.grn[14][0]
GrnPixels[14][1] => check_conflict:chk.grn[14][1]
GrnPixels[14][2] => check_conflict:chk.grn[14][2]
GrnPixels[14][3] => check_conflict:chk.grn[14][3]
GrnPixels[14][4] => check_conflict:chk.grn[14][4]
GrnPixels[14][5] => check_conflict:chk.grn[14][5]
GrnPixels[14][6] => check_conflict:chk.grn[14][6]
GrnPixels[14][7] => check_conflict:chk.grn[14][7]
GrnPixels[14][8] => check_conflict:chk.grn[14][8]
GrnPixels[14][9] => check_conflict:chk.grn[14][9]
GrnPixels[14][10] => check_conflict:chk.grn[14][10]
GrnPixels[14][11] => check_conflict:chk.grn[14][11]
GrnPixels[14][12] => check_conflict:chk.grn[14][12]
GrnPixels[14][13] => check_conflict:chk.grn[14][13]
GrnPixels[14][14] => check_conflict:chk.grn[14][14]
GrnPixels[14][15] => check_conflict:chk.grn[14][15]
GrnPixels[15][0] => check_conflict:chk.grn[15][0]
GrnPixels[15][1] => check_conflict:chk.grn[15][1]
GrnPixels[15][2] => check_conflict:chk.grn[15][2]
GrnPixels[15][3] => check_conflict:chk.grn[15][3]
GrnPixels[15][4] => check_conflict:chk.grn[15][4]
GrnPixels[15][5] => check_conflict:chk.grn[15][5]
GrnPixels[15][6] => check_conflict:chk.grn[15][6]
GrnPixels[15][7] => check_conflict:chk.grn[15][7]
GrnPixels[15][8] => check_conflict:chk.grn[15][8]
GrnPixels[15][9] => check_conflict:chk.grn[15][9]
GrnPixels[15][10] => check_conflict:chk.grn[15][10]
GrnPixels[15][11] => check_conflict:chk.grn[15][11]
GrnPixels[15][12] => check_conflict:chk.grn[15][12]
GrnPixels[15][13] => check_conflict:chk.grn[15][13]
GrnPixels[15][14] => check_conflict:chk.grn[15][14]
GrnPixels[15][15] => check_conflict:chk.grn[15][15]
eating => always0.IN0
eating => always0.IN0
random[0] => col_select:col.rand_col[0]
random[1] => col_select:col.rand_col[1]
random[2] => col_select:col.rand_col[2]
random[3] => col_select:col.rand_col[3]
random[4] => Decoder0.IN3
random[5] => Decoder0.IN2
random[6] => Decoder0.IN1
random[7] => Decoder0.IN0
clk => check_conflict:chk.clk
clk => RedPixels[0][0]~reg0.CLK
clk => RedPixels[0][1]~reg0.CLK
clk => RedPixels[0][2]~reg0.CLK
clk => RedPixels[0][3]~reg0.CLK
clk => RedPixels[0][4]~reg0.CLK
clk => RedPixels[0][5]~reg0.CLK
clk => RedPixels[0][6]~reg0.CLK
clk => RedPixels[0][7]~reg0.CLK
clk => RedPixels[0][8]~reg0.CLK
clk => RedPixels[0][9]~reg0.CLK
clk => RedPixels[0][10]~reg0.CLK
clk => RedPixels[0][11]~reg0.CLK
clk => RedPixels[0][12]~reg0.CLK
clk => RedPixels[0][13]~reg0.CLK
clk => RedPixels[0][14]~reg0.CLK
clk => RedPixels[0][15]~reg0.CLK
clk => RedPixels[1][0]~reg0.CLK
clk => RedPixels[1][1]~reg0.CLK
clk => RedPixels[1][2]~reg0.CLK
clk => RedPixels[1][3]~reg0.CLK
clk => RedPixels[1][4]~reg0.CLK
clk => RedPixels[1][5]~reg0.CLK
clk => RedPixels[1][6]~reg0.CLK
clk => RedPixels[1][7]~reg0.CLK
clk => RedPixels[1][8]~reg0.CLK
clk => RedPixels[1][9]~reg0.CLK
clk => RedPixels[1][10]~reg0.CLK
clk => RedPixels[1][11]~reg0.CLK
clk => RedPixels[1][12]~reg0.CLK
clk => RedPixels[1][13]~reg0.CLK
clk => RedPixels[1][14]~reg0.CLK
clk => RedPixels[1][15]~reg0.CLK
clk => RedPixels[2][0]~reg0.CLK
clk => RedPixels[2][1]~reg0.CLK
clk => RedPixels[2][2]~reg0.CLK
clk => RedPixels[2][3]~reg0.CLK
clk => RedPixels[2][4]~reg0.CLK
clk => RedPixels[2][5]~reg0.CLK
clk => RedPixels[2][6]~reg0.CLK
clk => RedPixels[2][7]~reg0.CLK
clk => RedPixels[2][8]~reg0.CLK
clk => RedPixels[2][9]~reg0.CLK
clk => RedPixels[2][10]~reg0.CLK
clk => RedPixels[2][11]~reg0.CLK
clk => RedPixels[2][12]~reg0.CLK
clk => RedPixels[2][13]~reg0.CLK
clk => RedPixels[2][14]~reg0.CLK
clk => RedPixels[2][15]~reg0.CLK
clk => RedPixels[3][0]~reg0.CLK
clk => RedPixels[3][1]~reg0.CLK
clk => RedPixels[3][2]~reg0.CLK
clk => RedPixels[3][3]~reg0.CLK
clk => RedPixels[3][4]~reg0.CLK
clk => RedPixels[3][5]~reg0.CLK
clk => RedPixels[3][6]~reg0.CLK
clk => RedPixels[3][7]~reg0.CLK
clk => RedPixels[3][8]~reg0.CLK
clk => RedPixels[3][9]~reg0.CLK
clk => RedPixels[3][10]~reg0.CLK
clk => RedPixels[3][11]~reg0.CLK
clk => RedPixels[3][12]~reg0.CLK
clk => RedPixels[3][13]~reg0.CLK
clk => RedPixels[3][14]~reg0.CLK
clk => RedPixels[3][15]~reg0.CLK
clk => RedPixels[4][0]~reg0.CLK
clk => RedPixels[4][1]~reg0.CLK
clk => RedPixels[4][2]~reg0.CLK
clk => RedPixels[4][3]~reg0.CLK
clk => RedPixels[4][4]~reg0.CLK
clk => RedPixels[4][5]~reg0.CLK
clk => RedPixels[4][6]~reg0.CLK
clk => RedPixels[4][7]~reg0.CLK
clk => RedPixels[4][8]~reg0.CLK
clk => RedPixels[4][9]~reg0.CLK
clk => RedPixels[4][10]~reg0.CLK
clk => RedPixels[4][11]~reg0.CLK
clk => RedPixels[4][12]~reg0.CLK
clk => RedPixels[4][13]~reg0.CLK
clk => RedPixels[4][14]~reg0.CLK
clk => RedPixels[4][15]~reg0.CLK
clk => RedPixels[5][0]~reg0.CLK
clk => RedPixels[5][1]~reg0.CLK
clk => RedPixels[5][2]~reg0.CLK
clk => RedPixels[5][3]~reg0.CLK
clk => RedPixels[5][4]~reg0.CLK
clk => RedPixels[5][5]~reg0.CLK
clk => RedPixels[5][6]~reg0.CLK
clk => RedPixels[5][7]~reg0.CLK
clk => RedPixels[5][8]~reg0.CLK
clk => RedPixels[5][9]~reg0.CLK
clk => RedPixels[5][10]~reg0.CLK
clk => RedPixels[5][11]~reg0.CLK
clk => RedPixels[5][12]~reg0.CLK
clk => RedPixels[5][13]~reg0.CLK
clk => RedPixels[5][14]~reg0.CLK
clk => RedPixels[5][15]~reg0.CLK
clk => RedPixels[6][0]~reg0.CLK
clk => RedPixels[6][1]~reg0.CLK
clk => RedPixels[6][2]~reg0.CLK
clk => RedPixels[6][3]~reg0.CLK
clk => RedPixels[6][4]~reg0.CLK
clk => RedPixels[6][5]~reg0.CLK
clk => RedPixels[6][6]~reg0.CLK
clk => RedPixels[6][7]~reg0.CLK
clk => RedPixels[6][8]~reg0.CLK
clk => RedPixels[6][9]~reg0.CLK
clk => RedPixels[6][10]~reg0.CLK
clk => RedPixels[6][11]~reg0.CLK
clk => RedPixels[6][12]~reg0.CLK
clk => RedPixels[6][13]~reg0.CLK
clk => RedPixels[6][14]~reg0.CLK
clk => RedPixels[6][15]~reg0.CLK
clk => RedPixels[7][0]~reg0.CLK
clk => RedPixels[7][1]~reg0.CLK
clk => RedPixels[7][2]~reg0.CLK
clk => RedPixels[7][3]~reg0.CLK
clk => RedPixels[7][4]~reg0.CLK
clk => RedPixels[7][5]~reg0.CLK
clk => RedPixels[7][6]~reg0.CLK
clk => RedPixels[7][7]~reg0.CLK
clk => RedPixels[7][8]~reg0.CLK
clk => RedPixels[7][9]~reg0.CLK
clk => RedPixels[7][10]~reg0.CLK
clk => RedPixels[7][11]~reg0.CLK
clk => RedPixels[7][12]~reg0.CLK
clk => RedPixels[7][13]~reg0.CLK
clk => RedPixels[7][14]~reg0.CLK
clk => RedPixels[7][15]~reg0.CLK
clk => RedPixels[8][0]~reg0.CLK
clk => RedPixels[8][1]~reg0.CLK
clk => RedPixels[8][2]~reg0.CLK
clk => RedPixels[8][3]~reg0.CLK
clk => RedPixels[8][4]~reg0.CLK
clk => RedPixels[8][5]~reg0.CLK
clk => RedPixels[8][6]~reg0.CLK
clk => RedPixels[8][7]~reg0.CLK
clk => RedPixels[8][8]~reg0.CLK
clk => RedPixels[8][9]~reg0.CLK
clk => RedPixels[8][10]~reg0.CLK
clk => RedPixels[8][11]~reg0.CLK
clk => RedPixels[8][12]~reg0.CLK
clk => RedPixels[8][13]~reg0.CLK
clk => RedPixels[8][14]~reg0.CLK
clk => RedPixels[8][15]~reg0.CLK
clk => RedPixels[9][0]~reg0.CLK
clk => RedPixels[9][1]~reg0.CLK
clk => RedPixels[9][2]~reg0.CLK
clk => RedPixels[9][3]~reg0.CLK
clk => RedPixels[9][4]~reg0.CLK
clk => RedPixels[9][5]~reg0.CLK
clk => RedPixels[9][6]~reg0.CLK
clk => RedPixels[9][7]~reg0.CLK
clk => RedPixels[9][8]~reg0.CLK
clk => RedPixels[9][9]~reg0.CLK
clk => RedPixels[9][10]~reg0.CLK
clk => RedPixels[9][11]~reg0.CLK
clk => RedPixels[9][12]~reg0.CLK
clk => RedPixels[9][13]~reg0.CLK
clk => RedPixels[9][14]~reg0.CLK
clk => RedPixels[9][15]~reg0.CLK
clk => RedPixels[10][0]~reg0.CLK
clk => RedPixels[10][1]~reg0.CLK
clk => RedPixels[10][2]~reg0.CLK
clk => RedPixels[10][3]~reg0.CLK
clk => RedPixels[10][4]~reg0.CLK
clk => RedPixels[10][5]~reg0.CLK
clk => RedPixels[10][6]~reg0.CLK
clk => RedPixels[10][7]~reg0.CLK
clk => RedPixels[10][8]~reg0.CLK
clk => RedPixels[10][9]~reg0.CLK
clk => RedPixels[10][10]~reg0.CLK
clk => RedPixels[10][11]~reg0.CLK
clk => RedPixels[10][12]~reg0.CLK
clk => RedPixels[10][13]~reg0.CLK
clk => RedPixels[10][14]~reg0.CLK
clk => RedPixels[10][15]~reg0.CLK
clk => RedPixels[11][0]~reg0.CLK
clk => RedPixels[11][1]~reg0.CLK
clk => RedPixels[11][2]~reg0.CLK
clk => RedPixels[11][3]~reg0.CLK
clk => RedPixels[11][4]~reg0.CLK
clk => RedPixels[11][5]~reg0.CLK
clk => RedPixels[11][6]~reg0.CLK
clk => RedPixels[11][7]~reg0.CLK
clk => RedPixels[11][8]~reg0.CLK
clk => RedPixels[11][9]~reg0.CLK
clk => RedPixels[11][10]~reg0.CLK
clk => RedPixels[11][11]~reg0.CLK
clk => RedPixels[11][12]~reg0.CLK
clk => RedPixels[11][13]~reg0.CLK
clk => RedPixels[11][14]~reg0.CLK
clk => RedPixels[11][15]~reg0.CLK
clk => RedPixels[12][0]~reg0.CLK
clk => RedPixels[12][1]~reg0.CLK
clk => RedPixels[12][2]~reg0.CLK
clk => RedPixels[12][3]~reg0.CLK
clk => RedPixels[12][4]~reg0.CLK
clk => RedPixels[12][5]~reg0.CLK
clk => RedPixels[12][6]~reg0.CLK
clk => RedPixels[12][7]~reg0.CLK
clk => RedPixels[12][8]~reg0.CLK
clk => RedPixels[12][9]~reg0.CLK
clk => RedPixels[12][10]~reg0.CLK
clk => RedPixels[12][11]~reg0.CLK
clk => RedPixels[12][12]~reg0.CLK
clk => RedPixels[12][13]~reg0.CLK
clk => RedPixels[12][14]~reg0.CLK
clk => RedPixels[12][15]~reg0.CLK
clk => RedPixels[13][0]~reg0.CLK
clk => RedPixels[13][1]~reg0.CLK
clk => RedPixels[13][2]~reg0.CLK
clk => RedPixels[13][3]~reg0.CLK
clk => RedPixels[13][4]~reg0.CLK
clk => RedPixels[13][5]~reg0.CLK
clk => RedPixels[13][6]~reg0.CLK
clk => RedPixels[13][7]~reg0.CLK
clk => RedPixels[13][8]~reg0.CLK
clk => RedPixels[13][9]~reg0.CLK
clk => RedPixels[13][10]~reg0.CLK
clk => RedPixels[13][11]~reg0.CLK
clk => RedPixels[13][12]~reg0.CLK
clk => RedPixels[13][13]~reg0.CLK
clk => RedPixels[13][14]~reg0.CLK
clk => RedPixels[13][15]~reg0.CLK
clk => RedPixels[14][0]~reg0.CLK
clk => RedPixels[14][1]~reg0.CLK
clk => RedPixels[14][2]~reg0.CLK
clk => RedPixels[14][3]~reg0.CLK
clk => RedPixels[14][4]~reg0.CLK
clk => RedPixels[14][5]~reg0.CLK
clk => RedPixels[14][6]~reg0.CLK
clk => RedPixels[14][7]~reg0.CLK
clk => RedPixels[14][8]~reg0.CLK
clk => RedPixels[14][9]~reg0.CLK
clk => RedPixels[14][10]~reg0.CLK
clk => RedPixels[14][11]~reg0.CLK
clk => RedPixels[14][12]~reg0.CLK
clk => RedPixels[14][13]~reg0.CLK
clk => RedPixels[14][14]~reg0.CLK
clk => RedPixels[14][15]~reg0.CLK
clk => RedPixels[15][0]~reg0.CLK
clk => RedPixels[15][1]~reg0.CLK
clk => RedPixels[15][2]~reg0.CLK
clk => RedPixels[15][3]~reg0.CLK
clk => RedPixels[15][4]~reg0.CLK
clk => RedPixels[15][5]~reg0.CLK
clk => RedPixels[15][6]~reg0.CLK
clk => RedPixels[15][7]~reg0.CLK
clk => RedPixels[15][8]~reg0.CLK
clk => RedPixels[15][9]~reg0.CLK
clk => RedPixels[15][10]~reg0.CLK
clk => RedPixels[15][11]~reg0.CLK
clk => RedPixels[15][12]~reg0.CLK
clk => RedPixels[15][13]~reg0.CLK
clk => RedPixels[15][14]~reg0.CLK
clk => RedPixels[15][15]~reg0.CLK
clk => state_r~1.DATAIN
reset => check_conflict:chk.reset
reset => RedPixels.OUTPUTSELECT
reset => RedPixels.OUTPUTSELECT
reset => RedPixels.OUTPUTSELECT
reset => RedPixels.OUTPUTSELECT
reset => RedPixels.OUTPUTSELECT
reset => RedPixels.OUTPUTSELECT
reset => RedPixels.OUTPUTSELECT
reset => RedPixels.OUTPUTSELECT
reset => RedPixels.OUTPUTSELECT
reset => RedPixels.OUTPUTSELECT
reset => RedPixels.OUTPUTSELECT
reset => RedPixels.OUTPUTSELECT
reset => RedPixels.OUTPUTSELECT
reset => RedPixels.OUTPUTSELECT
reset => RedPixels.OUTPUTSELECT
reset => RedPixels.OUTPUTSELECT
reset => RedPixels.OUTPUTSELECT
reset => RedPixels.OUTPUTSELECT
reset => RedPixels.OUTPUTSELECT
reset => RedPixels.OUTPUTSELECT
reset => RedPixels.OUTPUTSELECT
reset => RedPixels.OUTPUTSELECT
reset => RedPixels.OUTPUTSELECT
reset => RedPixels.OUTPUTSELECT
reset => RedPixels.OUTPUTSELECT
reset => RedPixels.OUTPUTSELECT
reset => RedPixels.OUTPUTSELECT
reset => RedPixels.OUTPUTSELECT
reset => RedPixels.OUTPUTSELECT
reset => RedPixels.OUTPUTSELECT
reset => RedPixels.OUTPUTSELECT
reset => RedPixels.OUTPUTSELECT
reset => RedPixels.OUTPUTSELECT
reset => RedPixels.OUTPUTSELECT
reset => RedPixels.OUTPUTSELECT
reset => RedPixels.OUTPUTSELECT
reset => RedPixels.OUTPUTSELECT
reset => RedPixels.OUTPUTSELECT
reset => RedPixels.OUTPUTSELECT
reset => RedPixels.OUTPUTSELECT
reset => RedPixels.OUTPUTSELECT
reset => RedPixels.OUTPUTSELECT
reset => RedPixels.OUTPUTSELECT
reset => RedPixels.OUTPUTSELECT
reset => RedPixels.OUTPUTSELECT
reset => RedPixels.OUTPUTSELECT
reset => RedPixels.OUTPUTSELECT
reset => RedPixels.OUTPUTSELECT
reset => RedPixels.OUTPUTSELECT
reset => RedPixels.OUTPUTSELECT
reset => RedPixels.OUTPUTSELECT
reset => RedPixels.OUTPUTSELECT
reset => RedPixels.OUTPUTSELECT
reset => RedPixels.OUTPUTSELECT
reset => RedPixels.OUTPUTSELECT
reset => RedPixels.OUTPUTSELECT
reset => RedPixels.OUTPUTSELECT
reset => RedPixels.OUTPUTSELECT
reset => RedPixels.OUTPUTSELECT
reset => RedPixels.OUTPUTSELECT
reset => RedPixels.OUTPUTSELECT
reset => RedPixels.OUTPUTSELECT
reset => RedPixels.OUTPUTSELECT
reset => RedPixels.OUTPUTSELECT
reset => RedPixels.OUTPUTSELECT
reset => RedPixels.OUTPUTSELECT
reset => RedPixels.OUTPUTSELECT
reset => RedPixels.OUTPUTSELECT
reset => RedPixels.OUTPUTSELECT
reset => RedPixels.OUTPUTSELECT
reset => RedPixels.OUTPUTSELECT
reset => RedPixels.OUTPUTSELECT
reset => RedPixels.OUTPUTSELECT
reset => RedPixels.OUTPUTSELECT
reset => RedPixels.OUTPUTSELECT
reset => RedPixels.OUTPUTSELECT
reset => RedPixels.OUTPUTSELECT
reset => RedPixels.OUTPUTSELECT
reset => RedPixels.OUTPUTSELECT
reset => RedPixels.OUTPUTSELECT
reset => RedPixels.OUTPUTSELECT
reset => RedPixels.OUTPUTSELECT
reset => RedPixels.OUTPUTSELECT
reset => RedPixels.OUTPUTSELECT
reset => RedPixels.OUTPUTSELECT
reset => RedPixels.OUTPUTSELECT
reset => RedPixels.OUTPUTSELECT
reset => RedPixels.OUTPUTSELECT
reset => RedPixels.OUTPUTSELECT
reset => RedPixels.OUTPUTSELECT
reset => RedPixels.OUTPUTSELECT
reset => RedPixels.OUTPUTSELECT
reset => RedPixels.OUTPUTSELECT
reset => RedPixels.OUTPUTSELECT
reset => RedPixels.OUTPUTSELECT
reset => RedPixels.OUTPUTSELECT
reset => RedPixels.OUTPUTSELECT
reset => RedPixels.OUTPUTSELECT
reset => RedPixels.OUTPUTSELECT
reset => RedPixels.OUTPUTSELECT
reset => RedPixels.OUTPUTSELECT
reset => RedPixels.OUTPUTSELECT
reset => RedPixels.OUTPUTSELECT
reset => RedPixels.OUTPUTSELECT
reset => RedPixels.OUTPUTSELECT
reset => RedPixels.OUTPUTSELECT
reset => RedPixels.OUTPUTSELECT
reset => RedPixels.OUTPUTSELECT
reset => RedPixels.OUTPUTSELECT
reset => RedPixels.OUTPUTSELECT
reset => RedPixels.OUTPUTSELECT
reset => RedPixels.OUTPUTSELECT
reset => RedPixels.OUTPUTSELECT
reset => RedPixels.OUTPUTSELECT
reset => RedPixels.OUTPUTSELECT
reset => RedPixels.OUTPUTSELECT
reset => RedPixels.OUTPUTSELECT
reset => RedPixels.OUTPUTSELECT
reset => RedPixels.OUTPUTSELECT
reset => RedPixels.OUTPUTSELECT
reset => RedPixels.OUTPUTSELECT
reset => RedPixels.OUTPUTSELECT
reset => RedPixels.OUTPUTSELECT
reset => RedPixels.OUTPUTSELECT
reset => RedPixels.OUTPUTSELECT
reset => RedPixels.OUTPUTSELECT
reset => RedPixels.OUTPUTSELECT
reset => RedPixels.OUTPUTSELECT
reset => RedPixels.OUTPUTSELECT
reset => RedPixels.OUTPUTSELECT
reset => RedPixels.OUTPUTSELECT
reset => RedPixels.OUTPUTSELECT
reset => RedPixels.OUTPUTSELECT
reset => RedPixels.OUTPUTSELECT
reset => RedPixels.OUTPUTSELECT
reset => RedPixels.OUTPUTSELECT
reset => RedPixels.OUTPUTSELECT
reset => RedPixels.OUTPUTSELECT
reset => RedPixels.OUTPUTSELECT
reset => RedPixels.OUTPUTSELECT
reset => RedPixels.OUTPUTSELECT
reset => RedPixels.OUTPUTSELECT
reset => RedPixels.OUTPUTSELECT
reset => RedPixels.OUTPUTSELECT
reset => RedPixels.OUTPUTSELECT
reset => RedPixels.OUTPUTSELECT
reset => RedPixels.OUTPUTSELECT
reset => RedPixels.OUTPUTSELECT
reset => RedPixels.OUTPUTSELECT
reset => RedPixels.OUTPUTSELECT
reset => RedPixels.OUTPUTSELECT
reset => RedPixels.OUTPUTSELECT
reset => RedPixels.OUTPUTSELECT
reset => RedPixels.OUTPUTSELECT
reset => RedPixels.OUTPUTSELECT
reset => RedPixels.OUTPUTSELECT
reset => RedPixels.OUTPUTSELECT
reset => RedPixels.OUTPUTSELECT
reset => RedPixels.OUTPUTSELECT
reset => RedPixels.OUTPUTSELECT
reset => RedPixels.OUTPUTSELECT
reset => RedPixels.OUTPUTSELECT
reset => RedPixels.OUTPUTSELECT
reset => RedPixels.OUTPUTSELECT
reset => RedPixels.OUTPUTSELECT
reset => RedPixels.OUTPUTSELECT
reset => RedPixels.OUTPUTSELECT
reset => RedPixels.OUTPUTSELECT
reset => RedPixels.OUTPUTSELECT
reset => RedPixels.OUTPUTSELECT
reset => RedPixels.OUTPUTSELECT
reset => RedPixels.OUTPUTSELECT
reset => RedPixels.OUTPUTSELECT
reset => RedPixels.OUTPUTSELECT
reset => RedPixels.OUTPUTSELECT
reset => RedPixels.OUTPUTSELECT
reset => RedPixels.OUTPUTSELECT
reset => RedPixels.OUTPUTSELECT
reset => RedPixels.OUTPUTSELECT
reset => RedPixels.OUTPUTSELECT
reset => RedPixels.OUTPUTSELECT
reset => RedPixels.OUTPUTSELECT
reset => RedPixels.OUTPUTSELECT
reset => RedPixels.OUTPUTSELECT
reset => RedPixels.OUTPUTSELECT
reset => RedPixels.OUTPUTSELECT
reset => RedPixels.OUTPUTSELECT
reset => RedPixels.OUTPUTSELECT
reset => RedPixels.OUTPUTSELECT
reset => RedPixels.OUTPUTSELECT
reset => RedPixels.OUTPUTSELECT
reset => RedPixels.OUTPUTSELECT
reset => RedPixels.OUTPUTSELECT
reset => RedPixels.OUTPUTSELECT
reset => RedPixels.OUTPUTSELECT
reset => RedPixels.OUTPUTSELECT
reset => RedPixels.OUTPUTSELECT
reset => RedPixels.OUTPUTSELECT
reset => RedPixels.OUTPUTSELECT
reset => RedPixels.OUTPUTSELECT
reset => RedPixels.OUTPUTSELECT
reset => RedPixels.OUTPUTSELECT
reset => RedPixels.OUTPUTSELECT
reset => RedPixels.OUTPUTSELECT
reset => RedPixels.OUTPUTSELECT
reset => RedPixels.OUTPUTSELECT
reset => RedPixels.OUTPUTSELECT
reset => RedPixels.OUTPUTSELECT
reset => RedPixels.OUTPUTSELECT
reset => RedPixels.OUTPUTSELECT
reset => RedPixels.OUTPUTSELECT
reset => RedPixels.OUTPUTSELECT
reset => RedPixels.OUTPUTSELECT
reset => RedPixels.OUTPUTSELECT
reset => RedPixels.OUTPUTSELECT
reset => RedPixels.OUTPUTSELECT
reset => RedPixels.OUTPUTSELECT
reset => RedPixels.OUTPUTSELECT
reset => RedPixels.OUTPUTSELECT
reset => RedPixels.OUTPUTSELECT
reset => RedPixels.OUTPUTSELECT
reset => RedPixels.OUTPUTSELECT
reset => RedPixels.OUTPUTSELECT
reset => RedPixels.OUTPUTSELECT
reset => RedPixels.OUTPUTSELECT
reset => RedPixels.OUTPUTSELECT
reset => RedPixels.OUTPUTSELECT
reset => RedPixels.OUTPUTSELECT
reset => RedPixels.OUTPUTSELECT
reset => RedPixels.OUTPUTSELECT
reset => RedPixels.OUTPUTSELECT
reset => RedPixels.OUTPUTSELECT
reset => RedPixels.OUTPUTSELECT
reset => RedPixels.OUTPUTSELECT
reset => RedPixels.OUTPUTSELECT
reset => RedPixels.OUTPUTSELECT
reset => RedPixels.OUTPUTSELECT
reset => RedPixels.OUTPUTSELECT
reset => RedPixels.OUTPUTSELECT
reset => RedPixels.OUTPUTSELECT
reset => RedPixels.OUTPUTSELECT
reset => RedPixels.OUTPUTSELECT
reset => RedPixels.OUTPUTSELECT
reset => RedPixels.OUTPUTSELECT
reset => RedPixels.OUTPUTSELECT
reset => RedPixels.OUTPUTSELECT
reset => RedPixels.OUTPUTSELECT
reset => RedPixels.OUTPUTSELECT
reset => RedPixels.OUTPUTSELECT
reset => RedPixels.OUTPUTSELECT
reset => RedPixels.OUTPUTSELECT
reset => RedPixels.OUTPUTSELECT
reset => RedPixels.OUTPUTSELECT
reset => RedPixels.OUTPUTSELECT
reset => RedPixels.OUTPUTSELECT
reset => RedPixels.OUTPUTSELECT
reset => state_r.OUTPUTSELECT
reset => state_r.OUTPUTSELECT
reset => state_r.OUTPUTSELECT


|lab8|apple_generator:gen|col_select:col
row_lights[0] <= Decoder0.DB_MAX_OUTPUT_PORT_TYPE
row_lights[1] <= Decoder0.DB_MAX_OUTPUT_PORT_TYPE
row_lights[2] <= Decoder0.DB_MAX_OUTPUT_PORT_TYPE
row_lights[3] <= Decoder0.DB_MAX_OUTPUT_PORT_TYPE
row_lights[4] <= Decoder0.DB_MAX_OUTPUT_PORT_TYPE
row_lights[5] <= Decoder0.DB_MAX_OUTPUT_PORT_TYPE
row_lights[6] <= Decoder0.DB_MAX_OUTPUT_PORT_TYPE
row_lights[7] <= Decoder0.DB_MAX_OUTPUT_PORT_TYPE
row_lights[8] <= Decoder0.DB_MAX_OUTPUT_PORT_TYPE
row_lights[9] <= Decoder0.DB_MAX_OUTPUT_PORT_TYPE
row_lights[10] <= Decoder0.DB_MAX_OUTPUT_PORT_TYPE
row_lights[11] <= Decoder0.DB_MAX_OUTPUT_PORT_TYPE
row_lights[12] <= Decoder0.DB_MAX_OUTPUT_PORT_TYPE
row_lights[13] <= Decoder0.DB_MAX_OUTPUT_PORT_TYPE
row_lights[14] <= Decoder0.DB_MAX_OUTPUT_PORT_TYPE
row_lights[15] <= Decoder0.DB_MAX_OUTPUT_PORT_TYPE
rand_col[0] => Decoder0.IN3
rand_col[1] => Decoder0.IN2
rand_col[2] => Decoder0.IN1
rand_col[3] => Decoder0.IN0


|lab8|apple_generator:gen|check_conflict:chk
conflict <= conflict~reg0.DB_MAX_OUTPUT_PORT_TYPE
apple_active <= apple_active~reg0.DB_MAX_OUTPUT_PORT_TYPE
red[0][0] => c.IN0
red[0][0] => Equal1.IN255
red[0][1] => c.IN0
red[0][1] => Equal1.IN254
red[0][2] => c.IN0
red[0][2] => Equal1.IN253
red[0][3] => c.IN0
red[0][3] => Equal1.IN252
red[0][4] => c.IN0
red[0][4] => Equal1.IN251
red[0][5] => c.IN0
red[0][5] => Equal1.IN250
red[0][6] => c.IN0
red[0][6] => Equal1.IN249
red[0][7] => c.IN0
red[0][7] => Equal1.IN248
red[0][8] => c.IN0
red[0][8] => Equal1.IN247
red[0][9] => c.IN0
red[0][9] => Equal1.IN246
red[0][10] => c.IN0
red[0][10] => Equal1.IN245
red[0][11] => c.IN0
red[0][11] => Equal1.IN244
red[0][12] => c.IN0
red[0][12] => Equal1.IN243
red[0][13] => c.IN0
red[0][13] => Equal1.IN242
red[0][14] => c.IN0
red[0][14] => Equal1.IN241
red[0][15] => c.IN0
red[0][15] => Equal1.IN240
red[1][0] => c.IN0
red[1][0] => Equal1.IN239
red[1][1] => c.IN0
red[1][1] => Equal1.IN238
red[1][2] => c.IN0
red[1][2] => Equal1.IN237
red[1][3] => c.IN0
red[1][3] => Equal1.IN236
red[1][4] => c.IN0
red[1][4] => Equal1.IN235
red[1][5] => c.IN0
red[1][5] => Equal1.IN234
red[1][6] => c.IN0
red[1][6] => Equal1.IN233
red[1][7] => c.IN0
red[1][7] => Equal1.IN232
red[1][8] => c.IN0
red[1][8] => Equal1.IN231
red[1][9] => c.IN0
red[1][9] => Equal1.IN230
red[1][10] => c.IN0
red[1][10] => Equal1.IN229
red[1][11] => c.IN0
red[1][11] => Equal1.IN228
red[1][12] => c.IN0
red[1][12] => Equal1.IN227
red[1][13] => c.IN0
red[1][13] => Equal1.IN226
red[1][14] => c.IN0
red[1][14] => Equal1.IN225
red[1][15] => c.IN0
red[1][15] => Equal1.IN224
red[2][0] => c.IN0
red[2][0] => Equal1.IN223
red[2][1] => c.IN0
red[2][1] => Equal1.IN222
red[2][2] => c.IN0
red[2][2] => Equal1.IN221
red[2][3] => c.IN0
red[2][3] => Equal1.IN220
red[2][4] => c.IN0
red[2][4] => Equal1.IN219
red[2][5] => c.IN0
red[2][5] => Equal1.IN218
red[2][6] => c.IN0
red[2][6] => Equal1.IN217
red[2][7] => c.IN0
red[2][7] => Equal1.IN216
red[2][8] => c.IN0
red[2][8] => Equal1.IN215
red[2][9] => c.IN0
red[2][9] => Equal1.IN214
red[2][10] => c.IN0
red[2][10] => Equal1.IN213
red[2][11] => c.IN0
red[2][11] => Equal1.IN212
red[2][12] => c.IN0
red[2][12] => Equal1.IN211
red[2][13] => c.IN0
red[2][13] => Equal1.IN210
red[2][14] => c.IN0
red[2][14] => Equal1.IN209
red[2][15] => c.IN0
red[2][15] => Equal1.IN208
red[3][0] => c.IN0
red[3][0] => Equal1.IN207
red[3][1] => c.IN0
red[3][1] => Equal1.IN206
red[3][2] => c.IN0
red[3][2] => Equal1.IN205
red[3][3] => c.IN0
red[3][3] => Equal1.IN204
red[3][4] => c.IN0
red[3][4] => Equal1.IN203
red[3][5] => c.IN0
red[3][5] => Equal1.IN202
red[3][6] => c.IN0
red[3][6] => Equal1.IN201
red[3][7] => c.IN0
red[3][7] => Equal1.IN200
red[3][8] => c.IN0
red[3][8] => Equal1.IN199
red[3][9] => c.IN0
red[3][9] => Equal1.IN198
red[3][10] => c.IN0
red[3][10] => Equal1.IN197
red[3][11] => c.IN0
red[3][11] => Equal1.IN196
red[3][12] => c.IN0
red[3][12] => Equal1.IN195
red[3][13] => c.IN0
red[3][13] => Equal1.IN194
red[3][14] => c.IN0
red[3][14] => Equal1.IN193
red[3][15] => c.IN0
red[3][15] => Equal1.IN192
red[4][0] => c.IN0
red[4][0] => Equal1.IN191
red[4][1] => c.IN0
red[4][1] => Equal1.IN190
red[4][2] => c.IN0
red[4][2] => Equal1.IN189
red[4][3] => c.IN0
red[4][3] => Equal1.IN188
red[4][4] => c.IN0
red[4][4] => Equal1.IN187
red[4][5] => c.IN0
red[4][5] => Equal1.IN186
red[4][6] => c.IN0
red[4][6] => Equal1.IN185
red[4][7] => c.IN0
red[4][7] => Equal1.IN184
red[4][8] => c.IN0
red[4][8] => Equal1.IN183
red[4][9] => c.IN0
red[4][9] => Equal1.IN182
red[4][10] => c.IN0
red[4][10] => Equal1.IN181
red[4][11] => c.IN0
red[4][11] => Equal1.IN180
red[4][12] => c.IN0
red[4][12] => Equal1.IN179
red[4][13] => c.IN0
red[4][13] => Equal1.IN178
red[4][14] => c.IN0
red[4][14] => Equal1.IN177
red[4][15] => c.IN0
red[4][15] => Equal1.IN176
red[5][0] => c.IN0
red[5][0] => Equal1.IN175
red[5][1] => c.IN0
red[5][1] => Equal1.IN174
red[5][2] => c.IN0
red[5][2] => Equal1.IN173
red[5][3] => c.IN0
red[5][3] => Equal1.IN172
red[5][4] => c.IN0
red[5][4] => Equal1.IN171
red[5][5] => c.IN0
red[5][5] => Equal1.IN170
red[5][6] => c.IN0
red[5][6] => Equal1.IN169
red[5][7] => c.IN0
red[5][7] => Equal1.IN168
red[5][8] => c.IN0
red[5][8] => Equal1.IN167
red[5][9] => c.IN0
red[5][9] => Equal1.IN166
red[5][10] => c.IN0
red[5][10] => Equal1.IN165
red[5][11] => c.IN0
red[5][11] => Equal1.IN164
red[5][12] => c.IN0
red[5][12] => Equal1.IN163
red[5][13] => c.IN0
red[5][13] => Equal1.IN162
red[5][14] => c.IN0
red[5][14] => Equal1.IN161
red[5][15] => c.IN0
red[5][15] => Equal1.IN160
red[6][0] => c.IN0
red[6][0] => Equal1.IN159
red[6][1] => c.IN0
red[6][1] => Equal1.IN158
red[6][2] => c.IN0
red[6][2] => Equal1.IN157
red[6][3] => c.IN0
red[6][3] => Equal1.IN156
red[6][4] => c.IN0
red[6][4] => Equal1.IN155
red[6][5] => c.IN0
red[6][5] => Equal1.IN154
red[6][6] => c.IN0
red[6][6] => Equal1.IN153
red[6][7] => c.IN0
red[6][7] => Equal1.IN152
red[6][8] => c.IN0
red[6][8] => Equal1.IN151
red[6][9] => c.IN0
red[6][9] => Equal1.IN150
red[6][10] => c.IN0
red[6][10] => Equal1.IN149
red[6][11] => c.IN0
red[6][11] => Equal1.IN148
red[6][12] => c.IN0
red[6][12] => Equal1.IN147
red[6][13] => c.IN0
red[6][13] => Equal1.IN146
red[6][14] => c.IN0
red[6][14] => Equal1.IN145
red[6][15] => c.IN0
red[6][15] => Equal1.IN144
red[7][0] => c.IN0
red[7][0] => Equal1.IN143
red[7][1] => c.IN0
red[7][1] => Equal1.IN142
red[7][2] => c.IN0
red[7][2] => Equal1.IN141
red[7][3] => c.IN0
red[7][3] => Equal1.IN140
red[7][4] => c.IN0
red[7][4] => Equal1.IN139
red[7][5] => c.IN0
red[7][5] => Equal1.IN138
red[7][6] => c.IN0
red[7][6] => Equal1.IN137
red[7][7] => c.IN0
red[7][7] => Equal1.IN136
red[7][8] => c.IN0
red[7][8] => Equal1.IN135
red[7][9] => c.IN0
red[7][9] => Equal1.IN134
red[7][10] => c.IN0
red[7][10] => Equal1.IN133
red[7][11] => c.IN0
red[7][11] => Equal1.IN132
red[7][12] => c.IN0
red[7][12] => Equal1.IN131
red[7][13] => c.IN0
red[7][13] => Equal1.IN130
red[7][14] => c.IN0
red[7][14] => Equal1.IN129
red[7][15] => c.IN0
red[7][15] => Equal1.IN128
red[8][0] => c.IN0
red[8][0] => Equal1.IN127
red[8][1] => c.IN0
red[8][1] => Equal1.IN126
red[8][2] => c.IN0
red[8][2] => Equal1.IN125
red[8][3] => c.IN0
red[8][3] => Equal1.IN124
red[8][4] => c.IN0
red[8][4] => Equal1.IN123
red[8][5] => c.IN0
red[8][5] => Equal1.IN122
red[8][6] => c.IN0
red[8][6] => Equal1.IN121
red[8][7] => c.IN0
red[8][7] => Equal1.IN120
red[8][8] => c.IN0
red[8][8] => Equal1.IN119
red[8][9] => c.IN0
red[8][9] => Equal1.IN118
red[8][10] => c.IN0
red[8][10] => Equal1.IN117
red[8][11] => c.IN0
red[8][11] => Equal1.IN116
red[8][12] => c.IN0
red[8][12] => Equal1.IN115
red[8][13] => c.IN0
red[8][13] => Equal1.IN114
red[8][14] => c.IN0
red[8][14] => Equal1.IN113
red[8][15] => c.IN0
red[8][15] => Equal1.IN112
red[9][0] => c.IN0
red[9][0] => Equal1.IN111
red[9][1] => c.IN0
red[9][1] => Equal1.IN110
red[9][2] => c.IN0
red[9][2] => Equal1.IN109
red[9][3] => c.IN0
red[9][3] => Equal1.IN108
red[9][4] => c.IN0
red[9][4] => Equal1.IN107
red[9][5] => c.IN0
red[9][5] => Equal1.IN106
red[9][6] => c.IN0
red[9][6] => Equal1.IN105
red[9][7] => c.IN0
red[9][7] => Equal1.IN104
red[9][8] => c.IN0
red[9][8] => Equal1.IN103
red[9][9] => c.IN0
red[9][9] => Equal1.IN102
red[9][10] => c.IN0
red[9][10] => Equal1.IN101
red[9][11] => c.IN0
red[9][11] => Equal1.IN100
red[9][12] => c.IN0
red[9][12] => Equal1.IN99
red[9][13] => c.IN0
red[9][13] => Equal1.IN98
red[9][14] => c.IN0
red[9][14] => Equal1.IN97
red[9][15] => c.IN0
red[9][15] => Equal1.IN96
red[10][0] => c.IN0
red[10][0] => Equal1.IN95
red[10][1] => c.IN0
red[10][1] => Equal1.IN94
red[10][2] => c.IN0
red[10][2] => Equal1.IN93
red[10][3] => c.IN0
red[10][3] => Equal1.IN92
red[10][4] => c.IN0
red[10][4] => Equal1.IN91
red[10][5] => c.IN0
red[10][5] => Equal1.IN90
red[10][6] => c.IN0
red[10][6] => Equal1.IN89
red[10][7] => c.IN0
red[10][7] => Equal1.IN88
red[10][8] => c.IN0
red[10][8] => Equal1.IN87
red[10][9] => c.IN0
red[10][9] => Equal1.IN86
red[10][10] => c.IN0
red[10][10] => Equal1.IN85
red[10][11] => c.IN0
red[10][11] => Equal1.IN84
red[10][12] => c.IN0
red[10][12] => Equal1.IN83
red[10][13] => c.IN0
red[10][13] => Equal1.IN82
red[10][14] => c.IN0
red[10][14] => Equal1.IN81
red[10][15] => c.IN0
red[10][15] => Equal1.IN80
red[11][0] => c.IN0
red[11][0] => Equal1.IN79
red[11][1] => c.IN0
red[11][1] => Equal1.IN78
red[11][2] => c.IN0
red[11][2] => Equal1.IN77
red[11][3] => c.IN0
red[11][3] => Equal1.IN76
red[11][4] => c.IN0
red[11][4] => Equal1.IN75
red[11][5] => c.IN0
red[11][5] => Equal1.IN74
red[11][6] => c.IN0
red[11][6] => Equal1.IN73
red[11][7] => c.IN0
red[11][7] => Equal1.IN72
red[11][8] => c.IN0
red[11][8] => Equal1.IN71
red[11][9] => c.IN0
red[11][9] => Equal1.IN70
red[11][10] => c.IN0
red[11][10] => Equal1.IN69
red[11][11] => c.IN0
red[11][11] => Equal1.IN68
red[11][12] => c.IN0
red[11][12] => Equal1.IN67
red[11][13] => c.IN0
red[11][13] => Equal1.IN66
red[11][14] => c.IN0
red[11][14] => Equal1.IN65
red[11][15] => c.IN0
red[11][15] => Equal1.IN64
red[12][0] => c.IN0
red[12][0] => Equal1.IN63
red[12][1] => c.IN0
red[12][1] => Equal1.IN62
red[12][2] => c.IN0
red[12][2] => Equal1.IN61
red[12][3] => c.IN0
red[12][3] => Equal1.IN60
red[12][4] => c.IN0
red[12][4] => Equal1.IN59
red[12][5] => c.IN0
red[12][5] => Equal1.IN58
red[12][6] => c.IN0
red[12][6] => Equal1.IN57
red[12][7] => c.IN0
red[12][7] => Equal1.IN56
red[12][8] => c.IN0
red[12][8] => Equal1.IN55
red[12][9] => c.IN0
red[12][9] => Equal1.IN54
red[12][10] => c.IN0
red[12][10] => Equal1.IN53
red[12][11] => c.IN0
red[12][11] => Equal1.IN52
red[12][12] => c.IN0
red[12][12] => Equal1.IN51
red[12][13] => c.IN0
red[12][13] => Equal1.IN50
red[12][14] => c.IN0
red[12][14] => Equal1.IN49
red[12][15] => c.IN0
red[12][15] => Equal1.IN48
red[13][0] => c.IN0
red[13][0] => Equal1.IN47
red[13][1] => c.IN0
red[13][1] => Equal1.IN46
red[13][2] => c.IN0
red[13][2] => Equal1.IN45
red[13][3] => c.IN0
red[13][3] => Equal1.IN44
red[13][4] => c.IN0
red[13][4] => Equal1.IN43
red[13][5] => c.IN0
red[13][5] => Equal1.IN42
red[13][6] => c.IN0
red[13][6] => Equal1.IN41
red[13][7] => c.IN0
red[13][7] => Equal1.IN40
red[13][8] => c.IN0
red[13][8] => Equal1.IN39
red[13][9] => c.IN0
red[13][9] => Equal1.IN38
red[13][10] => c.IN0
red[13][10] => Equal1.IN37
red[13][11] => c.IN0
red[13][11] => Equal1.IN36
red[13][12] => c.IN0
red[13][12] => Equal1.IN35
red[13][13] => c.IN0
red[13][13] => Equal1.IN34
red[13][14] => c.IN0
red[13][14] => Equal1.IN33
red[13][15] => c.IN0
red[13][15] => Equal1.IN32
red[14][0] => c.IN0
red[14][0] => Equal1.IN31
red[14][1] => c.IN0
red[14][1] => Equal1.IN30
red[14][2] => c.IN0
red[14][2] => Equal1.IN29
red[14][3] => c.IN0
red[14][3] => Equal1.IN28
red[14][4] => c.IN0
red[14][4] => Equal1.IN27
red[14][5] => c.IN0
red[14][5] => Equal1.IN26
red[14][6] => c.IN0
red[14][6] => Equal1.IN25
red[14][7] => c.IN0
red[14][7] => Equal1.IN24
red[14][8] => c.IN0
red[14][8] => Equal1.IN23
red[14][9] => c.IN0
red[14][9] => Equal1.IN22
red[14][10] => c.IN0
red[14][10] => Equal1.IN21
red[14][11] => c.IN0
red[14][11] => Equal1.IN20
red[14][12] => c.IN0
red[14][12] => Equal1.IN19
red[14][13] => c.IN0
red[14][13] => Equal1.IN18
red[14][14] => c.IN0
red[14][14] => Equal1.IN17
red[14][15] => c.IN0
red[14][15] => Equal1.IN16
red[15][0] => c.IN0
red[15][0] => Equal1.IN15
red[15][1] => c.IN0
red[15][1] => Equal1.IN14
red[15][2] => c.IN0
red[15][2] => Equal1.IN13
red[15][3] => c.IN0
red[15][3] => Equal1.IN12
red[15][4] => c.IN0
red[15][4] => Equal1.IN11
red[15][5] => c.IN0
red[15][5] => Equal1.IN10
red[15][6] => c.IN0
red[15][6] => Equal1.IN9
red[15][7] => c.IN0
red[15][7] => Equal1.IN8
red[15][8] => c.IN0
red[15][8] => Equal1.IN7
red[15][9] => c.IN0
red[15][9] => Equal1.IN6
red[15][10] => c.IN0
red[15][10] => Equal1.IN5
red[15][11] => c.IN0
red[15][11] => Equal1.IN4
red[15][12] => c.IN0
red[15][12] => Equal1.IN3
red[15][13] => c.IN0
red[15][13] => Equal1.IN2
red[15][14] => c.IN0
red[15][14] => Equal1.IN1
red[15][15] => c.IN0
red[15][15] => Equal1.IN0
grn[0][0] => c.IN1
grn[0][1] => c.IN1
grn[0][2] => c.IN1
grn[0][3] => c.IN1
grn[0][4] => c.IN1
grn[0][5] => c.IN1
grn[0][6] => c.IN1
grn[0][7] => c.IN1
grn[0][8] => c.IN1
grn[0][9] => c.IN1
grn[0][10] => c.IN1
grn[0][11] => c.IN1
grn[0][12] => c.IN1
grn[0][13] => c.IN1
grn[0][14] => c.IN1
grn[0][15] => c.IN1
grn[1][0] => c.IN1
grn[1][1] => c.IN1
grn[1][2] => c.IN1
grn[1][3] => c.IN1
grn[1][4] => c.IN1
grn[1][5] => c.IN1
grn[1][6] => c.IN1
grn[1][7] => c.IN1
grn[1][8] => c.IN1
grn[1][9] => c.IN1
grn[1][10] => c.IN1
grn[1][11] => c.IN1
grn[1][12] => c.IN1
grn[1][13] => c.IN1
grn[1][14] => c.IN1
grn[1][15] => c.IN1
grn[2][0] => c.IN1
grn[2][1] => c.IN1
grn[2][2] => c.IN1
grn[2][3] => c.IN1
grn[2][4] => c.IN1
grn[2][5] => c.IN1
grn[2][6] => c.IN1
grn[2][7] => c.IN1
grn[2][8] => c.IN1
grn[2][9] => c.IN1
grn[2][10] => c.IN1
grn[2][11] => c.IN1
grn[2][12] => c.IN1
grn[2][13] => c.IN1
grn[2][14] => c.IN1
grn[2][15] => c.IN1
grn[3][0] => c.IN1
grn[3][1] => c.IN1
grn[3][2] => c.IN1
grn[3][3] => c.IN1
grn[3][4] => c.IN1
grn[3][5] => c.IN1
grn[3][6] => c.IN1
grn[3][7] => c.IN1
grn[3][8] => c.IN1
grn[3][9] => c.IN1
grn[3][10] => c.IN1
grn[3][11] => c.IN1
grn[3][12] => c.IN1
grn[3][13] => c.IN1
grn[3][14] => c.IN1
grn[3][15] => c.IN1
grn[4][0] => c.IN1
grn[4][1] => c.IN1
grn[4][2] => c.IN1
grn[4][3] => c.IN1
grn[4][4] => c.IN1
grn[4][5] => c.IN1
grn[4][6] => c.IN1
grn[4][7] => c.IN1
grn[4][8] => c.IN1
grn[4][9] => c.IN1
grn[4][10] => c.IN1
grn[4][11] => c.IN1
grn[4][12] => c.IN1
grn[4][13] => c.IN1
grn[4][14] => c.IN1
grn[4][15] => c.IN1
grn[5][0] => c.IN1
grn[5][1] => c.IN1
grn[5][2] => c.IN1
grn[5][3] => c.IN1
grn[5][4] => c.IN1
grn[5][5] => c.IN1
grn[5][6] => c.IN1
grn[5][7] => c.IN1
grn[5][8] => c.IN1
grn[5][9] => c.IN1
grn[5][10] => c.IN1
grn[5][11] => c.IN1
grn[5][12] => c.IN1
grn[5][13] => c.IN1
grn[5][14] => c.IN1
grn[5][15] => c.IN1
grn[6][0] => c.IN1
grn[6][1] => c.IN1
grn[6][2] => c.IN1
grn[6][3] => c.IN1
grn[6][4] => c.IN1
grn[6][5] => c.IN1
grn[6][6] => c.IN1
grn[6][7] => c.IN1
grn[6][8] => c.IN1
grn[6][9] => c.IN1
grn[6][10] => c.IN1
grn[6][11] => c.IN1
grn[6][12] => c.IN1
grn[6][13] => c.IN1
grn[6][14] => c.IN1
grn[6][15] => c.IN1
grn[7][0] => c.IN1
grn[7][1] => c.IN1
grn[7][2] => c.IN1
grn[7][3] => c.IN1
grn[7][4] => c.IN1
grn[7][5] => c.IN1
grn[7][6] => c.IN1
grn[7][7] => c.IN1
grn[7][8] => c.IN1
grn[7][9] => c.IN1
grn[7][10] => c.IN1
grn[7][11] => c.IN1
grn[7][12] => c.IN1
grn[7][13] => c.IN1
grn[7][14] => c.IN1
grn[7][15] => c.IN1
grn[8][0] => c.IN1
grn[8][1] => c.IN1
grn[8][2] => c.IN1
grn[8][3] => c.IN1
grn[8][4] => c.IN1
grn[8][5] => c.IN1
grn[8][6] => c.IN1
grn[8][7] => c.IN1
grn[8][8] => c.IN1
grn[8][9] => c.IN1
grn[8][10] => c.IN1
grn[8][11] => c.IN1
grn[8][12] => c.IN1
grn[8][13] => c.IN1
grn[8][14] => c.IN1
grn[8][15] => c.IN1
grn[9][0] => c.IN1
grn[9][1] => c.IN1
grn[9][2] => c.IN1
grn[9][3] => c.IN1
grn[9][4] => c.IN1
grn[9][5] => c.IN1
grn[9][6] => c.IN1
grn[9][7] => c.IN1
grn[9][8] => c.IN1
grn[9][9] => c.IN1
grn[9][10] => c.IN1
grn[9][11] => c.IN1
grn[9][12] => c.IN1
grn[9][13] => c.IN1
grn[9][14] => c.IN1
grn[9][15] => c.IN1
grn[10][0] => c.IN1
grn[10][1] => c.IN1
grn[10][2] => c.IN1
grn[10][3] => c.IN1
grn[10][4] => c.IN1
grn[10][5] => c.IN1
grn[10][6] => c.IN1
grn[10][7] => c.IN1
grn[10][8] => c.IN1
grn[10][9] => c.IN1
grn[10][10] => c.IN1
grn[10][11] => c.IN1
grn[10][12] => c.IN1
grn[10][13] => c.IN1
grn[10][14] => c.IN1
grn[10][15] => c.IN1
grn[11][0] => c.IN1
grn[11][1] => c.IN1
grn[11][2] => c.IN1
grn[11][3] => c.IN1
grn[11][4] => c.IN1
grn[11][5] => c.IN1
grn[11][6] => c.IN1
grn[11][7] => c.IN1
grn[11][8] => c.IN1
grn[11][9] => c.IN1
grn[11][10] => c.IN1
grn[11][11] => c.IN1
grn[11][12] => c.IN1
grn[11][13] => c.IN1
grn[11][14] => c.IN1
grn[11][15] => c.IN1
grn[12][0] => c.IN1
grn[12][1] => c.IN1
grn[12][2] => c.IN1
grn[12][3] => c.IN1
grn[12][4] => c.IN1
grn[12][5] => c.IN1
grn[12][6] => c.IN1
grn[12][7] => c.IN1
grn[12][8] => c.IN1
grn[12][9] => c.IN1
grn[12][10] => c.IN1
grn[12][11] => c.IN1
grn[12][12] => c.IN1
grn[12][13] => c.IN1
grn[12][14] => c.IN1
grn[12][15] => c.IN1
grn[13][0] => c.IN1
grn[13][1] => c.IN1
grn[13][2] => c.IN1
grn[13][3] => c.IN1
grn[13][4] => c.IN1
grn[13][5] => c.IN1
grn[13][6] => c.IN1
grn[13][7] => c.IN1
grn[13][8] => c.IN1
grn[13][9] => c.IN1
grn[13][10] => c.IN1
grn[13][11] => c.IN1
grn[13][12] => c.IN1
grn[13][13] => c.IN1
grn[13][14] => c.IN1
grn[13][15] => c.IN1
grn[14][0] => c.IN1
grn[14][1] => c.IN1
grn[14][2] => c.IN1
grn[14][3] => c.IN1
grn[14][4] => c.IN1
grn[14][5] => c.IN1
grn[14][6] => c.IN1
grn[14][7] => c.IN1
grn[14][8] => c.IN1
grn[14][9] => c.IN1
grn[14][10] => c.IN1
grn[14][11] => c.IN1
grn[14][12] => c.IN1
grn[14][13] => c.IN1
grn[14][14] => c.IN1
grn[14][15] => c.IN1
grn[15][0] => c.IN1
grn[15][1] => c.IN1
grn[15][2] => c.IN1
grn[15][3] => c.IN1
grn[15][4] => c.IN1
grn[15][5] => c.IN1
grn[15][6] => c.IN1
grn[15][7] => c.IN1
grn[15][8] => c.IN1
grn[15][9] => c.IN1
grn[15][10] => c.IN1
grn[15][11] => c.IN1
grn[15][12] => c.IN1
grn[15][13] => c.IN1
grn[15][14] => c.IN1
grn[15][15] => c.IN1
clk => apple_active~reg0.CLK
clk => conflict~reg0.CLK
reset => conflict.OUTPUTSELECT
reset => apple_active.OUTPUTSELECT


